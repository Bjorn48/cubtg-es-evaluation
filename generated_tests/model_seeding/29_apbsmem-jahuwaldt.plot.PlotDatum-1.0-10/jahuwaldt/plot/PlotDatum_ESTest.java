/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 26 01:48:37 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import jahuwaldt.plot.CircleSymbol;
import jahuwaldt.plot.PlotDatum;
import jahuwaldt.plot.PlotSymbol;
import jahuwaldt.plot.TabLSymbol;
import jahuwaldt.plot.TabRSymbol;
import jahuwaldt.plot.ThinRect2Symbol;
import jahuwaldt.plot.Triangle4Symbol;
import java.awt.Color;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlotDatum_ESTest extends PlotDatum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1.0, 1.0, false);
      plotDatum0.setYError((-724.297004084285));
      boolean boolean0 = plotDatum0.hasErrorBar();
      assertEquals((-724.297004084285), plotDatum0.getYError(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1.0, 1.0, false);
      plotDatum0.setYError(0.239);
      double double0 = plotDatum0.getYError();
      assertEquals(0.239, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-1759.252538927), (-1759.252538927), false);
      plotDatum0.setYError((-2280.750328205986));
      double double0 = plotDatum0.getYError();
      assertEquals((-2280.750328205986), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ThinRect2Symbol thinRect2Symbol0 = new ThinRect2Symbol();
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, true, thinRect2Symbol0);
      double double0 = plotDatum0.getY();
      assertTrue(plotDatum0.connected());
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertEquals(0.0, double0, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1.0, 1.0, false);
      plotDatum0.setY((-605.5728910876));
      double double0 = plotDatum0.getY();
      assertEquals((-605.5728910876), plotDatum0.y, 0.01);
      assertEquals((-605.5728910876), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TabRSymbol tabRSymbol0 = new TabRSymbol();
      PlotDatum plotDatum0 = new PlotDatum(0.0, 1.04, true, tabRSymbol0);
      double double0 = plotDatum0.getX();
      assertTrue(plotDatum0.connected());
      assertEquals(0.0, double0, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(1.04, plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TabLSymbol tabLSymbol0 = new TabLSymbol();
      PlotDatum plotDatum0 = new PlotDatum(523.0, 672.944, false, tabLSymbol0);
      double double0 = plotDatum0.getX();
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(523.0, double0, 0.01);
      assertEquals(672.944, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-1.0), (-1.0), false);
      plotDatum0.getPlotSymbol();
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(plotDatum0.connected());
      assertEquals((-1.0), plotDatum0.y, 0.01);
      assertEquals((-1.0), plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CircleSymbol circleSymbol0 = new CircleSymbol();
      PlotDatum plotDatum0 = new PlotDatum(431.8505526, (-1746.129546), false, circleSymbol0);
      circleSymbol0.setSize(0);
      plotDatum0.getPlotSymbol();
      assertFalse(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-1746.129546), plotDatum0.y, 0.01);
      assertEquals(431.8505526, plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TabLSymbol tabLSymbol0 = new TabLSymbol();
      PlotDatum plotDatum0 = new PlotDatum(1.0, 1.0, true, tabLSymbol0);
      tabLSymbol0.setSize((-1240));
      plotDatum0.getPlotSymbol();
      assertEquals(1.0, plotDatum0.y, 0.01);
      assertEquals(1.0, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertTrue(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-2424.665115029), 0.0, true);
      Color color0 = new Color((-386));
      plotDatum0.setLineColor(color0);
      Color color1 = plotDatum0.getLineColor();
      assertEquals((-2424.665115029), plotDatum0.x, 0.01);
      assertTrue(plotDatum0.connected());
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertEquals((-386), color1.getRGB());
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(2258.44859, 2258.44859, false);
      boolean boolean0 = plotDatum0.connected();
      assertEquals(2258.44859, plotDatum0.x, 0.01);
      assertFalse(boolean0);
      assertEquals(2258.44859, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CircleSymbol circleSymbol0 = new CircleSymbol();
      PlotDatum plotDatum0 = new PlotDatum(431.8505526, (-1746.129546), false, circleSymbol0);
      PlotDatum plotDatum1 = (PlotDatum)plotDatum0.clone();
      assertEquals((-1746.129546), plotDatum1.y, 0.01);
      assertEquals(431.8505526, plotDatum1.x, 0.01);
      assertFalse(plotDatum1.hasErrorBar());
      assertNotSame(plotDatum1, plotDatum0);
      assertFalse(plotDatum1.connected());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-2424.665115029), 0.0, true);
      PlotDatum plotDatum1 = (PlotDatum)plotDatum0.clone();
      assertEquals((-2424.665115029), plotDatum1.x, 0.01);
      assertTrue(plotDatum1.connected());
      assertFalse(plotDatum1.hasErrorBar());
      assertEquals(0.0, plotDatum1.y, 0.01);
      assertNotSame(plotDatum1, plotDatum0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CircleSymbol circleSymbol0 = new CircleSymbol();
      PlotDatum plotDatum0 = new PlotDatum(431.8505526, (-1746.129546), false, circleSymbol0);
      Color color0 = Color.BLUE;
      plotDatum0.setLineColor(color0);
      Color color1 = plotDatum0.getLineColor();
      assertEquals(431.8505526, plotDatum0.x, 0.01);
      assertEquals(255, color1.getBlue());
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(plotDatum0.connected());
      assertEquals((-1746.129546), plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-1114.25865870833), (-1114.25865870833), true);
      plotDatum0.setLineColor((Color) null);
      assertFalse(plotDatum0.hasErrorBar());
      assertTrue(plotDatum0.connected());
      assertEquals((-1114.25865870833), plotDatum0.x, 0.01);
      assertEquals((-1114.25865870833), plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, false);
      plotDatum0.setYError(0.0);
      assertFalse(plotDatum0.connected());
      assertEquals(0.0, plotDatum0.getYError(), 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertEquals(0.0, plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Triangle4Symbol triangle4Symbol0 = new Triangle4Symbol();
      PlotDatum plotDatum0 = new PlotDatum((-3199.81385701), 774.9743176513317, true, triangle4Symbol0);
      double double0 = plotDatum0.getYError();
      assertTrue(plotDatum0.connected());
      assertEquals((-3199.81385701), plotDatum0.x, 0.01);
      assertEquals(0.0, double0, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(774.9743176513317, plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Triangle4Symbol triangle4Symbol0 = new Triangle4Symbol();
      PlotDatum plotDatum0 = new PlotDatum((-3199.81385701), 774.9743176513317, true, triangle4Symbol0);
      boolean boolean0 = plotDatum0.connected();
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-3199.81385701), plotDatum0.x, 0.01);
      assertEquals(774.9743176513317, plotDatum0.y, 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(200.0, 200.0, true);
      boolean boolean0 = plotDatum0.hasErrorBar();
      assertFalse(boolean0);
      assertEquals(200.0, plotDatum0.y, 0.01);
      assertTrue(plotDatum0.connected());
      assertEquals(200.0, plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CircleSymbol circleSymbol0 = new CircleSymbol();
      PlotDatum plotDatum0 = new PlotDatum(431.8505526, (-1746.129546), false, circleSymbol0);
      plotDatum0.setX(10.0);
      assertEquals(10.0, plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CircleSymbol circleSymbol0 = new CircleSymbol();
      PlotDatum plotDatum0 = new PlotDatum(431.8505526, (-1746.129546), false, circleSymbol0);
      plotDatum0.setConnected(false);
      assertEquals((-1746.129546), plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(plotDatum0.connected());
      assertEquals(431.8505526, plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CircleSymbol circleSymbol0 = new CircleSymbol();
      PlotDatum plotDatum0 = new PlotDatum(431.8505526, (-1746.129546), false, circleSymbol0);
      plotDatum0.getPlotSymbol();
      assertEquals(431.8505526, plotDatum0.x, 0.01);
      assertEquals((-1746.129546), plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Triangle4Symbol triangle4Symbol0 = new Triangle4Symbol();
      PlotDatum plotDatum0 = new PlotDatum((-3199.81385701), 774.9743176513317, true, triangle4Symbol0);
      double double0 = plotDatum0.getY();
      assertEquals((-3199.81385701), plotDatum0.x, 0.01);
      assertTrue(plotDatum0.connected());
      assertEquals(774.9743176513317, double0, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1.0, 1.0, true);
      plotDatum0.setPlotSymbol((PlotSymbol) null);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(1.0, plotDatum0.y, 0.01);
      assertEquals(1.0, plotDatum0.x, 0.01);
      assertTrue(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CircleSymbol circleSymbol0 = new CircleSymbol();
      PlotDatum plotDatum0 = new PlotDatum(431.8505526, (-1746.129546), false, circleSymbol0);
      plotDatum0.getLineColor();
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(plotDatum0.connected());
      assertEquals((-1746.129546), plotDatum0.y, 0.01);
      assertEquals(431.8505526, plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CircleSymbol circleSymbol0 = new CircleSymbol();
      PlotDatum plotDatum0 = new PlotDatum((-2247.88745247), (-2247.88745247), true, circleSymbol0);
      double double0 = plotDatum0.getX();
      assertEquals((-2247.88745247), double0, 0.01);
      assertTrue(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-2247.88745247), plotDatum0.y, 0.01);
  }
}
