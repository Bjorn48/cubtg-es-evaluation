/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 19 07:19:24 GMT 2019
 */

package org.sat4j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.sat4j.BasicLauncher;
import org.sat4j.ExitCode;
import org.sat4j.ILauncherMode;
import org.sat4j.OptimizationMode;
import org.sat4j.core.ASolverFactory;
import org.sat4j.minisat.constraints.ClausalDataStructureWL;
import org.sat4j.minisat.core.Solver;
import org.sat4j.minisat.learning.NoLearningNoHeuristics;
import org.sat4j.minisat.orders.LevelBasedVarOrderHeap;
import org.sat4j.minisat.restarts.LubyRestarts;
import org.sat4j.opt.MaxSatDecorator;
import org.sat4j.opt.MinOneDecorator;
import org.sat4j.reader.DimacsReader;
import org.sat4j.specs.ILogAble;
import org.sat4j.specs.ISolver;
import org.sat4j.specs.IVecInt;
import org.sat4j.tools.DimacsStringSolver;
import org.sat4j.tools.IVisualizationTool;
import org.sat4j.tools.ManyCore;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OptimizationMode_ESTest extends OptimizationMode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver(4644);
      ASolverFactory<MaxSatDecorator> aSolverFactory0 = (ASolverFactory<MaxSatDecorator>) mock(ASolverFactory.class, new ViolatedAssumptionAnswer());
      BasicLauncher<MaxSatDecorator> basicLauncher0 = new BasicLauncher<MaxSatDecorator>(aSolverFactory0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("qX44-__3[<)vzUvt%l>");
      DimacsReader dimacsReader0 = new DimacsReader(dimacsStringSolver0, "-?85B+1E,");
      OptimizationMode optimizationMode0 = (OptimizationMode)ILauncherMode.OPTIMIZATION;
      optimizationMode0.displayResult(dimacsStringSolver0, dimacsStringSolver0, basicLauncher0, mockPrintWriter0, dimacsReader0, 4644, true);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OptimizationMode optimizationMode0 = new OptimizationMode();
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver(4644);
      ASolverFactory<MaxSatDecorator> aSolverFactory0 = (ASolverFactory<MaxSatDecorator>) mock(ASolverFactory.class, new ViolatedAssumptionAnswer());
      BasicLauncher<MaxSatDecorator> basicLauncher0 = new BasicLauncher<MaxSatDecorator>(aSolverFactory0);
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(dimacsStringSolver0, false);
      DimacsReader dimacsReader0 = new DimacsReader(maxSatDecorator0, (String) null);
      optimizationMode0.solve(maxSatDecorator0, dimacsReader0, basicLauncher0, (PrintWriter) null, 964L);
      assertEquals(ExitCode.UNKNOWN, basicLauncher0.getExitCode());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OptimizationMode optimizationMode0 = (OptimizationMode)ILauncherMode.OPTIMIZATION;
      int[] intArray0 = new int[8];
      // Undeclared exception!
      try { 
        optimizationMode0.onSolutionFound(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.OptimizationMode", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OptimizationMode optimizationMode0 = (OptimizationMode)ILauncherMode.OPTIMIZATION;
      MinOneDecorator[] minOneDecoratorArray0 = new MinOneDecorator[7];
      Double double0 = new Double(0.999);
      double0.intValue();
      Byte byte0 = new Byte((byte) (-85));
      byte0.intValue();
      MinOneDecorator minOneDecorator0 = mock(MinOneDecorator.class, new ViolatedAssumptionAnswer());
      minOneDecoratorArray0[0] = minOneDecorator0;
      minOneDecoratorArray0[3] = minOneDecorator0;
      ILogAble iLogAble0 = ILogAble.CONSOLE;
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('v');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1);
      Locale locale0 = Locale.GERMANY;
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) stringWriter0;
      objectArray0[1] = (Object) stringWriter0;
      objectArray0[2] = (Object) mockPrintWriter0;
      PrintWriter printWriter0 = mockPrintWriter0.format(locale0, "", objectArray0);
      PrintWriter printWriter1 = printWriter0.printf("", objectArray0);
      printWriter1.println();
      printWriter0.println();
      DimacsReader dimacsReader0 = new DimacsReader(minOneDecorator0, "-?85B+1E,");
      OptimizationMode optimizationMode1 = (OptimizationMode)ILauncherMode.OPTIMIZATION;
      OptimizationMode optimizationMode2 = (OptimizationMode)ILauncherMode.OPTIMIZATION;
      optimizationMode2.displayResult(minOneDecorator0, minOneDecorator0, iLogAble0, printWriter1, dimacsReader0, 371L, false);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OptimizationMode optimizationMode0 = new OptimizationMode();
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      ILogAble iLogAble0 = ILogAble.CONSOLE;
      DimacsReader dimacsReader0 = new DimacsReader(dimacsStringSolver0, "-?85B+1E,");
      // Undeclared exception!
      try { 
        optimizationMode0.solve(dimacsStringSolver0, dimacsReader0, iLogAble0, (PrintWriter) null, 4644);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.sat4j.tools.DimacsStringSolver cannot be cast to org.sat4j.specs.IOptimizationProblem
         //
         verifyException("org.sat4j.OptimizationMode", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OptimizationMode optimizationMode0 = new OptimizationMode();
      NoLearningNoHeuristics<ClausalDataStructureWL> noLearningNoHeuristics0 = new NoLearningNoHeuristics<ClausalDataStructureWL>();
      ClausalDataStructureWL clausalDataStructureWL0 = new ClausalDataStructureWL();
      LevelBasedVarOrderHeap levelBasedVarOrderHeap0 = new LevelBasedVarOrderHeap();
      LubyRestarts lubyRestarts0 = new LubyRestarts();
      Solver<ClausalDataStructureWL> solver0 = new Solver<ClausalDataStructureWL>(noLearningNoHeuristics0, clausalDataStructureWL0, levelBasedVarOrderHeap0, lubyRestarts0);
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(solver0, true);
      int[] intArray0 = new int[7];
      intArray0[0] = 32;
      levelBasedVarOrderHeap0.addLevel(intArray0);
      ILogAble iLogAble0 = ILogAble.CONSOLE;
      DimacsReader dimacsReader0 = new DimacsReader(solver0, "/Ko7;')/ZyF.^");
      // Undeclared exception!
      try { 
        optimizationMode0.solve(maxSatDecorator0, dimacsReader0, iLogAble0, (PrintWriter) null, 1381L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 32
         //
         verifyException("org.sat4j.minisat.orders.LevelBasedVarOrderHeap", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OptimizationMode optimizationMode0 = (OptimizationMode)ILauncherMode.OPTIMIZATION;
      MinOneDecorator minOneDecorator0 = mock(MinOneDecorator.class, new ViolatedAssumptionAnswer());
      ILogAble iLogAble0 = ILogAble.CONSOLE;
      DimacsReader dimacsReader0 = new DimacsReader(minOneDecorator0, "-?85B+1E,");
      // Undeclared exception!
      try { 
        optimizationMode0.displayResult(minOneDecorator0, minOneDecorator0, iLogAble0, (PrintWriter) null, dimacsReader0, (-1L), false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.OptimizationMode", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      ASolverFactory<MaxSatDecorator> aSolverFactory0 = (ASolverFactory<MaxSatDecorator>) mock(ASolverFactory.class, new ViolatedAssumptionAnswer());
      BasicLauncher<MaxSatDecorator> basicLauncher0 = new BasicLauncher<MaxSatDecorator>(aSolverFactory0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("qX44-__3[<)vzUvt%l>");
      mockPrintWriter0.println();
      mockPrintWriter0.println();
      ISolver iSolver0 = mock(ISolver.class, new ViolatedAssumptionAnswer());
      DimacsReader dimacsReader0 = new DimacsReader(iSolver0, "qX44-__3[<)vzUvt%l>");
      OptimizationMode optimizationMode0 = (OptimizationMode)ILauncherMode.OPTIMIZATION;
      optimizationMode0.displayResult(dimacsStringSolver0, dimacsStringSolver0, basicLauncher0, mockPrintWriter0, dimacsReader0, 4644, false);
      assertEquals(ExitCode.UNKNOWN, basicLauncher0.getExitCode());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OptimizationMode optimizationMode0 = (OptimizationMode)ILauncherMode.OPTIMIZATION;
      String[] stringArray0 = new String[2];
      MinOneDecorator[] minOneDecoratorArray0 = new MinOneDecorator[7];
      MinOneDecorator minOneDecorator0 = mock(MinOneDecorator.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(minOneDecorator0).admitABetterSolution();
      doReturn((Number) null).when(minOneDecorator0).getObjectiveValue();
      doReturn(false).when(minOneDecorator0).nonOptimalMeansSatisfiable();
      minOneDecoratorArray0[0] = minOneDecorator0;
      minOneDecoratorArray0[1] = minOneDecorator0;
      minOneDecoratorArray0[2] = minOneDecorator0;
      minOneDecoratorArray0[3] = minOneDecorator0;
      minOneDecoratorArray0[4] = minOneDecorator0;
      minOneDecoratorArray0[5] = minOneDecorator0;
      minOneDecoratorArray0[6] = minOneDecorator0;
      ManyCore<MinOneDecorator> manyCore0 = new ManyCore<MinOneDecorator>(true, stringArray0, minOneDecoratorArray0);
      DimacsReader dimacsReader0 = new DimacsReader(manyCore0);
      ILogAble iLogAble0 = ILogAble.CONSOLE;
      // Undeclared exception!
      try { 
        optimizationMode0.solve(minOneDecorator0, dimacsReader0, iLogAble0, (PrintWriter) null, 2109L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.OptimizationMode", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OptimizationMode optimizationMode0 = (OptimizationMode)ILauncherMode.OPTIMIZATION;
      MinOneDecorator[] minOneDecoratorArray0 = new MinOneDecorator[7];
      MinOneDecorator minOneDecorator0 = mock(MinOneDecorator.class, new ViolatedAssumptionAnswer());
      doReturn(false, true).when(minOneDecorator0).admitABetterSolution();
      doReturn(true).when(minOneDecorator0).hasNoObjectiveFunction();
      doReturn(true).when(minOneDecorator0).nonOptimalMeansSatisfiable();
      ILogAble iLogAble0 = ILogAble.CONSOLE;
      DimacsReader dimacsReader0 = new DimacsReader(minOneDecoratorArray0[1], "-?85B+1E,");
      optimizationMode0.solve(minOneDecorator0, dimacsReader0, iLogAble0, (PrintWriter) null, (-2609L));
      optimizationMode0.solve(minOneDecorator0, dimacsReader0, iLogAble0, (PrintWriter) null, (-2609L));
      assertEquals(ExitCode.SATISFIABLE, optimizationMode0.getCurrentExitCode());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OptimizationMode optimizationMode0 = (OptimizationMode)ILauncherMode.OPTIMIZATION;
      Integer integer0 = IVisualizationTool.NOTGOOD;
      MinOneDecorator minOneDecorator0 = mock(MinOneDecorator.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(minOneDecorator0).admitABetterSolution();
      doReturn((Number) null).when(minOneDecorator0).getObjectiveValue();
      doReturn(false).when(minOneDecorator0).nonOptimalMeansSatisfiable();
      ILogAble iLogAble0 = ILogAble.CONSOLE;
      DimacsReader dimacsReader0 = new DimacsReader(minOneDecorator0, "-?85B+1E,");
      // Undeclared exception!
      try { 
        optimizationMode0.solve(minOneDecorator0, dimacsReader0, iLogAble0, (PrintWriter) null, (-1L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.OptimizationMode", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OptimizationMode optimizationMode0 = (OptimizationMode)ILauncherMode.OPTIMIZATION;
      Double double0 = new Double(0.999);
      MinOneDecorator minOneDecorator0 = mock(MinOneDecorator.class, new ViolatedAssumptionAnswer());
      doReturn(true, false).when(minOneDecorator0).admitABetterSolution();
      doReturn((Number) null).when(minOneDecorator0).getObjectiveValue();
      doReturn(false).when(minOneDecorator0).nonOptimalMeansSatisfiable();
      ILogAble iLogAble0 = ILogAble.CONSOLE;
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      DimacsReader dimacsReader0 = new DimacsReader(minOneDecorator0, "-?85B+1E,");
      optimizationMode0.solve(minOneDecorator0, dimacsReader0, iLogAble0, mockPrintWriter0, (-807L));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver(4644);
      ASolverFactory<MaxSatDecorator> aSolverFactory0 = (ASolverFactory<MaxSatDecorator>) mock(ASolverFactory.class, new ViolatedAssumptionAnswer());
      BasicLauncher<MaxSatDecorator> basicLauncher0 = new BasicLauncher<MaxSatDecorator>(aSolverFactory0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("c ");
      DimacsReader dimacsReader0 = new DimacsReader(dimacsStringSolver0, "c ");
      OptimizationMode optimizationMode0 = (OptimizationMode)ILauncherMode.OPTIMIZATION;
      // Undeclared exception!
      try { 
        optimizationMode0.displayResult(dimacsStringSolver0, dimacsStringSolver0, basicLauncher0, mockPrintWriter0, dimacsReader0, 4644, true);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.AbstractOutputSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver(4644);
      ASolverFactory<MaxSatDecorator> aSolverFactory0 = (ASolverFactory<MaxSatDecorator>) mock(ASolverFactory.class, new ViolatedAssumptionAnswer());
      BasicLauncher<MaxSatDecorator> basicLauncher0 = new BasicLauncher<MaxSatDecorator>(aSolverFactory0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("qX44-__3[<)vzUvt%l>");
      mockPrintWriter0.print('4');
      mockPrintWriter0.print('4');
      mockPrintWriter0.print('4');
      mockPrintWriter0.println();
      mockPrintWriter0.print('4');
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "qX44-__3[<)vzUvt%l>");
      printWriter0.println();
      mockPrintWriter0.println();
      ISolver iSolver0 = mock(ISolver.class, new ViolatedAssumptionAnswer());
      DimacsReader dimacsReader0 = new DimacsReader(iSolver0, "-?85B+1E,");
      dimacsReader0.setUseMapping(false);
      OptimizationMode optimizationMode0 = (OptimizationMode)ILauncherMode.OPTIMIZATION;
      // Undeclared exception!
      try { 
        optimizationMode0.displayResult(dimacsStringSolver0, dimacsStringSolver0, basicLauncher0, printWriter0, dimacsReader0, 4644, true);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.AbstractOutputSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OptimizationMode optimizationMode0 = (OptimizationMode)ILauncherMode.OPTIMIZATION;
      MinOneDecorator minOneDecorator0 = mock(MinOneDecorator.class, new ViolatedAssumptionAnswer());
      doReturn((Number) null).when(minOneDecorator0).getObjectiveValue();
      doReturn(false).when(minOneDecorator0).hasNoObjectiveFunction();
      ILogAble iLogAble0 = ILogAble.CONSOLE;
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      DimacsReader dimacsReader0 = new DimacsReader(minOneDecorator0, "-?85B+1E,");
      // Undeclared exception!
      try { 
        optimizationMode0.displayResult(minOneDecorator0, minOneDecorator0, iLogAble0, mockPrintWriter0, dimacsReader0, 371L, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OptimizationMode optimizationMode0 = (OptimizationMode)ILauncherMode.OPTIMIZATION;
      MinOneDecorator[] minOneDecoratorArray0 = new MinOneDecorator[7];
      ILogAble iLogAble0 = ILogAble.CONSOLE;
      DimacsReader dimacsReader0 = new DimacsReader(minOneDecoratorArray0[0], "Available solvers: ");
      optimizationMode0.displayResult(minOneDecoratorArray0[0], minOneDecoratorArray0[0], iLogAble0, (PrintWriter) null, dimacsReader0, (-3848L), false);
      assertFalse(dimacsReader0.isVerbose());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OptimizationMode optimizationMode0 = (OptimizationMode)ILauncherMode.OPTIMIZATION;
      ExitCode exitCode0 = optimizationMode0.getCurrentExitCode();
      assertEquals("UNKNOWN", exitCode0.toString());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OptimizationMode optimizationMode0 = (OptimizationMode)ILauncherMode.OPTIMIZATION;
      optimizationMode0.onUnsatTermination();
      assertEquals(ExitCode.UNKNOWN, optimizationMode0.getCurrentExitCode());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OptimizationMode optimizationMode0 = new OptimizationMode();
      optimizationMode0.setIncomplete(true);
      assertEquals(ExitCode.UNKNOWN, optimizationMode0.getCurrentExitCode());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OptimizationMode optimizationMode0 = new OptimizationMode();
      ExitCode exitCode0 = ExitCode.UPPER_BOUND;
      optimizationMode0.setExitCode(exitCode0);
      assertEquals(ExitCode.UPPER_BOUND, optimizationMode0.getCurrentExitCode());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OptimizationMode optimizationMode0 = new OptimizationMode();
      // Undeclared exception!
      try { 
        optimizationMode0.onSolutionFound((IVecInt) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not implemented yet!
         //
         verifyException("org.sat4j.OptimizationMode", e);
      }
  }
}
