/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 17:51:03 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.model.CatalogDoorOrWindow;
import com.eteks.sweethome3d.model.CatalogLight;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeFurnitureGroup;
import com.eteks.sweethome3d.model.HomeLight;
import com.eteks.sweethome3d.model.HomePieceOfFurniture;
import com.eteks.sweethome3d.model.LightSource;
import com.eteks.sweethome3d.model.Sash;
import java.math.BigDecimal;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeFurnitureGroup_ESTest extends HomeFurnitureGroup_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      LightSource[] lightSourceArray0 = new LightSource[2];
      float[][] floatArray0 = new float[4][8];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      CatalogLight catalogLight0 = new CatalogLight("com.eteks.sweethome3d.model.HomeFurnitureGroup", "mb1;_x(?JFZ-", "com.eteks.sweethome3d.model.HomeFurnitureGroup", (Content) null, (Content) null, (-2188.0774F), (-2188.0774F), (-2188.0774F), 1.0F, true, lightSourceArray0, floatArray0, "com.eteks.sweethome3d.model.HomeFurnitureGroup", true, bigDecimal0, bigDecimal0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("mb1;_x(?JFZ-", catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getCreator());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getDescription());
      assertNull(catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogLight0);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("mb1;_x(?JFZ-", catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getCreator());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getDescription());
      assertNull(catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-2188.0774F), homeLight0.getHeight(), 0.01F);
      assertEquals("mb1;_x(?JFZ-", homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-2188.0774F), homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-1094.0387F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals((-2188.0774F), homeLight0.getWidth(), 0.01F);
      assertEquals((-1094.0387F), homeLight0.getY(), 0.01F);
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeLight0);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeLight0);
      assertEquals(1, linkedList0.size());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("mb1;_x(?JFZ-", catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getCreator());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getDescription());
      assertNull(catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-2188.0774F), homeLight0.getHeight(), 0.01F);
      assertEquals("mb1;_x(?JFZ-", homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-2188.0774F), homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-1094.0387F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals((-2188.0774F), homeLight0.getWidth(), 0.01F);
      assertEquals((-1094.0387F), homeLight0.getY(), 0.01F);
      assertTrue(boolean0);
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, (String) null);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals((-1.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNotNull(homeFurnitureGroup0);
      
      homeFurnitureGroup0.setAngle((-2188.0774F));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals((-1.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(4.7542796F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      
      homeFurnitureGroup0.setModelMirrored(true);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isModelMirrored());
      assertEquals((-1.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(4.7542796F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      LightSource[] lightSourceArray0 = new LightSource[2];
      float[][] floatArray0 = new float[4][8];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      CatalogLight catalogLight0 = new CatalogLight("com.eteks.sweethome3d.model.HomeFurnitureGroup", "60u*[q87>", "X!&c", (Content) null, (Content) null, 0.0F, 2656.5532F, 2918.5999F, 60, true, lightSourceArray0, floatArray0, "com.eteks.sweethome3d.model.HomeFurnitureGroup", true, bigDecimal0, bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(60.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("X!&c", catalogLight0.getDescription());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals(2918.5999F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals("60u*[q87>", catalogLight0.getName());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getGrade());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(2656.5532F, catalogLight0.getDepth(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogLight0);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(60.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("X!&c", catalogLight0.getDescription());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals(2918.5999F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals("60u*[q87>", catalogLight0.getName());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getGrade());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(2656.5532F, catalogLight0.getDepth(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreationDate());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(60.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(60.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(2656.5532F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getCatalogId());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(1328.2766F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(2918.5999F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals("60u*[q87>", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals("X!&c", homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeLight0);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeLight0);
      assertEquals(1, linkedList0.size());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(60.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("X!&c", catalogLight0.getDescription());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals(2918.5999F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals("60u*[q87>", catalogLight0.getName());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getGrade());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(2656.5532F, catalogLight0.getDepth(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreationDate());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(60.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(60.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(2656.5532F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getCatalogId());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(1328.2766F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(2918.5999F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals("60u*[q87>", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals("X!&c", homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(boolean0);
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "X!&c");
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(60.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("X!&c", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(2656.5532F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(60.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(1328.2766F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(2918.5999F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNotNull(homeFurnitureGroup0);
      
      homeFurnitureGroup0.move((-1.0F), (-1156.8185F));
      assertEquals(1, linkedList0.size());
      assertEquals(171.45813F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(60.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("X!&c", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(2656.5532F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(60.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-1.0F), homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(2918.5999F, homeFurnitureGroup0.getHeight(), 0.01F);
      
      homeFurnitureGroup0.setModelMirrored(true);
      assertEquals(1, linkedList0.size());
      assertEquals(171.45813F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(60.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals("X!&c", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(2656.5532F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(60.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-1.0F), homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(2918.5999F, homeFurnitureGroup0.getHeight(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      LightSource[] lightSourceArray0 = new LightSource[2];
      float[][] floatArray0 = new float[4][8];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      CatalogLight catalogLight0 = new CatalogLight("com.eteks.sweethome3d.model.HomeFurnitureGroup", "60u*[q87>", "X&c", (Content) null, (Content) null, 0.0F, 2656.5532F, 2918.5999F, 60, true, lightSourceArray0, floatArray0, "com.eteks.sweethome3d.model.HomeFurnitureGroup", true, bigDecimal0, bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getCreator());
      assertEquals("X&c", catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals("60u*[q87>", catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(2918.5999F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(60.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getColor());
      assertEquals(2656.5532F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getInformation());
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogLight0);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getCreator());
      assertEquals("X&c", catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals("60u*[q87>", catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(2918.5999F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(60.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getColor());
      assertEquals(2656.5532F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getInformation());
      assertEquals("60u*[q87>", homeLight0.getName());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertEquals("X&c", homeLight0.getDescription());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(60.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(60.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(2918.5999F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(1328.2766F, homeLight0.getY(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(2656.5532F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeLight0);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeLight0);
      assertEquals(1, linkedList0.size());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getCreator());
      assertEquals("X&c", catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals("60u*[q87>", catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(2918.5999F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(60.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getColor());
      assertEquals(2656.5532F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getInformation());
      assertEquals("60u*[q87>", homeLight0.getName());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertEquals("X&c", homeLight0.getDescription());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(60.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(60.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(2918.5999F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(1328.2766F, homeLight0.getY(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(2656.5532F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertTrue(boolean0);
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "X&c");
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(60.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(2656.5532F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(2918.5999F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(60.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(1328.2766F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals("X&c", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getDescription());
      assertNotNull(homeFurnitureGroup0);
      
      homeFurnitureGroup0.setElevation((-1.0F));
      assertEquals(1, linkedList0.size());
      assertEquals((-1.0F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(2656.5532F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(2918.5999F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals((-1.0F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(1328.2766F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals("X&c", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getDescription());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      LightSource[] lightSourceArray0 = new LightSource[2];
      float[][] floatArray0 = new float[4][8];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      CatalogLight catalogLight0 = new CatalogLight("Akliy2zI", "Akliy2zI", "", (Content) null, (Content) null, 0.0F, (-1.0F), 0.0F, 0.0F, true, lightSourceArray0, floatArray0, "Akliy2zI", true, bigDecimal0, bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("Akliy2zI", catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-1.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals("Akliy2zI", catalogLight0.getId());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("Akliy2zI", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getDescription());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogLight0);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("Akliy2zI", catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-1.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals("Akliy2zI", catalogLight0.getId());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("Akliy2zI", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getDescription());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals("Akliy2zI", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals("Akliy2zI", homeLight0.getCatalogId());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals((-0.5F), homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-1.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeLight0);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeLight0);
      assertEquals(1, linkedList0.size());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("Akliy2zI", catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-1.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals("Akliy2zI", catalogLight0.getId());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("Akliy2zI", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getDescription());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals("Akliy2zI", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals("Akliy2zI", homeLight0.getCatalogId());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals((-0.5F), homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-1.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(boolean0);
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "Akliy2zI");
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("Akliy2zI", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNotNull(homeFurnitureGroup0);
      
      homeFurnitureGroup0.setHeight((-1.0F));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("Akliy2zI", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals((-1.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      LightSource[] lightSourceArray0 = new LightSource[2];
      float[][] floatArray0 = new float[4][8];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      CatalogLight catalogLight0 = new CatalogLight("com.eteks.sweethome3d.model.HomeFurnitureGroup", "mb1;_x(?JFZ-", "", (Content) null, (Content) null, (-2188.0774F), (-2188.0774F), (-2188.0774F), 1.0F, true, lightSourceArray0, floatArray0, "", true, bigDecimal0, bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertNull(catalogLight0.getCreationDate());
      assertEquals("", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getDescription());
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getGrade());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("mb1;_x(?JFZ-", catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogLight0);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertNull(catalogLight0.getCreationDate());
      assertEquals("", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getDescription());
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getGrade());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("mb1;_x(?JFZ-", catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals((-2188.0774F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals("mb1;_x(?JFZ-", homeLight0.getName());
      assertNull(homeLight0.getCurrency());
      assertEquals((-2188.0774F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-1094.0387F), homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals((-1094.0387F), homeLight0.getY(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getCatalogId());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals((-2188.0774F), homeLight0.getWidth(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeLight0);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeLight0);
      assertEquals(1, linkedList0.size());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertNull(catalogLight0.getCreationDate());
      assertEquals("", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getDescription());
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getGrade());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("mb1;_x(?JFZ-", catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals((-2188.0774F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals("mb1;_x(?JFZ-", homeLight0.getName());
      assertNull(homeLight0.getCurrency());
      assertEquals((-2188.0774F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-1094.0387F), homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals((-1094.0387F), homeLight0.getY(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getCatalogId());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals((-2188.0774F), homeLight0.getWidth(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(boolean0);
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals((-1.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertNotNull(homeFurnitureGroup0);
      
      homeFurnitureGroup0.setHeight((-2188.0774F));
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals((-2188.0774F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals("", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      LightSource[] lightSourceArray0 = new LightSource[2];
      float[][] floatArray0 = new float[4][8];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      CatalogLight catalogLight0 = new CatalogLight("com.eteks.sweethome3d.model.HomeFurnitureGroup", "mb1;_x(?JFZ-", "com.eteks.sweethome3d.model.HomeFurnitureGroup", (Content) null, (Content) null, (-2188.0774F), (-2188.0774F), (-2188.0774F), 1.0F, true, lightSourceArray0, floatArray0, "com.eteks.sweethome3d.model.HomeFurnitureGroup", true, bigDecimal0, bigDecimal0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getCreator());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getDescription());
      assertNull(catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("mb1;_x(?JFZ-", catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getGrade());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogLight0);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getCreator());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getDescription());
      assertNull(catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("mb1;_x(?JFZ-", catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getGrade());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-2188.0774F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getDescription());
      assertEquals((-2188.0774F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-1094.0387F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertEquals((-1094.0387F), homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-2188.0774F), homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals("mb1;_x(?JFZ-", homeLight0.getName());
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeLight0);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeLight0);
      assertEquals(1, linkedList0.size());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getCreator());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getDescription());
      assertNull(catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("mb1;_x(?JFZ-", catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getGrade());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-2188.0774F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getDescription());
      assertEquals((-2188.0774F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-1094.0387F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertEquals((-1094.0387F), homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-2188.0774F), homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals("mb1;_x(?JFZ-", homeLight0.getName());
      assertTrue(boolean0);
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "oM/+DZc");
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(1.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-1.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals("oM/+DZc", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNotNull(homeFurnitureGroup0);
      
      homeFurnitureGroup0.setHeight(1.0F);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(1.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(1.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals("oM/+DZc", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      LightSource[] lightSourceArray0 = new LightSource[2];
      float[][] floatArray0 = new float[4][8];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      CatalogLight catalogLight0 = new CatalogLight("com.eteks.sweethome3d.model.HomeFurnitureGroup", "mb1;_x(?JFZ-", "", (Content) null, (Content) null, (-2188.0774F), (-2188.0774F), (-2188.0774F), 1.0F, true, lightSourceArray0, floatArray0, "", true, bigDecimal0, bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals("", catalogLight0.getDescription());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getCreator());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("mb1;_x(?JFZ-", catalogLight0.getName());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getInformation());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isResizable());
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogLight0);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals("", catalogLight0.getDescription());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getCreator());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("mb1;_x(?JFZ-", catalogLight0.getName());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getInformation());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isResizable());
      assertTrue(homeLight0.isTexturable());
      assertEquals((-2188.0774F), homeLight0.getDepth(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCurrency());
      assertEquals((-2188.0774F), homeLight0.getHeight(), 0.01F);
      assertEquals((-1094.0387F), homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals((-1094.0387F), homeLight0.getY(), 0.01F);
      assertEquals((-2188.0774F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("mb1;_x(?JFZ-", homeLight0.getName());
      assertTrue(homeLight0.isDeformable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getCatalogId());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeLight0);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeLight0);
      assertEquals(1, linkedList0.size());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals("", catalogLight0.getDescription());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getCreator());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("mb1;_x(?JFZ-", catalogLight0.getName());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getInformation());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isResizable());
      assertTrue(homeLight0.isTexturable());
      assertEquals((-2188.0774F), homeLight0.getDepth(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCurrency());
      assertEquals((-2188.0774F), homeLight0.getHeight(), 0.01F);
      assertEquals((-1094.0387F), homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals((-1094.0387F), homeLight0.getY(), 0.01F);
      assertEquals((-2188.0774F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("mb1;_x(?JFZ-", homeLight0.getName());
      assertTrue(homeLight0.isDeformable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getCatalogId());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertTrue(boolean0);
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, (String) null);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-1.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNotNull(homeFurnitureGroup0);
      
      homeFurnitureGroup0.setAngle((-2188.0774F));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-1.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(4.7542796F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      
      homeFurnitureGroup0.setDepth(1.0F);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-1.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(4.7542796F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(1.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      LightSource[] lightSourceArray0 = new LightSource[1];
      float[][] floatArray0 = new float[4][8];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      CatalogLight catalogLight0 = new CatalogLight("com.eteks.sweethome3d.model.HomeFurnitureGroup", "com.eteks.sweethome3d.model.HomeFurnitureGroup", "com.eteks.sweethome3d.model.HomeFurnitureGroup", (Content) null, (Content) null, (-2188.0774F), (-2188.0774F), (-2188.0774F), 1.0F, true, lightSourceArray0, floatArray0, "com.eteks.sweethome3d.model.HomeFurnitureGroup", true, bigDecimal0, bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getCreator());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getDescription());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(1, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogLight0);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getCreator());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getDescription());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-2188.0774F), homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getCatalogId());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getName());
      assertEquals((-1094.0387F), homeLight0.getY(), 0.01F);
      assertEquals((-1094.0387F), homeLight0.getX(), 0.01F);
      assertEquals((-2188.0774F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getDescription());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-2188.0774F), homeLight0.getHeight(), 0.01F);
      assertEquals(1, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeLight0);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeLight0);
      assertEquals(1, linkedList0.size());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getCreator());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getDescription());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-2188.0774F), homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getCatalogId());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getName());
      assertEquals((-1094.0387F), homeLight0.getY(), 0.01F);
      assertEquals((-1094.0387F), homeLight0.getX(), 0.01F);
      assertEquals((-2188.0774F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getDescription());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-2188.0774F), homeLight0.getHeight(), 0.01F);
      assertTrue(boolean0);
      assertEquals(1, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "com.eteks.sweethome3d.model.HomeFurnitureGroup");
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-1.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(1.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(1.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertNotNull(homeFurnitureGroup0);
      
      homeFurnitureGroup0.setDepth(1.0F);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-1.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(1.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(1.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(1.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      LightSource[] lightSourceArray0 = new LightSource[2];
      float[][] floatArray0 = new float[4][8];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      CatalogLight catalogLight0 = new CatalogLight("com.eteks.sweethome3d.model.HomeFurnitureGroup", "mb1;_x(?JFZ-", "com.eteks.sweethome3d.model.HomeFurnitureGroup", (Content) null, (Content) null, (-2188.0774F), (-2188.0774F), (-2188.0774F), 1.0F, true, lightSourceArray0, floatArray0, "com.eteks.sweethome3d.model.HomeFurnitureGroup", true, bigDecimal0, bigDecimal0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNull(catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("mb1;_x(?JFZ-", catalogLight0.getName());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isResizable());
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getCreator());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getDescription());
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogLight0);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNull(catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("mb1;_x(?JFZ-", catalogLight0.getName());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isResizable());
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getCreator());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getDescription());
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertEquals((-2188.0774F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("mb1;_x(?JFZ-", homeLight0.getName());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getDescription());
      assertEquals((-1094.0387F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertEquals((-2188.0774F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-1094.0387F), homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals((-2188.0774F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeLight0);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeLight0);
      assertEquals(1, linkedList0.size());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNull(catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("mb1;_x(?JFZ-", catalogLight0.getName());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isResizable());
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getCreator());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getDescription());
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertEquals((-2188.0774F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("mb1;_x(?JFZ-", homeLight0.getName());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getDescription());
      assertEquals((-1094.0387F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertEquals((-2188.0774F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-1094.0387F), homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals((-2188.0774F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(boolean0);
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, (String) null);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(1.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals((-1.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNotNull(homeFurnitureGroup0);
      
      homeFurnitureGroup0.setAngle((-2188.0774F));
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(4.7542796F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(1.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals((-1.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isMovable());
      
      homeFurnitureGroup0.setWidth((-2188.0774F));
      assertEquals(1, linkedList0.size());
      assertEquals((-2188.0774F), homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(4.7542796F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(1.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals((-1.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isMovable());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      LightSource[] lightSourceArray0 = new LightSource[1];
      float[][] floatArray0 = new float[4][8];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      CatalogLight catalogLight0 = new CatalogLight(":b;iSqqj=b*o_(uAwd", ":b;iSqqj=b*o_(uAwd", ":b;iSqqj=b*o_(uAwd", (Content) null, (Content) null, (-2189.1692F), (-2189.1692F), (-2189.1692F), (-2189.1692F), false, lightSourceArray0, floatArray0, ":b;iSqqj=b*o_(uAwd", true, bigDecimal0, bigDecimal0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((-2189.1692F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-2189.1692F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-2189.1692F), catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(":b;iSqqj=b*o_(uAwd", catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(":b;iSqqj=b*o_(uAwd", catalogLight0.getDescription());
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(":b;iSqqj=b*o_(uAwd", catalogLight0.getId());
      assertEquals((-2189.1692F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getCurrency());
      assertEquals(":b;iSqqj=b*o_(uAwd", catalogLight0.getName());
      assertFalse(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(1, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogLight0);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((-2189.1692F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-2189.1692F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-2189.1692F), catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(":b;iSqqj=b*o_(uAwd", catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(":b;iSqqj=b*o_(uAwd", catalogLight0.getDescription());
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(":b;iSqqj=b*o_(uAwd", catalogLight0.getId());
      assertEquals((-2189.1692F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getCurrency());
      assertEquals(":b;iSqqj=b*o_(uAwd", catalogLight0.getName());
      assertFalse(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(":b;iSqqj=b*o_(uAwd", homeLight0.getDescription());
      assertEquals(":b;iSqqj=b*o_(uAwd", homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertEquals(":b;iSqqj=b*o_(uAwd", homeLight0.getCatalogId());
      assertEquals((-2189.1692F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-2189.1692F), homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-2189.1692F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-1094.5846F), homeLight0.getY(), 0.01F);
      assertEquals((-1094.5846F), homeLight0.getX(), 0.01F);
      assertEquals((-2189.1692F), homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-2189.1692F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(1, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeLight0);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeLight0);
      assertEquals(1, linkedList0.size());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((-2189.1692F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-2189.1692F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-2189.1692F), catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(":b;iSqqj=b*o_(uAwd", catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(":b;iSqqj=b*o_(uAwd", catalogLight0.getDescription());
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(":b;iSqqj=b*o_(uAwd", catalogLight0.getId());
      assertEquals((-2189.1692F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getCurrency());
      assertEquals(":b;iSqqj=b*o_(uAwd", catalogLight0.getName());
      assertFalse(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(":b;iSqqj=b*o_(uAwd", homeLight0.getDescription());
      assertEquals(":b;iSqqj=b*o_(uAwd", homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertEquals(":b;iSqqj=b*o_(uAwd", homeLight0.getCatalogId());
      assertEquals((-2189.1692F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-2189.1692F), homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-2189.1692F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-1094.5846F), homeLight0.getY(), 0.01F);
      assertEquals((-1094.5846F), homeLight0.getX(), 0.01F);
      assertEquals((-2189.1692F), homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-2189.1692F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(boolean0);
      assertEquals(1, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, ":b;iSqqj=b*o_(uAwd");
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-2189.1692F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(2189.1692F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-2189.1692F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(":b;iSqqj=b*o_(uAwd", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertNotNull(homeFurnitureGroup0);
      
      homeFurnitureGroup0.setWidth(2032.0F);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals((-2189.1692F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(2189.1692F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(2032.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals((-2189.1692F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(":b;iSqqj=b*o_(uAwd", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      LightSource[] lightSourceArray0 = new LightSource[2];
      float[][] floatArray0 = new float[4][8];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      CatalogLight catalogLight0 = new CatalogLight("temporarySubFolder", (String) null, "`Vl&#f_cww,y", (Content) null, (Content) null, 1.0F, 1.0F, (-1468.414F), (-4512.1797F), true, lightSourceArray0, floatArray0, "com.eteks.sweethome3d.model.HomePieceOfFurniture$SortableProperty", true, bigDecimal0, bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals((-4512.1797F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("`Vl&#f_cww,y", catalogLight0.getDescription());
      assertNull(catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals("temporarySubFolder", catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$SortableProperty", catalogLight0.getCreator());
      assertNull(catalogLight0.getGrade());
      assertEquals((-1468.414F), catalogLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogLight0);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals((-4512.1797F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("`Vl&#f_cww,y", catalogLight0.getDescription());
      assertNull(catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals("temporarySubFolder", catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$SortableProperty", catalogLight0.getCreator());
      assertNull(catalogLight0.getGrade());
      assertEquals((-1468.414F), catalogLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-1468.414F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals("`Vl&#f_cww,y", homeLight0.getDescription());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals("temporarySubFolder", homeLight0.getCatalogId());
      assertEquals((-4512.1797F), homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals((-4512.1797F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isMovable());
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeLight0);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeLight0);
      assertEquals(1, linkedList0.size());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals((-4512.1797F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("`Vl&#f_cww,y", catalogLight0.getDescription());
      assertNull(catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals("temporarySubFolder", catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$SortableProperty", catalogLight0.getCreator());
      assertNull(catalogLight0.getGrade());
      assertEquals((-1468.414F), catalogLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-1468.414F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals("`Vl&#f_cww,y", homeLight0.getDescription());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals("temporarySubFolder", homeLight0.getCatalogId());
      assertEquals((-4512.1797F), homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals((-4512.1797F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isMovable());
      assertTrue(boolean0);
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "com.eteks.sweethome3d.model.HomeFurnitureGroup");
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.5F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.5F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals((-4512.1797F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup0.getName());
      assertEquals(4512.1797F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals((-4512.1797F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(1.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNotNull(homeFurnitureGroup0);
      
      homeFurnitureGroup0.move(1.0F, 0.3926991F);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(1.5F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals((-4512.1797F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeFurnitureGroup0.getName());
      assertEquals(4512.1797F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals((-4512.1797F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.8926991F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(1.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      LightSource[] lightSourceArray0 = new LightSource[2];
      float[][] floatArray0 = new float[4][8];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      CatalogLight catalogLight0 = new CatalogLight("com.eteks.sweethome3d.model.HomeFurnitureGroup", "mb1;_x(?JFZ-", "", (Content) null, (Content) null, (-2188.0774F), (-2188.0774F), (-2188.0774F), 1.0F, true, lightSourceArray0, floatArray0, "", true, bigDecimal0, bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertNull(catalogLight0.getGrade());
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("mb1;_x(?JFZ-", catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogLight0);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertNull(catalogLight0.getGrade());
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("mb1;_x(?JFZ-", catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-1094.0387F), homeLight0.getY(), 0.01F);
      assertEquals((-1094.0387F), homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getCatalogId());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertEquals((-2188.0774F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals((-2188.0774F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-2188.0774F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("mb1;_x(?JFZ-", homeLight0.getName());
      assertTrue(homeLight0.isTexturable());
      assertEquals("", homeLight0.getDescription());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeLight0);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeLight0);
      assertEquals(1, linkedList0.size());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertNull(catalogLight0.getGrade());
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("mb1;_x(?JFZ-", catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-1094.0387F), homeLight0.getY(), 0.01F);
      assertEquals((-1094.0387F), homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getCatalogId());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertEquals((-2188.0774F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals((-2188.0774F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-2188.0774F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("mb1;_x(?JFZ-", homeLight0.getName());
      assertTrue(homeLight0.isTexturable());
      assertEquals("", homeLight0.getDescription());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(boolean0);
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, (String) null);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-1.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(1.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(1.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNotNull(homeFurnitureGroup0);
      
      homeFurnitureGroup0.move((-2188.0774F), (-2188.0774F));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals((-2188.0774F), homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-1.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals((-2188.0774F), homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(1.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      
      homeFurnitureGroup0.setAngle((-2188.0774F));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals((-2188.0774F), homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertEquals((-1.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(4.7542796F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals((-2188.0774F), homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(1.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      LightSource[] lightSourceArray0 = new LightSource[2];
      float[][] floatArray0 = new float[4][8];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      CatalogLight catalogLight0 = new CatalogLight("com.eteks.sweethome3d.model.HomeFurnitureGroup", "mb1;_x(?JFZ-", "com.eteks.sweethome3d.model.HomeFurnitureGroup", (Content) null, (Content) null, (-2188.0774F), (-2188.0774F), (-2188.0774F), 1.0F, true, lightSourceArray0, floatArray0, "com.eteks.sweethome3d.model.HomeFurnitureGroup", true, bigDecimal0, bigDecimal0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getGrade());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getDescription());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreationDate());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getCreator());
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("mb1;_x(?JFZ-", catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogLight0);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getGrade());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getDescription());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreationDate());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getCreator());
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("mb1;_x(?JFZ-", catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals((-2188.0774F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-2188.0774F), homeLight0.getHeight(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("mb1;_x(?JFZ-", homeLight0.getName());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-2188.0774F), homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-1094.0387F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertEquals((-1094.0387F), homeLight0.getY(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeLight0);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeLight0);
      assertEquals(1, linkedList0.size());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getGrade());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getDescription());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreationDate());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getCreator());
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("mb1;_x(?JFZ-", catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals((-2188.0774F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-2188.0774F), homeLight0.getHeight(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("mb1;_x(?JFZ-", homeLight0.getName());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-2188.0774F), homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-1094.0387F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertEquals((-1094.0387F), homeLight0.getY(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(boolean0);
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, (String) null);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals((-1.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(1.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNotNull(homeFurnitureGroup0);
      
      homeFurnitureGroup0.setAngle((-2188.0774F));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(4.7542796F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals((-1.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(1.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      
      homeFurnitureGroup0.setAngle((-74.70942F));
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals((-1.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.68880445F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(1.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      LightSource[] lightSourceArray0 = new LightSource[2];
      float[][] floatArray0 = new float[4][8];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      CatalogLight catalogLight0 = new CatalogLight("com.eteks.sweethome3d.model.HomeFurnitureGroup", "mb1;_x(?JFZ-", "", (Content) null, (Content) null, (-2188.0774F), (-2188.0774F), (-2188.0774F), 1.0F, true, lightSourceArray0, floatArray0, "", true, bigDecimal0, bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getGrade());
      assertEquals("", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getDescription());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("mb1;_x(?JFZ-", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreationDate());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertTrue(catalogLight0.isResizable());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogLight0);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getGrade());
      assertEquals("", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getDescription());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("mb1;_x(?JFZ-", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreationDate());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertTrue(catalogLight0.isResizable());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-2188.0774F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getCatalogId());
      assertEquals("", homeLight0.getDescription());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals("mb1;_x(?JFZ-", homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-2188.0774F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-2188.0774F), homeLight0.getHeight(), 0.01F);
      assertEquals((-1094.0387F), homeLight0.getY(), 0.01F);
      assertEquals((-1094.0387F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeLight0);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeLight0);
      assertEquals(1, linkedList0.size());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getGrade());
      assertEquals("", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getDescription());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("mb1;_x(?JFZ-", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreationDate());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertTrue(catalogLight0.isResizable());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-2188.0774F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getCatalogId());
      assertEquals("", homeLight0.getDescription());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals("mb1;_x(?JFZ-", homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-2188.0774F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-2188.0774F), homeLight0.getHeight(), 0.01F);
      assertEquals((-1094.0387F), homeLight0.getY(), 0.01F);
      assertEquals((-1094.0387F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(boolean0);
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(1.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(1.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-1.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNotNull(homeFurnitureGroup0);
      
      homeFurnitureGroup0.setAngle(2918.5999F);
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(3.201871F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(1.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-1.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals("", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      LightSource[] lightSourceArray0 = new LightSource[2];
      float[][] floatArray0 = new float[4][8];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      CatalogLight catalogLight0 = new CatalogLight("com.eteks.sweethome3d.model.HomeFurnitureGroup", "60u*[q87>", "X&c", (Content) null, (Content) null, 0.0F, 2656.5532F, 2918.5999F, 60, true, lightSourceArray0, floatArray0, "com.eteks.sweethome3d.model.HomeFurnitureGroup", true, bigDecimal0, bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getGrade());
      assertEquals(2656.5532F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(60.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("60u*[q87>", catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals("X&c", catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(2918.5999F, catalogLight0.getHeight(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogLight0);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getGrade());
      assertEquals(2656.5532F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(60.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("60u*[q87>", catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals("X&c", catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(2918.5999F, catalogLight0.getHeight(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(2656.5532F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(60.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(60.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertEquals("60u*[q87>", homeLight0.getName());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(1328.2766F, homeLight0.getY(), 0.01F);
      assertEquals(2918.5999F, homeLight0.getHeight(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals("X&c", homeLight0.getDescription());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeLight0);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeLight0);
      assertEquals(1, linkedList0.size());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getGrade());
      assertEquals(2656.5532F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(60.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("60u*[q87>", catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals("X&c", catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(2918.5999F, catalogLight0.getHeight(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(2656.5532F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(60.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(60.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertEquals("60u*[q87>", homeLight0.getName());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(1328.2766F, homeLight0.getY(), 0.01F);
      assertEquals(2918.5999F, homeLight0.getHeight(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals("X&c", homeLight0.getDescription());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertTrue(boolean0);
      assertEquals(2, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "X&c");
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(60.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(1328.2766F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(60.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("X&c", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(2918.5999F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(2656.5532F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNotNull(homeFurnitureGroup0);
      
      homeFurnitureGroup0.setY(97.81F);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(60.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(60.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals("X&c", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(2918.5999F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(97.81F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(2656.5532F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isMovable());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      LightSource[] lightSourceArray0 = new LightSource[3];
      float[][] floatArray0 = new float[4][8];
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertNotNull(bigDecimal0);
      
      CatalogLight catalogLight0 = new CatalogLight("com.eteks.sweethome3d.model.HomeFurnitureGroup", "com.eteks.sweethome3d.model.HomeFurnitureGroup", "*s", (Content) null, (Content) null, (-2188.0774F), (-2188.0774F), (-2188.0774F), 1.0F, true, lightSourceArray0, floatArray0, "*s", true, bigDecimal0, bigDecimal0);
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getGrade());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getName());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("*s", catalogLight0.getDescription());
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertEquals("*s", catalogLight0.getCreator());
      assertTrue(catalogLight0.isResizable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(3, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogLight0);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getGrade());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getName());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("*s", catalogLight0.getDescription());
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertEquals("*s", catalogLight0.getCreator());
      assertTrue(catalogLight0.isResizable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreationDate());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getName());
      assertEquals((-1094.0387F), homeLight0.getX(), 0.01F);
      assertEquals((-1094.0387F), homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getCatalogId());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals("*s", homeLight0.getDescription());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertEquals((-2188.0774F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-2188.0774F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-2188.0774F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(3, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeLight0);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeLight0);
      assertEquals(1, linkedList0.size());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((-2188.0774F), catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getGrade());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getName());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("*s", catalogLight0.getDescription());
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-2188.0774F), catalogLight0.getHeight(), 0.01F);
      assertEquals("*s", catalogLight0.getCreator());
      assertTrue(catalogLight0.isResizable());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", catalogLight0.getId());
      assertEquals((-2188.0774F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreationDate());
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getName());
      assertEquals((-1094.0387F), homeLight0.getX(), 0.01F);
      assertEquals((-1094.0387F), homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeFurnitureGroup", homeLight0.getCatalogId());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals("*s", homeLight0.getDescription());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertEquals((-2188.0774F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-2188.0774F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-2188.0774F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertTrue(boolean0);
      assertEquals(3, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "*s");
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-1.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals("*s", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNotNull(homeFurnitureGroup0);
      
      boolean boolean1 = homeFurnitureGroup0.isTexturable();
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals((-1.0F), homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(1.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals("*s", homeFurnitureGroup0.getName());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      LightSource[] lightSourceArray0 = new LightSource[1];
      float[][] floatArray0 = new float[4][8];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      CatalogLight catalogLight0 = new CatalogLight(":b;iSwqj=*o_(uAwd", ":b;iSwqj=*o_(uAwd", ":b;iSwqj=*o_(uAwd", (Content) null, (Content) null, (-2189.1692F), (-2189.1692F), (-2189.1692F), (-2189.1692F), true, lightSourceArray0, floatArray0, ":b;iSwqj=*o_(uAwd", true, bigDecimal0, bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(":b;iSwqj=*o_(uAwd", catalogLight0.getId());
      assertNull(catalogLight0.getGrade());
      assertEquals((-2189.1692F), catalogLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-2189.1692F), catalogLight0.getElevation(), 0.01F);
      assertEquals(":b;iSwqj=*o_(uAwd", catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(":b;iSwqj=*o_(uAwd", catalogLight0.getCreator());
      assertEquals(":b;iSwqj=*o_(uAwd", catalogLight0.getDescription());
      assertEquals((-2189.1692F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals((-2189.1692F), catalogLight0.getDepth(), 0.01F);
      assertEquals(1, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(catalogLight0);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(":b;iSwqj=*o_(uAwd", catalogLight0.getId());
      assertNull(catalogLight0.getGrade());
      assertEquals((-2189.1692F), catalogLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-2189.1692F), catalogLight0.getElevation(), 0.01F);
      assertEquals(":b;iSwqj=*o_(uAwd", catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(":b;iSwqj=*o_(uAwd", catalogLight0.getCreator());
      assertEquals(":b;iSwqj=*o_(uAwd", catalogLight0.getDescription());
      assertEquals((-2189.1692F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals((-2189.1692F), catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-2189.1692F), homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(":b;iSwqj=*o_(uAwd", homeLight0.getCatalogId());
      assertEquals((-2189.1692F), homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-2189.1692F), homeLight0.getHeight(), 0.01F);
      assertEquals((-2189.1692F), homeLight0.getWidth(), 0.01F);
      assertEquals(":b;iSwqj=*o_(uAwd", homeLight0.getName());
      assertEquals(":b;iSwqj=*o_(uAwd", homeLight0.getDescription());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals((-1094.5846F), homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals((-1094.5846F), homeLight0.getX(), 0.01F);
      assertEquals((-2189.1692F), homeLight0.getDepth(), 0.01F);
      assertEquals(1, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertNotNull(homeLight0);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeLight0);
      assertEquals(1, linkedList0.size());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(":b;iSwqj=*o_(uAwd", catalogLight0.getId());
      assertNull(catalogLight0.getGrade());
      assertEquals((-2189.1692F), catalogLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-2189.1692F), catalogLight0.getElevation(), 0.01F);
      assertEquals(":b;iSwqj=*o_(uAwd", catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(":b;iSwqj=*o_(uAwd", catalogLight0.getCreator());
      assertEquals(":b;iSwqj=*o_(uAwd", catalogLight0.getDescription());
      assertEquals((-2189.1692F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals((-2189.1692F), catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-2189.1692F), homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(":b;iSwqj=*o_(uAwd", homeLight0.getCatalogId());
      assertEquals((-2189.1692F), homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-2189.1692F), homeLight0.getHeight(), 0.01F);
      assertEquals((-2189.1692F), homeLight0.getWidth(), 0.01F);
      assertEquals(":b;iSwqj=*o_(uAwd", homeLight0.getName());
      assertEquals(":b;iSwqj=*o_(uAwd", homeLight0.getDescription());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals((-1094.5846F), homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals((-1094.5846F), homeLight0.getX(), 0.01F);
      assertEquals((-2189.1692F), homeLight0.getDepth(), 0.01F);
      assertTrue(boolean0);
      assertEquals(1, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, ":b;iSwqj=*o_(uAwd");
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(":b;iSwqj=*o_(uAwd", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(2189.1692F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-2189.1692F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals((-2189.1692F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertNotNull(homeFurnitureGroup0);
      
      boolean boolean1 = homeFurnitureGroup0.isResizable();
      assertEquals(1, linkedList0.size());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(":b;iSwqj=*o_(uAwd", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(2189.1692F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals((-2189.1692F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals((-2189.1692F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      LightSource[] lightSourceArray0 = new LightSource[1];
      float[][] floatArray0 = new float[8][8];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      CatalogLight catalogLight0 = new CatalogLight(":b;iSqqj=b*o_(uAwd", ":b;iSqqj=b*o_(uAwd", "8C4e%Wn#MNZ}{", (Content) null, (Content) null, (-7.589189E20F), (-2188.1F), (-2188.1F), (-2188.1F), false, lightSourceArray0, floatArray0, ":b;iSqqj=b*o_(uAwd", true, bigDecimal0, bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(":b;iSqqj=b*o_(uAwd", catalogLight0.getCreator());
      assertEquals(":b;iSqqj=b*o_(uAwd", catalogLight0.getName());
      assertEquals((-2188.1F), catalogLight0.getHeight(), 0.01F);
      assertEquals("8C4e%Wn#MNZ}{", catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isResizable());
      assertEquals((-2188.1F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-2188.1F), catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-7.589189E20F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(":b;iSqqj=b*o_(uAwd", catalogLight0.getId());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isMovable());
      assertEquals(1, lightSourceArray0.length);
      assertEquals(8, floatArray0.length);
      assertNotNull(catalogLight0);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(":b;iSqqj=b*o_(uAwd", catalogLight0.getCreator());
      assertEquals(":b;iSqqj=b*o_(uAwd", catalogLight0.getName());
      assertEquals((-2188.1F), catalogLight0.getHeight(), 0.01F);
      assertEquals("8C4e%Wn#MNZ}{", catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isResizable());
      assertEquals((-2188.1F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-2188.1F), catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-7.589189E20F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(":b;iSqqj=b*o_(uAwd", catalogLight0.getId());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-7.589189E20F), homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-3.7945944E20F), homeLight0.getX(), 0.01F);
      assertEquals(":b;iSqqj=b*o_(uAwd", homeLight0.getCatalogId());
      assertFalse(homeLight0.isMovable());
      assertEquals((-2188.1F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals((-2188.1F), homeLight0.getElevation(), 0.01F);
      assertEquals((-2188.1F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals((-2188.1F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals((-1094.05F), homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(":b;iSqqj=b*o_(uAwd", homeLight0.getName());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals("8C4e%Wn#MNZ}{", homeLight0.getDescription());
      assertEquals(1, lightSourceArray0.length);
      assertEquals(8, floatArray0.length);
      assertNotNull(homeLight0);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeLight0);
      assertEquals(1, linkedList0.size());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(":b;iSqqj=b*o_(uAwd", catalogLight0.getCreator());
      assertEquals(":b;iSqqj=b*o_(uAwd", catalogLight0.getName());
      assertEquals((-2188.1F), catalogLight0.getHeight(), 0.01F);
      assertEquals("8C4e%Wn#MNZ}{", catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isResizable());
      assertEquals((-2188.1F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-2188.1F), catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-7.589189E20F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(":b;iSqqj=b*o_(uAwd", catalogLight0.getId());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-7.589189E20F), homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-3.7945944E20F), homeLight0.getX(), 0.01F);
      assertEquals(":b;iSqqj=b*o_(uAwd", homeLight0.getCatalogId());
      assertFalse(homeLight0.isMovable());
      assertEquals((-2188.1F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals((-2188.1F), homeLight0.getElevation(), 0.01F);
      assertEquals((-2188.1F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals((-2188.1F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals((-1094.05F), homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(":b;iSqqj=b*o_(uAwd", homeLight0.getName());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals("8C4e%Wn#MNZ}{", homeLight0.getDescription());
      assertTrue(boolean0);
      assertEquals(1, lightSourceArray0.length);
      assertEquals(8, floatArray0.length);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "8C4e%Wn#MNZ}{");
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("8C4e%Wn#MNZ}{", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(2188.1F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals((-2188.1F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals((-2188.1F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNotNull(homeFurnitureGroup0);
      
      boolean boolean1 = homeFurnitureGroup0.isMovable();
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals("8C4e%Wn#MNZ}{", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(2188.1F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals((-2188.1F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals((-2188.1F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      float[][] floatArray0 = new float[4][8];
      Sash[] sashArray0 = new Sash[2];
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("Akliy2zI", "", "jI%y%Ij|&", (Content) null, (Content) null, (Content) null, (-2188.0774F), (-1477.4025F), (-2188.0774F), (-2188.0774F), true, (-2188.0774F), (-1477.4025F), sashArray0, floatArray0, "jI%y%Ij|&", true, true, true, bigDecimal0, bigDecimal0, "jI%y%Ij|&");
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1477.4025F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("jI%y%Ij|&", catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("jI%y%Ij|&", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("Akliy2zI", catalogDoorOrWindow0.getId());
      assertEquals((-2188.0774F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-2188.0774F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("jI%y%Ij|&", catalogDoorOrWindow0.getDescription());
      assertEquals((-1477.4025F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-2188.0774F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-2188.0774F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertEquals(4, floatArray0.length);
      assertEquals(2, sashArray0.length);
      assertNotNull(catalogDoorOrWindow0);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogDoorOrWindow0);
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1477.4025F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("jI%y%Ij|&", catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("jI%y%Ij|&", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("Akliy2zI", catalogDoorOrWindow0.getId());
      assertEquals((-2188.0774F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-2188.0774F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("jI%y%Ij|&", catalogDoorOrWindow0.getDescription());
      assertEquals((-1477.4025F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-2188.0774F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-2188.0774F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals((-2188.0774F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-1477.4025F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals("Akliy2zI", homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals("jI%y%Ij|&", homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals((-2188.0774F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-738.70123F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals((-2188.0774F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1094.0387F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals((-2188.0774F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals("jI%y%Ij|&", homePieceOfFurniture0.getDescription());
      assertEquals(4, floatArray0.length);
      assertEquals(2, sashArray0.length);
      assertNotNull(homePieceOfFurniture0);
      
      boolean boolean0 = linkedList0.add(homePieceOfFurniture0);
      assertEquals(1, linkedList0.size());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1477.4025F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("jI%y%Ij|&", catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("jI%y%Ij|&", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals("Akliy2zI", catalogDoorOrWindow0.getId());
      assertEquals((-2188.0774F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-2188.0774F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("jI%y%Ij|&", catalogDoorOrWindow0.getDescription());
      assertEquals((-1477.4025F), catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals((-2188.0774F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-2188.0774F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals((-2188.0774F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-1477.4025F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals("Akliy2zI", homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals("jI%y%Ij|&", homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals((-2188.0774F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-738.70123F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals((-2188.0774F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1094.0387F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals((-2188.0774F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals("jI%y%Ij|&", homePieceOfFurniture0.getDescription());
      assertTrue(linkedList0.contains(homePieceOfFurniture0));
      assertTrue(boolean0);
      assertEquals(4, floatArray0.length);
      assertEquals(2, sashArray0.length);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "Akliy2zI");
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-2188.0774F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(2188.0774F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals("jI%y%Ij|&", homeFurnitureGroup0.getCurrency());
      assertEquals((-2188.0774F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals("Akliy2zI", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(linkedList0.contains(homePieceOfFurniture0));
      assertNotNull(homeFurnitureGroup0);
      
      boolean boolean1 = homeFurnitureGroup0.isDoorOrWindow();
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals((-2188.0774F), homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(2188.0774F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDoorOrWindow());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals("jI%y%Ij|&", homeFurnitureGroup0.getCurrency());
      assertEquals((-2188.0774F), homeFurnitureGroup0.getElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals("Akliy2zI", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(boolean1 == boolean0);
      assertTrue(linkedList0.contains(homePieceOfFurniture0));
      assertTrue(boolean1);
  }
}
