/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 19 15:45:58 GMT 2019
 */

package org.sat4j.tools;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.sat4j.opt.MaxSatDecorator;
import org.sat4j.specs.ISolver;
import org.sat4j.specs.IVecInt;
import org.sat4j.tools.FullClauseSelectorSolver;
import org.sat4j.tools.LexicoDecorator;
import org.sat4j.tools.ManyCore;
import org.sat4j.tools.OptToSatAdapter;
import org.sat4j.tools.RemiUtils;
import org.sat4j.tools.StatisticsSolver;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RemiUtils_ESTest extends RemiUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OptToSatAdapter optToSatAdapter0 = mock(OptToSatAdapter.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false, false, false).when(optToSatAdapter0).isSatisfiable(any(org.sat4j.specs.IVecInt.class));
      doReturn(2487, 2487).when(optToSatAdapter0).nVars();
      FullClauseSelectorSolver<OptToSatAdapter> fullClauseSelectorSolver0 = new FullClauseSelectorSolver<OptToSatAdapter>(optToSatAdapter0, true);
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(fullClauseSelectorSolver0);
      RemiUtils.backbone(maxSatDecorator0);
      // Undeclared exception!
      RemiUtils.backbone(fullClauseSelectorSolver0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OptToSatAdapter[] optToSatAdapterArray0 = new OptToSatAdapter[1];
      OptToSatAdapter optToSatAdapter0 = mock(OptToSatAdapter.class, new ViolatedAssumptionAnswer());
      doReturn(666).when(optToSatAdapter0).nVars();
      LexicoDecorator<OptToSatAdapter> lexicoDecorator0 = new LexicoDecorator<OptToSatAdapter>(optToSatAdapter0);
      OptToSatAdapter optToSatAdapter1 = new OptToSatAdapter(lexicoDecorator0);
      optToSatAdapterArray0[0] = optToSatAdapter1;
      ManyCore<OptToSatAdapter> manyCore0 = new ManyCore<OptToSatAdapter>(optToSatAdapterArray0);
      // Undeclared exception!
      try { 
        RemiUtils.backbone(manyCore0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.ManyCore", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        RemiUtils.backbone((ISolver) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.RemiUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OptToSatAdapter optToSatAdapter0 = mock(OptToSatAdapter.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(optToSatAdapter0).isSatisfiable(any(org.sat4j.specs.IVecInt.class) , anyBoolean());
      doReturn(1).when(optToSatAdapter0).nVars();
      LexicoDecorator<OptToSatAdapter> lexicoDecorator0 = new LexicoDecorator<OptToSatAdapter>(optToSatAdapter0);
      OptToSatAdapter optToSatAdapter1 = new OptToSatAdapter(lexicoDecorator0);
      RemiUtils.backbone(optToSatAdapter1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      OptToSatAdapter optToSatAdapter0 = mock(OptToSatAdapter.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(optToSatAdapter0).isSatisfiable(any(org.sat4j.specs.IVecInt.class) , anyBoolean());
      doReturn(true, false).when(optToSatAdapter0).model(anyInt());
      doReturn(1, 1, 4, 1499).when(optToSatAdapter0).nVars();
      LexicoDecorator<OptToSatAdapter> lexicoDecorator0 = new LexicoDecorator<OptToSatAdapter>(optToSatAdapter0);
      OptToSatAdapter optToSatAdapter1 = new OptToSatAdapter(lexicoDecorator0);
      // Undeclared exception!
      try { 
        RemiUtils.backbone(optToSatAdapter1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.sat4j.tools.LexicoDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      OptToSatAdapter optToSatAdapter0 = mock(OptToSatAdapter.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, true, false, false).when(optToSatAdapter0).isSatisfiable(any(org.sat4j.specs.IVecInt.class));
      doReturn(2487).when(optToSatAdapter0).nVars();
      FullClauseSelectorSolver<OptToSatAdapter> fullClauseSelectorSolver0 = new FullClauseSelectorSolver<OptToSatAdapter>(optToSatAdapter0, true);
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(fullClauseSelectorSolver0);
      IVecInt iVecInt0 = RemiUtils.backbone(maxSatDecorator0);
      assertEquals((-2487), iVecInt0.last());
      assertEquals(2487, iVecInt0.size());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      OptToSatAdapter optToSatAdapter0 = mock(OptToSatAdapter.class, new ViolatedAssumptionAnswer());
      doReturn(false, true, true, false, true).when(optToSatAdapter0).isSatisfiable(any(org.sat4j.specs.IVecInt.class));
      doReturn(2487).when(optToSatAdapter0).nVars();
      FullClauseSelectorSolver<OptToSatAdapter> fullClauseSelectorSolver0 = new FullClauseSelectorSolver<OptToSatAdapter>(optToSatAdapter0, false);
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(fullClauseSelectorSolver0);
      IVecInt iVecInt0 = RemiUtils.backbone(maxSatDecorator0);
      //  // Unstable assertion: assertEquals(1, iVecInt0.last());
      //  // Unstable assertion: assertEquals(1, iVecInt0.size());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      StatisticsSolver statisticsSolver0 = new StatisticsSolver();
      IVecInt iVecInt0 = RemiUtils.backbone(statisticsSolver0);
      assertTrue(iVecInt0.isEmpty());
  }
}
