/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 25 11:27:00 GMT 2019
 */

package net.virtualinfinity.atrobots.arena;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.virtualinfinity.atrobots.arena.FrameBuilder;
import net.virtualinfinity.atrobots.measures.Duration;
import net.virtualinfinity.atrobots.snapshots.ExplosionSnapshot;
import net.virtualinfinity.atrobots.snapshots.UnknownSnapshot;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FrameBuilder_ESTest extends FrameBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FrameBuilder frameBuilder0 = new FrameBuilder();
      frameBuilder0.beginFrame(false);
      frameBuilder0.endFrame();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FrameBuilder frameBuilder0 = new FrameBuilder();
      frameBuilder0.beginFrame(false);
      UnknownSnapshot unknownSnapshot0 = new UnknownSnapshot("0S]3 giJ7o`H");
      frameBuilder0.addObject(unknownSnapshot0);
      assertFalse(unknownSnapshot0.isDead());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FrameBuilder frameBuilder0 = new FrameBuilder();
      Duration duration0 = Duration.ONE_CYCLE;
      ExplosionSnapshot explosionSnapshot0 = new ExplosionSnapshot((-1381.39056361162), duration0);
      // Undeclared exception!
      try { 
        frameBuilder0.addObject(explosionSnapshot0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.virtualinfinity.atrobots.arena.FrameBuilder", e);
      }
  }
}
