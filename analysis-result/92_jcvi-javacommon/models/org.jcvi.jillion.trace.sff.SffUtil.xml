<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.jcvi.jillion.trace.sff.SffUtil.convertFlowgramValue(short)" proba="0.058823529411764705"></transition><transition target="s4" action="org.jcvi.jillion.trace.sff.SffUtil.toSffIndexOffsetValue(long)" proba="0.058823529411764705"></transition><transition target="s5" action="org.jcvi.jillion.trace.sff.SffUtil.parseSffIndexOffsetValue(byte[])" proba="0.058823529411764705"></transition><transition target="s1" action="org.jcvi.jillion.trace.sff.SffUtil.caclulatePaddedBytes(int)" proba="0.5882352941176471"></transition><transition target="s2" action="org.jcvi.jillion.trace.sff.SffUtil.getReadDataLength(int,int)" proba="0.23529411764705882"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="0.9333333333333333"></transition><transition target="s2" action="org.jcvi.jillion.trace.sff.SffUtil.getReadDataLength(int,int)" proba="0.06666666666666667"></transition></state><state id="s2"><transition target="s1" action="org.jcvi.jillion.trace.sff.SffUtil.caclulatePaddedBytes(int)" proba="1.0"></transition></state></states></ts>