/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 17:19:01 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jahuwaldt.plot.LinearAxisScale;
import jahuwaldt.plot.PlotAxisScale;
import jahuwaldt.plot.PlotRun;
import jahuwaldt.plot.PlotRunList;
import jahuwaldt.plot.PlotXAxis;
import jahuwaldt.plot.PlotYAxis;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.NumberFormat;
import java.util.Stack;
import javax.swing.Box;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlotAxis_ESTest extends PlotAxis_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.xA = (-376.270064);
      plotXAxis0.scaleCoord(0.0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.setLowerBounds((-1.7976931348623157E308));
      plotYAxis0.setAxisTickLimits();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.manualTickStepSize(true);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.manualUpperBounds(true);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.setLowerBounds(0.0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      plotXAxis0.setScale(linearAxisScale0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance();
      PlotYAxis plotYAxis0 = new PlotYAxis("jahuwaldt.plot.PlotYAxis", linearAxisScale0, numberFormat0, 0);
      Stack<Object> stack0 = new Stack<Object>();
      PlotRunList plotRunList0 = new PlotRunList(stack0);
      plotYAxis0.setAxisBounds(plotRunList0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      Rectangle rectangle0 = new Rectangle((-244), (-244), (-244), 12);
      plotYAxis0.setSize(rectangle0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.scaleCoord((-1.0));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis("", (PlotAxisScale) null, (NumberFormat) null, 729);
      plotYAxis0.scaleCoord((-811.0));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.aUB = 0.0;
      plotYAxis0.getUpperBounds();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      PlotRun[] plotRunArray0 = new PlotRun[0];
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      plotYAxis0.setAxisBounds(plotRunList0);
      plotYAxis0.getUpperBounds();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.setTickStepSize(3186.02);
      plotYAxis0.getTickStepSize();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance();
      PlotXAxis plotXAxis0 = new PlotXAxis("jahuwaldt.plot.PlotYAxis", linearAxisScale0, numberFormat0, 3554);
      plotXAxis0.setAxisTickLimits();
      plotXAxis0.getTickStepSize();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.nf = null;
      plotXAxis0.getNumberFormat();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance();
      plotYAxis0.nf = numberFormat0;
      plotYAxis0.getNumberFormat();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.setAxisBounds((PlotRunList) null);
      plotYAxis0.getLowerBounds();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.getLabel();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DecimalFormatSymbols decimalFormatSymbols0 = new DecimalFormatSymbols();
      DecimalFormat decimalFormat0 = new DecimalFormat("", decimalFormatSymbols0);
      PlotXAxis plotXAxis0 = new PlotXAxis("", (PlotAxisScale) null, decimalFormat0, 1);
      plotXAxis0.getLabel();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      int int0 = plotYAxis0.getGridStyle();
      assertEquals(1, int0);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      PlotXAxis plotXAxis0 = new PlotXAxis("1u+aQuud.)cJ\"", linearAxisScale0, numberFormat0, (-846));
      int int0 = plotXAxis0.getGridStyle();
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals((-846), int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.scale = null;
      // Undeclared exception!
      try { 
        plotYAxis0.setAxisTickLimits();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.scale = null;
      PlotRunList plotRunList0 = new PlotRunList();
      // Undeclared exception!
      try { 
        plotYAxis0.setAxisBounds(plotRunList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotYAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      Box box0 = Box.createVerticalBox();
      Rectangle rectangle0 = new Rectangle();
      // Undeclared exception!
      try { 
        plotXAxis0.draw((Graphics) null, box0, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotXAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.setAxisTickLimits();
      plotXAxis0.setAxisTickLimits();
      assertEquals(Double.NaN, plotXAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.manualQuant = true;
      plotYAxis0.setAxisTickLimits();
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.setNumberFormat((NumberFormat) null);
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals(1, plotXAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance();
      plotYAxis0.setNumberFormat(numberFormat0);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.setScale((PlotAxisScale) null);
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotXAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      String string0 = plotXAxis0.lowerBoundsAsString();
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals("\u221E", string0);
      assertEquals(1, plotXAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance();
      PlotXAxis plotXAxis0 = new PlotXAxis("jahuwaldt.plot.PlotYAxis", linearAxisScale0, numberFormat0, 3554);
      double double0 = plotXAxis0.getUpperBounds();
      assertEquals(3554, plotXAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), double0, 0.01);
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance();
      PlotXAxis plotXAxis0 = new PlotXAxis("jahuwaldt.plot.PlotYAxis", linearAxisScale0, numberFormat0, 3554);
      double double0 = plotXAxis0.getTickStepSize();
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals(3554, plotXAxis0.getGridStyle());
      assertEquals(0.0, double0, 0.01);
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.setGridStyle((-1029));
      assertEquals((-1029), plotYAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.setUpperBounds(12);
      assertEquals(12.0, plotYAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance();
      PlotXAxis plotXAxis0 = new PlotXAxis("jahuwaldt.plot.PlotYAxis", linearAxisScale0, numberFormat0, 3554);
      PlotAxisScale plotAxisScale0 = plotXAxis0.getScale();
      assertSame(plotAxisScale0, linearAxisScale0);
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals(3554, plotXAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance();
      PlotYAxis plotYAxis0 = new PlotYAxis("jahuwaldt.plot.PlotYAxis", linearAxisScale0, numberFormat0, 0);
      PlotYAxis plotYAxis1 = (PlotYAxis)plotYAxis0.clone();
      assertEquals(0, plotYAxis1.getGridStyle());
      assertNotSame(plotYAxis1, plotYAxis0);
      assertEquals((-1.7976931348623157E308), plotYAxis1.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotYAxis1.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.manualLowerBounds(true);
      plotYAxis0.setAxisTickLimits();
      assertEquals(Double.NaN, plotYAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.setLabel("");
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance();
      PlotXAxis plotXAxis0 = new PlotXAxis("jahuwaldt.plot.PlotYAxis", linearAxisScale0, numberFormat0, 3554);
      String string0 = plotXAxis0.getLabel();
      assertNotNull(string0);
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals(3554, plotXAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.getNumberFormat();
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      // Undeclared exception!
      try { 
        plotYAxis0.setSize((Rectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotYAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      String string0 = plotYAxis0.upperBoundsAsString();
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals("-\u221E", string0);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance();
      PlotYAxis plotYAxis0 = new PlotYAxis("jahuwaldt.plot.PlotYAxis", linearAxisScale0, numberFormat0, 0);
      int int0 = plotYAxis0.getGridStyle();
      assertEquals(0, int0);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      double double0 = plotXAxis0.getLowerBounds();
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotXAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, double0, 0.01);
  }
}
