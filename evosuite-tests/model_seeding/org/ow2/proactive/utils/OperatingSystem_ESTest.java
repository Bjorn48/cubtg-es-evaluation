/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 19 17:30:32 GMT 2019
 */

package org.ow2.proactive.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.ow2.proactive.utils.OperatingSystem;
import org.ow2.proactive.utils.OperatingSystemFamily;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OperatingSystem_ESTest extends OperatingSystem_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OperatingSystem operatingSystem0 = OperatingSystem.resolveOrError("NetWare");
      assertEquals(OperatingSystem.NETWARE, operatingSystem0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OperatingSystem operatingSystem0 = OperatingSystem.resolve("Windows 2008");
      assertEquals(OperatingSystem.WINDOWS_2008, operatingSystem0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        OperatingSystem.resolveOrError((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        OperatingSystem.resolve((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      OperatingSystem operatingSystem0 = OperatingSystem.resolveOrError("MPE/iX");
      assertEquals(OperatingSystem.MPE_IX, operatingSystem0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        OperatingSystem.resolveOrError("HP_UX");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown Operating System HP_UX
         //
         verifyException("org.ow2.proactive.utils.OperatingSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      OperatingSystem.resolve("PZ5w&{VV%+/prOq");
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      OperatingSystem operatingSystem0 = OperatingSystem.resolve("SunOS");
      String string0 = operatingSystem0.getLabel();
      assertEquals("SunOS", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      OperatingSystem operatingSystem0 = OperatingSystem.NETWARE;
      OperatingSystemFamily operatingSystemFamily0 = operatingSystem0.getFamily();
      assertEquals(OperatingSystemFamily.UNIX, operatingSystemFamily0);
  }
}
