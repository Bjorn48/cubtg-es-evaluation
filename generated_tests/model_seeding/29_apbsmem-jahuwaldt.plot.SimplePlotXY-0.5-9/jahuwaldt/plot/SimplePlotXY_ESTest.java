/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 17:15:00 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jahuwaldt.plot.BoxLRSymbol;
import jahuwaldt.plot.PlotAxis;
import jahuwaldt.plot.PlotRunList;
import jahuwaldt.plot.PlotYAxis;
import jahuwaldt.plot.SimplePlotXY;
import jahuwaldt.plot.SquareSymbol;
import jahuwaldt.plot.TabDSymbol;
import jahuwaldt.plot.ThinRect2Symbol;
import jahuwaldt.plot.Triangle4Symbol;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.geom.Rectangle2D;
import java.text.ChoiceFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.DebugGraphics;
import javax.swing.JComponent;
import javax.swing.JMenuItem;
import javax.swing.JToolBar;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimplePlotXY_ESTest extends SimplePlotXY_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      NumberFormat numberFormat0 = NumberFormat.getInstance(locale0);
      double[] doubleArray0 = new double[4];
      Triangle4Symbol triangle4Symbol0 = new Triangle4Symbol();
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "y*|_}", "?b:/", "KVt", (NumberFormat) null, numberFormat0, triangle4Symbol0);
      assertEquals("y*|_}", simplePlotXY0.getTitle());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      double[] doubleArray1 = new double[8];
      DecimalFormat decimalFormat0 = new DecimalFormat();
      ThinRect2Symbol thinRect2Symbol0 = new ThinRect2Symbol();
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray1, "", "", "Inconsistant array sizes.", decimalFormat0, decimalFormat0, thinRect2Symbol0);
      assertEquals("", simplePlotXY0.getTitle());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      Triangle4Symbol triangle4Symbol0 = new Triangle4Symbol();
      double[] doubleArray1 = new double[1];
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      SimplePlotXY simplePlotXY0 = null;
      try {
        simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray1, "?b:/", "", "", numberFormat0, numberFormat0, triangle4Symbol0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Inconsistant array sizes.
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PlotRunList plotRunList0 = new PlotRunList();
      Locale locale0 = JComponent.getDefaultLocale();
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(plotRunList0, "%g)0P_1n", "%g)0P_1n", "%g)0P_1n", numberFormat0, numberFormat0);
      PlotAxis plotAxis0 = simplePlotXY0.getVerticalAxis();
      assertEquals(2, plotAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PlotRunList plotRunList0 = new PlotRunList();
      Locale locale0 = JComponent.getDefaultLocale();
      NumberFormat numberFormat0 = NumberFormat.getInstance(locale0);
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(plotRunList0, "774.758", "Inconsistant array sizes.", "", numberFormat0, numberFormat0);
      String string0 = simplePlotXY0.getTitle();
      assertEquals("774.758", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance();
      BoxLRSymbol boxLRSymbol0 = new BoxLRSymbol();
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "", (String) null, "", numberFormat0, numberFormat0, boxLRSymbol0);
      String string0 = simplePlotXY0.getTitle();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ChoiceFormat choiceFormat0 = new ChoiceFormat("?u");
      SimplePlotXY simplePlotXY0 = new SimplePlotXY((PlotRunList) null, "", "", "", choiceFormat0, choiceFormat0);
      PlotRunList plotRunList0 = simplePlotXY0.getRuns();
      assertNull(plotRunList0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      PlotRunList plotRunList0 = simplePlotXY0.getRuns();
      assertEquals(0, plotRunList0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat("$*");
      double[] doubleArray0 = new double[1];
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "", "temp ", "", decimalFormat0, decimalFormat0);
      PlotAxis plotAxis0 = simplePlotXY0.getHorizontalAxis();
      assertEquals("", simplePlotXY0.getTitle());
      assertEquals("temp ", plotAxis0.getLabel());
      assertEquals(2, plotAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PlotRunList plotRunList0 = new PlotRunList();
      Locale locale0 = JComponent.getDefaultLocale();
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(plotRunList0, "%g)0P_1n", "%g)0P_1n", "%g)0P_1n", numberFormat0, numberFormat0);
      Object object0 = simplePlotXY0.clone();
      assertNotSame(object0, simplePlotXY0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      NumberFormat numberFormat0 = NumberFormat.getInstance(locale0);
      TabDSymbol tabDSymbol0 = new TabDSymbol();
      SimplePlotXY simplePlotXY0 = null;
      try {
        simplePlotXY0 = new SimplePlotXY((double[]) null, (double[]) null, "", "", "Inconsistant array sizes.", numberFormat0, numberFormat0, tabDSymbol0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = null;
      try {
        simplePlotXY0 = new SimplePlotXY((double[]) null, (double[]) null, "chgm spl2\n", "chgm spl2\n", "chgm spl2\n", (NumberFormat) null, (NumberFormat) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat("Isocontour to draw electrostatic potential (+/-)");
      double[] doubleArray0 = new double[1];
      double[] doubleArray1 = new double[2];
      SimplePlotXY simplePlotXY0 = null;
      try {
        simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray1, "", "", "Isocontour to draw electrostatic potential (+/-)", decimalFormat0, decimalFormat0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Inconsistant array sizes.
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JToolBar.Separator jToolBar_Separator0 = new JToolBar.Separator((Dimension) null);
      DebugGraphics debugGraphics0 = new DebugGraphics((Graphics) null, jToolBar_Separator0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(9.135266885, 9.135266885, 9.135266885, 0.0);
      Rectangle rectangle0 = rectangle2D_Double0.getBounds();
      double[] doubleArray0 = new double[2];
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance();
      SquareSymbol squareSymbol0 = new SquareSymbol();
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "", (String) null, "", numberFormat0, numberFormat0, squareSymbol0);
      JMenuItem jMenuItem0 = new JMenuItem();
      // Undeclared exception!
      try { 
        simplePlotXY0.draw(debugGraphics0, jMenuItem0, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JToolBar.Separator jToolBar_Separator0 = new JToolBar.Separator();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      DecimalFormat decimalFormat0 = new DecimalFormat();
      SimplePlotXY simplePlotXY0 = new SimplePlotXY((PlotRunList) null, (String) null, (String) null, (String) null, decimalFormat0, decimalFormat0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      // Undeclared exception!
      try { 
        simplePlotXY0.draw(debugGraphics0, jToolBar_Separator0, defaultCaret0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PlotRunList plotRunList0 = new PlotRunList();
      Locale locale0 = JComponent.getDefaultLocale();
      NumberFormat numberFormat0 = NumberFormat.getInstance(locale0);
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(plotRunList0, "774.758", "Inconsistant array sizes.", "", numberFormat0, numberFormat0);
      PlotYAxis plotYAxis0 = new PlotYAxis();
      simplePlotXY0.setHorizontalAxis(plotYAxis0);
      assertEquals("774.758", simplePlotXY0.getTitle());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      PlotAxis plotAxis0 = simplePlotXY0.getHorizontalAxis();
      assertNull(plotAxis0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      simplePlotXY0.setTitle(")*H");
      assertEquals(")*H", simplePlotXY0.getTitle());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      PlotAxis plotAxis0 = simplePlotXY0.getVerticalAxis();
      assertNull(plotAxis0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      // Undeclared exception!
      try { 
        simplePlotXY0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      String string0 = simplePlotXY0.getTitle();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      PlotRunList plotRunList0 = new PlotRunList();
      simplePlotXY0.setRuns(plotRunList0);
      assertNull(simplePlotXY0.getTitle());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      Triangle4Symbol triangle4Symbol0 = new Triangle4Symbol();
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "?b:/", "?b:/", "", (NumberFormat) null, (NumberFormat) null, triangle4Symbol0);
      simplePlotXY0.getRuns();
      assertEquals("?b:/", simplePlotXY0.getTitle());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      simplePlotXY0.setVerticalAxis((PlotAxis) null);
      assertNull(simplePlotXY0.getTitle());
  }
}
