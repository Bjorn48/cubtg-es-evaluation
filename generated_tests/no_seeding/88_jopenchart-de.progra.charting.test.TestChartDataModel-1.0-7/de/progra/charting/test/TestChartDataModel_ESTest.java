/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 21:15:21 GMT 2019
 */

package de.progra.charting.test;

import org.junit.Test;
import static org.junit.Assert.*;
import de.progra.charting.model.ChartDataModelConstraints;
import de.progra.charting.model.DefaultChartDataModel;
import de.progra.charting.model.EditableChartDataModel;
import de.progra.charting.model.ObjectChartDataModel;
import de.progra.charting.test.TestChartDataModel;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TestChartDataModel_ESTest extends TestChartDataModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TestChartDataModel testChartDataModel0 = new TestChartDataModel();
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      objectChartDataModel0.setChartDataModelConstraints(2129, (ChartDataModelConstraints) null);
      testChartDataModel0.testDefaultChartDataModel(objectChartDataModel0);
      assertFalse(objectChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TestChartDataModel testChartDataModel0 = new TestChartDataModel();
      testChartDataModel0.testDefaultChartDataModel((ObjectChartDataModel) null);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TestChartDataModel testChartDataModel0 = new TestChartDataModel();
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      defaultChartDataModel0.setChartDataModelConstraints((-195), (ChartDataModelConstraints) null);
      testChartDataModel0.testDefaultChartDataModel(defaultChartDataModel0);
      assertFalse(defaultChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TestChartDataModel testChartDataModel0 = new TestChartDataModel();
      Number[][] numberArray0 = new Number[3][3];
      Number[] numberArray1 = new Number[1];
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      numberArray1[0] = (Number) integer0;
      numberArray0[0] = numberArray1;
      numberArray0[1] = numberArray0[0];
      Number[] numberArray2 = new Number[5];
      numberArray2[0] = (Number) integer0;
      numberArray2[1] = (Number) integer0;
      numberArray2[2] = (Number) integer0;
      numberArray2[3] = (Number) integer0;
      numberArray2[4] = (Number) integer0;
      numberArray0[2] = numberArray2;
      double[] doubleArray0 = new double[7];
      String[] stringArray0 = new String[4];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(numberArray0, doubleArray0, stringArray0);
      testChartDataModel0.testDefaultChartDataModel((DefaultChartDataModel) editableChartDataModel0);
      assertEquals(3, editableChartDataModel0.getDataSetNumber());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TestChartDataModel testChartDataModel0 = new TestChartDataModel();
      double[][] doubleArray0 = new double[1][4];
      double[] doubleArray1 = new double[9];
      doubleArray0[0] = doubleArray1;
      String[] stringArray0 = new String[2];
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(doubleArray0, doubleArray1, stringArray0);
      testChartDataModel0.testDefaultChartDataModel(defaultChartDataModel0);
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TestChartDataModel testChartDataModel0 = new TestChartDataModel();
      testChartDataModel0.testDefaultChartDataModel((DefaultChartDataModel) null);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      String[] stringArray0 = new String[2];
      TestChartDataModel.main(stringArray0);
      assertEquals(2, stringArray0.length);
  }
}
