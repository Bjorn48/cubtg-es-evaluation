/*
 * This file was automatically generated by EvoSuite
 * Sun Feb 17 08:00:37 GMT 2019
 */

package org.sat4j.tools;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.sat4j.LightFactory;
import org.sat4j.minisat.constraints.CardinalityDataStructureYanMax;
import org.sat4j.minisat.constraints.cnf.BinaryClauses;
import org.sat4j.minisat.constraints.cnf.CBClause;
import org.sat4j.minisat.constraints.cnf.OriginalWLClause;
import org.sat4j.minisat.constraints.cnf.UnitClause;
import org.sat4j.minisat.core.ILits;
import org.sat4j.minisat.core.Solver;
import org.sat4j.specs.Constr;
import org.sat4j.specs.IConstr;
import org.sat4j.specs.ISolver;
import org.sat4j.specs.IVecInt;
import org.sat4j.specs.Lbool;
import org.sat4j.specs.RandomAccessModel;
import org.sat4j.specs.UnitPropagationListener;
import org.sat4j.tools.DotSearchTracing;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DotSearchTracing_ESTest extends DotSearchTracing_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DotSearchTracing<Integer> dotSearchTracing0 = new DotSearchTracing<Integer>(":Lo;Stp^@K_vXc5bd=");
      dotSearchTracing0.assuming(10);
      dotSearchTracing0.assuming((-3965));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DotSearchTracing<Integer> dotSearchTracing0 = new DotSearchTracing<Integer>(":Lo;Stp^@K_vXc5bd=");
      dotSearchTracing0.assuming((-3965));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DotSearchTracing<String> dotSearchTracing0 = new DotSearchTracing<String>("uB");
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      hashMap0.put((Integer) 0, "npB?}");
      dotSearchTracing0.setMapping(hashMap0);
      String string0 = dotSearchTracing0.map(0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DotSearchTracing<Object> dotSearchTracing0 = new DotSearchTracing<Object>("S`tMKNP`Yw");
      Lbool lbool0 = Lbool.FALSE;
      dotSearchTracing0.end(lbool0);
      dotSearchTracing0.start();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DotSearchTracing<Object> dotSearchTracing0 = new DotSearchTracing<Object>("j");
      dotSearchTracing0.assuming(407);
      dotSearchTracing0.backtracking(0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DotSearchTracing<Object> dotSearchTracing0 = new DotSearchTracing<Object>("");
      // Undeclared exception!
      try { 
        dotSearchTracing0.start();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.DotSearchTracing", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DotSearchTracing<String> dotSearchTracing0 = new DotSearchTracing<String>("");
      int[] intArray0 = new int[3];
      // Undeclared exception!
      try { 
        dotSearchTracing0.solutionFound(intArray0, (RandomAccessModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.DotSearchTracing", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DotSearchTracing<Object> dotSearchTracing0 = new DotSearchTracing<Object>("");
      // Undeclared exception!
      try { 
        dotSearchTracing0.propagating((-2121949295));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.DotSearchTracing", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DotSearchTracing<Integer> dotSearchTracing0 = new DotSearchTracing<Integer>("<s8p:v]`");
      UnitPropagationListener unitPropagationListener0 = mock(UnitPropagationListener.class, new ViolatedAssumptionAnswer());
      ILits iLits0 = mock(ILits.class, new ViolatedAssumptionAnswer());
      IVecInt iVecInt0 = mock(IVecInt.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(iVecInt0).size();
      CBClause cBClause0 = CBClause.brandNewClause(unitPropagationListener0, iLits0, iVecInt0);
      // Undeclared exception!
      try { 
        dotSearchTracing0.learn(cBClause0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not implemented yet!
         //
         verifyException("org.sat4j.minisat.constraints.cnf.CBClause", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DotSearchTracing<Solver<CardinalityDataStructureYanMax>> dotSearchTracing0 = new DotSearchTracing<Solver<CardinalityDataStructureYanMax>>("*.)v]=_e5=cn");
      // Undeclared exception!
      try { 
        dotSearchTracing0.learn((IConstr) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.DotSearchTracing", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DotSearchTracing<Object> dotSearchTracing0 = new DotSearchTracing<Object>("YHC*1U zi(m<;");
      BinaryClauses binaryClauses0 = new BinaryClauses((ILits) null, (-1108));
      // Undeclared exception!
      try { 
        dotSearchTracing0.enqueueing(1203, binaryClauses0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not implemented yet!
         //
         verifyException("org.sat4j.minisat.constraints.cnf.BinaryClauses", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DotSearchTracing<String> dotSearchTracing0 = new DotSearchTracing<String>("");
      UnitClause unitClause0 = new UnitClause((-84));
      // Undeclared exception!
      try { 
        dotSearchTracing0.enqueueing((-611), unitClause0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.DotSearchTracing", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DotSearchTracing<CardinalityDataStructureYanMax> dotSearchTracing0 = new DotSearchTracing<CardinalityDataStructureYanMax>("");
      Lbool lbool0 = Lbool.FALSE;
      // Undeclared exception!
      try { 
        dotSearchTracing0.end(lbool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.DotSearchTracing", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BinaryClauses binaryClauses0 = new BinaryClauses((ILits) null, (-2120667457));
      DotSearchTracing<Object> dotSearchTracing0 = new DotSearchTracing<Object>("");
      // Undeclared exception!
      try { 
        dotSearchTracing0.conflictFound((IConstr) binaryClauses0, (-2802), (-2105459968));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not implemented yet!
         //
         verifyException("org.sat4j.minisat.constraints.cnf.BinaryClauses", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DotSearchTracing<Object> dotSearchTracing0 = new DotSearchTracing<Object>("green");
      // Undeclared exception!
      try { 
        dotSearchTracing0.conflictFound((IConstr) null, 845, 845);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.DotSearchTracing", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DotSearchTracing<String> dotSearchTracing0 = new DotSearchTracing<String>("");
      // Undeclared exception!
      try { 
        dotSearchTracing0.conflictFound(2793);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.DotSearchTracing", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DotSearchTracing<String> dotSearchTracing0 = new DotSearchTracing<String>("");
      // Undeclared exception!
      try { 
        dotSearchTracing0.assuming(65535);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.DotSearchTracing", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DotSearchTracing<Integer> dotSearchTracing0 = null;
      try {
        dotSearchTracing0 = new DotSearchTracing<Integer>((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DotSearchTracing<CardinalityDataStructureYanMax> dotSearchTracing0 = new DotSearchTracing<CardinalityDataStructureYanMax>("Vq(");
      String string0 = dotSearchTracing0.map((-506));
      assertEquals("-506", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DotSearchTracing<Object> dotSearchTracing0 = new DotSearchTracing<Object>("<s8p:K]`");
      dotSearchTracing0.enqueueing((-2123649662), (IConstr) null);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DotSearchTracing<CardinalityDataStructureYanMax> dotSearchTracing0 = new DotSearchTracing<CardinalityDataStructureYanMax>("Vq(");
      dotSearchTracing0.adding((-2120674199));
      dotSearchTracing0.propagating(1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DotSearchTracing<CardinalityDataStructureYanMax> dotSearchTracing0 = new DotSearchTracing<CardinalityDataStructureYanMax>("Vq(");
      dotSearchTracing0.propagating(1);
      dotSearchTracing0.propagating(1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Integer integer0 = Integer.valueOf(1);
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      hashMap0.put(integer0, "");
      DotSearchTracing<String> dotSearchTracing0 = new DotSearchTracing<String>("assuming ");
      dotSearchTracing0.setMapping(hashMap0);
      String string0 = dotSearchTracing0.map((-1));
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      Integer integer0 = Integer.valueOf(1);
      hashMap0.put(integer0, "=OJR4 =T'ER");
      DotSearchTracing<String> dotSearchTracing0 = new DotSearchTracing<String>(":y`[");
      dotSearchTracing0.setMapping(hashMap0);
      String string0 = dotSearchTracing0.map(1);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DotSearchTracing<String> dotSearchTracing0 = new DotSearchTracing<String>("org.sat4j.tools.SolverDecorator");
      dotSearchTracing0.conflictFound(0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      UnitPropagationListener unitPropagationListener0 = mock(UnitPropagationListener.class, new ViolatedAssumptionAnswer());
      ILits iLits0 = mock(ILits.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(iLits0).valueToString(anyInt());
      IVecInt iVecInt0 = mock(IVecInt.class, new ViolatedAssumptionAnswer());
      doReturn(11).when(iVecInt0).size();
      OriginalWLClause originalWLClause0 = OriginalWLClause.brandNewClause(unitPropagationListener0, iLits0, iVecInt0);
      DotSearchTracing<String> dotSearchTracing0 = new DotSearchTracing<String>("3=ECz/{)L");
      dotSearchTracing0.learn(originalWLClause0);
      assertTrue(originalWLClause0.canBeSatisfiedByCountingLiterals());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DotSearchTracing<Object> dotSearchTracing0 = new DotSearchTracing<Object>("-2123649662");
      Constr constr0 = Constr.TAUTOLOGY;
      dotSearchTracing0.conflictFound((IConstr) constr0, (-2123649662), (-2558));
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      DotSearchTracing<String> dotSearchTracing0 = new DotSearchTracing<String>(":y`[");
      dotSearchTracing0.setMapping(hashMap0);
      String string0 = dotSearchTracing0.map(1);
      assertEquals("1", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BinaryClauses binaryClauses0 = new BinaryClauses((ILits) null, (-2120667457));
      DotSearchTracing<String> dotSearchTracing0 = new DotSearchTracing<String>("");
      dotSearchTracing0.delete(binaryClauses0);
      assertFalse(binaryClauses0.simplify());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DotSearchTracing<CardinalityDataStructureYanMax> dotSearchTracing0 = new DotSearchTracing<CardinalityDataStructureYanMax>(", style = bold]");
      // Undeclared exception!
      try { 
        dotSearchTracing0.backtracking((-2123649662));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.sat4j.core.Vec", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DotSearchTracing<String> dotSearchTracing0 = new DotSearchTracing<String>("Lj95&[0mxh$D");
      dotSearchTracing0.beginLoop();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DotSearchTracing<Object> dotSearchTracing0 = new DotSearchTracing<Object>("conflict during propagation");
      LightFactory lightFactory0 = LightFactory.instance();
      ISolver iSolver0 = lightFactory0.defaultSolver();
      dotSearchTracing0.solutionFound((int[]) null, iSolver0);
      assertFalse(iSolver0.isDBSimplificationAllowed());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DotSearchTracing<Object> dotSearchTracing0 = new DotSearchTracing<Object>("\t\"27\"[abel=\"27, shape=circle, color=blue, style=filled]");
      Constr constr0 = Constr.TAUTOLOGY;
      dotSearchTracing0.enqueueing(864, constr0);
  }
}
