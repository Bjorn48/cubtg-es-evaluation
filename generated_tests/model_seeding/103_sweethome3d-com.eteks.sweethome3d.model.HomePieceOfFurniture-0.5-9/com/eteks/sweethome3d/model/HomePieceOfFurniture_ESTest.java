/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 17:59:43 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.CatalogDoorOrWindow;
import com.eteks.sweethome3d.model.CatalogLight;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.DoorOrWindow;
import com.eteks.sweethome3d.model.FurnitureCategory;
import com.eteks.sweethome3d.model.HomeDoorOrWindow;
import com.eteks.sweethome3d.model.HomeFurnitureGroup;
import com.eteks.sweethome3d.model.HomeLight;
import com.eteks.sweethome3d.model.HomePieceOfFurniture;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.Level;
import com.eteks.sweethome3d.model.Light;
import com.eteks.sweethome3d.model.LightSource;
import com.eteks.sweethome3d.model.PieceOfFurniture;
import com.eteks.sweethome3d.model.Sash;
import com.eteks.sweethome3d.model.TextStyle;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.math.BigDecimal;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomePieceOfFurniture_ESTest extends HomePieceOfFurniture_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[0] = lightSource0;
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setElevation(0.3926991F);
      homeLight0.getY();
      homeLight0.isBackFaceShown();
      homeLight0.getElevation();
      homeLight0.isPointAt((-1.0F), (-886.0F), 1.0F);
      homeLight1.isTopRightPointAt((-196), (-1.0F), 250.391F);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[0] = lightSource0;
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", false, false, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setElevation(0.3926991F);
      homeLight0.getY();
      homeLight0.isBackFaceShown();
      homeLight0.getElevation();
      homeLight0.isPointAt((-1.0F), (-886.0F), 1.0F);
      homeLight0.isTopRightPointAt((-196), (-1.0F), 250.391F);
      homeLight0.isResizable();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[0] = lightSource0;
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.getPriceValueAddedTaxIncluded();
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setElevation(0.3926991F);
      homeLight1.getElevation();
      homeLight0.isPointAt(654, 250.391F, 250.391F);
      homeLight0.isModelMirrored();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", "", (Content) null, (Content) null, (Content) null, 654, 654, (-886.0F), 1.0F, false, lightSourceArray0, (float[][]) null, ")", false, true, true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.getY();
      Float float1 = new Float((double) 654);
      homeLight1.setShininess(float1);
      homeLight0.isBackFaceShown();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight0.getDescription();
      HomeLight homeLight2 = new HomeLight(homeLight1);
      homeLight0.setNameAngle((-196));
      homeLight1.setNameYOffset(1218.695F);
      homeLight1.setNameYOffset(1.0F);
      FileSystemHandling.shouldAllThrowIOExceptions();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.NAME;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[0] = lightSource0;
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", false, false, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setElevation(0.3926991F);
      homeLight0.getY();
      homeLight0.isBackFaceShown();
      homeLight0.getElevation();
      // Undeclared exception!
      try { 
        homeLight0.setWidth((-1.0F));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      Float.min(1.0F, (-2903.233F));
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setElevation(0.3926991F);
      homeLight0.isBackFaceShown();
      homeLight1.isMovable();
      homeLight1.isNameCenterPointAt(1.0F, 327.0F, 1.0F);
      homeLight0.intersectsRectangle(0.3926991F, (-2903.233F), 1.0F, 770.0F);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[6];
      lightSourceArray0[0] = lightSource0;
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", "SF!~#pX06L/k9D6~.c", (Content) null, (Content) null, (Content) null, 250.391F, (-196), (-196), (-196), false, lightSourceArray0, (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setElevation((-1.0F));
      homeLight0.getY();
      homeLight0.isBackFaceShown();
      homeLight1.getElevation();
      homeLight1.setY(1.0F);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Float float0 = new Float(0.0);
      Float.min(1.0F, 1.0F);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[7];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.setCategory((FurnitureCategory) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setElevation(0.3926991F);
      homeLight1.isMovable();
      HomePieceOfFurniture homePieceOfFurniture0 = homeLight1.clone();
      homePieceOfFurniture0.getValueAddedTax();
      homePieceOfFurniture0.getValueAddedTaxPercentage();
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      linkedList0.add(homePieceOfFurniture0);
      homePieceOfFurniture0.isTopRightPointAt((-1.0F), 364.6862F, (-1.2285F));
      homeLight0.isBottomLeftPointAt(1696.67F, 250.391F, (-2188.2598F));
      homeLight1.getColor();
      Random.setNextRandom((-2147044153));
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 654, (-196), float0);
      float float1 = new Integer((-196));
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[9];
      Float float2 = new Float(0.0F);
      LightSource lightSource1 = new LightSource(0.0F, 0.0F, 1.0F, (-1068), float2);
      lightSourceArray0[0] = lightSource1;
      LightSource lightSource2 = new LightSource(0.0F, 1.0F, 0.0F, (-1068));
      lightSourceArray0[1] = lightSource2;
      Float float3 = new Float(1.0F);
      LightSource lightSource3 = new LightSource(0.3926991F, (-837.91394F), 0.0F, 0, float3);
      lightSourceArray0[2] = lightSource3;
      LightSource lightSource4 = new LightSource(0.0F, 0.0F, (-2311.0F), (-1355), float2);
      lightSourceArray0[3] = lightSource4;
      Float float4 = new Float(0.3926991F);
      LightSource lightSource5 = new LightSource((-3624.272F), 280.11F, 0, (-1355), float4);
      lightSourceArray0[4] = lightSource5;
      Float float5 = new Float((double) (-3624.272F));
      LightSource lightSource6 = new LightSource(1.0F, (-1881.78F), 0.0F, 1010, float5);
      lightSourceArray0[5] = lightSource6;
      Float float6 = new Float(1.0F);
      LightSource lightSource7 = new LightSource(0.0F, 0, (-1655.0F), (-1068), float6);
      lightSourceArray0[6] = lightSource7;
      LightSource lightSource8 = new LightSource(0.0F, (-1881.78F), 0, (-1355));
      lightSourceArray0[7] = lightSource8;
      Float float7 = new Float((-4363.6136908984));
      LightSource lightSource9 = new LightSource((-1813.5615F), 1.0F, 0.0F, 654, float7);
      lightSourceArray0[8] = lightSource9;
      BigDecimal bigDecimal1 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight("com.eteks.sweethome3d.model.Level", "#wo4@|", "_B=\"GGsUB", (Content) null, (Content) null, (Content) null, 0.0F, 0.0F, 0.0F, 0.0F, true, lightSourceArray0, (float[][]) null, "X", true, false, false, bigDecimal1, bigDecimal1);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.getNameAngle();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Float float0 = new Float(0.0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("", "com.eteks.sweethome3d.model.CatalogPieceOfFurniture", "8D]Jl`-U>I2^", (Content) null, (Content) null, (Content) null, (-3631.3F), 1.0F, 0.0F, (-1609.2385F), false, lightSourceArray0, (float[][]) null, "", false, false, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      Integer.valueOf(46);
      Integer.valueOf(2110);
      Integer.valueOf(33);
      Integer integer0 = Integer.valueOf(33);
      homeLight0.setColor(integer0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setElevation(250.391F);
      homeLight0.isBackFaceShown();
      homeLight0.setNameVisible(true);
      HomePieceOfFurniture homePieceOfFurniture0 = homeLight0.clone();
      homePieceOfFurniture0.move(46, 0.0F);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[1];
      lightSourceArray0[0] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "com.eteks.sweethome3d.model.CatalogPieceOfFurniture", "8D]Jl`-U>bI2^", (Content) null, (Content) null, (Content) null, (-3631.3F), 1.0F, 0.0F, (-1609.2385F), false, lightSourceArray0, (float[][]) null, "", false, false, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setElevation(250.391F);
      homeLight0.getY();
      homeLight0.isBackFaceShown();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Float.sum(1.0F, 5);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 5, 5, (-885.78705F), 1.0F, true, lightSourceArray0, (float[][]) null, "", true, true, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.clone();
      homeLight1.setElevation((-885.768F));
      homeLight0.isTopRightPointAt(5, 1.0F, 270.99F);
      homeLight0.clone();
      homeLight0.isBottomLeftPointAt(5, (-885.768F), 5);
      homeLight0.setModelMirrored(true);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 654, (-196), float0);
      Float.min(654, (-2903.233F));
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.isBackFaceShown();
      homeLight1.isMovable();
      homeLight1.isNameCenterPointAt(654, (-2903.233F), (-2903.233F));
      homeLight1.getNameYOffset();
      homeLight1.setModelMirrored(false);
      homeLight0.setX(2187.42F);
      homeLight1.isTexturable();
      homeLight1.containsPoint(654, (-2903.233F), 0.0F);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 1, 1, 1, 1, false, lightSourceArray0, (float[][]) null, "", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeLight homeLight1 = homeLight0.clone();
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      linkedList0.add((HomePieceOfFurniture) homeLight1);
      homeLight0.getPlanIcon();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", ")", (Content) null, (Content) null, (Content) null, 233, 233, (-885.78705F), 1.0F, false, lightSourceArray0, (float[][]) null, ")", false, true, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isBackFaceShown();
      homeLight0.getLightSources();
      HomeLight homeLight1 = new HomeLight(homeLight0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight1.isBottomRightPointAt(1.0F, 579.4F, (-885.78705F));
      HomeLight homeLight2 = new HomeLight(homeLight0);
      // Undeclared exception!
      try { 
        homeLight2.setModelMirrored(false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      LightSource[] lightSourceArray0 = new LightSource[7];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06yL/k9D6~.c", "SF!~#pX06yL/k9D6~.c", "SF!~#pX06yL/k9D6~.c", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "SF!~#pX06yL/k9D6~.c", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isPointAt(250.391F, (-1.0F), (-1.0F));
      homeLight0.isBottomLeftPointAt((-1.0F), (-1.0F), (-1.0F));
      homeLight0.getLevel();
      homeLight0.isAtLevel((Level) null);
      homeLight0.getNameStyle();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Float float0 = new Float(1448.07377);
      BigDecimal bigDecimal0 = new BigDecimal((double) (-196));
      LightSource[] lightSourceArray0 = new LightSource[1];
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)14;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      CatalogLight catalogLight0 = new CatalogLight("", "", ".", (Content) null, (Content) null, (Content) null, 654, 654, 654, 1.0F, true, lightSourceArray0, (float[][]) null, "", true, false, true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isTopLeftPointAt((-196), 174.0F, 654);
      Float float1 = new Float((float) (-196));
      homeLight0.isBackFaceShown();
      homeLight0.getValueAddedTax();
      homeLight0.clone();
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.getCatalogId();
      homeLight1.getAngle();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Float float0 = new Float(0.0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, 250.391F, (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, true, bigDecimal0, bigDecimal0);
      CatalogLight catalogLight1 = new CatalogLight("", "fDZ+M>\"(", "", (Content) null, (Content) null, (Content) null, (-1.0F), 250.391F, 250.391F, (-1.0F), true, lightSourceArray0, (float[][]) null, "SF!~#pX06L/k9D6~.c", true, false, true, bigDecimal0, bigDecimal0);
      BigDecimal bigDecimal1 = BigDecimal.ONE;
      CatalogLight catalogLight2 = new CatalogLight("Esx6}@\"=0E", (String) null, (String) null, (Content) null, (Content) null, (-1.0F), 250.391F, (-2759.971F), (-2759.971F), false, lightSourceArray0, (float[][]) null, "SF!~#pX06L/k9D6~.c", true, bigDecimal1, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight2);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setElevation(1656.0F);
      homeLight1.isBackFaceShown();
      homeLight0.isNameCenterPointAt(0.3926991F, 555.8F, (-1337.2F));
      homeLight0.setName("");
      homeLight0.getDescription();
      homeLight0.getModelRotation();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Float float0 = new Float(0.2078757310081673);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[0] = lightSource0;
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-196), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", false, false, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setElevation((-886.0F));
      homeLight0.getY();
      homeLight0.isBackFaceShown();
      homeLight0.getElevation();
      homeLight0.isPointAt((-1.0F), (-886.0F), 1.0F);
      homeLight0.isTopRightPointAt((-196), (-1.0F), 250.391F);
      homeLight0.getPrice();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DoorOrWindow doorOrWindow0 = mock(DoorOrWindow.class, new ViolatedAssumptionAnswer());
      doReturn((Sash[]) null).when(doorOrWindow0).getSashes();
      doReturn(0.0F).when(doorOrWindow0).getWallDistance();
      doReturn(0.0F).when(doorOrWindow0).getWallThickness();
      doReturn((Integer) null).when(doorOrWindow0).getColor();
      doReturn((String) null).when(doorOrWindow0).getCurrency();
      doReturn(0.0F).when(doorOrWindow0).getDepth();
      doReturn((String) null).when(doorOrWindow0).getDescription();
      doReturn(0.0F).when(doorOrWindow0).getElevation();
      doReturn(0.0F).when(doorOrWindow0).getHeight();
      doReturn((Content) null).when(doorOrWindow0).getIcon();
      doReturn((Content) null).when(doorOrWindow0).getModel();
      doReturn((float[][]) null).when(doorOrWindow0).getModelRotation();
      doReturn((String) null).when(doorOrWindow0).getName();
      doReturn((Content) null).when(doorOrWindow0).getPlanIcon();
      doReturn((BigDecimal) null).when(doorOrWindow0).getPrice();
      doReturn((String) null).when(doorOrWindow0).getStaircaseCutOutShape();
      doReturn((BigDecimal) null).when(doorOrWindow0).getValueAddedTaxPercentage();
      doReturn(0.0F).when(doorOrWindow0).getWidth();
      doReturn(false).when(doorOrWindow0).isBackFaceShown();
      doReturn(false).when(doorOrWindow0).isDeformable();
      doReturn(false).when(doorOrWindow0).isDoorOrWindow();
      doReturn(false).when(doorOrWindow0).isMovable();
      doReturn(false).when(doorOrWindow0).isResizable();
      doReturn(false).when(doorOrWindow0).isTexturable();
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(doorOrWindow0);
      homeDoorOrWindow0.clone();
      HomeLight homeLight0 = null;
      try {
        homeLight0 = new HomeLight((Light) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Float float0 = new Float(1448.07377);
      LightSource lightSource0 = new LightSource(654, 654, 7.2618704F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", ".", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 7.2618704F, false, lightSourceArray0, (float[][]) null, "", false, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      Integer integer0 = new Integer((-196));
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setShininess(float0);
      Float float1 = new Float((float) (-196));
      homeLight0.setPower((-885.78705F));
      homeLight0.setShininess(float0);
      homeLight0.isBackFaceShown();
      HomeLight homeLight1 = new HomeLight(catalogLight0);
      HomeLight homeLight2 = homeLight1.clone();
      Level level0 = new Level("com.eteks.sweethome3d.model.HomeTexture", 654, 7.2618704F, (-1.0F));
      homeLight1.setLevel(level0);
      homeLight2.setElevation((-196));
      homeLight2.setNameAngle((-196));
      homeLight0.setDescription("");
      homeLight0.getCatalogId();
      homeLight1.setColor(integer0);
      homeLight2.setNameAngle(654);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      LightSource[] lightSourceArray0 = new LightSource[7];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "SF!~#pX06L/k9D6~.c", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isPointAt(250.391F, (-1.0F), (-1.0F));
      homeLight0.isBottomLeftPointAt((-1.0F), (-1.0F), (-1.0F));
      homeLight0.getCatalogId();
      homeLight0.isPointAt((-1.0F), (-1.0F), 633.6F);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Float float0 = new Float(0.0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setElevation(0.3926991F);
      homeLight0.isBackFaceShown();
      homeLight1.isNameCenterPointAt(654, 250.391F, 654);
      homeLight0.isResizable();
      TextStyle textStyle0 = new TextStyle((-1154.0F));
      homeLight1.setNameStyle(textStyle0);
      Level level0 = new Level("", 0.0F, 654, (-886.0F));
      Level level1 = level0.clone();
      homeLight0.isAtLevel(level1);
      homeLight0.getModel();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Float float0 = new Float((double) 654);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[7];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", ")", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 654, false, lightSourceArray0, (float[][]) null, ")", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isBackFaceShown();
      Level level0 = new Level(")", 654, 654, (-196));
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      bigDecimal0.stripTrailingZeros();
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[0] = lightSource0;
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setElevation(1.0F);
      homeLight0.getY();
      homeLight0.isBackFaceShown();
      homeLight0.getElevation();
      homeLight0.isPointAt((-1.0F), (-886.0F), 1.0F);
      homeLight1.getValueAddedTax();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Integer integer0 = new Integer(1);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 1, 1, (-885.78705F), 1.0F, true, lightSourceArray0, (float[][]) null, "", true, true, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      BigDecimal bigDecimal1 = new BigDecimal((-885.78705F));
      homeLight0.isBottomRightPointAt(1, 1, (-4335.8438F));
      homeLight0.getValueAddedTax();
      homeLight0.setMovable(false);
      homeLight0.isBottomLeftPointAt(1, 886.5F, (-4335.8438F));
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.isTopLeftPointAt((-886.0F), 326.6073F, (-2283.8945F));
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Float float0 = new Float(1448.07377);
      Float.max(654, 654);
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("", "", ".", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 654, true, lightSourceArray0, (float[][]) null, "", true, false, true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isTopLeftPointAt((-196), 174.0F, 654);
      Float float1 = new Float((float) (-196));
      HomeLight homeLight1 = homeLight0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeLight0.removePropertyChangeListener(propertyChangeListenerProxy0);
      homeLight1.isNameCenterPointAt(654, 327.0F, 125.1955F);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Float.sum(1.0F, 5);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 5, 5, (-885.78705F), 1.0F, true, lightSourceArray0, (float[][]) null, "", true, true, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.clone();
      homeLight1.setElevation((-885.768F));
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight0.isBottomLeftPointAt(5, (-885.768F), 5);
      homeLight0.setModelMirrored(true);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", (Content) null, (Content) null, (Content) null, 250.391F, 1040.8F, (-196), 250.391F, true, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setElevation(1040.8F);
      homeLight0.isPointAt((-1.0F), 1040.8F, 1.0F);
      homeLight0.isBottomLeftPointAt((-1.0F), 398.87F, 1040.8F);
      HomePieceOfFurniture.Property.values();
      homeLight0.isModelMirrored();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 654, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Float.max((-196), 654);
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[5] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("Esx<N@\"=0E", ")", "Esx<N@\"=0E", (Content) null, (Content) null, (Content) null, 1.0F, 2.0F, 2188.4F, 250.391F, false, lightSourceArray0, (float[][]) null, "|@65WF27MbgwWt{", false, false, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setElevation((-4634.881F));
      homeLight0.getY();
      homeLight0.isBackFaceShown();
      homeLight0.getElevation();
      homeLight0.isPointAt(250.391F, (-6970.571F), 2188.4F);
      homeLight0.isTopRightPointAt(1.0F, 654, 1.0F);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Float float0 = new Float(1448.07377);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", ")", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 1.0F, false, lightSourceArray0, (float[][]) null, ")", false, true, true, bigDecimal0, bigDecimal0);
      Integer integer0 = new Integer((-196));
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1.5.0_16");
      Float float1 = new Float(1448.07377);
      homeLight0.setPower((-885.78705F));
      homeLight0.setNameXOffset(1.0F);
      HomeLight homeLight1 = homeLight0.clone();
      Float float2 = new Float((float) (-196));
      homeLight1.isBackFaceShown();
      homeLight0.setMovable(false);
      homeLight0.setElevation((-196));
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight1.isNameCenterPointAt((-1315.357F), (-2359.46F), 0.0F);
      homeLight0.isResizable();
      homeLight1.getPlanIcon();
      homeLight1.isBottomLeftPointAt((-1315.357F), (-1315.357F), (-3880.0F));
      HomeLight homeLight2 = null;
      try {
        homeLight2 = new HomeLight((Light) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Float float0 = new Float(0.0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("", "com.eteks.sweethome3d.model.CatalogPieceOfFurniture", "8D]Jl`-U>I2^", (Content) null, (Content) null, (Content) null, (-3631.3F), 1.0F, 0.0F, (-1609.2385F), false, lightSourceArray0, (float[][]) null, "", false, false, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setElevation(250.391F);
      homeLight1.setNameYOffset((-465.7F));
      homeLight0.setNameYOffset(1879.1F);
      homeLight0.isBottomRightPointAt(770.0F, 1.0F, 1907.9F);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Float float0 = new Float(0.0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("", "com.eteks.sweethome3d.model.CatalogPieceOfFurniture", "8D]Jl`-U>bI2^", (Content) null, (Content) null, (Content) null, (-3631.3F), 1.0F, 0.0F, (-1609.2385F), false, lightSourceArray0, (float[][]) null, "", false, false, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setElevation(250.391F);
      homeLight0.isBackFaceShown();
      homeLight0.setNameVisible(true);
      homeLight0.clone();
      homeLight0.getElevation();
      homeLight0.isDeformable();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Float float0 = new Float(1448.07377);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", ")", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 1.0F, false, lightSourceArray0, (float[][]) null, ")", false, true, true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1.5.0_16");
      Float float1 = new Float((float) (-196));
      homeLight0.setPower((-885.78705F));
      Float float2 = new Float((double) 654);
      homeLight0.setShininess(float2);
      homeLight0.isBackFaceShown();
      catalogLight0.getLightSources();
      HomeLight homeLight1 = new HomeLight(catalogLight0);
      homeLight0.setElevation(654);
      homeLight1.getY();
      homeLight0.isBackFaceShown();
      homeLight0.getElevation();
      homeLight1.isBottomLeftPointAt(1.0F, 1235.0F, (-2253.676F));
      HomePieceOfFurniture.Property.values();
      homeLight1.getTexture();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Float float0 = new Float(638.2);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[0] = lightSource0;
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.getPriceValueAddedTaxIncluded();
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setElevation(0.3927F);
      homeLight1.getElevation();
      homeLight0.isPointAt(654, 250.391F, 250.391F);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 1, 1, (-886.0F), 1, false, lightSourceArray0, (float[][]) null, "", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight0.isTopRightPointAt((-886.0F), (-1192.1F), (-886.0F));
      homeLight0.clone();
      homeLight0.clone();
      homeLight0.isTexturable();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Float float0 = new Float(0.0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      BigDecimal bigDecimal1 = BigDecimal.ZERO;
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("@J#&8J-NU78L", "7\"", 1042, "}(j'ix", uRLStreamHandler0);
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      Sash[] sashArray0 = new Sash[0];
      BigDecimal bigDecimal2 = new BigDecimal((-742));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("}(j'ix", (String) null, "@J#&8J-NU78L", resourceURLContent0, resourceURLContent0, resourceURLContent0, 1.0F, 3.4028235E38F, 729.3724F, (-1.0F), true, 3.4028235E38F, (-1.0F), sashArray0, (float[][]) null, "}(j'ix", false, bigDecimal2, bigDecimal2);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogDoorOrWindow0);
      homePieceOfFurniture0.clone();
      homePieceOfFurniture0.getValueAddedTax();
      homePieceOfFurniture0.getValueAddedTaxPercentage();
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      linkedList0.add(homePieceOfFurniture0);
      HomeFurnitureGroup homeFurnitureGroup0 = null;
      try {
        homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "NAME_ANGLE");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "NC:+b@nO");
      Integer integer0 = new Integer(1);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 1, 1, (-885.78705F), 1, false, lightSourceArray0, (float[][]) null, "", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Float float0 = new Float((float) 1);
      homeLight0.setShininess(float0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.getGroundElevation();
      HomeLight homeLight2 = new HomeLight(homeLight0);
      homeLight2.setAngle(2.0F);
      homeLight2.clone();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      LightSource[] lightSourceArray0 = new LightSource[7];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "SF!~#pX06L/k9D6~.c", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isBackFaceShown();
      homeLight0.setName("");
      homeLight0.getDescription();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Float float0 = new Float(0.0);
      Float.min(654, 2.0F);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight(")", "l&a_5M2ADr\"re9'H/eY", "", (Content) null, (Content) null, (Content) null, 654, 654, (-886.0F), 1.0F, false, lightSourceArray0, (float[][]) null, ")", false, false, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      bigDecimal0.scale();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1.5.0_16");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.getY();
      homeLight1.isBackFaceShown();
      homeLight0.containsPoint((-1.0F), 654, (-886.0F));
      homeLight0.getDescription();
      HomeLight homeLight2 = new HomeLight(homeLight0);
      homeLight2.setNameYOffset(1.0F);
      homeLight0.getCurrency();
      homeLight0.isVisible();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 1, 1, (-886.0F), 1, false, lightSourceArray0, (float[][]) null, "", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight0.isTopRightPointAt(1, 1, (-886.0F));
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.clone();
      homeLight1.isPointAt(1, (-886.0F), 1.0F);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      bigDecimal0.toPlainString();
      LightSource[] lightSourceArray0 = new LightSource[7];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-890.4281F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\",=0E", true, true, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.containsPoint(0.0F, (-3102.2864F), (-1.0F));
      homeLight0.setElevation((-1.0F));
      homeLight0.setVisible(false);
      homeLight0.setDescription("fDZ+M>\"(");
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Float float0 = new Float(1448.07377);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", "", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 1.0F, false, lightSourceArray0, (float[][]) null, ")", false, true, true, bigDecimal0, bigDecimal0);
      Integer integer0 = new Integer((-196));
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1.5.0_16");
      Float float1 = new Float((float) (-196));
      homeLight0.setPower((-885.78705F));
      Float float2 = new Float((-1694.0));
      homeLight0.setShininess(float2);
      homeLight0.isBackFaceShown();
      catalogLight0.getLightSources();
      HomeLight homeLight1 = new HomeLight(catalogLight0);
      homeLight1.isPointAt((-315.23F), (-196), (-286.76138F));
      homeLight0.isTopRightPointAt(1537.0F, (-1.0F), (-1018.0F));
      HomeLight homeLight2 = homeLight1.clone();
      homeLight2.isBackFaceShown();
      homeLight2.getGroundElevation();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", (Content) null, (Content) null, (Content) null, 250.391F, (-887.5109F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "SF!~#pX06L/k9D6~.c", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.getPlanIcon();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      CatalogLight catalogLight0 = new CatalogLight("3700-", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-196), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", false, false, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setElevation((-886.0F));
      homeLight0.getY();
      homeLight0.isBackFaceShown();
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.getElevation();
      homeLight0.isBottomLeftPointAt(0.0F, 0.5F, 0.5F);
      HomePieceOfFurniture.Property.values();
      homeLight1.getTexture();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      LightSource[] lightSourceArray0 = new LightSource[9];
      Float float0 = new Float(0.0F);
      LightSource lightSource0 = new LightSource(0.0F, 0.0F, 1.0F, (-1068), float0);
      lightSourceArray0[0] = lightSource0;
      LightSource lightSource1 = new LightSource(0.0F, 1.0F, 0.0F, (-1068));
      lightSourceArray0[1] = lightSource1;
      Float float1 = new Float(1.0F);
      LightSource lightSource2 = new LightSource(0.3926991F, (-837.91394F), 0.0F, 0, float1);
      lightSourceArray0[2] = lightSource2;
      LightSource lightSource3 = new LightSource(0.0F, 0.0F, (-2311.0F), (-1355), float0);
      lightSourceArray0[3] = lightSource3;
      Float float2 = new Float(0.3926991F);
      LightSource lightSource4 = new LightSource((-3624.272F), 280.11F, 0, (-1355), float2);
      lightSourceArray0[4] = lightSource4;
      Float float3 = new Float((double) (-3624.272F));
      LightSource lightSource5 = new LightSource(1.0F, (-1881.78F), 0.0F, 1010, float3);
      lightSourceArray0[5] = lightSource5;
      Float float4 = new Float(1.0F);
      LightSource lightSource6 = new LightSource(0.0F, 0, (-1655.0F), (-1068), float4);
      lightSourceArray0[6] = lightSource6;
      LightSource lightSource7 = new LightSource(0.0F, (-1881.78F), 0, (-1355));
      lightSourceArray0[7] = lightSource7;
      Float float5 = new Float((-4363.6136908984));
      LightSource lightSource8 = new LightSource((-1813.5615F), 1.0F, 0.0F, 654, float5);
      lightSourceArray0[8] = lightSource8;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight("com.eteks.sweethome3d.model.Level", "#wo4@|", "_B=\"GGsUB", (Content) null, (Content) null, (Content) null, 0.0F, 0.0F, 0.0F, 0.0F, true, lightSourceArray0, (float[][]) null, "X", true, false, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setWidth(1.0F);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Float float0 = new Float(1448.07377);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", ")", (Content) null, (Content) null, (Content) null, 708, 708, (-885.78705F), 1.0F, true, lightSourceArray0, (float[][]) null, ")", true, true, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isBackFaceShown();
      homeLight0.getLightSources();
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setElevation((-885.78705F));
      homeLight0.setElevation(1.0F);
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeLight homeLight2 = new HomeLight(catalogLight0);
      homeLight0.setNameYOffset(2177.8855F);
      homeLight1.clone();
      homeLight1.isTopLeftPointAt(0.0F, (-4160.0F), (-4160.0F));
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource((-196), (-196), 1.0F, 654);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[0] = lightSource0;
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setElevation(0.3926991F);
      homeLight0.getY();
      homeLight0.isBackFaceShown();
      homeLight0.getElevation();
      homeLight1.setX((-410.98715F));
      homeLight1.getLevel();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight(")", "l&a_5M2ADr\"re9'H/eY", "", (Content) null, (Content) null, (Content) null, 654, 654, (-886.0F), 1.0F, false, lightSourceArray0, (float[][]) null, ")", false, false, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      bigDecimal0.scale();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1.5.0_16");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.getY();
      Float float1 = new Float((-1694.0));
      homeLight0.setShininess(float1);
      homeLight1.isBackFaceShown();
      homeLight0.containsPoint((-1.0F), 654, (-886.0F));
      homeLight0.getDescription();
      HomeLight homeLight2 = new HomeLight(homeLight0);
      homeLight2.setNameYOffset(1.0F);
      homeLight0.setNameYOffset((-4634.881F));
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Float float0 = new Float(1448.07377);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[5];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", "", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 1.0F, false, lightSourceArray0, (float[][]) null, ")", false, true, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      Integer integer0 = new Integer((-196));
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1.5.0_16");
      homeLight0.isTopRightPointAt((-10.55F), 1.0F, (-885.78705F));
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.getY();
      Float float1 = new Float((-1694.0));
      homeLight0.setShininess(float1);
      homeLight1.isBackFaceShown();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight0.getDescription();
      HomeLight homeLight2 = new HomeLight(homeLight0);
      homeLight2.setNameAngle((-4604.32F));
      homeLight2.setNameYOffset(1.0F);
      homeLight0.setNameYOffset((-4634.881F));
      homeLight1.isBottomRightPointAt(770.0F, (-1.0F), (float) integer0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[0] = lightSource0;
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setElevation(0.3926991F);
      homeLight0.getY();
      homeLight0.isBackFaceShown();
      homeLight0.getElevation();
      homeLight1.setX((-410.98715F));
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", ")", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 1.0F, true, lightSourceArray0, (float[][]) null, ")", true, true, true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setPower(654);
      Float float0 = new Float((double) 1.0F);
      homeLight0.setShininess(float0);
      Integer integer0 = new Integer((-1822));
      HomeLight homeLight1 = new HomeLight(catalogLight0);
      Float float1 = new Float((double) (-885.78705F));
      Float.max((-885.78705F), 1.0F);
      HomeLight homeLight2 = new HomeLight(catalogLight0);
      homeLight0.setShininess(float0);
      Float float2 = new Float(3.5F);
      HomeLight homeLight3 = new HomeLight(homeLight1);
      homeLight3.setPower(0.5F);
      homeLight1.setShininess(float1);
      homeLight1.isBackFaceShown();
      HomeLight homeLight4 = new HomeLight(homeLight3);
      homeLight4.clone();
      homeLight4.setElevation(2142.0024F);
      homeLight1.setNameAngle(0.0F);
      HomeLight homeLight5 = homeLight3.clone();
      homeLight5.setDescription("");
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Integer integer0 = new Integer(1);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      BigDecimal bigDecimal1 = new BigDecimal((-885.78705F));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("c.7_^", (Content) null, (Content) null, (-2283.8945F), (-885.78705F), 326.6073F, (-120.17367F), true, 1, (-4335.8438F), (Sash[]) null, integer0, (float[][]) null, true, 2.217685F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogDoorOrWindow0);
      homePieceOfFurniture0.clone();
      homePieceOfFurniture0.getName();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Float float0 = new Float(0.0);
      Float.min(1.0F, 1.0F);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[7];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.setCategory((FurnitureCategory) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setElevation(0.3926991F);
      homeLight1.isMovable();
      HomePieceOfFurniture homePieceOfFurniture0 = homeLight1.clone();
      homePieceOfFurniture0.getValueAddedTax();
      homePieceOfFurniture0.getValueAddedTaxPercentage();
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      linkedList0.add(homePieceOfFurniture0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, (String) null);
      homeLight1.isResizable();
      homeFurnitureGroup0.getModelRotation();
      homePieceOfFurniture0.setHeight((-376.0625F));
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[1];
      lightSourceArray0[0] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "com.eteks.sweethome3d.model.CatalogPieceOfFurniture", "8D]Jl`-U>bI2^", (Content) null, (Content) null, (Content) null, (-3631.3F), 1.0F, 0.0F, (-1609.2385F), false, lightSourceArray0, (float[][]) null, "", false, false, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setElevation(250.391F);
      homeLight0.isBackFaceShown();
      homeLight0.setNameVisible(true);
      homeLight0.clone();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      LightSource[] lightSourceArray0 = new LightSource[5];
      Float.valueOf((float) (-196));
      Sash[] sashArray0 = new Sash[2];
      Sash sash0 = new Sash((-248.56401F), 592.926F, 1.0F, (-659.1F), 1724.673F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(0.5F, (-196), 0.5F, 1582.57F, (-196));
      sashArray0[1] = sash1;
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow((String) null, "", (String) null, (Content) null, (Content) null, (Content) null, (-248.56401F), 0.14207998F, 592.926F, 876.1341F, false, 592.926F, 498.684F, sashArray0, (float[][]) null, "", true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      HomeDoorOrWindow homeDoorOrWindow1 = homeDoorOrWindow0.clone();
      homeDoorOrWindow1.isDoorOrWindow();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((-202));
      LightSource[] lightSourceArray0 = new LightSource[8];
      CatalogLight catalogLight0 = new CatalogLight("{|8n=t4A?<m", "{|8n=t4A?<m", "{|8n=t4A?<m", (Content) null, (Content) null, (Content) null, 277.9044F, 277.9044F, (-202), 277.9044F, false, lightSourceArray0, (float[][]) null, "{|8n=t4A?<m", false, false, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      Integer integer0 = new Integer((-202));
      Integer.remainderUnsigned((-202), (-202));
      homeLight0.setY((-4387.054F));
      homeLight0.setColor(integer0);
      homeLight0.setColor(integer0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight(")", "l&a_5M2ADr\"re9'H/eY", "", (Content) null, (Content) null, (Content) null, 654, 654, (-886.0F), 1.0F, false, lightSourceArray0, (float[][]) null, ")", false, false, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      bigDecimal0.scale();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1.5.0_16");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.getY();
      homeLight1.isBackFaceShown();
      homeLight0.containsPoint((-1.0F), 654, (-886.0F));
      homeLight0.getDescription();
      HomeLight homeLight2 = new HomeLight(homeLight0);
      homeLight2.setNameYOffset(1.0F);
      homeLight0.getCurrency();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      CatalogLight catalogLight0 = new CatalogLight("{|8n=t4A?<m", "{|8n=t4A?<m", "{|8n=t4A?<m", (Content) null, (Content) null, (Content) null, 250.391F, 250.391F, (-196), 250.391F, false, lightSourceArray0, (float[][]) null, "{|8n=t4A?<m", false, false, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      Integer integer0 = new Integer((-196));
      homeLight0.setX(250.391F);
      Integer.remainderUnsigned((-196), (-196));
      homeLight0.setColor(integer0);
      homeLight0.setColor(integer0);
      homeLight0.getNameXOffset();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", false, false, false, bigDecimal0, bigDecimal0);
      assertNotNull(catalogLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(250.391F, catalogLight0.getWidth(), 0.01F);
      assertEquals((-886.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals("fDZ+M>\"(", catalogLight0.getDescription());
      assertNull(catalogLight0.getGrade());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isMovable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getId());
      assertNull(catalogLight0.getCurrency());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(250.391F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertEquals("Esx6}@\"=0E", catalogLight0.getCreator());
      assertFalse(catalogLight0.isResizable());
      assertEquals((-1.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(8, lightSourceArray0.length);
      
      catalogLight0.setCategory((FurnitureCategory) null);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(250.391F, catalogLight0.getWidth(), 0.01F);
      assertEquals((-886.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals("fDZ+M>\"(", catalogLight0.getDescription());
      assertNull(catalogLight0.getGrade());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isMovable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getId());
      assertNull(catalogLight0.getCurrency());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(250.391F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertEquals("Esx6}@\"=0E", catalogLight0.getCreator());
      assertFalse(catalogLight0.isResizable());
      assertEquals((-1.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(8, lightSourceArray0.length);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertNotNull(homeLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(250.391F, catalogLight0.getWidth(), 0.01F);
      assertEquals((-886.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals("fDZ+M>\"(", catalogLight0.getDescription());
      assertNull(catalogLight0.getGrade());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isMovable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getId());
      assertNull(catalogLight0.getCurrency());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(250.391F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertEquals("Esx6}@\"=0E", catalogLight0.getCreator());
      assertFalse(catalogLight0.isResizable());
      assertEquals((-1.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(250.391F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals((-1.0F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isMovable());
      assertFalse(homeLight0.isResizable());
      assertEquals("", homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(250.391F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("fDZ+M>\"(", homeLight0.getDescription());
      assertEquals(125.1955F, homeLight0.getX(), 0.01F);
      assertEquals((-886.0F), homeLight0.getDepth(), 0.01F);
      assertEquals(250.391F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-443.0F), homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(8, lightSourceArray0.length);
      
      HomeLight homeLight1 = homeLight0.clone();
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotNull(homeLight1);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(250.391F, catalogLight0.getWidth(), 0.01F);
      assertEquals((-886.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals("fDZ+M>\"(", catalogLight0.getDescription());
      assertNull(catalogLight0.getGrade());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isMovable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getId());
      assertNull(catalogLight0.getCurrency());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(250.391F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertEquals("Esx6}@\"=0E", catalogLight0.getCreator());
      assertFalse(catalogLight0.isResizable());
      assertEquals((-1.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(250.391F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals((-1.0F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isMovable());
      assertFalse(homeLight0.isResizable());
      assertEquals("", homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(250.391F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("fDZ+M>\"(", homeLight0.getDescription());
      assertEquals(125.1955F, homeLight0.getX(), 0.01F);
      assertEquals((-886.0F), homeLight0.getDepth(), 0.01F);
      assertEquals(250.391F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-443.0F), homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight1.getName());
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(125.1955F, homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals((-443.0F), homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals("fDZ+M>\"(", homeLight1.getDescription());
      assertFalse(homeLight1.isNameVisible());
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertFalse(homeLight1.isDoorOrWindow());
      assertFalse(homeLight1.isResizable());
      assertNull(homeLight1.getShininess());
      assertEquals((-1.0F), homeLight1.getHeight(), 0.01F);
      assertEquals((-886.0F), homeLight1.getDepth(), 0.01F);
      assertFalse(homeLight1.isMovable());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals(250.391F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals("", homeLight1.getCatalogId());
      assertEquals(250.391F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(250.391F, homeLight1.getWidth(), 0.01F);
      assertEquals(8, lightSourceArray0.length);
      
      homeLight1.setNameYOffset(250.391F);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(250.391F, catalogLight0.getWidth(), 0.01F);
      assertEquals((-886.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals("fDZ+M>\"(", catalogLight0.getDescription());
      assertNull(catalogLight0.getGrade());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isMovable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getId());
      assertNull(catalogLight0.getCurrency());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(250.391F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertEquals("Esx6}@\"=0E", catalogLight0.getCreator());
      assertFalse(catalogLight0.isResizable());
      assertEquals((-1.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(250.391F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals((-1.0F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isMovable());
      assertFalse(homeLight0.isResizable());
      assertEquals("", homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(250.391F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("fDZ+M>\"(", homeLight0.getDescription());
      assertEquals(125.1955F, homeLight0.getX(), 0.01F);
      assertEquals((-886.0F), homeLight0.getDepth(), 0.01F);
      assertEquals(250.391F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-443.0F), homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight1.getName());
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(125.1955F, homeLight1.getX(), 0.01F);
      assertEquals(250.391F, homeLight1.getNameYOffset(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals((-443.0F), homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals("fDZ+M>\"(", homeLight1.getDescription());
      assertFalse(homeLight1.isNameVisible());
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertFalse(homeLight1.isDoorOrWindow());
      assertFalse(homeLight1.isResizable());
      assertNull(homeLight1.getShininess());
      assertEquals((-1.0F), homeLight1.getHeight(), 0.01F);
      assertEquals((-886.0F), homeLight1.getDepth(), 0.01F);
      assertFalse(homeLight1.isMovable());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals(250.391F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals("", homeLight1.getCatalogId());
      assertEquals(250.391F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(250.391F, homeLight1.getWidth(), 0.01F);
      assertEquals(8, lightSourceArray0.length);
      
      HomeLight homeLight2 = homeLight0.clone();
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight0, homeLight2);
      assertNotSame(homeLight2, homeLight1);
      assertNotSame(homeLight2, homeLight0);
      assertNotNull(homeLight2);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight2.equals((Object)homeLight1));
      assertFalse(homeLight2.equals((Object)homeLight0));
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(250.391F, catalogLight0.getWidth(), 0.01F);
      assertEquals((-886.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals("fDZ+M>\"(", catalogLight0.getDescription());
      assertNull(catalogLight0.getGrade());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isMovable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getId());
      assertNull(catalogLight0.getCurrency());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(250.391F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertEquals("Esx6}@\"=0E", catalogLight0.getCreator());
      assertFalse(catalogLight0.isResizable());
      assertEquals((-1.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(250.391F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals((-1.0F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isMovable());
      assertFalse(homeLight0.isResizable());
      assertEquals("", homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(250.391F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("fDZ+M>\"(", homeLight0.getDescription());
      assertEquals(125.1955F, homeLight0.getX(), 0.01F);
      assertEquals((-886.0F), homeLight0.getDepth(), 0.01F);
      assertEquals(250.391F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-443.0F), homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight2.getShininess());
      assertNull(homeLight2.getStaircaseCutOutShape());
      assertFalse(homeLight2.isResizable());
      assertEquals(0.0F, homeLight2.getNameAngle(), 0.01F);
      assertEquals((-1.0F), homeLight2.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight2.getPower(), 0.01F);
      assertFalse(homeLight2.isMovable());
      assertEquals((-886.0F), homeLight2.getDepth(), 0.01F);
      assertEquals((-443.0F), homeLight2.getY(), 0.01F);
      assertEquals(125.1955F, homeLight2.getX(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight2.getName());
      assertEquals(250.391F, homeLight2.getGroundElevation(), 0.01F);
      assertEquals(250.391F, homeLight2.getElevation(), 0.01F);
      assertEquals(250.391F, homeLight2.getWidth(), 0.01F);
      assertEquals("", homeLight2.getCatalogId());
      assertEquals(0.0F, homeLight2.getNameYOffset(), 0.01F);
      assertNull(homeLight2.getColor());
      assertFalse(homeLight2.isModelMirrored());
      assertFalse(homeLight2.isBackFaceShown());
      assertTrue(homeLight2.isTexturable());
      assertFalse(homeLight2.isDoorOrWindow());
      assertEquals(0.0F, homeLight2.getAngle(), 0.01F);
      assertFalse(homeLight2.isNameVisible());
      assertNull(homeLight2.getCurrency());
      assertTrue(homeLight2.isVisible());
      assertTrue(homeLight2.isDeformable());
      assertEquals("fDZ+M>\"(", homeLight2.getDescription());
      assertEquals(0.0F, homeLight2.getNameXOffset(), 0.01F);
      assertEquals(8, lightSourceArray0.length);
      
      homeLight0.setElevation(250.391F);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight0, homeLight2);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight0.equals((Object)homeLight2));
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(250.391F, catalogLight0.getWidth(), 0.01F);
      assertEquals((-886.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals("fDZ+M>\"(", catalogLight0.getDescription());
      assertNull(catalogLight0.getGrade());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isMovable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getId());
      assertNull(catalogLight0.getCurrency());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(250.391F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertEquals("Esx6}@\"=0E", catalogLight0.getCreator());
      assertFalse(catalogLight0.isResizable());
      assertEquals((-1.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(250.391F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals((-1.0F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isMovable());
      assertFalse(homeLight0.isResizable());
      assertEquals("", homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(250.391F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("fDZ+M>\"(", homeLight0.getDescription());
      assertEquals(125.1955F, homeLight0.getX(), 0.01F);
      assertEquals((-886.0F), homeLight0.getDepth(), 0.01F);
      assertEquals(250.391F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-443.0F), homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(8, lightSourceArray0.length);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      boolean boolean1 = homeLight1.isNameCenterPointAt(327.0F, 327.0F, 327.0F);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight0, homeLight2);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(homeLight1, homeLight2);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight0.equals((Object)homeLight2));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(homeLight1.equals((Object)homeLight2));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(250.391F, catalogLight0.getWidth(), 0.01F);
      assertEquals((-886.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals("fDZ+M>\"(", catalogLight0.getDescription());
      assertNull(catalogLight0.getGrade());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isMovable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getId());
      assertNull(catalogLight0.getCurrency());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(250.391F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertEquals("Esx6}@\"=0E", catalogLight0.getCreator());
      assertFalse(catalogLight0.isResizable());
      assertEquals((-1.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(250.391F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals((-1.0F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isMovable());
      assertFalse(homeLight0.isResizable());
      assertEquals("", homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(250.391F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("fDZ+M>\"(", homeLight0.getDescription());
      assertEquals(125.1955F, homeLight0.getX(), 0.01F);
      assertEquals((-886.0F), homeLight0.getDepth(), 0.01F);
      assertEquals(250.391F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-443.0F), homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight1.getName());
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(125.1955F, homeLight1.getX(), 0.01F);
      assertEquals(250.391F, homeLight1.getNameYOffset(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals((-443.0F), homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals("fDZ+M>\"(", homeLight1.getDescription());
      assertFalse(homeLight1.isNameVisible());
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertFalse(homeLight1.isDoorOrWindow());
      assertFalse(homeLight1.isResizable());
      assertNull(homeLight1.getShininess());
      assertEquals((-1.0F), homeLight1.getHeight(), 0.01F);
      assertEquals((-886.0F), homeLight1.getDepth(), 0.01F);
      assertFalse(homeLight1.isMovable());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals(250.391F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals("", homeLight1.getCatalogId());
      assertEquals(250.391F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(250.391F, homeLight1.getWidth(), 0.01F);
      assertEquals(8, lightSourceArray0.length);
      
      boolean boolean2 = homeLight2.isResizable();
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight0, homeLight2);
      assertNotSame(homeLight2, homeLight1);
      assertNotSame(homeLight2, homeLight0);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight0.equals((Object)homeLight2));
      assertFalse(homeLight2.equals((Object)homeLight1));
      assertFalse(homeLight2.equals((Object)homeLight0));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(250.391F, catalogLight0.getWidth(), 0.01F);
      assertEquals((-886.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals("fDZ+M>\"(", catalogLight0.getDescription());
      assertNull(catalogLight0.getGrade());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isMovable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getId());
      assertNull(catalogLight0.getCurrency());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(250.391F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertEquals("Esx6}@\"=0E", catalogLight0.getCreator());
      assertFalse(catalogLight0.isResizable());
      assertEquals((-1.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(250.391F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals((-1.0F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isMovable());
      assertFalse(homeLight0.isResizable());
      assertEquals("", homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(250.391F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("fDZ+M>\"(", homeLight0.getDescription());
      assertEquals(125.1955F, homeLight0.getX(), 0.01F);
      assertEquals((-886.0F), homeLight0.getDepth(), 0.01F);
      assertEquals(250.391F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-443.0F), homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight2.getShininess());
      assertNull(homeLight2.getStaircaseCutOutShape());
      assertFalse(homeLight2.isResizable());
      assertEquals(0.0F, homeLight2.getNameAngle(), 0.01F);
      assertEquals((-1.0F), homeLight2.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight2.getPower(), 0.01F);
      assertFalse(homeLight2.isMovable());
      assertEquals((-886.0F), homeLight2.getDepth(), 0.01F);
      assertEquals((-443.0F), homeLight2.getY(), 0.01F);
      assertEquals(125.1955F, homeLight2.getX(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight2.getName());
      assertEquals(250.391F, homeLight2.getGroundElevation(), 0.01F);
      assertEquals(250.391F, homeLight2.getElevation(), 0.01F);
      assertEquals(250.391F, homeLight2.getWidth(), 0.01F);
      assertEquals("", homeLight2.getCatalogId());
      assertEquals(0.0F, homeLight2.getNameYOffset(), 0.01F);
      assertNull(homeLight2.getColor());
      assertFalse(homeLight2.isModelMirrored());
      assertFalse(homeLight2.isBackFaceShown());
      assertTrue(homeLight2.isTexturable());
      assertFalse(homeLight2.isDoorOrWindow());
      assertEquals(0.0F, homeLight2.getAngle(), 0.01F);
      assertFalse(homeLight2.isNameVisible());
      assertNull(homeLight2.getCurrency());
      assertTrue(homeLight2.isVisible());
      assertTrue(homeLight2.isDeformable());
      assertEquals("fDZ+M>\"(", homeLight2.getDescription());
      assertEquals(0.0F, homeLight2.getNameXOffset(), 0.01F);
      assertEquals(8, lightSourceArray0.length);
      
      float float0 = homeLight1.getNameYOffset();
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight0, homeLight2);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(homeLight1, homeLight2);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight0.equals((Object)homeLight2));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(homeLight1.equals((Object)homeLight2));
      assertEquals(250.391F, float0, 0.01F);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(250.391F, catalogLight0.getWidth(), 0.01F);
      assertEquals((-886.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals("fDZ+M>\"(", catalogLight0.getDescription());
      assertNull(catalogLight0.getGrade());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isMovable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getId());
      assertNull(catalogLight0.getCurrency());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(250.391F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertEquals("Esx6}@\"=0E", catalogLight0.getCreator());
      assertFalse(catalogLight0.isResizable());
      assertEquals((-1.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(250.391F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals((-1.0F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isMovable());
      assertFalse(homeLight0.isResizable());
      assertEquals("", homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(250.391F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("fDZ+M>\"(", homeLight0.getDescription());
      assertEquals(125.1955F, homeLight0.getX(), 0.01F);
      assertEquals((-886.0F), homeLight0.getDepth(), 0.01F);
      assertEquals(250.391F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-443.0F), homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight1.getName());
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(125.1955F, homeLight1.getX(), 0.01F);
      assertEquals(250.391F, homeLight1.getNameYOffset(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals((-443.0F), homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals("fDZ+M>\"(", homeLight1.getDescription());
      assertFalse(homeLight1.isNameVisible());
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertFalse(homeLight1.isDoorOrWindow());
      assertFalse(homeLight1.isResizable());
      assertNull(homeLight1.getShininess());
      assertEquals((-1.0F), homeLight1.getHeight(), 0.01F);
      assertEquals((-886.0F), homeLight1.getDepth(), 0.01F);
      assertFalse(homeLight1.isMovable());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals(250.391F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals("", homeLight1.getCatalogId());
      assertEquals(250.391F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(250.391F, homeLight1.getWidth(), 0.01F);
      assertEquals(8, lightSourceArray0.length);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      CatalogLight catalogLight0 = new CatalogLight("{|8n=t4A?<m", "{|8n=t4A?<m", "{|8n=t4A?<m", (Content) null, (Content) null, (Content) null, 277.9044F, 277.9044F, (-196), 277.9044F, false, lightSourceArray0, (float[][]) null, "{|8n=t4A?<m", false, false, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      Integer integer0 = new Integer((-196));
      Integer.remainderUnsigned((-196), (-196));
      homeLight0.setColor(integer0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((-202));
      LightSource[] lightSourceArray0 = new LightSource[8];
      CatalogLight catalogLight0 = new CatalogLight("{|8n=t4A?<m", "{|8n=t4A?<m", "{|8n=t4A?<m", (Content) null, (Content) null, (Content) null, 277.9044F, 277.9044F, (-202), 277.9044F, false, lightSourceArray0, (float[][]) null, "{|8n=t4A?<m", false, false, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      Integer integer0 = new Integer((-202));
      Integer.remainderUnsigned((-202), (-202));
      homeLight0.setColor(integer0);
      homeLight0.isTopLeftPointAt((-202), (-802.3F), 3.4028235E38F);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      LightSource[] lightSourceArray0 = new LightSource[6];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 250.391F, (-887.5109F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isBottomRightPointAt(3.4028235E38F, 250.391F, 250.391F);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Float float0 = new Float((double) 654);
      LightSource lightSource0 = new LightSource(654, 654, 654, 654, float0);
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      LightSource[] lightSourceArray0 = new LightSource[7];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 654, false, lightSourceArray0, (float[][]) null, "", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      Level level0 = new Level("", 654, 654, 654);
      homeLight0.isAtLevel(level0);
      homeLight0.getPriceValueAddedTaxIncluded();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      CatalogLight catalogLight0 = new CatalogLight("", "Esx6}@\",=0E", "", (Content) null, (Content) null, (Content) null, (-13.81694F), (-1432.0756F), 664.1542F, (-13.81694F), false, lightSourceArray0, (float[][]) null, "", false, true, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setElevation((-13.81694F));
      homeLight0.setVisible(false);
      homeLight0.getPriceValueAddedTaxIncluded();
      homeLight0.isTopRightPointAt(2.0F, (-886.0F), 124.21762F);
      homeLight0.setDescription("Esx6}@\",=0E");
      homeLight0.isVisible();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 1, 1, (-885.78705F), 1, false, lightSourceArray0, (float[][]) null, "", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      Float float0 = new Float(2911.6F);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.isNameCenterPointAt(1, (-1.0F), 327.0F);
      homeLight1.getDescription();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Float float0 = new Float(1448.07377);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 1.0F, false, lightSourceArray0, (float[][]) null, "", false, true, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      Integer integer0 = new Integer((-196));
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1.5.0_16");
      Float float1 = new Float((float) (-196));
      homeLight0.setPower((-885.78705F));
      homeLight0.setShininess(float0);
      homeLight0.isBackFaceShown();
      catalogLight0.getLightSources();
      HomeLight homeLight1 = homeLight0.clone();
      HomeLight homeLight2 = homeLight1.clone();
      homeLight2.setElevation((-196));
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight1.isNameCenterPointAt(649.027F, 654, 649.027F);
      HomeLight homeLight3 = new HomeLight(homeLight0);
      homeLight3.isTopRightPointAt(654, 649.027F, 654);
      homeLight0.setDescription("");
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      bigDecimal0.toPlainString();
      LightSource[] lightSourceArray0 = new LightSource[7];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", (Content) null, (Content) null, (Content) null, 250.391F, (-889.7834F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "SF!~#pX06L/k9D6~.c", true, true, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.isNameCenterPointAt((-1.0F), (-889.7834F), 250.391F);
      homeLight1.setAngle((-1.0F));
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[0] = lightSource0;
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setElevation(0.3926991F);
      homeLight0.getY();
      homeLight0.isBackFaceShown();
      homeLight0.getElevation();
      homeLight1.getTexture();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[0] = lightSource0;
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.clone();
      homeLight0.getY();
      homeLight0.isBackFaceShown();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Float float0 = new Float(0.0);
      Float.min(1.0F, 1.0F);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[7];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.setCategory((FurnitureCategory) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setElevation(0.3926991F);
      homeLight1.isMovable();
      HomePieceOfFurniture homePieceOfFurniture0 = homeLight1.clone();
      homePieceOfFurniture0.getValueAddedTax();
      homePieceOfFurniture0.getValueAddedTaxPercentage();
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      linkedList0.add(homePieceOfFurniture0);
      homePieceOfFurniture0.isPointAt((-886.0F), 1682.8752F, 1682.8752F);
      homeLight0.isTopRightPointAt((-1769.65F), 116.6F, (-2530.608F));
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "", (Content) null, (Content) null, (Content) null, (-13.81694F), (-886.0F), (-196), (-13.81694F), false, lightSourceArray0, (float[][]) null, "Esxp}@\"=0E", false, false, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isBottomLeftPointAt((-1.0F), 398.87F, (-886.0F));
      homeLight0.getCatalogId();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "O:vzpbAKTZ)LRe";
      Long long0 = new Long(2142L);
      Float float0 = new Float((float) 2142L);
      Sash[] sashArray0 = new Sash[7];
      Sash sash0 = new Sash((-2255.7F), 0.0F, 2543.2756F, 2.2768233F, 2142L);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(1614.2255F, 214.58F, 2.2768233F, 1614.2255F, (-2173.41F));
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(1614.2255F, 1.0F, (-1090.0F), 3.4028235E38F, 3.4028235E38F);
      sashArray0[2] = sash2;
      Sash sash3 = new Sash(250.391F, (-1090.0F), 214.58F, 1828.0294F, 250.391F);
      sashArray0[3] = sash3;
      Sash sash4 = new Sash(2142L, 1614.2255F, (-925.615F), (-1914.5498F), (-3345.685F));
      sashArray0[4] = sash4;
      Sash sash5 = new Sash(196.0F, (-1.0F), 1828.0294F, (-2255.7F), (-922.283F));
      sashArray0[5] = sash5;
      Sash sash6 = new Sash(1946.9517F, (-978.7859F), 3.4028235E38F, 2543.2756F, 1537.0F);
      sashArray0[6] = sash6;
      float[][] floatArray0 = new float[9][4];
      float[] floatArray1 = new float[9];
      floatArray1[0] = (float) 2142L;
      floatArray1[1] = (-2713.779F);
      floatArray1[2] = 1828.0294F;
      floatArray1[3] = 250.391F;
      floatArray1[4] = 1946.9517F;
      floatArray1[5] = (-922.283F);
      floatArray1[6] = 2543.2756F;
      floatArray1[7] = 1828.0294F;
      floatArray1[8] = 1.0F;
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[8];
      floatArray2[0] = 1828.0294F;
      floatArray2[1] = (-2173.41F);
      floatArray2[2] = 1946.9517F;
      floatArray2[3] = (-1370.9F);
      floatArray2[4] = (-978.7859F);
      floatArray2[5] = 250.391F;
      floatArray2[6] = 214.58F;
      floatArray2[7] = 2.2768233F;
      floatArray0[1] = floatArray2;
      float[] floatArray3 = new float[5];
      floatArray3[0] = 1614.2255F;
      floatArray3[1] = 0.0F;
      floatArray3[2] = (float) 2142L;
      floatArray3[3] = (-1090.0F);
      floatArray3[4] = (-1031.576F);
      floatArray0[2] = floatArray3;
      float[] floatArray4 = new float[2];
      floatArray4[0] = (-2173.41F);
      floatArray4[1] = 2.2768233F;
      floatArray0[3] = floatArray4;
      float[] floatArray5 = new float[6];
      floatArray5[0] = (-922.283F);
      floatArray5[1] = (-2713.779F);
      floatArray5[2] = (-1370.9F);
      floatArray5[3] = 1.0F;
      floatArray5[4] = 1.0F;
      floatArray5[5] = (-3345.685F);
      floatArray0[4] = floatArray5;
      float[] floatArray6 = new float[2];
      floatArray6[0] = 3.4028235E38F;
      floatArray6[1] = 3.4028235E38F;
      floatArray0[5] = floatArray6;
      float[] floatArray7 = new float[4];
      floatArray7[0] = 1614.2255F;
      floatArray7[1] = 3.4028235E38F;
      floatArray7[2] = 196.0F;
      floatArray7[3] = (-1031.576F);
      floatArray0[6] = floatArray7;
      float[] floatArray8 = new float[1];
      floatArray8[0] = (-925.615F);
      floatArray0[7] = floatArray8;
      float[] floatArray9 = new float[6];
      floatArray9[0] = 3.4028235E38F;
      floatArray9[1] = (-2255.7F);
      floatArray9[2] = (-1914.5498F);
      floatArray9[3] = 1537.0F;
      floatArray9[4] = (-2255.7F);
      floatArray9[5] = (-3345.685F);
      floatArray0[8] = floatArray9;
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("trgN8p1-u%E[E", "", (String) null, "com.eteks.sweethome3d.model.HomePieceOfFurniture", stringArray0, long0, float0, (Content) null, (Content) null, (Content) null, 0.0F, 1946.9517F, 0.0F, 1946.9517F, true, (-1914.5498F), (-2713.779F), sashArray0, floatArray0, "com.eteks.sweethome3d.model.HomePieceOfFurniture", true, true, true, bigDecimal0, bigDecimal0, "O:vzpbAKTZ)LRe");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getWidth();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Float float0 = new Float(1448.07377);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", ".", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 1.0F, true, lightSourceArray0, (float[][]) null, "", true, true, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      Integer integer0 = new Integer((-196));
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isTopLeftPointAt((-196), 174.0F, 654);
      Float float1 = new Float((float) (-196));
      homeLight0.setShininess(float0);
      HomeLight homeLight1 = new HomeLight(homeLight0);
      Float float2 = new Float((double) 1.0F);
      homeLight0.isBackFaceShown();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Level level0 = new Level("", (-196), 1.0F, 174.0F);
      homeLight1.getLevel();
      homeLight1.isAtLevel((Level) null);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Float float0 = new Float(1448.07377);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", ".", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 1.0F, true, lightSourceArray0, (float[][]) null, "", true, true, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      Integer integer0 = new Integer((-196));
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setShininess(float0);
      Float float1 = new Float((float) (-196));
      homeLight0.setPower((-885.78705F));
      homeLight0.setShininess(float0);
      homeLight0.isBackFaceShown();
      HomeLight homeLight1 = new HomeLight(catalogLight0);
      HomeLight homeLight2 = homeLight1.clone();
      homeLight2.setElevation((-196));
      homeLight0.isNameCenterPointAt(327.0F, 0.5F, 0.3926991F);
      homeLight1.isResizable();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((-202));
      LightSource[] lightSourceArray0 = new LightSource[12];
      CatalogLight catalogLight0 = new CatalogLight("{|8n=t4A?<m", "{|8n=t4A?<m", "{|8n=t4A?<m", (Content) null, (Content) null, (Content) null, 277.9044F, 277.9044F, (-202), 277.9044F, false, lightSourceArray0, (float[][]) null, "{|8n=t4A?<m", false, false, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setShininess((Float) null);
      homeLight0.clone();
      homeLight0.getGroundElevation();
      homeLight0.setAngle((-1.0F));
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", "", (Content) null, (Content) null, (Content) null, 654, 654, (-886.0F), 1.0F, false, lightSourceArray0, (float[][]) null, ")", false, true, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      int int0 = new Integer((-196));
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1.5.0_16");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.getY();
      Float float1 = new Float((-1694.0));
      homeLight0.setShininess(float1);
      homeLight1.isBackFaceShown();
      homeLight0.containsPoint((-1.0F), 654, (-886.0F));
      homeLight0.getDescription();
      HomeLight homeLight2 = new HomeLight(homeLight0);
      homeLight2.setNameAngle((-4604.32F));
      homeLight2.setNameYOffset(1.0F);
      homeLight0.setNameYOffset((-4634.881F));
      homeLight1.isBottomRightPointAt(770.0F, (-1.0F), (-196));
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      bigDecimal0.toPlainString();
      LightSource[] lightSourceArray0 = new LightSource[7];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-890.4281F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\",=0E", true, true, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setElevation((-1.0F));
      homeLight0.setVisible(false);
      homeLight0.setDescription("fDZ+M>\"(");
      Integer integer0 = Integer.valueOf(33);
      homeLight0.setColor(integer0);
      HomePieceOfFurniture.Property.values();
      homeLight0.getColor();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", ")", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 1.0F, true, lightSourceArray0, (float[][]) null, ")", true, true, true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setPower(654);
      Float float0 = new Float((double) 1.0F);
      homeLight0.setShininess(float0);
      homeLight0.setWidth(1.0F);
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setElevation(654);
      homeLight1.isBottomLeftPointAt(533.8045F, 654, (-885.78705F));
      homeLight0.getY();
      homeLight1.getElevation();
      homeLight0.move((-2249.7217F), (-1202.5339F));
      homeLight1.isBottomLeftPointAt(2.144522F, 654, (-2249.7217F));
      homeLight0.setModelMirrored(true);
      homeLight1.getNameYOffset();
      homeLight0.setModelMirrored(false);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Float float0 = new Float(1448.07377);
      LightSource lightSource0 = new LightSource(1.0F, 1.0F, 2147483645, 2147483645);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", "", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 1.0F, false, lightSourceArray0, (float[][]) null, ")", false, true, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      Integer integer0 = new Integer(2147483645);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1.5.0_16");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.getY();
      Float float1 = new Float((-804.4091));
      homeLight0.setShininess(float1);
      homeLight1.isBackFaceShown();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight0.getDescription();
      HomeLight homeLight2 = new HomeLight(homeLight0);
      homeLight2.setNameAngle((-4604.32F));
      homeLight2.setNameYOffset(1.0F);
      homeLight0.setNameYOffset((-4634.881F));
      homeLight1.isBottomRightPointAt(770.0F, (-1.0F), (float) integer0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 1, 1, 1, 1, false, lightSourceArray0, (float[][]) null, "", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeLight homeLight1 = homeLight0.clone();
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      LinkedList<HomePieceOfFurniture> linkedList1 = new LinkedList<HomePieceOfFurniture>();
      linkedList1.add((HomePieceOfFurniture) homeLight1);
      HomeFurnitureGroup homeFurnitureGroup0 = null;
      try {
        homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList1, "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 654, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setElevation(0.3926991F);
      homeLight0.isBackFaceShown();
      homeLight1.isNameCenterPointAt(654, 327.0F, 654);
      homeLight0.isResizable();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 654, (-196), float0);
      Float.min(654, (-2903.233F));
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setElevation(0.3926991F);
      homeLight0.isBackFaceShown();
      homeLight1.isMovable();
      homeLight1.isNameCenterPointAt(654, 327.0F, 654);
      homeLight1.getNameYOffset();
      homeLight0.setModelMirrored(true);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      LightSource[] lightSourceArray0 = new LightSource[6];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-6.0064254F), 250.391F, false, lightSourceArray0, (float[][]) null, "SF!~#pX06L/k9D6~.c", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight0.isBottomLeftPointAt((-6.0064254F), (-6.0064254F), (-6.0064254F));
      homeLight0.getCatalogId();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Float.max((-196), 654);
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[0] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("!/");
      homeLight0.setNameXOffset((-196));
      float float1 = new Float((float) (-196));
      homeLight0.isBackFaceShown();
      homeLight0.containsPoint((-886.0F), 250.391F, 1.0F);
      homeLight0.setNameYOffset((-886.0F));
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      boolean boolean0 = false;
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      float float0 = 249.55373F;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", (Content) null, (Content) null, (Content) null, 249.55373F, (-888.0F), (-1.0F), 249.55373F, false, lightSourceArray0, (float[][]) null, "SF!~#pX06L/k9D6~.c", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      // Undeclared exception!
      try { 
        homeLight0.setHeight(0.5F);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Integer integer0 = new Integer((-5));
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, (-5), (-5), (-885.78705F), (-5), false, lightSourceArray0, (float[][]) null, "", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight0.isTopRightPointAt((-5), (-5), (-885.78705F));
      homeLight0.clone();
      homeLight0.isTopLeftPointAt((-5), (-5), (-886.0F));
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", "", (Content) null, (Content) null, (Content) null, 654, 654, (-886.0F), 1.0F, false, lightSourceArray0, (float[][]) null, ")", false, false, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      bigDecimal0.scale();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1.5.0_16");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.getY();
      Float float1 = new Float((-1694.0));
      homeLight0.setShininess(float1);
      homeLight1.isBackFaceShown();
      homeLight0.containsPoint((-1.0F), 654, (-886.0F));
      homeLight0.getDescription();
      HomeLight homeLight2 = new HomeLight(homeLight0);
      homeLight2.setNameYOffset(1.0F);
      homeLight0.setNameYOffset((-4634.881F));
      homeLight1.isBottomRightPointAt(770.0F, (-1.0F), 0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$VALU$S");
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[7];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setElevation(0.3926991F);
      HomePieceOfFurniture homePieceOfFurniture0 = homeLight0.clone();
      homeLight0.setVisible(false);
      homePieceOfFurniture0.setDescription("Esx6}@\"=0E");
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.isTopRightPointAt(0.0F, 240.83984F, 240.83984F);
      TextStyle textStyle0 = new TextStyle((-886.0F), true, false);
      TextStyle textStyle1 = textStyle0.deriveStyle(0.3926991F);
      homeLight0.setNameStyle(textStyle1);
      homeLight0.getNameStyle();
      homePieceOfFurniture0.getModel();
      homeLight0.isTopLeftPointAt(0.3926991F, 240.83984F, (-886.0F));
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Float float0 = new Float((double) 654);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 654, 654, 654, 7.2619F, false, lightSourceArray0, (float[][]) null, "", false, false, false, bigDecimal0, bigDecimal0);
      Integer.valueOf(654);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setShininess(float0);
      Float float1 = new Float((float) 654);
      homeLight0.setShininess(float0);
      homeLight0.clone();
      homeLight0.getGroundElevation();
      homeLight0.setAngle(7.2619F);
      homeLight0.setAngle(490.6281F);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      bigDecimal0.toPlainString();
      LightSource[] lightSourceArray0 = new LightSource[7];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", (Content) null, (Content) null, (Content) null, 250.391F, (-1703.73F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "SF!~#pX06L/k9D6~.c", true, true, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setVisible(false);
      homeLight0.setDescription("SF!~#pX06L/k9D6~.c");
      homeLight0.getNameAngle();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", (Content) null, (Content) null, (Content) null, 249.55373F, (-888.0F), (-1.0F), 249.55373F, false, lightSourceArray0, (float[][]) null, "SF!~#pX06L/k9D6~.c", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setNameYOffset((-2322.09F));
      homeLight0.isBottomRightPointAt(3.4028235E38F, 249.55373F, 3.4028235E38F);
      homeLight0.getIcon();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Float.min(1.0F, 1.0F);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[7];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.setCategory((FurnitureCategory) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setElevation(0.3926991F);
      homeLight1.isMovable();
      HomePieceOfFurniture homePieceOfFurniture0 = homeLight1.clone();
      homeLight1.setVisible(false);
      homePieceOfFurniture0.getValueAddedTax();
      homePieceOfFurniture0.getValueAddedTaxPercentage();
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      linkedList0.add((HomePieceOfFurniture) homeLight0);
      linkedList0.add(homePieceOfFurniture0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, (String) null);
      homeLight0.isTopRightPointAt(1.0F, (-1287.2F), 0.3926991F);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Integer integer0 = new Integer(1);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 1, 1, (-885.78705F), 1, false, lightSourceArray0, (float[][]) null, "", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeLight homeLight1 = homeLight0.clone();
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      homeLight0.setNameXOffset((-885.78705F));
      LinkedList<HomePieceOfFurniture> linkedList1 = new LinkedList<HomePieceOfFurniture>();
      linkedList1.add((HomePieceOfFurniture) homeLight1);
      HomeFurnitureGroup homeFurnitureGroup0 = null;
      try {
        homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList1, "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", "", (Content) null, (Content) null, (Content) null, 654, 654, (-886.0F), 1.0F, false, lightSourceArray0, (float[][]) null, ")", false, true, true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.getY();
      Float float0 = new Float((double) 654);
      homeLight1.setShininess(float0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight0.getDescription();
      HomeLight homeLight2 = new HomeLight(homeLight1);
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      linkedList0.add((HomePieceOfFurniture) homeLight2);
      homeLight0.isPointAt((-196), 1.0F, 1682.8752F);
      homeLight1.isTopRightPointAt((-3318.7F), (-3318.7F), (-886.0F));
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Float float0 = new Float((double) 654);
      LightSource lightSource0 = new LightSource(654, 654, 654, 654, float0);
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      LightSource[] lightSourceArray0 = new LightSource[7];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 654, false, lightSourceArray0, (float[][]) null, "", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      Level level0 = new Level("", 654, 654, 654);
      homeLight0.isTopLeftPointAt((-885.78705F), (-885.78705F), (-1163.2F));
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      bigDecimal0.toPlainString();
      LightSource[] lightSourceArray0 = new LightSource[7];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-890.4281F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setElevation(0.3926991F);
      homeLight0.setVisible(false);
      BigDecimal bigDecimal1 = homeLight0.getValueAddedTax();
      bigDecimal0.multiply(bigDecimal1);
      homeLight0.getPriceValueAddedTaxIncluded();
      homeLight0.isTopRightPointAt(0.0F, 240.83984F, 240.83984F);
      homeLight0.setDescription("fDZ+M>\"(");
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Float float0 = new Float(0.0);
      Float.min(1.0F, 1.0F);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[7];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.setCategory((FurnitureCategory) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setNameAngle(250.391F);
      homeLight0.setElevation(0.3926991F);
      homeLight0.isBackFaceShown();
      homeLight1.isMovable();
      HomePieceOfFurniture homePieceOfFurniture0 = homeLight1.clone();
      homePieceOfFurniture0.getValueAddedTax();
      homePieceOfFurniture0.getValueAddedTaxPercentage();
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      linkedList0.add(homePieceOfFurniture0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, (String) null);
      List<HomePieceOfFurniture> list0 = homeFurnitureGroup0.getFurniture();
      LinkedList<HomePieceOfFurniture> linkedList1 = new LinkedList<HomePieceOfFurniture>();
      HomeFurnitureGroup homeFurnitureGroup1 = new HomeFurnitureGroup(list0, "SF!~#pX06L/k9D6~.c");
      homeLight0.isDoorOrWindow();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", (Content) null, (Content) null, (Content) null, 250.391F, 250.391F, (-196), 250.391F, false, lightSourceArray0, (float[][]) null, "SF!~#pX06L/k9D6~.c", false, false, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      Integer integer0 = new Integer((-196));
      Integer.remainderUnsigned((-196), (-196));
      homeLight0.setColor(integer0);
      homeLight0.isPointAt((-1.0F), 1.0F, 1.0F);
      homeLight0.isBottomLeftPointAt((-1.0F), 250.391F, (-196));
      homeLight0.setColor(integer0);
      homeLight0.getTexture();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      CatalogLight catalogLight0 = new CatalogLight("{|8n=t4A?<m", "{|8n=t4A?<m", "{|8n=t4A?<m", (Content) null, (Content) null, (Content) null, 250.391F, 250.391F, (-196), 250.391F, false, lightSourceArray0, (float[][]) null, "{|8n=t4A?<m", false, false, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      Integer integer0 = new Integer((-196));
      Integer.remainderUnsigned((-196), (-196));
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("{|8n=t4A?<m", (PropertyChangeListener) null);
      homeLight0.addPropertyChangeListener(propertyChangeListenerProxy0);
      homeLight0.setColor(integer0);
      homeLight0.setColor(integer0);
      homeLight0.getTexture();
      homeLight0.setTexture((HomeTexture) null);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HomePieceOfFurniture homePieceOfFurniture0 = null;
      try {
        homePieceOfFurniture0 = new HomePieceOfFurniture((PieceOfFurniture) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      float float1 = (-886.0F);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", "", (Content) null, (Content) null, (Content) null, 654, 654, (-886.0F), 1.0F, false, lightSourceArray0, (float[][]) null, ")", false, true, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      Integer integer0 = new Integer((-196));
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1.5.0_16");
      homeLight0.getY();
      Float float2 = new Float((-1694.0));
      homeLight0.setShininess(float2);
      homeLight0.isBackFaceShown();
      HomeLight homeLight1 = homeLight0.clone();
      HomeLight homeLight2 = new HomeLight(homeLight0);
      homeLight2.isPointAt(2286.5586F, 0.5F, (-1.0F));
      homeLight2.isBackFaceShown();
      homeLight0.isMovable();
      // Undeclared exception!
      try { 
        homeLight1.setWidth((-196));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Float float0 = new Float((double) 654);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 654, 654, 654, 7.2619F, true, lightSourceArray0, (float[][]) null, "", true, true, true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setShininess(float0);
      Random.setNextRandom((-2089));
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      int int0 = 1;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      float float0 = (-886.0F);
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 1, 1, (-886.0F), 1, false, lightSourceArray0, (float[][]) null, "", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        homeLight0.setDepth((-886.0F));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Float float0 = new Float(1448.07377);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", ")", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 1.0F, false, lightSourceArray0, (float[][]) null, ")", false, true, true, bigDecimal0, bigDecimal0);
      Integer integer0 = new Integer((-196));
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1.5.0_16");
      Float float1 = new Float(1448.07377);
      homeLight0.setPower((-885.78705F));
      homeLight0.setNameXOffset(1.0F);
      HomeLight homeLight1 = homeLight0.clone();
      Float float2 = new Float((float) (-196));
      homeLight1.isBackFaceShown();
      homeLight0.setMovable(false);
      homeLight0.containsPoint(886.0F, 886.0F, 250.391F);
      HomeLight homeLight2 = homeLight0.clone();
      homeLight0.setMovable(true);
      homeLight2.isTopLeftPointAt(250.391F, (-196), (-1397.0283F));
      homeLight0.getShininess();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Float float0 = new Float(0.0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "SF!~#pX06L/k9D6~.c", false, false, false, bigDecimal0, bigDecimal0);
      catalogLight0.setCategory((FurnitureCategory) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.getY();
      Float float1 = new Float((-886.0F));
      HomeLight homeLight2 = homeLight0.clone();
      homeLight2.setShininess((Float) null);
      homeLight2.getDescription();
      HomeLight homeLight3 = new HomeLight(homeLight0);
      homeLight0.setNameAngle(2515.3054F);
      homeLight3.setNameYOffset(4793.491F);
      homeLight3.setNameYOffset(0.3926991F);
      // Undeclared exception!
      try { 
        homeLight1.setModelMirrored(true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Float float0 = new Float((double) 654);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 654, 654, 654, 7.2619F, true, lightSourceArray0, (float[][]) null, "", true, true, true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setShininess(float0);
      Float float1 = new Float((float) 654);
      homeLight0.setShininess(float0);
      homeLight0.clone();
      homeLight0.getGroundElevation();
      homeLight0.setAngle(7.2619F);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      LightSource[] lightSourceArray0 = new LightSource[6];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", (Content) null, (Content) null, (Content) null, 249.55373F, (-888.0F), (-1.0F), 249.55373F, false, lightSourceArray0, (float[][]) null, "SF!~#pX06L/k9D6~.c", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = new HomeLight(homeLight0);
      homeLight1.getDescription();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", "", (Content) null, (Content) null, (Content) null, 654, 654, (-886.0F), 1.0F, false, lightSourceArray0, (float[][]) null, ")", false, true, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      Integer integer0 = new Integer((-196));
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1.5.0_16");
      homeLight0.getY();
      Float float1 = new Float((-1694.0));
      homeLight0.setShininess(float1);
      homeLight0.isBackFaceShown();
      homeLight0.containsPoint((-1.0F), 654, (-886.0F));
      homeLight0.getDescription();
      HomeLight homeLight1 = new HomeLight(homeLight0);
      homeLight1.setNameAngle((-4604.32F));
      homeLight1.isBackFaceShown();
      homeLight1.setNameVisible(false);
      homeLight1.clone();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Float float0 = new Float(0.2078757310081673);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[0] = lightSource0;
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-196), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", false, false, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setElevation((-886.0F));
      homeLight0.getY();
      homeLight0.isBackFaceShown();
      homeLight0.getElevation();
      homeLight0.isPointAt((-1.0F), (-886.0F), 1.0F);
      homeLight0.isTopRightPointAt((-196), (-1.0F), 250.391F);
      homeLight0.isBottomLeftPointAt((-443.0F), 1031.576F, (-333.443F));
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Float float0 = new Float(0.0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Float.max((-196), 637);
      LightSource[] lightSourceArray0 = new LightSource[8];
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "com.eteks.sweethome3d.tools.OperatingSystem$2", (Content) null, (Content) null, (Content) null, 637.0F, (-196), 637.0F, 1.0F, false, lightSourceArray0, (float[][]) null, "", true, true, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setElevation(2.0F);
      homeLight0.isBackFaceShown();
      homeLight1.setNameVisible(false);
      homeLight0.clone();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Float float0 = new Float(0.0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.setCategory((FurnitureCategory) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.isBackFaceShown();
      homeLight1.isMovable();
      homeLight1.setWidth(2543.2756F);
      homeLight1.isNameCenterPointAt(1.0F, 327.0F, 1.0F);
      homeLight1.getName();
      homeLight1.getDepth();
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      Sash[] sashArray0 = new Sash[2];
      Sash sash0 = mock(Sash.class, new ViolatedAssumptionAnswer());
      sashArray0[0] = sash0;
      sashArray0[1] = sash0;
      float[][] floatArray0 = new float[9][6];
      float[] floatArray1 = new float[5];
      floatArray1[0] = (-271.9752F);
      floatArray1[1] = 0.3926991F;
      floatArray1[2] = 2106.342F;
      floatArray1[3] = 0.3926991F;
      floatArray1[4] = 0.3926991F;
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[3];
      floatArray2[0] = 2106.342F;
      floatArray2[1] = 0.0F;
      floatArray2[2] = 0.0F;
      floatArray0[1] = floatArray2;
      float[] floatArray3 = new float[8];
      floatArray3[0] = 2106.342F;
      floatArray3[1] = 2106.342F;
      floatArray3[2] = 2106.342F;
      floatArray3[3] = 2106.342F;
      floatArray3[4] = 0.3926991F;
      floatArray3[5] = 0.3926991F;
      floatArray3[6] = 0.0F;
      floatArray3[7] = (-271.9752F);
      floatArray0[2] = floatArray3;
      float[] floatArray4 = new float[5];
      floatArray4[0] = 729.3724F;
      floatArray4[1] = 0.0F;
      floatArray4[2] = 2106.342F;
      floatArray4[3] = 2106.342F;
      floatArray4[4] = (-271.9752F);
      floatArray0[3] = floatArray4;
      float[] floatArray5 = new float[0];
      floatArray0[4] = floatArray5;
      float[] floatArray6 = new float[0];
      floatArray0[5] = floatArray6;
      float[] floatArray7 = new float[4];
      floatArray7[0] = 0.3926991F;
      floatArray7[1] = 2106.342F;
      floatArray7[2] = 0.3926991F;
      floatArray7[3] = (-271.9752F);
      floatArray0[6] = floatArray7;
      float[] floatArray8 = new float[9];
      floatArray8[0] = 2106.342F;
      floatArray8[1] = (-271.9752F);
      floatArray8[2] = 0.0F;
      floatArray8[3] = 729.3724F;
      floatArray8[4] = (-271.9752F);
      floatArray8[5] = 0.3926991F;
      floatArray8[6] = (-271.9752F);
      floatArray8[7] = 0.0F;
      floatArray8[8] = 0.3926991F;
      floatArray0[7] = floatArray8;
      float[] floatArray9 = new float[7];
      floatArray9[0] = 0.0F;
      floatArray9[1] = 2106.342F;
      floatArray9[2] = 0.0F;
      floatArray9[3] = 2106.342F;
      floatArray9[4] = (-271.9752F);
      floatArray9[5] = 0.0F;
      floatArray9[6] = 729.3724F;
      floatArray0[8] = floatArray9;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("DEPTH", (String) null, "\"?8Wcc/TU1#", (Content) null, (Content) null, (Content) null, 0.0F, 0.0F, (-271.9752F), 0.0F, true, 0.3926991F, 0.3926991F, sashArray0, floatArray0, "@J#&8J-NU78L", true, bigDecimal0, bigDecimal0);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogDoorOrWindow0);
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      homePieceOfFurniture1.getValueAddedTax();
      homePieceOfFurniture0.getValueAddedTaxPercentage();
      linkedList0.add(homePieceOfFurniture1);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      homeFurnitureGroup0.getFurniture();
      List<HomePieceOfFurniture> list0 = homeFurnitureGroup0.getFurniture();
      HomeFurnitureGroup homeFurnitureGroup1 = new HomeFurnitureGroup(list0, "");
      homeFurnitureGroup1.setElevation(2070.0317F);
      homeFurnitureGroup1.getHeight();
      homeFurnitureGroup0.isMovable();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[5];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 1.0F, true, lightSourceArray0, (float[][]) null, "", true, true, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      Float float0 = Float.valueOf((float) (-196));
      homeLight0.setShininess(float0);
      homeLight0.getDescription();
      HomeLight homeLight2 = new HomeLight(homeLight1);
      homeLight2.getPoints();
      homeLight2.setNameAngle((-885.78705F));
      homeLight2.setNameYOffset(1.0F);
      homeLight1.setName("");
      homeLight2.getPriceValueAddedTaxIncluded();
      homeLight2.clone();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Float float0 = new Float(0.0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("", "com.eteks.sweethome3d.model.CatalogPieceOfFurniture", "8D]Jl`-U>I2^", (Content) null, (Content) null, (Content) null, (-3631.3F), 1.0F, 0.0F, (-1609.2385F), false, lightSourceArray0, (float[][]) null, "", false, false, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setElevation(250.391F);
      homeLight0.isBackFaceShown();
      homeLight0.setNameVisible(true);
      homeLight0.clone();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Integer integer0 = new Integer(1);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 1, 1, (-885.78705F), 1.0F, true, lightSourceArray0, (float[][]) null, "", true, true, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      BigDecimal bigDecimal1 = new BigDecimal((-885.78705F));
      homeLight0.isBottomRightPointAt(1, 1, (-4335.8438F));
      homeLight0.isBottomLeftPointAt(1, (-4335.8438F), (-4335.8438F));
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setName("");
      homeLight1.getDescription();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Float float0 = new Float((double) 654);
      LightSource lightSource0 = new LightSource(654, 654, 654, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[1] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("Esx6}@\"=0E", "n@($/j<zmr:c]n", "Esx6}@\"=0E", (Content) null, (Content) null, (Content) null, (-1.0F), (-1.0F), (-196), (-2713.779F), false, lightSourceArray0, (float[][]) null, "n@($/j<zmr:c]n", false, false, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setElevation(813.0F);
      homeLight0.getY();
      homeLight0.isBackFaceShown();
      homeLight0.getElevation();
      homeLight0.isPointAt(813.0F, (-196), 0.5F);
      homeLight0.isTopRightPointAt((-1.0F), 813.0F, 44.9683F);
      homeLight0.getWidth();
      homeLight0.getNameStyle();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 1, 1, 1, 1, false, lightSourceArray0, (float[][]) null, "", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight0.clone();
      homeLight0.setAngle(0.0F);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "", (Content) null, (Content) null, (Content) null, (-13.81694F), (-886.0F), (-196), (-13.81694F), false, lightSourceArray0, (float[][]) null, "Esxp}@\"=0E", false, false, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      Level level0 = new Level("^?I1uo`z ?u}", 310.033F, (-3990.6118F), 310.033F);
      Level level1 = level0.clone();
      Level level2 = level1.clone();
      homeLight0.setLevel(level2);
      homeLight0.isPointAt(17.52232F, (-886.0F), (-13.81694F));
      homeLight0.isBottomLeftPointAt(17.52232F, (-13.81694F), (-886.0F));
      homeLight0.getCatalogId();
      // Undeclared exception!
      try { 
        HomePieceOfFurniture.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomePieceOfFurniture.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Float float0 = new Float(1448.07377);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", "", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 1.0F, false, lightSourceArray0, (float[][]) null, ")", false, true, true, bigDecimal0, bigDecimal0);
      Integer integer0 = new Integer((-196));
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1.5.0_16");
      Float float1 = new Float((float) (-196));
      homeLight0.setPower((-885.78705F));
      homeLight0.setNameXOffset(1.0F);
      HomeLight homeLight1 = homeLight0.clone();
      Float float2 = new Float((float) (-196));
      homeLight1.isBackFaceShown();
      homeLight0.setMovable(false);
      homeLight0.containsPoint(886.0F, 886.0F, 250.391F);
      homeLight0.setNameYOffset(0.5F);
      HomeLight homeLight2 = new HomeLight(homeLight0);
      homeLight2.isTopLeftPointAt(250.391F, 1363.09F, (-1397.0283F));
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Float float0 = new Float((-4.521648065767067));
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      LightSource[] lightSourceArray0 = new LightSource[7];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "SF!~#pX06L/k9D6~.c", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight0.isBottomRightPointAt(3.4028235E38F, 250.391F, 3.4028235E38F);
      homeLight0.isBackFaceShown();
      homeLight1.isModelMirrored();
      homeLight1.getPrice();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      LightSource[] lightSourceArray0 = new LightSource[9];
      Float float0 = new Float(0.0F);
      LightSource lightSource0 = new LightSource(0.0F, 0.0F, 1.0F, (-1068), float0);
      lightSourceArray0[0] = lightSource0;
      LightSource lightSource1 = new LightSource(0.0F, 1.0F, 0.0F, (-1068));
      lightSourceArray0[1] = lightSource1;
      Float float1 = new Float(1.0F);
      LightSource lightSource2 = new LightSource(0.3926991F, (-837.91394F), 0.0F, 0, float1);
      lightSourceArray0[2] = lightSource2;
      LightSource lightSource3 = new LightSource(0.0F, 0.0F, (-2311.0F), (-1355), float0);
      lightSourceArray0[3] = lightSource3;
      Float float2 = new Float(0.3926991F);
      LightSource lightSource4 = new LightSource((-3624.272F), 280.11F, 0, (-1355), float2);
      lightSourceArray0[4] = lightSource4;
      Float float3 = new Float((double) (-3624.272F));
      LightSource lightSource5 = new LightSource(1.0F, (-1881.78F), 0.0F, 1010, float3);
      lightSourceArray0[5] = lightSource5;
      Float float4 = new Float(1.0F);
      LightSource lightSource6 = new LightSource(0.0F, 0, (-1655.0F), (-1068), float4);
      lightSourceArray0[6] = lightSource6;
      LightSource lightSource7 = new LightSource(0.0F, (-1881.78F), 0, (-1355));
      lightSourceArray0[7] = lightSource7;
      Float float5 = new Float((-4363.6136908984));
      LightSource lightSource8 = new LightSource((-1813.5615F), 1.0F, 0.0F, 654, float5);
      lightSourceArray0[8] = lightSource8;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight("com.eteks.sweethome3d.model.Level", "#wo4@|", "_B=\"GGsUB", (Content) null, (Content) null, (Content) null, 0.0F, 0.0F, 0.0F, 0.0F, true, lightSourceArray0, (float[][]) null, "X", true, false, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.getY();
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$VALU$S");
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[7];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setElevation(0.3926991F);
      homeLight0.isMovable();
      HomePieceOfFurniture homePieceOfFurniture0 = homeLight0.clone();
      CatalogTexture catalogTexture0 = new CatalogTexture("VALUE_ADDED_TAX_PERCENTAGE", (String) null, (Content) null, (-886.0F), 326.5F, "$VALU$S");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeLight0.setTexture(homeTexture0);
      homeLight0.setVisible(false);
      homePieceOfFurniture0.setDescription("Esx6}@\"=0E");
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.isTopRightPointAt(0.0F, 240.83984F, 240.83984F);
      homeLight0.getNameStyle();
      homePieceOfFurniture0.isVisible();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Integer integer0 = new Integer(1);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 1, 1, (-885.78705F), 1.0F, true, lightSourceArray0, (float[][]) null, "", true, true, true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight0.clone();
      homeLight0.isBottomLeftPointAt((float) integer0, 1, (float) integer0);
      homeLight0.clone();
      homeLight0.isTopLeftPointAt(327.0F, 1.0F, 327.0F);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      bigDecimal0.toPlainString();
      LightSource[] lightSourceArray0 = new LightSource[7];
      Sash[] sashArray0 = new Sash[3];
      Sash sash0 = new Sash(30.99F, 0.0F, (-1460.9753F), 755.215F, 1.0F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-1703.73F), 1.0F, 1244.1633F, (-1169.2F), (-1703.73F));
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(853.865F, 853.865F, (-636.454F), 5.2831855F, 3.4028235E38F);
      sashArray0[2] = sash2;
      Integer integer0 = new Integer(110);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("SF!~#pX06L/k9D6~.c", (Content) null, (Content) null, (-1.0F), (-1.0F), (-1.0F), 30.99F, true, 1244.1633F, 30.99F, sashArray0, integer0, (float[][]) null, true, 1.0F, true);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getNameXOffset();
      homeDoorOrWindow0.setDescription("");
      homeDoorOrWindow0.getPrice();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", "", (Content) null, (Content) null, (Content) null, 654, 654, (-886.0F), 1.0F, false, lightSourceArray0, (float[][]) null, ")", false, true, true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.getY();
      Float float0 = new Float((double) 654);
      homeLight1.setShininess(float0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight0.getDescription();
      HomeLight homeLight2 = new HomeLight(homeLight1);
      homeLight0.setNameAngle((-196));
      homeLight1.setNameYOffset(1218.695F);
      homeLight1.setNameYOffset(1.0F);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight2.getX();
      homeLight1.getPriceValueAddedTaxIncluded();
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      Float.min(1.0F, (-2903.233F));
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setElevation(0.3926991F);
      homeLight0.isBackFaceShown();
      homeLight1.isMovable();
      homeLight1.isNameCenterPointAt(1.0F, 327.0F, 1.0F);
      homeLight1.setNameXOffset(148.0F);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      bigDecimal0.toPlainString();
      LightSource[] lightSourceArray0 = new LightSource[7];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", (Content) null, (Content) null, (Content) null, 250.391F, (-1703.73F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "SF!~#pX06L/k9D6~.c", true, true, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setMovable(true);
      homeLight0.setVisible(false);
      homeLight0.setDescription("SF!~#pX06L/k9D6~.c");
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      CatalogLight catalogLight0 = new CatalogLight("{|8n=t4A?<m", "{|8n=t4A?<m", "{|8n=t4A?<m", (Content) null, (Content) null, (Content) null, 250.391F, 250.391F, (-196), 250.391F, false, lightSourceArray0, (float[][]) null, "{|8n=t4A?<m", false, false, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      Integer integer0 = new Integer((-196));
      Integer.remainderUnsigned((-196), (-196));
      homeLight0.setColor(integer0);
      homeLight0.setColor(integer0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[1];
      lightSourceArray0[0] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "com.eteks.sweethome3d.model.CatalogPieceOfFurniture", "8D]Jl`-U>bI2^", (Content) null, (Content) null, (Content) null, (-3631.3F), 1.0F, 0.0F, (-1609.2385F), false, lightSourceArray0, (float[][]) null, "", false, false, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = new HomeLight(homeLight0);
      HomeLight homeLight2 = homeLight0.clone();
      HomeLight homeLight3 = new HomeLight(homeLight2);
      homeLight3.setAngle((-196.0F));
      homeLight0.setElevation(0.0F);
      homeLight3.getY();
      homeLight1.isBackFaceShown();
      homeLight2.getElevation();
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[0] = lightSource0;
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setAngle(1.0F);
      homeLight0.setElevation(0.3926991F);
      homeLight0.getY();
      homeLight0.isBackFaceShown();
      homeLight0.getElevation();
      homeLight1.getStaircaseCutOutShape();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Float float0 = new Float((double) 669);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, true, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.isBackFaceShown();
      TextStyle textStyle0 = new TextStyle(250.391F, true, true);
      homeLight1.setNameStyle(textStyle0);
      homeLight1.isNameCenterPointAt(669, 250.391F, 669);
      homeLight1.setName("SF!~#pX06L/k9D6~.c");
      homeLight1.getDescription();
      homeLight0.setDescription("");
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      CatalogLight catalogLight0 = new CatalogLight("{|8n=t4A?<m", "{|8n=t4A?<m", "{|8n=t4A?<m", (Content) null, (Content) null, (Content) null, 250.391F, 250.391F, (-196), 250.391F, false, lightSourceArray0, (float[][]) null, "{|8n=t4A?<m", false, false, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setNameAngle(0.3926991F);
      Integer integer0 = new Integer((-196));
      Integer.remainderUnsigned((-196), (-196));
      homeLight0.setColor(integer0);
      homeLight0.setColor(integer0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", "", (Content) null, (Content) null, (Content) null, 654, 654, (-886.0F), 1.0F, false, lightSourceArray0, (float[][]) null, ")", false, true, true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      homeLight0.clone();
      homeLight0.getY();
      Float float0 = new Float((double) 654);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight0.getDescription();
      HomeLight homeLight1 = new HomeLight(catalogLight0);
      HomeLight homeLight2 = homeLight1.clone();
      homeLight2.setNameAngle(2.0F);
      homeLight1.setNameYOffset(5015.9834F);
      HomeLight homeLight3 = new HomeLight(homeLight1);
      homeLight3.setNameYOffset((-886.0F));
      Integer integer0 = new Integer(689);
      homeLight0.setColor(integer0);
      homeLight3.isBottomRightPointAt(5.213599F, 2.0F, 5015.9834F);
      homeLight0.containsPoint(5.213599F, 886.0F, 5015.9834F);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[0] = lightSource0;
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.getPlanIcon();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Float.max((-1.0F), (-886.0F));
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[0] = lightSource0;
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.clone();
      homeLight0.getY();
      homeLight0.isBackFaceShown();
      homeLight0.getDepth();
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Float float0 = new Float(1448.07377);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", ")", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 1.0F, false, lightSourceArray0, (float[][]) null, ")", false, true, true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1.5.0_16");
      Float float1 = new Float((float) (-196));
      homeLight0.setPower((-885.78705F));
      Float float2 = new Float((double) 654);
      homeLight0.setShininess(float2);
      homeLight0.isBackFaceShown();
      catalogLight0.getLightSources();
      HomeLight homeLight1 = new HomeLight(catalogLight0);
      homeLight0.setElevation(654);
      homeLight1.isNameCenterPointAt(0.5F, (-2256.066F), (-1315.357F));
      homeLight0.setNameXOffset((-2256.066F));
      homeLight0.isBottomRightPointAt(649.027F, 654, (-515.48566F));
      homeLight0.getNameAngle();
      homeLight0.getShininess();
      homeLight1.getStaircaseCutOutShape();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("W|;CO7koQ>5uNj", "W|;CO7koQ>5uNj", "[IO)B.U1Yny){", (Content) null, (Content) null, (Content) null, 654, 654, 326.24033F, (-0.7129222F), true, lightSourceArray0, (float[][]) null, "W|;CO7koQ>5uNj", true, true, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setPower(326.24033F);
      bigDecimal0.equals(catalogLight0);
      HomeLight homeLight1 = new HomeLight(catalogLight0);
      HomeLight homeLight2 = homeLight0.clone();
      homeLight2.setElevation((-196));
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight1.getHeight();
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Float float0 = new Float(0.0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Sash[] sashArray0 = new Sash[4];
      Sash sash0 = new Sash((-886.0F), 917.6F, 1633.8F, (-1.0F), (-886.0F));
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(0.0F, (-1.0F), 2.0F, 2764.0364F, 646.0F);
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-1810.77F), 831.9997F, 938.0F, 1.0F, (-1810.77F));
      sashArray0[2] = sash2;
      Sash sash3 = new Sash((-616.9678F), 0.3926991F, (-1810.77F), (-1810.77F), 2764.0364F);
      sashArray0[3] = sash3;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("ldwV7YUfDBdLDk\"?", "", "temp", (Content) null, (Content) null, (-886.0F), (-886.0F), (-886.0F), 831.9997F, true, 938.0F, (-1.0F), sashArray0, (float[][]) null, ")u@.~bOu\"", false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      HomeDoorOrWindow homeDoorOrWindow1 = homeDoorOrWindow0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("P}RL`eu_", propertyChangeListener0);
      homeDoorOrWindow1.removePropertyChangeListener(propertyChangeListenerProxy0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[7];
      CatalogLight catalogLight0 = new CatalogLight("S!~#pX0L/k9D6~.c", "S!~#pX0L/k9D6~.c", "S!~#pX0L/k9D6~.c", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, true, lightSourceArray0, (float[][]) null, "S!~#pX0L/k9D6~.c", true, true, true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isPointAt(250.391F, (-1.0F), (-1.0F));
      homeLight0.isBackFaceShown();
      homeLight0.setName("S!~#pX0L/k9D6~.c");
      homeLight0.getDescription();
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[1];
      lightSourceArray0[0] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "com.eteks.sweethome3d.model.CatalogPieceOfFurniture", "8D]Jl`-U>bI2^", (Content) null, (Content) null, (Content) null, (-3631.3F), 1.0F, 0.0F, (-1609.2385F), false, lightSourceArray0, (float[][]) null, "", false, false, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setElevation(250.391F);
      homeLight0.isBackFaceShown();
      homeLight0.setNameVisible(true);
      // Undeclared exception!
      try { 
        HomePieceOfFurniture.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomePieceOfFurniture.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Float float0 = new Float(1448.07377);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[5];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", "", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 1.0F, false, lightSourceArray0, (float[][]) null, ")", false, true, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      Integer integer0 = new Integer((-196));
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1.5.0_16");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.getY();
      Float float1 = new Float((-1694.0));
      homeLight0.setShininess(float1);
      homeLight1.isBackFaceShown();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight0.getDescription();
      HomeLight homeLight2 = new HomeLight(homeLight0);
      homeLight2.setNameAngle((-4604.32F));
      homeLight2.setNameYOffset(1.0F);
      homeLight0.setNameYOffset((-4634.881F));
      homeLight1.isBottomRightPointAt(770.0F, (-1.0F), (float) integer0);
      homeLight2.getCatalogId();
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Float float0 = new Float(0.0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", false, false, false, bigDecimal0, bigDecimal0);
      catalogLight0.setCategory((FurnitureCategory) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setElevation(0.3926991F);
      homeLight0.getY();
      homeLight0.isBackFaceShown();
      homeLight1.getElevation();
      homeLight1.isPointAt((-1.0F), (-52.54F), (-443.0F));
      homeLight1.isTopRightPointAt((-1.0F), (-1.0F), 2345.93F);
      homeLight0.getAngle();
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("W|;CO7koQ>5uNj", "W|;CO7koQ>5uNj", "[IO)B.U1Yny){", (Content) null, (Content) null, (Content) null, 654, 654, 654, 1.0F, true, lightSourceArray0, (float[][]) null, "W|;CO7koQ>5uNj", true, true, true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setPower(654);
      HomeLight homeLight1 = new HomeLight(catalogLight0);
      bigDecimal0.toBigInteger();
      homeLight0.clone();
      homeLight0.isNameCenterPointAt(327.0F, 0.5F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Float.max((-196), 654);
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[0] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-886.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("!/");
      homeLight0.setNameXOffset((-196));
      Float float1 = new Float((float) (-196));
      homeLight0.isBackFaceShown();
      homeLight0.containsPoint((-886.0F), 250.391F, 1.0F);
      homeLight0.setNameYOffset((-886.0F));
      homeLight0.getShininess();
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", "", (Content) null, (Content) null, (Content) null, 654, 654, (-886.0F), 1.0F, false, lightSourceArray0, (float[][]) null, ")", false, true, true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.getY();
      Level level0 = new Level("^?I1uo`z ?u}", 310.033F, (-3990.6118F), 310.033F);
      Level level1 = level0.clone();
      homeLight1.setLevel(level1);
      Float float1 = new Float((double) 654);
      homeLight1.setShininess(float1);
      homeLight0.isBackFaceShown();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight0.getDescription();
      HomeLight homeLight2 = new HomeLight(homeLight1);
      homeLight0.setNameAngle((-196));
      homeLight0.setNameYOffset((-1.0F));
      homeLight1.setNameYOffset(1218.695F);
      homeLight1.setNameYOffset(1.0F);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight0.intersectsRectangle(0.0F, 184.0F, 2350.0F, 654);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[0] = lightSource0;
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("!/");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.getY();
      homeLight0.isBackFaceShown();
      homeLight0.containsPoint((-886.0F), 250.391F, 1.0F);
      homeLight0.getDescription();
      homeLight1.setNameYOffset((-1745.7F));
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      bigDecimal0.toPlainString();
      LightSource[] lightSourceArray0 = new LightSource[7];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-890.4281F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\",=0E", true, true, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setElevation((-1.0F));
      homeLight0.setVisible(false);
      homeLight0.getPriceValueAddedTaxIncluded();
      homeLight0.isTopRightPointAt(0.0F, 250.391F, (-890.4281F));
      homeLight0.setDescription("fDZ+M>\"(");
      homeLight0.clone();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$VALUES");
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[7];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.setCategory((FurnitureCategory) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setElevation(0.3926991F);
      homeLight1.isMovable();
      homeLight1.setElevation((-3486.75F));
      homeLight1.getY();
      homeLight0.isBackFaceShown();
      homeLight0.getElevation();
      homeLight1.isPointAt((-1.0F), 1834.2577F, 127.1955F);
      homeLight1.isTopRightPointAt((-1423.808F), 0.5F, (-3486.75F));
      homeLight1.isBackFaceShown();
      homeLight1.getGroundElevation();
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Integer integer0 = new Integer(1);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 1, 1, (-885.78705F), 1, false, lightSourceArray0, (float[][]) null, "", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setElevation((-885.768F));
      homeLight0.isTopRightPointAt(1, 1, (-885.78705F));
      homeLight0.clone();
      homeLight0.isBottomLeftPointAt(1, (-885.768F), 1);
      // Undeclared exception!
      try { 
        homeLight0.setModelMirrored(false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 654, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[1] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-196), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setElevation(0.3926991F);
      homeLight0.isBackFaceShown();
      homeLight1.isNameCenterPointAt(654, 654, 654);
      homeLight0.isResizable();
      homeLight1.setDepth((-414.31F));
      homeLight1.isBottomRightPointAt(0.0F, 250.391F, 250.391F);
      homeLight1.getIcon();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Float float0 = new Float((double) 654);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 654, 654, 654, 7.2619F, true, lightSourceArray0, (float[][]) null, "", true, true, true, bigDecimal0, bigDecimal0);
      Integer.valueOf(654);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      LinkedList<HomePieceOfFurniture> linkedList1 = new LinkedList<HomePieceOfFurniture>();
      LinkedList<HomePieceOfFurniture> linkedList2 = new LinkedList<HomePieceOfFurniture>();
      linkedList2.add((HomePieceOfFurniture) homeLight1);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList2, "");
      homeLight1.getPlanIcon();
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Float float0 = new Float(0.0);
      float float1 = 1.0F;
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight(")", "l&a_5M2ADr\"re9'H/eY", "", (Content) null, (Content) null, (Content) null, 654, 654, (-886.0F), 1.0F, false, lightSourceArray0, (float[][]) null, ")", false, false, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      bigDecimal0.scale();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1.5.0_16");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setName("1.5.0_16");
      homeLight1.getY();
      homeLight1.isBackFaceShown();
      homeLight0.containsPoint((-1.0F), 654, (-886.0F));
      homeLight0.getDescription();
      HomeLight homeLight2 = new HomeLight(homeLight0);
      // Undeclared exception!
      try { 
        homeLight2.setHeight(1.0F);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[0] = lightSource0;
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "sx6}\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.clone();
      homeLight0.setElevation(250.391F);
      homeLight0.isBackFaceShown();
      homeLight0.setNameVisible(false);
      homeLight1.clone();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[1];
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogLight catalogLight0 = new CatalogLight("", "", ">.mc[-V!-", (Content) null, (Content) null, uRLContent0, (-886.0F), 654, (-196), 1.0F, true, lightSourceArray0, (float[][]) null, ")", false, false, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription(",ycFF");
      homeLight0.setNameXOffset((-886.0F));
      HomeLight homeLight1 = homeLight0.clone();
      Float float1 = new Float(1.0F);
      homeLight0.isBackFaceShown();
      homeLight0.setMovable(false);
      homeLight0.containsPoint((-886.0F), 1.0F, (-886.0F));
      homeLight0.setNameYOffset(0.5F);
      homeLight0.setDescription(">.mc[-V!-");
      homeLight1.getIcon();
      homeLight0.getAngle();
      homeLight1.getHeight();
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[0] = lightSource0;
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.getPriceValueAddedTaxIncluded();
      homeLight0.clone();
      homeLight0.setElevation(0.3926991F);
      homeLight0.getY();
      homeLight0.isBackFaceShown();
      homeLight0.getCatalogId();
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Float float0 = new Float(1448.07377);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[5];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", "", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 1.0F, false, lightSourceArray0, (float[][]) null, ")", false, true, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      Integer integer0 = new Integer((-196));
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1.5.0_16");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.getY();
      Float float1 = new Float((-1694.0));
      homeLight0.setShininess(float1);
      homeLight1.isBackFaceShown();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight0.getDescription();
      HomeLight homeLight2 = new HomeLight(homeLight0);
      homeLight2.setNameAngle((-4604.32F));
      homeLight2.setNameYOffset(1.0F);
      homeLight0.setNameYOffset((-4634.881F));
      homeLight1.isBottomRightPointAt(770.0F, (-1.0F), (float) integer0);
      homeLight0.getNameXOffset();
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Float float0 = new Float(0.0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", (Content) null, (Content) null, (Content) null, 250.391F, 250.391F, (-3.2639718F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setElevation(0.3926991F);
      homeLight0.isBackFaceShown();
      homeLight1.isNameCenterPointAt(659, 250.391F, 659);
      homeLight0.isResizable();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      bigDecimal0.toPlainString();
      LightSource[] lightSourceArray0 = new LightSource[7];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-890.4281F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\",=0E", true, true, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setHeight(250.391F);
      homeLight1.setVisible(true);
      homeLight0.getCatalogId();
      homeLight1.isModelMirrored();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      bigDecimal0.toPlainString();
      LightSource[] lightSourceArray0 = new LightSource[7];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-890.4281F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\",=0E", true, true, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setElevation((-1.0F));
      homeLight0.setVisible(false);
      homeLight0.getPriceValueAddedTaxIncluded();
      homeLight0.intersectsRectangle((-890.4281F), 0.0F, (-890.4281F), 1595.48F);
      homeLight0.isTopRightPointAt(0.0F, 250.391F, (-890.4281F));
      homeLight0.setDescription("fDZ+M>\"(");
      homeLight0.getGroundElevation();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[1];
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogLight catalogLight0 = new CatalogLight("", "", ">.mc[-V!-", (Content) null, (Content) null, uRLContent0, (-886.0F), 654, (-196), 1.0F, true, lightSourceArray0, (float[][]) null, ")", false, false, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription(",ycFF");
      homeLight0.setNameXOffset((-886.0F));
      homeLight0.clone();
      Float float1 = new Float(1.0F);
      homeLight0.isBackFaceShown();
      homeLight0.setMovable(false);
      homeLight0.containsPoint((-886.0F), 1.0F, (-886.0F));
      homeLight0.setNameYOffset(0.5F);
      homeLight0.isTopLeftPointAt(654, 328.0F, 654);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", ")", (Content) null, (Content) null, (Content) null, 708, 708, (-885.78705F), 708, false, lightSourceArray0, (float[][]) null, ")", false, true, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.getLightSources();
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setElevation((-885.78705F));
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight1.setNameYOffset(2365.9F);
      HomeLight homeLight2 = homeLight0.clone();
      homeLight2.isTopLeftPointAt((-885.78705F), 708, 2365.9F);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[5];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 1.0F, true, lightSourceArray0, (float[][]) null, "", true, true, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      catalogLight0.getLightSources();
      BigDecimal.valueOf(0L, 654);
      homeLight0.clone();
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setModelMirrored(true);
      homeLight1.setElevation(0.0F);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight0.isTopRightPointAt(654, 654, 654);
      homeLight1.setDescription("WIDTH");
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Float.min(1.0F, 1.0F);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[7];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.setCategory((FurnitureCategory) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setElevation(0.3926991F);
      homeLight1.isMovable();
      HomePieceOfFurniture homePieceOfFurniture0 = homeLight1.clone();
      homeLight1.setVisible(false);
      homeLight1.getTexture();
      homePieceOfFurniture0.setTexture((HomeTexture) null);
      homePieceOfFurniture0.getValueAddedTax();
      homePieceOfFurniture0.getValueAddedTaxPercentage();
      homeLight0.setVisible(false);
      homeLight0.isTopRightPointAt(1.0F, (-1287.2F), 0.3926991F);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Integer integer0 = new Integer(1);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 1, 1, (-885.78705F), 1.0F, true, lightSourceArray0, (float[][]) null, "", true, true, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.isBottomLeftPointAt((float) integer0, 1, (float) integer0);
      homeLight1.clone();
      homeLight1.isTopLeftPointAt((-313.99905F), 1.0F, (-313.99905F));
      homeLight1.setElevation((-885.768F));
      homeLight0.getPriceValueAddedTaxIncluded();
      homeLight0.isTopRightPointAt(1, 1.0F, 270.99F);
      HomeLight homeLight2 = homeLight0.clone();
      homeLight0.isBottomLeftPointAt(1, (-885.768F), 1);
      homeLight2.setDepth(1.0F);
      homeLight0.setModelMirrored(true);
      homeLight2.getNameStyle();
      homeLight0.clone();
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((-202));
      LightSource[] lightSourceArray0 = new LightSource[8];
      CatalogLight catalogLight0 = new CatalogLight("{|8n=t4A?<m", "{|8n=t4A?<m", "{|8n=t4A?<m", (Content) null, (Content) null, (Content) null, 277.9044F, 277.9044F, (-202), 277.9044F, false, lightSourceArray0, (float[][]) null, "{|8n=t4A?<m", false, false, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      Integer integer0 = new Integer((-202));
      Integer.remainderUnsigned((-202), (-202));
      homeLight0.setColor(integer0);
      homeLight0.setColor(integer0);
      homeLight0.getColor();
      homeLight0.clone();
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Float float0 = new Float(0.0);
      Float.min(1.0F, 1.0F);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[7];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.setCategory((FurnitureCategory) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setElevation(0.3926991F);
      homeLight0.isBackFaceShown();
      homeLight1.isMovable();
      HomePieceOfFurniture homePieceOfFurniture0 = homeLight1.clone();
      homePieceOfFurniture0.getValueAddedTax();
      homePieceOfFurniture0.getValueAddedTaxPercentage();
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      linkedList0.add(homePieceOfFurniture0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, (String) null);
      List<HomePieceOfFurniture> list0 = homeFurnitureGroup0.getFurniture();
      LinkedList<HomePieceOfFurniture> linkedList1 = new LinkedList<HomePieceOfFurniture>();
      HomeFurnitureGroup homeFurnitureGroup1 = new HomeFurnitureGroup(list0, "SF!~#pX06L/k9D6~.c");
      homePieceOfFurniture0.getDescription();
      homeLight0.getPoints();
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Float float0 = new Float(0.0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LightSource[] lightSourceArray0 = new LightSource[1];
      CatalogLight catalogLight0 = new CatalogLight("", "com.eteks.sweethome3d.model.CatalogPieceOfFurniture", "8D]Jl`-UI2^", (Content) null, (Content) null, (Content) null, (-3631.3F), 1.0F, 0.0F, (-1609.2385F), false, lightSourceArray0, (float[][]) null, "", false, false, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setElevation(250.391F);
      homeLight1.setNameYOffset((-465.7F));
      homeLight0.getElevation();
      homeLight0.isPointAt((-878.1966F), (-3631.3F), (-2381.2197F));
      homeLight0.isTopRightPointAt((-2992.5076F), (-287.0F), (-878.1966F));
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1089.8585F), 250.391F, true, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.getValueAddedTax();
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      linkedList0.add((HomePieceOfFurniture) homeLight0);
      LinkedList<HomePieceOfFurniture> linkedList1 = new LinkedList<HomePieceOfFurniture>();
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "");
      homeLight0.getPlanIcon();
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Float float0 = new Float(0.0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", false, false, false, bigDecimal0, bigDecimal0);
      catalogLight0.setCategory((FurnitureCategory) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setElevation(0.3926991F);
      homeLight0.getY();
      homeLight0.isBackFaceShown();
      homeLight1.getElevation();
      homeLight1.isPointAt((-1.0F), (-52.54F), (-443.0F));
      homeLight1.isTopRightPointAt((-1.0F), (-1.0F), 2345.93F);
      homeLight0.isBackFaceShown();
      HomeLight homeLight2 = homeLight0.clone();
      // Undeclared exception!
      try { 
        homeLight2.setDepth((-443.0F));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      bigDecimal0.toPlainString();
      LightSource[] lightSourceArray0 = new LightSource[7];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", (Content) null, (Content) null, (Content) null, 250.391F, (-889.7834F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\",=0E", true, true, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("SF!~#pX06L/k9D6~.c");
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[0] = lightSource0;
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", false, false, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setElevation(0.3926991F);
      homeLight0.getY();
      homeLight0.isBackFaceShown();
      homeLight0.getElevation();
      homeLight0.isPointAt((-1.0F), (-886.0F), 1.0F);
      homeLight0.isTopRightPointAt((-196), (-1.0F), 250.391F);
      homeLight0.getColor();
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Integer integer0 = new Integer(1);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 1, 1, (-885.78705F), 1, false, lightSourceArray0, (float[][]) null, "", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight0.isTopRightPointAt(1, 1, (-885.78705F));
      homeLight0.clone();
      homeLight0.isTopLeftPointAt(1, 1, (-886.0F));
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Float float0 = new Float(1448.07377);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 1.0F, false, lightSourceArray0, (float[][]) null, "", false, true, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      Integer integer0 = new Integer((-196));
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1.5.0_16");
      Float float1 = new Float((float) (-196));
      homeLight0.setPower((-885.78705F));
      homeLight0.setShininess(float0);
      homeLight0.isBackFaceShown();
      catalogLight0.getLightSources();
      HomeLight homeLight1 = homeLight0.clone();
      HomeLight homeLight2 = homeLight1.clone();
      homeLight2.setElevation((-196));
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight1.isNameCenterPointAt(649.027F, 654, 649.027F);
      homeLight1.setNameXOffset(654);
      homeLight1.isResizable();
      homeLight1.isBottomRightPointAt(649.027F, (-1240.5F), 3.4028235E38F);
      homeLight2.getNameAngle();
      homeLight2.getName();
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Float float0 = new Float(1448.07377);
      LightSource lightSource0 = new LightSource(654, 654, 7.2618704F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", ".", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 7.2618704F, false, lightSourceArray0, (float[][]) null, "", false, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      Integer integer0 = new Integer((-196));
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setShininess(float0);
      Float float1 = new Float((float) (-196));
      homeLight0.setPower((-885.78705F));
      homeLight0.setShininess(float0);
      homeLight0.isBackFaceShown();
      HomeLight homeLight1 = new HomeLight(catalogLight0);
      HomeLight homeLight2 = homeLight1.clone();
      homeLight2.setElevation((-196));
      homeLight2.setNameAngle((-196));
      homeLight0.setDescription("");
      homeLight1.getCurrency();
      homeLight2.getNameAngle();
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 1, 1, (-886.0F), 1, false, lightSourceArray0, (float[][]) null, "", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight0.isTopRightPointAt(1, 1, (-886.0F));
      homeLight0.clone();
      homeLight0.clone();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Float float0 = new Float((double) 654);
      LightSource lightSource0 = new LightSource(654, 654, 654, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Float.max((-196), 654);
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[0] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-886.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "fDZ+M>\"(", true, true, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("SF!~#pX06L/k9D6~.c");
      homeLight0.clone();
      homeLight0.setNameXOffset((-196));
      Float float1 = new Float((float) (-196));
      homeLight0.isBackFaceShown();
      HomePieceOfFurniture homePieceOfFurniture0 = homeLight0.clone();
      homePieceOfFurniture0.getDepth();
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Float float0 = new Float(0.0);
      Float.min(1.0F, 1.0F);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[7];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.setCategory((FurnitureCategory) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setElevation(0.3926991F);
      homeLight1.isMovable();
      HomePieceOfFurniture homePieceOfFurniture0 = homeLight1.clone();
      homePieceOfFurniture0.getValueAddedTax();
      homePieceOfFurniture0.getValueAddedTaxPercentage();
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      linkedList0.add(homePieceOfFurniture0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, (String) null);
      List<HomePieceOfFurniture> list0 = homeFurnitureGroup0.getFurniture();
      LinkedList<HomePieceOfFurniture> linkedList1 = new LinkedList<HomePieceOfFurniture>();
      HomeFurnitureGroup homeFurnitureGroup1 = new HomeFurnitureGroup(list0, "SF!~#pX06L/k9D6~.c");
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("SHININESS", propertyChangeListener0);
      homeLight0.addPropertyChangeListener(propertyChangeListenerProxy0);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      bigDecimal0.toPlainString();
      LightSource[] lightSourceArray0 = new LightSource[7];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, 250.391F, (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "10", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setElevation((-1.0F));
      homeLight0.setVisible(false);
      homeLight0.getCatalogId();
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Float float0 = new Float(1448.07377);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", "", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 1.0F, false, lightSourceArray0, (float[][]) null, ")", false, true, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      Integer integer0 = new Integer((-196));
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1.5.0_16");
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.getY();
      homeLight1.setPower(3718.6882F);
      Float float1 = new Float((-1694.0));
      homeLight0.setShininess(float1);
      homeLight1.isBackFaceShown();
      catalogLight0.getLightSources();
      HomeLight homeLight2 = new HomeLight(catalogLight0);
      HomeLight homeLight3 = homeLight2.clone();
      homeLight3.setElevation((-196));
      homeLight3.isBackFaceShown();
      homeLight0.isNameCenterPointAt(327.0F, 0.5F, 0.3926991F);
      homeLight2.isResizable();
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Float float0 = new Float(0.0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.setCategory((FurnitureCategory) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.isBackFaceShown();
      homeLight1.isMovable();
      homeLight1.setWidth(2543.2756F);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight1.isNameCenterPointAt(1.0F, 327.0F, 1.0F);
      homeLight1.isVisible();
      homeLight1.move(1.0F, (-165.8F));
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 654, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[0] = lightSource0;
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("!/");
      homeLight0.getY();
      homeLight0.isBackFaceShown();
      homeLight0.containsPoint((-886.0F), 250.391F, 654);
      homeLight0.getDescription();
      homeLight0.setNameYOffset((-1745.7F));
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((-196));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LightSource[] lightSourceArray0 = new LightSource[8];
      CatalogLight catalogLight0 = new CatalogLight("{|8n=t4A?<m", "{|8n=t4A?<m", "{|8n=t4A?<m", (Content) null, (Content) null, (Content) null, 277.9044F, 277.9044F, (-196), 277.9044F, false, lightSourceArray0, (float[][]) null, "{|8n=t4A?<m", false, false, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      Float float0 = new Float((float) (-196));
      homeLight0.setShininess(float0);
      HomeLight homeLight1 = new HomeLight(homeLight0);
      HomeLight homeLight2 = homeLight1.clone();
      homeLight2.getGroundElevation();
      homeLight2.isBottomRightPointAt(277.9044F, 277.9044F, 277.9044F);
      homeLight2.setAngle(2.0F);
      homeLight0.getPrice();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((-196));
      LightSource[] lightSourceArray0 = new LightSource[8];
      CatalogLight catalogLight0 = new CatalogLight("{|8n=t4A?<m", "{|8n=t4A?<m", "{|8n=t4A?<m", (Content) null, (Content) null, (Content) null, 277.9044F, 277.9044F, (-196), 277.9044F, false, lightSourceArray0, (float[][]) null, "{|8n=t4A?<m", false, false, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      Integer integer0 = new Integer((-196));
      Integer.remainderUnsigned((-196), (-196));
      homeLight0.setColor(integer0);
      homeLight0.setColor(integer0);
      homeLight0.getShininess();
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Float float0 = new Float(0.0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.move((-200.9F), 3.4028235E38F);
      homeLight0.isBottomLeftPointAt((-2577.51F), 250.391F, (-1676.5629F));
      // Undeclared exception!
      try { 
        homeLight0.setModelMirrored(false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 654, (-196), float0);
      Float.min(654, (-2903.233F));
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setElevation(0.3926991F);
      homeLight0.isBackFaceShown();
      homeLight1.isMovable();
      homeLight1.isNameCenterPointAt(654, 327.0F, 654);
      homeLight0.getPlanIcon();
      homeLight0.setWidth((-2903.233F));
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Float float0 = new Float(1826872.0535161907);
      LightSource lightSource0 = new LightSource(654, 654, 654, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[1] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-196), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setElevation(0.3926991F);
      homeLight0.isBackFaceShown();
      homeLight1.isNameCenterPointAt(654, 654, 654);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight1.isTopLeftPointAt(654, 0.0F, (-1397.0283F));
      homeLight1.getNameStyle();
      homeLight1.getAngle();
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Float float0 = new Float(1448.07377);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", "", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 1.0F, false, lightSourceArray0, (float[][]) null, ")", false, true, true, bigDecimal0, bigDecimal0);
      Integer integer0 = new Integer((-196));
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1.5.0_16");
      homeLight0.setX(2764.0364F);
      Float float1 = new Float((float) (-196));
      homeLight0.setPower((-885.78705F));
      Float float2 = new Float((-1694.0));
      homeLight0.setShininess(float2);
      homeLight0.isBackFaceShown();
      catalogLight0.getLightSources();
      HomeLight homeLight1 = new HomeLight(catalogLight0);
      homeLight0.setElevation((-196));
      homeLight1.isBackFaceShown();
      homeLight1.setDescription("");
      homeLight1.setName(")");
      homeLight0.getDepth();
      homeLight1.isPointAt((-885.78705F), 1.0F, 654);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", (Content) null, (Content) null, (Content) null, 249.55373F, (-887.5109F), (-1.0F), 249.55373F, false, lightSourceArray0, (float[][]) null, "SF!~#pX06L/k9D6~.c", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isNameCenterPointAt((-1.0F), 0.0F, (-887.5109F));
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[0] = lightSource0;
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.getPriceValueAddedTaxIncluded();
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setElevation(0.3926991F);
      homeLight1.getElevation();
      homeLight0.isPointAt(654, 250.391F, 250.391F);
      homeLight0.isNameVisible();
      Integer.valueOf(1165);
      Integer.valueOf(1165);
      Integer.valueOf((-1494));
      Integer.valueOf(0);
      Integer.valueOf(3);
      Integer.valueOf(1429);
      Integer integer0 = Integer.valueOf(1);
      homeLight0.setColor(integer0);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Float float0 = new Float(0.0);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Float.max((-196), 654);
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[0] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-886.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("!/");
      homeLight0.setNameXOffset((-196));
      Float float1 = new Float((float) (-196));
      homeLight0.isBackFaceShown();
      homeLight0.setMovable(true);
      homeLight0.containsPoint((-886.0F), 250.391F, 1.0F);
      homeLight0.setNameYOffset((-886.0F));
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Float float0 = new Float(1448.07377);
      LightSource lightSource0 = new LightSource(654, (-196), 654, 654);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[4];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", ")", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 1.0F, true, lightSourceArray0, (float[][]) null, ")", true, true, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1.5.0_16");
      Float float1 = new Float((double) 654);
      homeLight0.isBackFaceShown();
      homeLight0.isMovable();
      Level level0 = new Level("1.5.0_16", 1.0F, 654, (-196));
      homeLight0.isAtLevel(level0);
      homeLight0.setDescription(")");
      CatalogTexture catalogTexture0 = new CatalogTexture(")", (Content) null, (-1987.9962F), 654, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeLight0.setTexture(homeTexture0);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Float float0 = new Float(1448.07377);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", "", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 1.0F, false, lightSourceArray0, (float[][]) null, ")", false, true, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      Integer integer0 = new Integer((-196));
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1.5.0_16");
      HomeLight homeLight1 = homeLight0.clone();
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("M&d2N[", (PropertyChangeListener) null);
      homeLight1.removePropertyChangeListener(propertyChangeListenerProxy0);
      Float float1 = new Float((float) (-196));
      homeLight1.setPower((-885.78705F));
      Float float2 = new Float((-1694.0));
      homeLight0.setShininess(float2);
      homeLight1.isBackFaceShown();
      catalogLight0.getLightSources();
      HomeLight homeLight2 = new HomeLight(catalogLight0);
      HomeLight homeLight3 = homeLight2.clone();
      homeLight3.setElevation((-196));
      homeLight3.isBackFaceShown();
      homeLight0.isNameCenterPointAt(327.0F, 0.5F, 0.3926991F);
      homeLight2.isResizable();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Float float0 = new Float(1448.07377);
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 1.0F, false, lightSourceArray0, (float[][]) null, "", false, true, true, bigDecimal0, bigDecimal0);
      catalogLight0.getLightSources();
      Integer integer0 = new Integer((-196));
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1.5.0_16");
      Float float1 = new Float((float) (-196));
      homeLight0.setPower((-885.78705F));
      homeLight0.setShininess(float0);
      homeLight0.isBackFaceShown();
      catalogLight0.getLightSources();
      homeLight0.isBottomRightPointAt((-885.78705F), 470.34677F, 2543.2756F);
      HomeLight homeLight1 = new HomeLight(catalogLight0);
      HomeLight homeLight2 = homeLight1.clone();
      homeLight2.setElevation((-196));
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight0.isNameCenterPointAt(327.0F, 0.5F, 0.3926991F);
      homeLight1.isResizable();
      homeLight1.getPlanIcon();
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Float float0 = new Float((-4.521648065767067));
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      float float1 = 250.391F;
      LightSource[] lightSourceArray0 = new LightSource[7];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "SF!~#pX06L/k9D6~.c", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      float float2 = 3.4028235E38F;
      // Undeclared exception!
      try { 
        homeLight0.setWidth((-886.0F));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Float float0 = new Float(1448.07377);
      LightSource lightSource0 = new LightSource(654, 654, 654, (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", ")", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 654, false, lightSourceArray0, (float[][]) null, ")", false, true, true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1.5.0_16");
      Float float1 = new Float((float) (-196));
      homeLight0.setPower((-885.78705F));
      Float float2 = new Float((double) 654);
      homeLight0.setShininess(float2);
      homeLight0.isBackFaceShown();
      catalogLight0.getLightSources();
      HomeLight homeLight1 = new HomeLight(catalogLight0);
      homeLight0.setElevation(654);
      homeLight1.getY();
      homeLight0.isBackFaceShown();
      homeLight0.getElevation();
      homeLight1.isBottomLeftPointAt(654, 1235.0F, (-2253.676F));
      HomePieceOfFurniture.Property.values();
      homeLight1.getTexture();
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Float float0 = new Float(1448.07377);
      LightSource lightSource0 = new LightSource(654, (-196), (-196), (-196), float0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight(")", "Windows", "com.eteks.sweethome3d.model.FurnitureCategory", (Content) null, (Content) null, (Content) null, (-885.78705F), (-196), 1.0F, (-910.0F), true, lightSourceArray0, (float[][]) null, "zx8o!9vKJ]ru)*Qy", true, true, true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      HomeLight homeLight2 = homeLight0.clone();
      homeLight0.setElevation((-1750.4F));
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeLight homeLight3 = new HomeLight(homeLight2);
      homeLight3.setNameYOffset((-910.0F));
      HomeLight homeLight4 = homeLight2.clone();
      homeLight4.isTopLeftPointAt(0.0F, (-885.78705F), (-885.78705F));
      homeLight1.getCurrency();
      homeLight4.getX();
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Float float0 = new Float(0.0);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", false, false, false, bigDecimal0, bigDecimal0);
      catalogLight0.setCategory((FurnitureCategory) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setElevation(0.3926991F);
      homeLight0.getY();
      homeLight0.isBackFaceShown();
      homeLight1.getElevation();
      homeLight1.setPower(250.391F);
      homeLight1.isPointAt((-1.0F), (-52.54F), (-443.0F));
      homeLight1.isTopRightPointAt((-1.0F), (-1.0F), 2345.93F);
      homeLight0.getWidth();
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[5] = lightSourceArray0[3];
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", (Content) null, (Content) null, (Content) null, 249.55373F, 249.55373F, (-1.0F), 249.55373F, false, lightSourceArray0, (float[][]) null, "SF!~#pX06L/k9D6~.c", false, false, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isBottomRightPointAt(3.4028235E38F, 249.55373F, 3.4028235E38F);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      LightSource[] lightSourceArray0 = new LightSource[8];
      CatalogLight catalogLight0 = new CatalogLight("", "SF!~#pX06L/k9D6~.c", "", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-196), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", false, false, false, bigDecimal0, bigDecimal0);
      assertNotNull(catalogLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(250.391F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(250.391F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-886.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getName());
      assertNull(catalogLight0.getGrade());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-196.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals("Esx6}@\"=0E", catalogLight0.getCreator());
      assertTrue(catalogLight0.isProportional());
      assertEquals("", catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreationDate());
      assertEquals("", catalogLight0.getDescription());
      assertFalse(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(8, lightSourceArray0.length);
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotNull(lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(250.391F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(250.391F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-886.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getName());
      assertNull(catalogLight0.getGrade());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-196.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals("Esx6}@\"=0E", catalogLight0.getCreator());
      assertTrue(catalogLight0.isProportional());
      assertEquals("", catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreationDate());
      assertEquals("", catalogLight0.getDescription());
      assertFalse(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(8, lightSourceArray0.length);
      assertEquals(8, lightSourceArray1.length);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertNotNull(homeLight0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(250.391F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(250.391F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-886.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getName());
      assertNull(catalogLight0.getGrade());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-196.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals("Esx6}@\"=0E", catalogLight0.getCreator());
      assertTrue(catalogLight0.isProportional());
      assertEquals("", catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreationDate());
      assertEquals("", catalogLight0.getDescription());
      assertFalse(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(250.391F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals("", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(250.391F, homeLight0.getElevation(), 0.01F);
      assertEquals((-196.0F), homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals((-886.0F), homeLight0.getDepth(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(250.391F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-443.0F), homeLight0.getY(), 0.01F);
      assertEquals(125.1955F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(8, lightSourceArray0.length);
      
      Integer integer0 = new Integer((-196));
      assertNotNull(integer0);
      assertEquals((-196), (int)integer0);
      
      int int0 = Integer.remainderUnsigned((-196), (-609));
      assertEquals(413, int0);
      
      homeLight0.setColor(integer0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(integer0.equals((Object)int0));
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(250.391F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(250.391F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-886.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getName());
      assertNull(catalogLight0.getGrade());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-196.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals("Esx6}@\"=0E", catalogLight0.getCreator());
      assertTrue(catalogLight0.isProportional());
      assertEquals("", catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreationDate());
      assertEquals("", catalogLight0.getDescription());
      assertFalse(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(250.391F, homeLight0.getWidth(), 0.01F);
      assertEquals((-196), (int)homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals("", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(250.391F, homeLight0.getElevation(), 0.01F);
      assertEquals((-196.0F), homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals((-886.0F), homeLight0.getDepth(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(250.391F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-443.0F), homeLight0.getY(), 0.01F);
      assertEquals(125.1955F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(8, lightSourceArray0.length);
      
      boolean boolean0 = homeLight0.isPointAt((-1.0F), (-886.0F), 1.0F);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(250.391F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(250.391F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-886.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getName());
      assertNull(catalogLight0.getGrade());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-196.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals("Esx6}@\"=0E", catalogLight0.getCreator());
      assertTrue(catalogLight0.isProportional());
      assertEquals("", catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreationDate());
      assertEquals("", catalogLight0.getDescription());
      assertFalse(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(250.391F, homeLight0.getWidth(), 0.01F);
      assertEquals((-196), (int)homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals("", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(250.391F, homeLight0.getElevation(), 0.01F);
      assertEquals((-196.0F), homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals((-886.0F), homeLight0.getDepth(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(250.391F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-443.0F), homeLight0.getY(), 0.01F);
      assertEquals(125.1955F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(8, lightSourceArray0.length);
      
      boolean boolean1 = homeLight0.isBottomLeftPointAt((-1.0F), 398.87F, (-886.0F));
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(250.391F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(250.391F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-886.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getName());
      assertNull(catalogLight0.getGrade());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-196.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals("Esx6}@\"=0E", catalogLight0.getCreator());
      assertTrue(catalogLight0.isProportional());
      assertEquals("", catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreationDate());
      assertEquals("", catalogLight0.getDescription());
      assertFalse(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(250.391F, homeLight0.getWidth(), 0.01F);
      assertEquals((-196), (int)homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals("", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(250.391F, homeLight0.getElevation(), 0.01F);
      assertEquals((-196.0F), homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals((-886.0F), homeLight0.getDepth(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(250.391F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-443.0F), homeLight0.getY(), 0.01F);
      assertEquals(125.1955F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(8, lightSourceArray0.length);
      
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      
      homeLight0.setColor(integer0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(integer0.equals((Object)int0));
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(250.391F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(250.391F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-886.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getName());
      assertNull(catalogLight0.getGrade());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-196.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals("Esx6}@\"=0E", catalogLight0.getCreator());
      assertTrue(catalogLight0.isProportional());
      assertEquals("", catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreationDate());
      assertEquals("", catalogLight0.getDescription());
      assertFalse(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(250.391F, homeLight0.getWidth(), 0.01F);
      assertEquals((-196), (int)homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals("", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(250.391F, homeLight0.getElevation(), 0.01F);
      assertEquals((-196.0F), homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals((-886.0F), homeLight0.getDepth(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(250.391F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-443.0F), homeLight0.getY(), 0.01F);
      assertEquals(125.1955F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(8, lightSourceArray0.length);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Float float0 = new Float(0.0);
      assertNotNull(float0);
      assertEquals(0.0F, (float)float0, 0.01F);
      
      LightSource lightSource0 = new LightSource(654, 654, 1.0F, (-196), float0);
      assertNotNull(lightSource0);
      assertEquals((-196), lightSource0.getColor());
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(1.0F, lightSource0.getZ(), 0.01F);
      assertEquals(654.0F, lightSource0.getX(), 0.01F);
      assertEquals(654.0F, lightSource0.getY(), 0.01F);
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[0] = lightSource0;
      lightSourceArray0[1] = lightSource0;
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource0;
      lightSourceArray0[7] = lightSource0;
      CatalogLight catalogLight0 = new CatalogLight("SF!~#pX06L/k9D6~.c", "SF!~#pX06L/k9D6~.c", "fDZ+M>\"(", (Content) null, (Content) null, (Content) null, 250.391F, (-886.0F), (-1.0F), 250.391F, false, lightSourceArray0, (float[][]) null, "Esx6}@\"=0E", true, true, false, bigDecimal0, bigDecimal0);
      assertNotNull(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals("Esx6}@\"=0E", catalogLight0.getCreator());
      assertFalse(catalogLight0.isMovable());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getId());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-886.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-1.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals("fDZ+M>\"(", catalogLight0.getDescription());
      assertNull(catalogLight0.getGrade());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(250.391F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(250.391F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCreationDate());
      assertEquals(8, lightSourceArray0.length);
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotNull(lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals("Esx6}@\"=0E", catalogLight0.getCreator());
      assertFalse(catalogLight0.isMovable());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getId());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-886.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-1.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals("fDZ+M>\"(", catalogLight0.getDescription());
      assertNull(catalogLight0.getGrade());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(250.391F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(250.391F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCreationDate());
      assertEquals(8, lightSourceArray0.length);
      assertEquals(8, lightSourceArray1.length);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertNotNull(homeLight0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals("Esx6}@\"=0E", catalogLight0.getCreator());
      assertFalse(catalogLight0.isMovable());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getId());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-886.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-1.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals("fDZ+M>\"(", catalogLight0.getDescription());
      assertNull(catalogLight0.getGrade());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(250.391F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(250.391F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(250.391F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(125.1955F, homeLight0.getX(), 0.01F);
      assertEquals((-443.0F), homeLight0.getY(), 0.01F);
      assertEquals("fDZ+M>\"(", homeLight0.getDescription());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-886.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-1.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(250.391F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(250.391F, homeLight0.getWidth(), 0.01F);
      assertEquals(8, lightSourceArray0.length);
      
      HomeLight homeLight1 = homeLight0.clone();
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotNull(homeLight1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals("Esx6}@\"=0E", catalogLight0.getCreator());
      assertFalse(catalogLight0.isMovable());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getId());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-886.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-1.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals("fDZ+M>\"(", catalogLight0.getDescription());
      assertNull(catalogLight0.getGrade());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(250.391F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(250.391F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(250.391F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(125.1955F, homeLight0.getX(), 0.01F);
      assertEquals((-443.0F), homeLight0.getY(), 0.01F);
      assertEquals("fDZ+M>\"(", homeLight0.getDescription());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-886.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-1.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(250.391F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(250.391F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertEquals((-886.0F), homeLight1.getDepth(), 0.01F);
      assertEquals((-1.0F), homeLight1.getHeight(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getCurrency());
      assertFalse(homeLight1.isMovable());
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isTexturable());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals("fDZ+M>\"(", homeLight1.getDescription());
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(250.391F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(125.1955F, homeLight1.getX(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight1.getName());
      assertEquals((-443.0F), homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(250.391F, homeLight1.getWidth(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(250.391F, homeLight1.getElevation(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(8, lightSourceArray0.length);
      
      homeLight0.setElevation(0.3926991F);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals("Esx6}@\"=0E", catalogLight0.getCreator());
      assertFalse(catalogLight0.isMovable());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getId());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-886.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-1.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals("fDZ+M>\"(", catalogLight0.getDescription());
      assertNull(catalogLight0.getGrade());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(250.391F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(250.391F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(125.1955F, homeLight0.getX(), 0.01F);
      assertEquals((-443.0F), homeLight0.getY(), 0.01F);
      assertEquals("fDZ+M>\"(", homeLight0.getDescription());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-886.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-1.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertEquals(0.3926991F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getElevation(), 0.01F);
      assertEquals(250.391F, homeLight0.getWidth(), 0.01F);
      assertEquals(8, lightSourceArray0.length);
      
      float float1 = homeLight0.getY();
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertEquals((-443.0F), float1, 0.01F);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals("Esx6}@\"=0E", catalogLight0.getCreator());
      assertFalse(catalogLight0.isMovable());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getId());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-886.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-1.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals("fDZ+M>\"(", catalogLight0.getDescription());
      assertNull(catalogLight0.getGrade());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(250.391F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(250.391F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(125.1955F, homeLight0.getX(), 0.01F);
      assertEquals((-443.0F), homeLight0.getY(), 0.01F);
      assertEquals("fDZ+M>\"(", homeLight0.getDescription());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-886.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-1.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertEquals(0.3926991F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getElevation(), 0.01F);
      assertEquals(250.391F, homeLight0.getWidth(), 0.01F);
      assertEquals(8, lightSourceArray0.length);
      
      boolean boolean0 = homeLight0.isBackFaceShown();
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(boolean0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals("Esx6}@\"=0E", catalogLight0.getCreator());
      assertFalse(catalogLight0.isMovable());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getId());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-886.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-1.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals("fDZ+M>\"(", catalogLight0.getDescription());
      assertNull(catalogLight0.getGrade());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(250.391F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(250.391F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(125.1955F, homeLight0.getX(), 0.01F);
      assertEquals((-443.0F), homeLight0.getY(), 0.01F);
      assertEquals("fDZ+M>\"(", homeLight0.getDescription());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-886.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-1.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertEquals(0.3926991F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getElevation(), 0.01F);
      assertEquals(250.391F, homeLight0.getWidth(), 0.01F);
      assertEquals(8, lightSourceArray0.length);
      
      homeLight0.setMovable(false);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals("Esx6}@\"=0E", catalogLight0.getCreator());
      assertFalse(catalogLight0.isMovable());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getId());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-886.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-1.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals("fDZ+M>\"(", catalogLight0.getDescription());
      assertNull(catalogLight0.getGrade());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(250.391F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(250.391F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(125.1955F, homeLight0.getX(), 0.01F);
      assertEquals((-443.0F), homeLight0.getY(), 0.01F);
      assertEquals("fDZ+M>\"(", homeLight0.getDescription());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-886.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-1.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertEquals(0.3926991F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getElevation(), 0.01F);
      assertEquals(250.391F, homeLight0.getWidth(), 0.01F);
      assertEquals(8, lightSourceArray0.length);
      
      float float2 = homeLight0.getElevation();
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotEquals(float2, float1, 0.01F);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertEquals(0.3926991F, float2, 0.01F);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals("Esx6}@\"=0E", catalogLight0.getCreator());
      assertFalse(catalogLight0.isMovable());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getId());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-886.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-1.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals("fDZ+M>\"(", catalogLight0.getDescription());
      assertNull(catalogLight0.getGrade());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(250.391F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(250.391F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(125.1955F, homeLight0.getX(), 0.01F);
      assertEquals((-443.0F), homeLight0.getY(), 0.01F);
      assertEquals("fDZ+M>\"(", homeLight0.getDescription());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-886.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-1.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertEquals(0.3926991F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getElevation(), 0.01F);
      assertEquals(250.391F, homeLight0.getWidth(), 0.01F);
      assertEquals(8, lightSourceArray0.length);
      
      boolean boolean1 = homeLight0.isPointAt((-1.0F), (-886.0F), 1.0F);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(boolean1 == boolean0);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(boolean1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals("Esx6}@\"=0E", catalogLight0.getCreator());
      assertFalse(catalogLight0.isMovable());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getId());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-886.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-1.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals("fDZ+M>\"(", catalogLight0.getDescription());
      assertNull(catalogLight0.getGrade());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(250.391F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(250.391F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(125.1955F, homeLight0.getX(), 0.01F);
      assertEquals((-443.0F), homeLight0.getY(), 0.01F);
      assertEquals("fDZ+M>\"(", homeLight0.getDescription());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-886.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-1.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertEquals(0.3926991F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getElevation(), 0.01F);
      assertEquals(250.391F, homeLight0.getWidth(), 0.01F);
      assertEquals(8, lightSourceArray0.length);
      
      float[][] floatArray0 = homeLight1.getModelRotation();
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotNull(floatArray0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals("Esx6}@\"=0E", catalogLight0.getCreator());
      assertFalse(catalogLight0.isMovable());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertEquals("SF!~#pX06L/k9D6~.c", catalogLight0.getId());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-886.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-1.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals("fDZ+M>\"(", catalogLight0.getDescription());
      assertNull(catalogLight0.getGrade());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(250.391F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(250.391F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(125.1955F, homeLight0.getX(), 0.01F);
      assertEquals((-443.0F), homeLight0.getY(), 0.01F);
      assertEquals("fDZ+M>\"(", homeLight0.getDescription());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-886.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-1.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertEquals(0.3926991F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getElevation(), 0.01F);
      assertEquals(250.391F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertEquals((-886.0F), homeLight1.getDepth(), 0.01F);
      assertEquals((-1.0F), homeLight1.getHeight(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getCurrency());
      assertFalse(homeLight1.isMovable());
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isTexturable());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals("fDZ+M>\"(", homeLight1.getDescription());
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(250.391F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(125.1955F, homeLight1.getX(), 0.01F);
      assertEquals("SF!~#pX06L/k9D6~.c", homeLight1.getName());
      assertEquals((-443.0F), homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(250.391F, homeLight1.getWidth(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(250.391F, homeLight1.getElevation(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(8, lightSourceArray0.length);
      assertEquals(3, floatArray0.length);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Float float0 = new Float(1448.07377);
      assertNotNull(float0);
      assertEquals(1448.0737F, (float)float0, 0.01F);
      
      LightSource lightSource0 = new LightSource(654, (-196), 654, 654);
      assertNotNull(lightSource0);
      assertEquals(654.0F, lightSource0.getX(), 0.01F);
      assertEquals(654.0F, lightSource0.getZ(), 0.01F);
      assertEquals(654, lightSource0.getColor());
      assertNull(lightSource0.getDiameter());
      assertEquals((-196.0F), lightSource0.getY(), 0.01F);
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      LightSource[] lightSourceArray0 = new LightSource[0];
      CatalogLight catalogLight0 = new CatalogLight(")", ")", ")", (Content) null, (Content) null, (Content) null, 654, 654, (-885.78705F), 1.0F, true, lightSourceArray0, (float[][]) null, ")", true, true, false, bigDecimal0, bigDecimal0);
      assertNotNull(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(654.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(")", catalogLight0.getId());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-885.78705F), catalogLight0.getHeight(), 0.01F);
      assertEquals(")", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(654.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(")", catalogLight0.getCreator());
      assertEquals(")", catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0, lightSourceArray0.length);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertNotNull(homeLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(654.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(")", catalogLight0.getId());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-885.78705F), catalogLight0.getHeight(), 0.01F);
      assertEquals(")", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(654.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(")", catalogLight0.getCreator());
      assertEquals(")", catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(327.0F, homeLight0.getX(), 0.01F);
      assertEquals(327.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(")", homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-885.78705F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(654.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(654.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(")", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(")", homeLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0, lightSourceArray0.length);
      
      homeLight0.setDescription("1.5.0_16");
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(654.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(")", catalogLight0.getId());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-885.78705F), catalogLight0.getHeight(), 0.01F);
      assertEquals(")", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(654.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(")", catalogLight0.getCreator());
      assertEquals(")", catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(327.0F, homeLight0.getX(), 0.01F);
      assertEquals(327.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(")", homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-885.78705F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(654.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(654.0F, homeLight0.getDepth(), 0.01F);
      assertEquals("1.5.0_16", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(")", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0, lightSourceArray0.length);
      
      Float float1 = new Float((float) (-196));
      assertNotNull(float1);
      assertNotEquals((float)float1, (float)float0, 0.01F);
      assertEquals((-196.0F), (float)float1, 0.01F);
      
      Float float2 = new Float((double) 654);
      assertNotNull(float2);
      assertNotEquals((float)float2, (float)float1, 0.01F);
      assertNotEquals((float)float2, (float)float0, 0.01F);
      assertEquals(654.0F, (float)float2, 0.01F);
      
      boolean boolean0 = homeLight0.isBackFaceShown();
      assertFalse(boolean0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(654.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(")", catalogLight0.getId());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-885.78705F), catalogLight0.getHeight(), 0.01F);
      assertEquals(")", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(654.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(")", catalogLight0.getCreator());
      assertEquals(")", catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(327.0F, homeLight0.getX(), 0.01F);
      assertEquals(327.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(")", homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-885.78705F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(654.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(654.0F, homeLight0.getDepth(), 0.01F);
      assertEquals("1.5.0_16", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(")", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0, lightSourceArray0.length);
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertSame(lightSourceArray0, lightSourceArray1);
      assertSame(lightSourceArray1, lightSourceArray0);
      assertNotNull(lightSourceArray1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(654.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(")", catalogLight0.getId());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-885.78705F), catalogLight0.getHeight(), 0.01F);
      assertEquals(")", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(654.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(")", catalogLight0.getCreator());
      assertEquals(")", catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0, lightSourceArray0.length);
      assertEquals(0, lightSourceArray1.length);
      
      HomeLight homeLight1 = homeLight0.clone();
      assertSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotNull(homeLight1);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(654.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(")", catalogLight0.getId());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-885.78705F), catalogLight0.getHeight(), 0.01F);
      assertEquals(")", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(654.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(")", catalogLight0.getCreator());
      assertEquals(")", catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(327.0F, homeLight0.getX(), 0.01F);
      assertEquals(327.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(")", homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-885.78705F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(654.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(654.0F, homeLight0.getDepth(), 0.01F);
      assertEquals("1.5.0_16", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(")", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(1.0F, homeLight1.getGroundElevation(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight1.getElevation(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(327.0F, homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertEquals(327.0F, homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(")", homeLight1.getCatalogId());
      assertEquals(654.0F, homeLight1.getWidth(), 0.01F);
      assertEquals(654.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isMovable());
      assertTrue(homeLight1.isResizable());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(")", homeLight1.getName());
      assertEquals("1.5.0_16", homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getCurrency());
      assertEquals((-885.78705F), homeLight1.getHeight(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals(0, lightSourceArray0.length);
      
      HomeLight homeLight2 = homeLight1.clone();
      assertSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight2);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight2);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(homeLight2, homeLight0);
      assertNotSame(homeLight2, homeLight1);
      assertNotNull(homeLight2);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(homeLight2.equals((Object)homeLight0));
      assertFalse(homeLight2.equals((Object)homeLight1));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(654.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(")", catalogLight0.getId());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-885.78705F), catalogLight0.getHeight(), 0.01F);
      assertEquals(")", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(654.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(")", catalogLight0.getCreator());
      assertEquals(")", catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(327.0F, homeLight0.getX(), 0.01F);
      assertEquals(327.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(")", homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-885.78705F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(654.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(654.0F, homeLight0.getDepth(), 0.01F);
      assertEquals("1.5.0_16", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(")", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(1.0F, homeLight1.getGroundElevation(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight1.getElevation(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(327.0F, homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertEquals(327.0F, homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(")", homeLight1.getCatalogId());
      assertEquals(654.0F, homeLight1.getWidth(), 0.01F);
      assertEquals(654.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isMovable());
      assertTrue(homeLight1.isResizable());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(")", homeLight1.getName());
      assertEquals("1.5.0_16", homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getCurrency());
      assertEquals((-885.78705F), homeLight1.getHeight(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight2.getNameXOffset(), 0.01F);
      assertEquals(327.0F, homeLight2.getX(), 0.01F);
      assertEquals(327.0F, homeLight2.getY(), 0.01F);
      assertEquals(1.0F, homeLight2.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight2.getPower(), 0.01F);
      assertEquals(")", homeLight2.getName());
      assertEquals(654.0F, homeLight2.getDepth(), 0.01F);
      assertEquals(1.0F, homeLight2.getGroundElevation(), 0.01F);
      assertNull(homeLight2.getStaircaseCutOutShape());
      assertTrue(homeLight2.isMovable());
      assertTrue(homeLight2.isResizable());
      assertTrue(homeLight2.isVisible());
      assertNull(homeLight2.getShininess());
      assertEquals(0.0F, homeLight2.getNameAngle(), 0.01F);
      assertNull(homeLight2.getCurrency());
      assertEquals(0.0F, homeLight2.getNameYOffset(), 0.01F);
      assertEquals((-885.78705F), homeLight2.getHeight(), 0.01F);
      assertTrue(homeLight2.isDeformable());
      assertFalse(homeLight2.isNameVisible());
      assertNull(homeLight2.getColor());
      assertFalse(homeLight2.isDoorOrWindow());
      assertEquals("1.5.0_16", homeLight2.getDescription());
      assertEquals(")", homeLight2.getCatalogId());
      assertTrue(homeLight2.isTexturable());
      assertEquals(0.0F, homeLight2.getAngle(), 0.01F);
      assertEquals(654.0F, homeLight2.getWidth(), 0.01F);
      assertFalse(homeLight2.isModelMirrored());
      assertFalse(homeLight2.isBackFaceShown());
      assertEquals(0, lightSourceArray0.length);
      
      homeLight0.setElevation(1.0F);
      assertSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight2);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(homeLight0.equals((Object)homeLight2));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(654.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(")", catalogLight0.getId());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-885.78705F), catalogLight0.getHeight(), 0.01F);
      assertEquals(")", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(654.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(")", catalogLight0.getCreator());
      assertEquals(")", catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(327.0F, homeLight0.getX(), 0.01F);
      assertEquals(327.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(")", homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-885.78705F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(654.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(654.0F, homeLight0.getDepth(), 0.01F);
      assertEquals("1.5.0_16", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(")", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0, lightSourceArray0.length);
      
      homeLight0.setDepth((-2713.1843F));
      assertSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight2);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(homeLight0.equals((Object)homeLight2));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(654.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(")", catalogLight0.getId());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-885.78705F), catalogLight0.getHeight(), 0.01F);
      assertEquals(")", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(654.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(")", catalogLight0.getCreator());
      assertEquals(")", catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(327.0F, homeLight0.getX(), 0.01F);
      assertEquals(327.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(")", homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-885.78705F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(654.0F, homeLight0.getWidth(), 0.01F);
      assertEquals((-2713.1843F), homeLight0.getDepth(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals("1.5.0_16", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(")", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0, lightSourceArray0.length);
      
      homeLight2.setModelMirrored(true);
      assertSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight2);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight2);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(homeLight2, homeLight0);
      assertNotSame(homeLight2, homeLight1);
      assertFalse(homeLight0.equals((Object)homeLight2));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight2));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(homeLight2.equals((Object)homeLight0));
      assertFalse(homeLight2.equals((Object)homeLight1));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(654.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(")", catalogLight0.getId());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-885.78705F), catalogLight0.getHeight(), 0.01F);
      assertEquals(")", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(654.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(")", catalogLight0.getCreator());
      assertEquals(")", catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(327.0F, homeLight0.getX(), 0.01F);
      assertEquals(327.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(")", homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-885.78705F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(654.0F, homeLight0.getWidth(), 0.01F);
      assertEquals((-2713.1843F), homeLight0.getDepth(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals("1.5.0_16", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(")", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(1.0F, homeLight1.getGroundElevation(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight1.getElevation(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(327.0F, homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertEquals(327.0F, homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(")", homeLight1.getCatalogId());
      assertEquals(654.0F, homeLight1.getWidth(), 0.01F);
      assertEquals(654.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isMovable());
      assertTrue(homeLight1.isResizable());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(")", homeLight1.getName());
      assertEquals("1.5.0_16", homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getCurrency());
      assertEquals((-885.78705F), homeLight1.getHeight(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight2.getNameXOffset(), 0.01F);
      assertEquals(327.0F, homeLight2.getX(), 0.01F);
      assertEquals(327.0F, homeLight2.getY(), 0.01F);
      assertEquals(1.0F, homeLight2.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight2.getPower(), 0.01F);
      assertEquals(")", homeLight2.getName());
      assertEquals(654.0F, homeLight2.getDepth(), 0.01F);
      assertEquals(1.0F, homeLight2.getGroundElevation(), 0.01F);
      assertNull(homeLight2.getStaircaseCutOutShape());
      assertTrue(homeLight2.isMovable());
      assertTrue(homeLight2.isResizable());
      assertTrue(homeLight2.isVisible());
      assertNull(homeLight2.getShininess());
      assertEquals(0.0F, homeLight2.getNameAngle(), 0.01F);
      assertNull(homeLight2.getCurrency());
      assertEquals(0.0F, homeLight2.getNameYOffset(), 0.01F);
      assertEquals((-885.78705F), homeLight2.getHeight(), 0.01F);
      assertTrue(homeLight2.isDeformable());
      assertFalse(homeLight2.isNameVisible());
      assertTrue(homeLight2.isModelMirrored());
      assertNull(homeLight2.getColor());
      assertFalse(homeLight2.isDoorOrWindow());
      assertEquals("1.5.0_16", homeLight2.getDescription());
      assertEquals(")", homeLight2.getCatalogId());
      assertTrue(homeLight2.isTexturable());
      assertEquals(0.0F, homeLight2.getAngle(), 0.01F);
      assertEquals(654.0F, homeLight2.getWidth(), 0.01F);
      assertFalse(homeLight2.isBackFaceShown());
      assertEquals(0, lightSourceArray0.length);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      boolean boolean2 = homeLight2.isTopRightPointAt(822.0F, 1.0F, 270.99F);
      assertSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight2);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight2);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(homeLight2, homeLight0);
      assertNotSame(homeLight2, homeLight1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(homeLight0.equals((Object)homeLight2));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight2));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(homeLight2.equals((Object)homeLight0));
      assertFalse(homeLight2.equals((Object)homeLight1));
      assertTrue(boolean2);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(654.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(")", catalogLight0.getId());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-885.78705F), catalogLight0.getHeight(), 0.01F);
      assertEquals(")", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(654.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(")", catalogLight0.getCreator());
      assertEquals(")", catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(327.0F, homeLight0.getX(), 0.01F);
      assertEquals(327.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(")", homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-885.78705F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(654.0F, homeLight0.getWidth(), 0.01F);
      assertEquals((-2713.1843F), homeLight0.getDepth(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals("1.5.0_16", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(")", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(1.0F, homeLight1.getGroundElevation(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight1.getElevation(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(327.0F, homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertEquals(327.0F, homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(")", homeLight1.getCatalogId());
      assertEquals(654.0F, homeLight1.getWidth(), 0.01F);
      assertEquals(654.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isMovable());
      assertTrue(homeLight1.isResizable());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(")", homeLight1.getName());
      assertEquals("1.5.0_16", homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getCurrency());
      assertEquals((-885.78705F), homeLight1.getHeight(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight2.getNameXOffset(), 0.01F);
      assertEquals(327.0F, homeLight2.getX(), 0.01F);
      assertEquals(327.0F, homeLight2.getY(), 0.01F);
      assertEquals(1.0F, homeLight2.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight2.getPower(), 0.01F);
      assertEquals(")", homeLight2.getName());
      assertEquals(654.0F, homeLight2.getDepth(), 0.01F);
      assertEquals(1.0F, homeLight2.getGroundElevation(), 0.01F);
      assertNull(homeLight2.getStaircaseCutOutShape());
      assertTrue(homeLight2.isMovable());
      assertTrue(homeLight2.isResizable());
      assertTrue(homeLight2.isVisible());
      assertNull(homeLight2.getShininess());
      assertEquals(0.0F, homeLight2.getNameAngle(), 0.01F);
      assertNull(homeLight2.getCurrency());
      assertEquals(0.0F, homeLight2.getNameYOffset(), 0.01F);
      assertEquals((-885.78705F), homeLight2.getHeight(), 0.01F);
      assertTrue(homeLight2.isDeformable());
      assertFalse(homeLight2.isNameVisible());
      assertTrue(homeLight2.isModelMirrored());
      assertNull(homeLight2.getColor());
      assertFalse(homeLight2.isDoorOrWindow());
      assertEquals("1.5.0_16", homeLight2.getDescription());
      assertEquals(")", homeLight2.getCatalogId());
      assertTrue(homeLight2.isTexturable());
      assertEquals(0.0F, homeLight2.getAngle(), 0.01F);
      assertEquals(654.0F, homeLight2.getWidth(), 0.01F);
      assertFalse(homeLight2.isBackFaceShown());
      assertEquals(0, lightSourceArray0.length);
      
      HomeLight homeLight3 = homeLight1.clone();
      assertNotSame(homeLight3, homeLight1);
      assertNotSame(homeLight3, homeLight2);
      assertNotSame(homeLight3, homeLight0);
      assertSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight3);
      assertNotSame(homeLight0, homeLight2);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight2);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(homeLight1, homeLight3);
      assertNotNull(homeLight3);
      assertFalse(homeLight3.equals((Object)homeLight1));
      assertFalse(homeLight3.equals((Object)homeLight2));
      assertFalse(homeLight3.equals((Object)homeLight0));
      assertFalse(homeLight0.equals((Object)homeLight2));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight2));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(homeLight3.isNameVisible());
      assertEquals((-885.78705F), homeLight3.getHeight(), 0.01F);
      assertNull(homeLight3.getCurrency());
      assertEquals(0.0F, homeLight3.getNameYOffset(), 0.01F);
      assertNull(homeLight3.getColor());
      assertTrue(homeLight3.isDeformable());
      assertFalse(homeLight3.isDoorOrWindow());
      assertEquals(")", homeLight3.getCatalogId());
      assertEquals(0.0F, homeLight3.getAngle(), 0.01F);
      assertTrue(homeLight3.isTexturable());
      assertFalse(homeLight3.isModelMirrored());
      assertFalse(homeLight3.isBackFaceShown());
      assertEquals(654.0F, homeLight3.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight3.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeLight3.getPower(), 0.01F);
      assertEquals(327.0F, homeLight3.getY(), 0.01F);
      assertEquals(")", homeLight3.getName());
      assertEquals(327.0F, homeLight3.getX(), 0.01F);
      assertEquals(654.0F, homeLight3.getDepth(), 0.01F);
      assertEquals(1.0F, homeLight3.getElevation(), 0.01F);
      assertEquals("1.5.0_16", homeLight3.getDescription());
      assertEquals(1.0F, homeLight3.getGroundElevation(), 0.01F);
      assertTrue(homeLight3.isResizable());
      assertNull(homeLight3.getShininess());
      assertTrue(homeLight3.isMovable());
      assertTrue(homeLight3.isVisible());
      assertEquals(0.0F, homeLight3.getNameAngle(), 0.01F);
      assertNull(homeLight3.getStaircaseCutOutShape());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(654.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(")", catalogLight0.getId());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-885.78705F), catalogLight0.getHeight(), 0.01F);
      assertEquals(")", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(654.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(")", catalogLight0.getCreator());
      assertEquals(")", catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(327.0F, homeLight0.getX(), 0.01F);
      assertEquals(327.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(")", homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-885.78705F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(654.0F, homeLight0.getWidth(), 0.01F);
      assertEquals((-2713.1843F), homeLight0.getDepth(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals("1.5.0_16", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(")", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(1.0F, homeLight1.getGroundElevation(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight1.getElevation(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(327.0F, homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertEquals(327.0F, homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(")", homeLight1.getCatalogId());
      assertEquals(654.0F, homeLight1.getWidth(), 0.01F);
      assertEquals(654.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isMovable());
      assertTrue(homeLight1.isResizable());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(")", homeLight1.getName());
      assertEquals("1.5.0_16", homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getCurrency());
      assertEquals((-885.78705F), homeLight1.getHeight(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals(0, lightSourceArray0.length);
      
      boolean boolean3 = homeLight1.isBackFaceShown();
      assertSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight3);
      assertNotSame(homeLight0, homeLight2);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight2);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(homeLight1, homeLight3);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertFalse(homeLight0.equals((Object)homeLight3));
      assertFalse(homeLight0.equals((Object)homeLight2));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight2));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(homeLight1.equals((Object)homeLight3));
      assertFalse(boolean3);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(654.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(")", catalogLight0.getId());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-885.78705F), catalogLight0.getHeight(), 0.01F);
      assertEquals(")", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(654.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(")", catalogLight0.getCreator());
      assertEquals(")", catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(327.0F, homeLight0.getX(), 0.01F);
      assertEquals(327.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(")", homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-885.78705F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(654.0F, homeLight0.getWidth(), 0.01F);
      assertEquals((-2713.1843F), homeLight0.getDepth(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals("1.5.0_16", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(")", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(1.0F, homeLight1.getGroundElevation(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight1.getElevation(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(327.0F, homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertEquals(327.0F, homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(")", homeLight1.getCatalogId());
      assertEquals(654.0F, homeLight1.getWidth(), 0.01F);
      assertEquals(654.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isMovable());
      assertTrue(homeLight1.isResizable());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(")", homeLight1.getName());
      assertEquals("1.5.0_16", homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getCurrency());
      assertEquals((-885.78705F), homeLight1.getHeight(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals(0, lightSourceArray0.length);
  }
}
