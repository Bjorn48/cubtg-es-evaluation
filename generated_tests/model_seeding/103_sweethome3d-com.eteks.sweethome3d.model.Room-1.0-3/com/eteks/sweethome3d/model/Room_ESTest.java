/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 25 18:19:45 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.model.Room;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Room_ESTest extends Room_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      float[][] floatArray0 = new float[6][9];
      Room room0 = new Room(floatArray0);
      room0.move(0.0F, 764.0F);
      assertEquals(764.0F, room0.getYCenter(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      float[][] floatArray0 = new float[6][9];
      Room room0 = new Room(floatArray0);
      room0.containsPoint((-1.0F), (-40.0F), 0.0F);
      assertTrue(room0.isFloorVisible());
      assertTrue(room0.isAreaVisible());
      assertEquals((-40.0F), room0.getNameYOffset(), 0.01F);
      assertTrue(room0.isCeilingVisible());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      float[][] floatArray0 = new float[6][9];
      Room room0 = new Room(floatArray0);
      boolean boolean0 = room0.containsPoint(166.26204F, (-1249.7844F), (-1853.95F));
      assertTrue(room0.isCeilingVisible());
      assertEquals((-40.0F), room0.getNameYOffset(), 0.01F);
      assertTrue(room0.isFloorVisible());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      float[][] floatArray0 = new float[5][9];
      Room room0 = new Room(floatArray0);
      room0.setAreaYOffset((-1.0F));
      boolean boolean0 = room0.isAreaCenterPointAt(198.1997F, 198.1997F, 1311.123F);
      assertEquals((-1.0F), room0.getAreaYOffset(), 0.01F);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      float[][] floatArray0 = new float[6][9];
      Room room0 = new Room(floatArray0);
      room0.setAreaXOffset((-1.0F));
      boolean boolean0 = room0.isAreaCenterPointAt(1.0F, 369.0F, 1066.1595F);
      assertEquals((-1.0F), room0.getAreaXOffset(), 0.01F);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      float[][] floatArray0 = new float[8][4];
      Room room0 = new Room(floatArray0);
      room0.addPoint(1547.3994F, 1547.3994F);
      boolean boolean0 = room0.isAreaCenterPointAt(830.8F, 1547.3994F, 1547.3994F);
      assertEquals(773.6997F, room0.getXCenter(), 0.01F);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      float[][] floatArray0 = new float[6][9];
      Room room0 = new Room(floatArray0);
      room0.setNameXOffset(554.3F);
      boolean boolean0 = room0.isNameCenterPointAt((-1002.906F), 8192, 422.0F);
      assertEquals(554.3F, room0.getNameXOffset(), 0.01F);
      assertFalse(boolean0);
  }
}
