/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 21:34:35 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.CatalogDoorOrWindow;
import com.eteks.sweethome3d.model.CatalogLight;
import com.eteks.sweethome3d.model.CatalogPieceOfFurniture;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.FurnitureCategory;
import com.eteks.sweethome3d.model.HomeDoorOrWindow;
import com.eteks.sweethome3d.model.HomeFurnitureGroup;
import com.eteks.sweethome3d.model.HomeLight;
import com.eteks.sweethome3d.model.HomePieceOfFurniture;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.Level;
import com.eteks.sweethome3d.model.Light;
import com.eteks.sweethome3d.model.LightSource;
import com.eteks.sweethome3d.model.PieceOfFurniture;
import com.eteks.sweethome3d.model.Sash;
import com.eteks.sweethome3d.model.TextStyle;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.Comparator;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomePieceOfFurniture_ESTest extends HomePieceOfFurniture_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Integer integer0 = new Integer(0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "j[u\r)?_ALV{ku");
      Integer integer1 = new Integer(0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture((String) null, (Content) null, (Content) null, 0, (-437.0F), (-1804.392F), (-1113.0F), false, true, integer1, (float[][]) null, true, 0, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.isNameCenterPointAt(0, 3823.9F, 0.0F);
      homePieceOfFurniture0.setDepth(1.0F);
      homePieceOfFurniture0.isResizable();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[1] = 1689.4241F;
      floatArray0[2] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[2] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[8][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("I2E;", (Content) null, (Content) null, (-1088.683F), 1689.4241F, 1689.4241F, 8192.0F, false, false, integer0, floatArray1, true, (-1650.44F), false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("I2E;");
      catalogPieceOfFurniture0.setCategory(furnitureCategory0);
      homePieceOfFurniture0.setY(1689.4241F);
      homePieceOfFurniture0.setDepth(1.0F);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setWidth(1986.3317F);
      homePieceOfFurniture0.isTopRightPointAt(1.0F, 1689.4241F, 422.46924F);
      homePieceOfFurniture0.isTexturable();
      homePieceOfFurniture0.isBottomRightPointAt(0.5F, 321.20578F, 422.46924F);
      homePieceOfFurniture0.isBackFaceShown();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Integer integer0 = new Integer((-788));
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("wQB{C5P b|^<", (Content) null, (Content) null, (-788), 0.5F, (-788), false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDescription("wQB{C5P b|^<");
      homePieceOfFurniture0.getDepth();
      homePieceOfFurniture0.isTopRightPointAt((-788), 0.5F, (-788));
      homePieceOfFurniture0.getGroundElevation();
      homePieceOfFurniture0.isDoorOrWindow();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      float[] floatArray0 = new float[9];
      float[][] floatArray1 = new float[9][5];
      floatArray1[4] = floatArray1[3];
      floatArray1[8] = floatArray0;
      Sash[] sashArray0 = new Sash[9];
      Sash sash0 = new Sash((-648.13214F), 0.0F, (-1291.6161F), 0.0F, 452.0F);
      assertNotNull(sash0);
      assertEquals((-1291.6161F), sash0.getWidth(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      assertEquals(452.0F, sash0.getEndAngle(), 0.01F);
      assertEquals((-648.13214F), sash0.getXAxis(), 0.01F);
      
      Sash sash1 = new Sash(1453.343F, (-3391.2F), 622.05554F, (-648.13214F), 21.2585F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(622.05554F, sash1.getWidth(), 0.01F);
      assertEquals((-3391.2F), sash1.getYAxis(), 0.01F);
      assertEquals(1453.343F, sash1.getXAxis(), 0.01F);
      assertEquals((-648.13214F), sash1.getStartAngle(), 0.01F);
      assertEquals(21.2585F, sash1.getEndAngle(), 0.01F);
      
      sashArray0[5] = sashArray0[3];
      sashArray0[6] = sashArray0[5];
      Sash sash2 = new Sash((-1291.6161F), 155.0F, 1453.343F, 21.2585F, (-1089.0F));
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals(155.0F, sash2.getYAxis(), 0.01F);
      assertEquals((-1089.0F), sash2.getEndAngle(), 0.01F);
      assertEquals(21.2585F, sash2.getStartAngle(), 0.01F);
      assertEquals((-1291.6161F), sash2.getXAxis(), 0.01F);
      assertEquals(1453.343F, sash2.getWidth(), 0.01F);
      
      sashArray0[8] = sash2;
      BigDecimal bigDecimal0 = new BigDecimal((-709.0F));
      assertNotNull(bigDecimal0);
      assertEquals((byte)59, bigDecimal0.byteValue());
      assertEquals((short) (-709), bigDecimal0.shortValue());
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", (Content) null, (Content) null, (Content) null, 0.0F, (-1291.6161F), (-1291.6161F), (-709.0F), false, 0.0F, 0.0F, sashArray0, floatArray1, "", false, false, false, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((byte)59, bigDecimal0.byteValue());
      assertEquals((short) (-709), bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-709.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1291.6161F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-1291.6161F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(9, floatArray1.length);
      assertEquals(9, sashArray0.length);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((byte)59, bigDecimal0.byteValue());
      assertEquals((short) (-709), bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-709.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1291.6161F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-1291.6161F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1291.6161F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-709.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isDeformable());
      assertEquals((-645.80804F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-709.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-1291.6161F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(9, floatArray1.length);
      assertEquals(9, sashArray0.length);
      
      BigDecimal bigDecimal1 = homeDoorOrWindow0.getPriceValueAddedTaxIncluded();
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      assertEquals((byte)59, bigDecimal0.byteValue());
      assertEquals((short) (-709), bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-709.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1291.6161F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-1291.6161F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1291.6161F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-709.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isDeformable());
      assertEquals((-645.80804F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-709.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-1291.6161F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((short) (-22316), bigDecimal1.shortValue());
      assertEquals((byte) (-44), bigDecimal1.byteValue());
      assertEquals(9, floatArray1.length);
      assertEquals(9, sashArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(bigDecimal1, bigDecimal0);
      
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      
      BigDecimal bigDecimal2 = homeDoorOrWindow0.getValueAddedTax();
      assertFalse(bigDecimal2.equals((Object)bigDecimal0));
      assertFalse(bigDecimal2.equals((Object)bigDecimal1));
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertNotNull(bigDecimal2);
      assertEquals((short) (-21607), bigDecimal2.shortValue());
      assertEquals((byte) (-103), bigDecimal2.byteValue());
      assertEquals((byte)59, bigDecimal0.byteValue());
      assertEquals((short) (-709), bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertEquals((-709.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isTexturable());
      assertFalse(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals((-1291.6161F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-1291.6161F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-1291.6161F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-709.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isDeformable());
      assertEquals((-645.80804F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-709.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isResizable());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-1291.6161F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(9, floatArray1.length);
      assertEquals(9, sashArray0.length);
      assertNotSame(bigDecimal2, bigDecimal0);
      assertNotSame(bigDecimal2, bigDecimal1);
      assertNotSame(bigDecimal0, bigDecimal2);
      assertNotSame(bigDecimal0, bigDecimal1);
      
      homeDoorOrWindow0.isDoorOrWindow();
      homeDoorOrWindow0.getPriceValueAddedTaxIncluded();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 8169, 8169, 8169, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      HomePieceOfFurniture homePieceOfFurniture1 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      Integer.getInteger("~");
      homePieceOfFurniture1.setColor((Integer) null);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "com.eteks.sweethome3d.tools.TemporaryURLContent");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "work");
      Integer integer1 = new Integer(8192);
      Integer integer2 = new Integer(1166);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 2.0F, 0.0F, 0.0F, (-3414.21F), false, false, integer2, (float[][]) null, false, 8192, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.setModelMirrored(true);
      homePieceOfFurniture0.setModelMirrored(false);
      homePieceOfFurniture0.setShininess((Float) null);
      homePieceOfFurniture0.setNameYOffset((-1804.392F));
      Random.setNextRandom(1166);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("-O5G,xwzddIrl}", (Content) null, (Content) null, 4156.993F, (-206.01F), (-560.4087F), true, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDescription("-O5G,xwzddIrl}");
      homePieceOfFurniture0.setDescription("x(AQ+@%]h3hR+");
      homePieceOfFurniture0.intersectsRectangle((-206.01F), (-560.4087F), (-560.4087F), (-560.4087F));
      HomePieceOfFurniture.SortableProperty.values();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Integer integer0 = new Integer(2818);
      Integer integer1 = new Integer(2818);
      Integer integer2 = new Integer((-1936));
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, (-1.0F), (-37.35871F), 1689.4241F, (-1.0F), false, false, integer2, (float[][]) null, true, 1.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDepth(2818);
      homePieceOfFurniture0.setVisible(false);
      homePieceOfFurniture0.isTopRightPointAt((-37.35871F), 422.46924F, (-37.35871F));
      homePieceOfFurniture0.isTexturable();
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.setHeight((-1.0F));
      homePieceOfFurniture0.isDoorOrWindow();
      homePieceOfFurniture0.getX();
      homePieceOfFurniture0.isNameVisible();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(2302.19848233);
      Sash[] sashArray0 = new Sash[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("com.eteks.sweethome3d.model.HomePieceOfFurniture$10", "com.eteks.sweethome3d.model.HomePieceOfFurniture$10", "com.eteks.sweethome3d.model.HomePieceOfFurniture$10", (Content) null, (Content) null, (Content) null, 631.12616F, (-1092.0F), 0.0F, 0.0F, true, 631.12616F, 631.12616F, sashArray0, (float[][]) null, "com.eteks.sweethome3d.model.HomePieceOfFurniture$10", true, true, true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setNameVisible(false);
      homeDoorOrWindow0.getPriceValueAddedTaxIncluded();
      homeDoorOrWindow0.getNameStyle();
      homeDoorOrWindow0.getCatalogId();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, (-1291.6161F), 1.0F, 8192.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.clone();
      homePieceOfFurniture0.setDescription("editorSubFolder.Windows");
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setWidth(675.7141F);
      homePieceOfFurniture0.setX((-3067.6572F));
      homePieceOfFurniture0.getWidth();
      homePieceOfFurniture0.intersectsRectangle((-2802.804F), 675.7141F, (-1350.1586F), 0.0F);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("Z", (Content) null, (Content) null, 8169, 8169, 8169, true, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.isBottomRightPointAt((-369.98428F), 8169, 3.4028235E38F);
      homePieceOfFurniture0.setNameAngle(3.4028235E38F);
      homePieceOfFurniture0.isPointAt(287.55875F, 8169, (-369.98428F));
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 8174, 8174, 8174, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.isNameCenterPointAt((-892.53467F), (-2894.0508F), 8174);
      homePieceOfFurniture0.getCurrency();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(2302.19848233);
      Sash[] sashArray0 = new Sash[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("com.eteks.sweethome3d.model.HomePieceOfFurniture$10", "com.eteks.sweethome3d.model.HomePieceOfFurniture$10", "com.eteks.sweethome3d.model.HomePieceOfFurniture$10", (Content) null, (Content) null, (Content) null, (-2425.0F), (-1092.0F), 0.0F, 0.0F, true, 631.12616F, 4.9F, sashArray0, (float[][]) null, "com.eteks.sweethome3d.model.HomePieceOfFurniture$10", true, true, true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getPriceValueAddedTaxIncluded();
      homeDoorOrWindow0.getNameStyle();
      homeDoorOrWindow0.getGroundElevation();
      homeDoorOrWindow0.getPrice();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("TEXTURE", (Content) null, (Content) null, (-2936.19F), 2580.949F, (-706.156F), false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      Integer integer1 = new Integer((-2146959486));
      homePieceOfFurniture0.setColor(integer1);
      homePieceOfFurniture0.setDescription("editorSubFoldr.Windows");
      catalogPieceOfFurniture0.getCategory();
      catalogPieceOfFurniture0.setCategory((FurnitureCategory) null);
      homePieceOfFurniture0.isBottomLeftPointAt(0.0F, 0.0F, (-1955.0F));
      homePieceOfFurniture0.isBottomLeftPointAt((-834.48F), (-1955.0F), (-834.48F));
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.isTopLeftPointAt(8192, (-902.196F), (-3996.2224F));
      homePieceOfFurniture0.isNameCenterPointAt(3884.9858F, (-834.48F), (-344.0F));
      homePieceOfFurniture0.isBottomLeftPointAt((-344.0F), (-706.156F), 985.2547F);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      Integer integer1 = new Integer(8192);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, (-1291.6161F), 0.0F, 2406.576F, 1689.4241F, true, false, integer1, floatArray1, true, 0.0F, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDepth(1.0F);
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.isVisible();
      homePieceOfFurniture0.isResizable();
      homePieceOfFurniture0.getTexture();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, (-1291.6161F), 1.0F, 8192.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDepth(0.3926991F);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.isVisible();
      homePieceOfFurniture0.isPointAt(0.0F, 1340.72F, 1.0F);
      Level level0 = new Level("msP~AhQ7Aj;Z@?", 1689.4241F, 2.0F, 675.7141F);
      homePieceOfFurniture0.setLevel(level0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 8169, 8169, 8169, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.getPrice();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Integer integer0 = new Integer(0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "work");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("work", (Content) null, (Content) null, 0, 655.1F, 8170, true, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDescription("com.eteks.sweethome3d.model.LightSource");
      catalogPieceOfFurniture0.getCategory();
      catalogPieceOfFurniture0.setCategory((FurnitureCategory) null);
      homePieceOfFurniture0.isBottomRightPointAt(797.74F, 655.1F, 2220.3909F);
      HomePieceOfFurniture.Property.values();
      homePieceOfFurniture0.getValueAddedTax();
      homePieceOfFurniture0.getDescription();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("com.eteks.sweethome3d.model.HomePieceOfFurniture$10", (Content) null, (Content) null, 631.12616F, 8169, 631.12616F, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.getGroundElevation();
      homePieceOfFurniture0.getNameAngle();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Sash[] sashArray0 = new Sash[3];
      Sash sash0 = new Sash((-3340.0F), (-2187.5F), (-2735.11F), (-2187.5F), 3.4028235E38F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-2066.0F), (-2066.0F), 0.0F, 2.0F, (-2735.11F));
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-1.0F), (-847.8F), (-1.0F), (-2066.0F), (-2066.0F));
      sashArray0[2] = sash2;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", (Content) null, (Content) null, (Content) null, (-2066.0F), (-2066.0F), 3.4028235E38F, (-2066.0F), false, 3.4028235E38F, (-2066.0F), sashArray0, (float[][]) null, "", false, true, true, bigDecimal0, bigDecimal0, "");
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setNameVisible(false);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, (-160.47862F), 1.0F, 1987.2776F, true, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDescription("");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homePieceOfFurniture0.isBottomLeftPointAt(0.0F, 4.5310254F, (-160.47862F));
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.setWidth(0.0F);
      homePieceOfFurniture0.isDeformable();
      homePieceOfFurniture0.getGroundElevation();
      homePieceOfFurniture0.isTopRightPointAt(2913.139F, 0.0F, 0.0F);
      HomePieceOfFurniture.SortableProperty.values();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("DOOR_OR_WINDOW", "uM.i ,=", 15, "DOOR_OR_WINDOW", uRLStreamHandler0);
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      Sash[] sashArray0 = new Sash[8];
      Sash sash0 = new Sash(328.53864F, 1.0F, 1.0F, 5031.55F, 1.0F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(1.0F, 777.0F, 1409.8F, 777.0F, 2413.995F);
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(1430.0F, (-91.663F), 15, (-2181.0F), 1.0F);
      sashArray0[2] = sash2;
      Sash sash3 = new Sash(227.827F, 1827.8984F, 227.827F, 1827.8984F, 1409.8F);
      sashArray0[3] = sash3;
      Sash sash4 = new Sash((-2181.0F), (-2334.0F), 15, 1.0F, 1409.8F);
      sashArray0[4] = sash4;
      Sash sash5 = new Sash(1.0F, 227.827F, (-1.0F), (-859.38F), (-594.0F));
      sashArray0[5] = sash5;
      Sash sash6 = new Sash((-3370.0F), 1837.1F, (-2181.0F), 1.0F, (-2334.0F));
      sashArray0[6] = sash6;
      Sash sash7 = new Sash(1.0F, 3875.0F, (-1.0F), 5031.55F, 0.3926991F);
      sashArray0[7] = sash7;
      float[][] floatArray0 = new float[6][1];
      float[] floatArray1 = new float[4];
      floatArray1[0] = 1837.1F;
      floatArray1[1] = (-2181.0F);
      floatArray1[2] = (-594.0F);
      floatArray1[3] = 777.0F;
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[3];
      floatArray2[0] = 3875.0F;
      floatArray2[1] = 1827.8984F;
      floatArray2[2] = 3875.0F;
      floatArray0[1] = floatArray2;
      float[] floatArray3 = new float[3];
      floatArray3[0] = 1.0F;
      floatArray3[1] = (-1.0F);
      floatArray3[2] = 3875.0F;
      floatArray0[2] = floatArray3;
      float[] floatArray4 = new float[2];
      floatArray4[0] = 79.993164F;
      floatArray4[1] = (-859.38F);
      floatArray0[3] = floatArray4;
      float[] floatArray5 = new float[9];
      floatArray5[0] = 1409.8F;
      floatArray5[1] = (-594.0F);
      floatArray5[2] = (-859.38F);
      floatArray5[3] = (-1.0F);
      floatArray5[4] = 1.0F;
      floatArray5[5] = 1837.1F;
      floatArray5[6] = 2413.995F;
      floatArray5[7] = 2591.1F;
      floatArray5[8] = 328.53864F;
      floatArray0[4] = floatArray5;
      float[] floatArray6 = new float[7];
      floatArray6[0] = 1.0F;
      floatArray6[1] = 5031.55F;
      floatArray6[2] = 1.0F;
      floatArray6[3] = (float) 15;
      floatArray6[4] = (-859.38F);
      floatArray6[5] = 328.53864F;
      floatArray6[6] = 328.53864F;
      floatArray0[5] = floatArray6;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("uM.i ,=", "uM.i ,=", "DOOR_OR_WINDOW", resourceURLContent0, resourceURLContent0, resourceURLContent0, 15, 15, 1.0F, 1827.8984F, false, 1.0F, 1.0F, sashArray0, floatArray0, "DESCRIPTION", true, false, false, bigDecimal0, bigDecimal0, (String) null);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      HomePieceOfFurniture homePieceOfFurniture0 = homeDoorOrWindow0.clone();
      homePieceOfFurniture0.getValueAddedTaxPercentage();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 8169, 8169, 8169, false, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      
      float float0 = homePieceOfFurniture0.getGroundElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      
      Float float1 = homePieceOfFurniture0.getShininess();
      assertNull(float1);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      
      boolean boolean0 = homePieceOfFurniture0.isBottomLeftPointAt(0.0F, 8169, 8169);
      assertTrue(boolean0);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      
      float float2 = homePieceOfFurniture0.getDepth();
      assertNotEquals(float2, float0, 0.01F);
      assertEquals(8169.0F, float2, 0.01F);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 0.0F, (-1291.6161F), 1.0F, 0.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDepth(0.3926991F);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.isPointAt(0.0F, 1340.72F, 1.0F);
      homePieceOfFurniture0.getPoints();
      homePieceOfFurniture0.getValueAddedTaxPercentage();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      float[] floatArray0 = new float[9];
      float[][] floatArray1 = new float[9][5];
      floatArray1[4] = floatArray1[3];
      floatArray1[8] = floatArray0;
      Sash[] sashArray0 = new Sash[9];
      Sash sash0 = new Sash((-648.13214F), 0.0F, (-1291.6161F), 0.0F, 452.0F);
      Sash sash1 = new Sash(1453.343F, (-3391.2F), 622.05554F, (-648.13214F), 21.2585F);
      sashArray0[7] = sashArray0[3];
      sashArray0[6] = sashArray0[5];
      Sash sash2 = new Sash((-1291.6161F), 155.0F, 1453.343F, 21.2585F, (-1089.0F));
      sashArray0[8] = sash2;
      BigDecimal bigDecimal0 = new BigDecimal((-709.0F));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", (Content) null, (Content) null, (Content) null, 0.0F, (-1291.6161F), (-1291.6161F), (-709.0F), false, 0.0F, 0.0F, sashArray0, floatArray1, "", false, true, false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getPriceValueAddedTaxIncluded();
      HomePieceOfFurniture.Property.values();
      homeDoorOrWindow0.getValueAddedTax();
      homeDoorOrWindow0.getPrice();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      Integer integer1 = new Integer(8192);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 839.74414F, 3.4028235E38F, 8192, 839.74414F, true, false, integer1, (float[][]) null, true, 38.1F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDepth(8192);
      homePieceOfFurniture0.isVisible();
      homePieceOfFurniture0.setName((String) null);
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("y]wGIY[z#1~R");
      catalogPieceOfFurniture0.setCategory(furnitureCategory0);
      Integer integer2 = new Integer(782);
      homePieceOfFurniture0.setColor(integer1);
      homePieceOfFurniture0.setNameAngle(469.5F);
      homePieceOfFurniture0.getNameAngle();
      homePieceOfFurniture0.getCatalogId();
      homePieceOfFurniture0.getLevel();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 8174, 8174, 8174, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(false);
      // Undeclared exception!
      try { 
        HomePieceOfFurniture.Property.valueOf("VZkpf]_");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomePieceOfFurniture.Property.VZkpf]_
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("Z", (Content) null, (Content) null, 8169, 8169, 631.12616F, true, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.isBottomRightPointAt((-369.98428F), 631.12616F, 3.4028235E38F);
      homePieceOfFurniture0.setNameAngle(3.4028235E38F);
      homePieceOfFurniture0.isPointAt(287.55875F, 8169, (-369.98428F));
      homePieceOfFurniture0.setNameAngle(287.55875F);
      homePieceOfFurniture0.setNameAngle((-369.98428F));
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[1] = 1689.4241F;
      floatArray0[2] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[8][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("I2E;", (Content) null, (Content) null, (-1097.6671F), 1689.4241F, 1689.4241F, 8192.0F, false, false, integer0, floatArray1, true, (-1650.44F), false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("I2E;");
      catalogPieceOfFurniture0.setCategory(furnitureCategory0);
      homePieceOfFurniture0.setY(1689.4241F);
      homePieceOfFurniture0.setDepth(1.0F);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setWidth((-1650.44F));
      homePieceOfFurniture0.isTopRightPointAt(1.0F, 1689.4241F, 422.46924F);
      homePieceOfFurniture0.isTexturable();
      homePieceOfFurniture0.isBottomRightPointAt(34.486626F, 321.20578F, 422.46924F);
      homePieceOfFurniture0.isBackFaceShown();
      homePieceOfFurniture0.isBottomRightPointAt(1.0F, 921.0F, 921.0F);
      HomePieceOfFurniture.Property.values();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("Z", (Content) null, (Content) null, 8169, 8169, 8169, true, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.isBottomRightPointAt((-369.98428F), 8169, (-369.98428F));
      HomePieceOfFurniture.Property.values();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "work");
      Integer integer1 = new Integer(8192);
      Integer integer2 = new Integer(8192);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, (-303.608F), 3.4028235E38F, 8192, (-303.608F), false, false, integer2, (float[][]) null, true, 38.1F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDepth(8192);
      homePieceOfFurniture0.isVisible();
      homePieceOfFurniture0.setName((String) null);
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("y]wGIY[z#1~R");
      catalogPieceOfFurniture0.setCategory(furnitureCategory0);
      Integer integer3 = new Integer(782);
      homePieceOfFurniture0.setColor(integer2);
      homePieceOfFurniture0.setModelMirrored(false);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 0.0F;
      floatArray0[1] = 1647.7915F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1647.7915F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, 8192.0F, 8192.0F, true, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.setWidth(918.77F);
      homePieceOfFurniture0.isTopRightPointAt((-645.80804F), 0.0F, 8192.0F);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[1] = 1679.4883F;
      floatArray0[2] = (float) 8192;
      float[][] floatArray1 = new float[8][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("I2E;", (Content) null, (Content) null, (-1097.6671F), 1679.4883F, 1679.4883F, 8192.0F, false, false, integer0, floatArray1, true, (-1650.44F), true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("I2E;");
      catalogPieceOfFurniture0.setCategory(furnitureCategory0);
      homePieceOfFurniture0.setY(0.0F);
      homePieceOfFurniture0.setDepth((-1097.6671F));
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setWidth((-1650.44F));
      homePieceOfFurniture0.isTopRightPointAt(1679.4883F, 1679.4883F, 422.46924F);
      homePieceOfFurniture0.isTexturable();
      homePieceOfFurniture0.isBottomRightPointAt(34.486626F, 321.20578F, 422.46924F);
      homePieceOfFurniture0.getValueAddedTax();
      homePieceOfFurniture0.isBackFaceShown();
      homePieceOfFurniture0.setNameAngle(34.486626F);
      homePieceOfFurniture0.getName();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, (-1291.6161F), 1.0F, 8192.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDescription("editorSubFolder.Windows");
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setWidth(675.7141F);
      homePieceOfFurniture0.setX((-3067.6572F));
      homePieceOfFurniture0.getWidth();
      homePieceOfFurniture0.setY(4096.0F);
      homePieceOfFurniture0.getColor();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Sash sash0 = new Sash((-1092.0F), 889.25F, (-1089.0F), 4.9F, (-1092.0F));
      BigDecimal bigDecimal0 = new BigDecimal(2302.19848233);
      Sash[] sashArray0 = new Sash[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("com.eteks.sweethome3d.model.HomePieceOfFurniture$10", "com.eteks.sweethome3d.model.HomePieceOfFurniture$10", "com.eteks.sweethome3d.model.HomePieceOfFurniture$10", (Content) null, (Content) null, (Content) null, (-2425.28F), (-1092.0F), 0.0F, 533.32F, false, 631.12616F, 4.9F, sashArray0, (float[][]) null, "com.eteks.sweethome3d.model.HomePieceOfFurniture$10", false, false, true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getPriceValueAddedTaxIncluded();
      homeDoorOrWindow0.getNameStyle();
      // Undeclared exception!
      try { 
        homeDoorOrWindow0.setWidth(0.0F);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = (-5.3676553F);
      floatArray0[4] = (float) 8192;
      float[][] floatArray1 = new float[9][5];
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 1689.4241F, 1.0F, 8192, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDescription("");
      homePieceOfFurniture0.isBottomLeftPointAt(1.0F, 1689.4241F, 8192.0F);
      Random.setNextRandom(5);
      homePieceOfFurniture0.getNameXOffset();
      homePieceOfFurniture0.getStaircaseCutOutShape();
      homePieceOfFurniture0.getDescription();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, (-1291.6161F), 8192.0F, 8192.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDescription("editorSubFolder.Windows");
      homePieceOfFurniture0.containsPoint(676.7568F, 1689.4241F, (-763.2028F));
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setElevation(1689.4241F);
      homePieceOfFurniture0.isTopLeftPointAt((-279.48F), 0.0F, 1185.13F);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("com.eteks.sweethome3d.model.HomePieceOfFurniture$4", (Content) null, (Content) null, 1689.4241F, 8192.0F, 0.0F, (-2500.0F), false, false, integer0, floatArray1, false, 1689.4241F, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDepth(8192.0F);
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.isVisible();
      homePieceOfFurniture0.setName("");
      homePieceOfFurniture0.setNameXOffset((-2461.9434F));
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 0.0F, (-1291.6161F), 1.0F, 0.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDepth(0.3926991F);
      homePieceOfFurniture0.isVisible();
      homePieceOfFurniture0.setNameStyle((TextStyle) null);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 1689.4241F, 1.0F, 8192, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDescription("editorSubFolder.Windows");
      homePieceOfFurniture0.isBottomLeftPointAt(1.0F, 1689.4241F, 8192.0F);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setWidth(675.7141F);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Integer integer0 = new Integer(12);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 1.0F, 8147, 12, 8147, false, integer0, (float[][]) null, false, 12, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setName("");
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("");
      homePieceOfFurniture0.setMovable(true);
      Integer.getInteger("");
      homePieceOfFurniture0.setColor(integer0);
      homePieceOfFurniture0.getValueAddedTax();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.HEIGHT;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Integer integer0 = new Integer(0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "work");
      Integer integer1 = new Integer(0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("1SyjFPv9=&P", (Content) null, (Content) null, (-1804.392F), 8192, (-1804.392F), 1.0F, true, true, integer1, (float[][]) null, false, 1.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      homePieceOfFurniture1.getValueAddedTax();
      CatalogPieceOfFurniture catalogPieceOfFurniture1 = new CatalogPieceOfFurniture("1SyjFPv9=&P", (Content) null, (Content) null, 517.9619F, (-1020.9893F), 517.9619F, 2905.8782F, false, false, integer0, (float[][]) null, false, 0.3926991F, true);
      HomePieceOfFurniture homePieceOfFurniture2 = new HomePieceOfFurniture(homePieceOfFurniture0);
      homePieceOfFurniture0.getNameYOffset();
      homePieceOfFurniture2.isTopLeftPointAt((-1.0F), 0.0F, 2112.65F);
      homePieceOfFurniture1.getModelRotation();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 0.0F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 0.0F, (-1291.6161F), 1.0F, 0.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      homePieceOfFurniture1.setNameVisible(false);
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.isVisible();
      HomePieceOfFurniture homePieceOfFurniture2 = homePieceOfFurniture1.clone();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      homePieceOfFurniture2.setMovable(true);
      homePieceOfFurniture1.setAngle((-2031.385F));
      homePieceOfFurniture1.getDescription();
      assertEquals(4.3670297F, homePieceOfFurniture1.getAngle(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 8169, 8169, 8169, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setY(8169);
      homePieceOfFurniture0.setVisible(false);
      homePieceOfFurniture0.isTopLeftPointAt((-10.234211F), 8169, 8169);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 8169, 8169, 8169, false, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      
      boolean boolean0 = homePieceOfFurniture0.isTopLeftPointAt(8169, 8169, 8169);
      assertFalse(boolean0);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      
      homePieceOfFurniture0.setName("~");
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("~");
      assertNotNull(furnitureCategory0);
      assertEquals("~", furnitureCategory0.getName());
      assertEquals(0, furnitureCategory0.getFurnitureCount());
      
      boolean boolean1 = homePieceOfFurniture0.isDeformable();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      float[] floatArray0 = new float[9];
      float[][] floatArray1 = new float[9][5];
      floatArray1[4] = floatArray1[3];
      floatArray1[8] = floatArray0;
      Sash[] sashArray0 = new Sash[9];
      Sash sash0 = new Sash((-647.439F), 0.0F, (-1291.6161F), 0.0F, 452.0F);
      Sash sash1 = new Sash(1453.343F, (-3391.2F), 622.05554F, (-647.439F), 21.2585F);
      sashArray0[5] = sashArray0[3];
      sashArray0[1] = sashArray0[5];
      Sash sash2 = new Sash((-1291.6161F), 155.0F, 1453.343F, 848.63904F, (-1089.0F));
      sashArray0[8] = sash2;
      BigDecimal bigDecimal0 = new BigDecimal(848.63904F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", (Content) null, (Content) null, (Content) null, 0.0F, (-1291.6161F), (-1291.6161F), (-709.0F), false, 0.0F, 0.0F, sashArray0, floatArray1, "", false, false, false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      Random.setNextRandom((-527));
      homeDoorOrWindow0.isResizable();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(2302.19848233);
      Sash[] sashArray0 = new Sash[2];
      Sash sash0 = new Sash(1411.2313F, 2392.107F, 2874.0F, (-1164.167F), 2516.775F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-1538.2517F), 1203.864F, 2516.775F, 631.12616F, (-1.0F));
      sashArray0[1] = sash1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("com.eteks.sweethome3d.model.HomePieceOfFurniture$10", "com.eteks.sweethome3d.model.HomePieceOfFurniture$10", "com.eteks.sweethome3d.model.HomePieceOfFurniture$10", (Content) null, (Content) null, (Content) null, 631.12616F, 1050.4713F, 1.0F, (-1369.6F), false, 1.0F, 1689.4241F, sashArray0, (float[][]) null, "com.eteks.sweethome3d.model.HomePieceOfFurniture$10", false, false, false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      // Undeclared exception!
      try { 
        homeDoorOrWindow0.setDepth((-1.0F));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 8169, 8169, 614.572F, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      Float float0 = new Float(614.572F);
      homePieceOfFurniture0.setShininess(float0);
      homePieceOfFurniture0.getTexture();
      homePieceOfFurniture0.setTexture((HomeTexture) null);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 5031.55F, 8193, 8193, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      Integer integer0 = new Integer((-1));
      homePieceOfFurniture0.getGroundElevation();
      homePieceOfFurniture0.setNameXOffset((-1293.059F));
      homePieceOfFurniture0.isNameCenterPointAt((-892.53467F), 5031.55F, (-892.53467F));
      homePieceOfFurniture0.getLevel();
      homePieceOfFurniture0.getDepth();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      LightSource[] lightSourceArray0 = new LightSource[1];
      LightSource lightSource0 = new LightSource(4323.8716F, 8169, 469.5F, 8169);
      lightSourceArray0[0] = lightSource0;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, "", "-Q", (Content) null, (Content) null, (Content) null, 631.12616F, (-301.7593F), 8169, 469.5F, false, lightSourceArray0, "PqoaIo&57RG?saG.", (float[][]) null, "jar", true, true, true, bigDecimal0, bigDecimal0, "");
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogLight0);
      homePieceOfFurniture0.isTopLeftPointAt((-301.7593F), (-726.3836F), 631.12616F);
      homePieceOfFurniture0.getValueAddedTax();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      float[][] floatArray0 = new float[8][5];
      Integer integer0 = new Integer(8192);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("W]^s+", (Content) null, (Content) null, 1689.4241F, 8192, 300.84F, (-0.41443592F), false, true, integer0, floatArray0, false, 300.84F, false);
      CatalogPieceOfFurniture catalogPieceOfFurniture1 = new CatalogPieceOfFurniture("W]^s+", (Content) null, (Content) null, 0.0F, (-0.41443592F), 2468.3982F, false, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture1);
      homePieceOfFurniture0.setDescription("W]^s+");
      homePieceOfFurniture0.isBottomLeftPointAt(1.0F, 0.0F, (-1.0F));
      homePieceOfFurniture0.setWidth(1.0F);
      homePieceOfFurniture0.getValueAddedTaxPercentage();
      homePieceOfFurniture0.setNameAngle(8192);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 0.9283752F;
      floatArray0[3] = 0.9283752F;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      floatArray0[4] = (float) 8192;
      floatArray0[1] = (float) 8192;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[6] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 1689.4241F, 1.0F, 8192, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDescription("editorSubFolder.Windows");
      homePieceOfFurniture0.getNameYOffset();
      homePieceOfFurniture0.setWidth(1826.7908F);
      homePieceOfFurniture0.getNameStyle();
      homePieceOfFurniture0.isNameCenterPointAt(1.0F, 8192.0F, 1679.4883F);
      try { 
        Integer.parseUnsignedInt("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Integer integer0 = new Integer(8185);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8185;
      floatArray0[5] = (float) 8185;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 1689.4241F, 8185.0F, 8185, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDepth(0.3926991F);
      homePieceOfFurniture0.setNameVisible(false);
      BigDecimal bigDecimal0 = new BigDecimal((long) 8185);
      CatalogPieceOfFurniture catalogPieceOfFurniture1 = new CatalogPieceOfFurniture("", "Q*I`mPb|", "com.eteks.sweethome3d.model.HomePieceOfFurniture$12", (Content) null, (Content) null, 1689.4241F, (-485.7177F), (-1.0F), 8185, true, true, floatArray1, "Q*I`mPb|", false, bigDecimal0, bigDecimal0);
      catalogPieceOfFurniture0.compareTo(catalogPieceOfFurniture1);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.isVisible();
      homePieceOfFurniture0.isBottomLeftPointAt((-3067.6572F), 0.0F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Integer integer0 = new Integer(0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "work");
      Integer integer1 = new Integer(8192);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("1SyjFPv9=&P", (Content) null, (Content) null, 1.0F, (-1804.392F), (-1804.392F), 517.9619F, true, true, integer1, (float[][]) null, false, 2.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.setModelMirrored(true);
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("0mnrLZhe");
      catalogPieceOfFurniture0.setCategory(furnitureCategory0);
      homePieceOfFurniture0.setWidth(0.0F);
      homePieceOfFurniture0.isNameCenterPointAt(1965.2155F, 3389.386F, (-1209.2F));
      homePieceOfFurniture0.isBottomLeftPointAt(8209.0F, (-1209.2F), 2.0F);
      homePieceOfFurniture0.setNameYOffset(3389.386F);
      homePieceOfFurniture0.isModelMirrored();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 8169, 8169, 614.572F, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.isDoorOrWindow();
      HomePieceOfFurniture.SortableProperty.values();
      homePieceOfFurniture0.getValueAddedTaxPercentage();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("work", (Content) null, (Content) null, 2.0F, 8192, 2.0F, true, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDescription("work");
      homePieceOfFurniture0.setDescription("work");
      homePieceOfFurniture0.isDoorOrWindow();
      HomePieceOfFurniture.SortableProperty.values();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      float[] floatArray0 = new float[9];
      float[][] floatArray1 = new float[20][5];
      floatArray1[4] = floatArray0;
      Sash[] sashArray0 = new Sash[9];
      Sash sash0 = new Sash((-709.0F), 0.0F, (-1290.4448F), 0.0F, 452.0F);
      Sash sash1 = new Sash(1453.343F, (-3391.2F), 622.05554F, 452.0F, 21.2585F);
      sashArray0[5] = sash0;
      sashArray0[6] = sash0;
      Sash sash2 = new Sash((-1290.4448F), 155.0F, 1453.343F, 21.2585F, (-1089.0F));
      sashArray0[8] = sash2;
      BigDecimal bigDecimal0 = new BigDecimal((-709.0F));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", (Content) null, (Content) null, (Content) null, 0.0F, (-1290.4448F), (-1290.4448F), (-709.0F), false, 0.0F, 0.0F, sashArray0, floatArray1, "", false, false, false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getPriceValueAddedTaxIncluded();
      homeDoorOrWindow0.getNameStyle();
      // Undeclared exception!
      try { 
        homeDoorOrWindow0.setModelMirrored(false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Integer integer0 = new Integer(0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "work");
      Integer integer1 = new Integer(8192);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("@LXr=k~", (Content) null, (Content) null, 0, 0, 1.0F, true, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("work");
      catalogPieceOfFurniture0.setCategory(furnitureCategory0);
      homePieceOfFurniture0.setY((-2247.81F));
      homePieceOfFurniture0.setDepth(1.0F);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setWidth(0);
      homePieceOfFurniture0.isTopRightPointAt(0, (-1714.1F), (-359.393F));
      homePieceOfFurniture0.isTexturable();
      homePieceOfFurniture0.isBackFaceShown();
      homePieceOfFurniture0.isBottomRightPointAt((-3866.64F), 758.1784F, 8192);
      HomePieceOfFurniture.Property.values();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      Sash[] sashArray0 = new Sash[8];
      Sash sash0 = new Sash(29.66664F, 1.0F, 1.0F, 2033.1919F, 1.0F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(1.0F, 451.161F, 29.66664F, (-677.06F), 2.7407188F);
      sashArray0[1] = sash1;
      Sash sash2 = new Sash((-2498.221F), 2.0F, 2.0F, (-1.0F), (-2498.221F));
      sashArray0[2] = sash2;
      Sash sash3 = new Sash(0.0F, 2.0F, (-761.662F), 4096.0F, 1.0F);
      sashArray0[3] = sash3;
      Sash sash4 = new Sash(1.0F, 4096.0F, 1.0F, (-1.0F), 1.0F);
      sashArray0[4] = sash4;
      Sash sash5 = new Sash(4096.0F, 451.161F, (-4437.46F), 29.66664F, (-865.0F));
      sashArray0[5] = sash5;
      Sash sash6 = new Sash(0.5F, 2331.0552F, 0.5F, 29.66664F, (-1177.1759F));
      sashArray0[6] = sash6;
      Sash sash7 = new Sash((-761.662F), (-1.0F), (-2857.1501F), 0.5F, 0.0F);
      sashArray0[7] = sash7;
      float[][] floatArray0 = new float[3][9];
      float[] floatArray1 = new float[4];
      floatArray1[0] = 451.161F;
      floatArray1[1] = (-786.8F);
      floatArray1[2] = 2.0F;
      floatArray1[3] = (-1071.291F);
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[8];
      floatArray2[0] = (-2498.221F);
      floatArray2[1] = 8192.0F;
      floatArray2[2] = 4096.0F;
      floatArray2[3] = (-1.0F);
      floatArray2[4] = (-1.0F);
      floatArray2[5] = (-217.0F);
      floatArray2[6] = 4096.0F;
      floatArray2[7] = 2.7407188F;
      floatArray0[1] = floatArray2;
      float[] floatArray3 = new float[6];
      floatArray3[0] = 2.0F;
      floatArray3[1] = 2033.1919F;
      floatArray3[2] = 2331.0552F;
      floatArray3[3] = (-1177.1759F);
      floatArray3[4] = (-376.4546F);
      floatArray3[5] = (-1.0F);
      floatArray0[2] = floatArray3;
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", uRLContent0, uRLContent0, (-2857.1501F), 4096.0F, 4096.0F, 451.161F, true, 451.161F, 1.0F, sashArray0, floatArray0, "", false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getIcon();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, (-1291.6161F), 1.0F, 8192.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDepth(0.3926991F);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.isVisible();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homePieceOfFurniture0.addPropertyChangeListener(propertyChangeListenerProxy0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, 0.0F, 1.0F, 8192.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      homePieceOfFurniture1.setNameVisible(false);
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture1.setModelMirrored(true);
      homePieceOfFurniture0.isVisible();
      homePieceOfFurniture0.getNameYOffset();
      homePieceOfFurniture1.isTopLeftPointAt(0.0F, 1556.55F, 2018.6F);
      homePieceOfFurniture1.getElevation();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, (-1291.6161F), 1.0F, 8192.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDescription("editorSubFolder.Windows");
      homePieceOfFurniture0.setWidth(675.7141F);
      homePieceOfFurniture0.setX((-3067.6572F));
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("");
      catalogPieceOfFurniture0.setCategory(furnitureCategory0);
      homePieceOfFurniture0.getWidth();
      homePieceOfFurniture0.getPlanIcon();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      Integer integer1 = new Integer(8192);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 839.74414F, 8192, 8192, 839.74414F, true, true, integer1, (float[][]) null, false, 38.1F, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDepth(8192);
      homePieceOfFurniture0.isVisible();
      homePieceOfFurniture0.setName((String) null);
      catalogPieceOfFurniture0.getCategory();
      Integer integer2 = new Integer(782);
      homePieceOfFurniture0.setColor(integer1);
      homePieceOfFurniture0.setName((String) null);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, 8192.0F, 1.0F, 8192.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDescription("editorSubFolder.Windows");
      homePieceOfFurniture0.isBottomLeftPointAt(1.0F, 1689.4241F, 8192.0F);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setWidth(675.7141F);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture((String) null, (Content) null, (Content) null, 4.5310254F, 709.326F, 0.0F, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDescription((String) null);
      homePieceOfFurniture0.move(0.0F, 2946.6F);
      Level level0 = new Level("yr@boj_/Ty", 0.0F, 1.0F, 2117.963F);
      homePieceOfFurniture0.setLevel(level0);
      homePieceOfFurniture0.isBottomLeftPointAt(4846.0F, 2.0F, 4.5310254F);
      homePieceOfFurniture0.setX((-1.0F));
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.setWidth(1798.2F);
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.ELEVATION;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      homePieceOfFurniture0.getColor();
      homePieceOfFurniture0.setDepth(1798.2F);
      homePieceOfFurniture0.getLevel();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = (-5.3676553F);
      floatArray0[3] = (-5.3676553F);
      floatArray0[4] = (float) 8192;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[7] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 1689.4241F, 1.0F, 8192, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.isBackFaceShown();
      homePieceOfFurniture0.isBottomRightPointAt(3295.3489F, 450.3833F, (-2457.14F));
      HomePieceOfFurniture.Property.values();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[6] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 1689.4241F, 1.0F, 8192, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDescription("editorSubFolder.Windows");
      homePieceOfFurniture0.getNameYOffset();
      homePieceOfFurniture0.isTopLeftPointAt(0.3926991F, (-157.0F), 0.3926991F);
      homePieceOfFurniture0.getShininess();
      homePieceOfFurniture0.getModel();
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Integer integer0 = new Integer(8194);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[2] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8194;
      floatArray0[5] = (float) 8194;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 1689.4241F, 554.9793F, 8194, 1.0F, false, true, integer0, floatArray1, true, 0.0F, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setModelMirrored(false);
      homePieceOfFurniture0.isDeformable();
      homePieceOfFurniture0.getGroundElevation();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, (-1291.6161F), 1.0F, 8192.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDescription("editorSubFolder.Windows");
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.isVisible();
      homePieceOfFurniture0.getNameYOffset();
      homePieceOfFurniture0.isTopLeftPointAt(8192.0F, 1556.55F, 1556.55F);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, (-1291.6161F), 1.0F, 8192.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("DOOR_OR_WINDOW");
      catalogPieceOfFurniture0.setCategory(furnitureCategory0);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.getX();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 8174, 8174, 8174, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("~", propertyChangeListener0);
      homePieceOfFurniture0.removePropertyChangeListener(propertyChangeListenerProxy0);
      homePieceOfFurniture0.isNameCenterPointAt((-892.53467F), (-2894.0508F), 8174);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      float[][] floatArray0 = new float[8][5];
      Integer integer0 = new Integer(8192);
      Integer integer1 = new Integer((-140));
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("<8K*_", (Content) null, (Content) null, 2294.72F, 0.0F, 8192, (-1966.85F), true, true, integer0, floatArray0, true, (-140), false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setModelMirrored(true);
      Float float0 = new Float(2835927.715284586);
      Float float1 = new Float(0.0);
      homePieceOfFurniture0.setShininess(float1);
      homePieceOfFurniture0.setNameYOffset((-3414.21F));
      Random.setNextRandom(75);
      homePieceOfFurniture0.setNameAngle((-1804.392F));
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 8169, 8169, 8169, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      homePieceOfFurniture1.setName((String) null);
      homePieceOfFurniture0.getNameStyle();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 8131, 8131, 8131, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.getGroundElevation();
      homePieceOfFurniture0.setTexture((HomeTexture) null);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[1] = 1689.4241F;
      floatArray0[2] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      boolean boolean0 = false;
      Integer integer1 = new Integer(8192);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 1689.4241F, 0.0F, 300.84F, (-1.0F), false, true, integer1, floatArray1, false, 2.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(false);
      HomeLight homeLight0 = null;
      try {
        homeLight0 = new HomeLight((Light) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("TEXTURE", (Content) null, (Content) null, (-2936.4429F), 2580.949F, (-706.156F), false, false);
      Integer integer1 = new Integer((-2146959486));
      catalogPieceOfFurniture0.getCategory();
      catalogPieceOfFurniture0.setCategory((FurnitureCategory) null);
      LightSource[] lightSourceArray0 = new LightSource[3];
      LightSource lightSource0 = new LightSource((-1291.6161F), 1882.0F, 8192, 8192);
      lightSourceArray0[0] = lightSource0;
      LightSource lightSource1 = new LightSource(1882.0F, 646.0044F, 0.5F, 8192);
      lightSourceArray0[1] = lightSource1;
      LightSource lightSource2 = new LightSource(8192, 2580.949F, 4759.0F, (-2146959486));
      lightSourceArray0[2] = lightSource2;
      BigDecimal bigDecimal0 = BigDecimal.valueOf((long) 8192);
      CatalogLight catalogLight0 = new CatalogLight("", "", "", (Content) null, (Content) null, (Content) null, 646.0044F, 0.5F, 646.0044F, 152.0F, false, lightSourceArray0, (float[][]) null, "com.eteks.sweethome3d.model.HomePieceOfFurniture", false, false, true, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.isTopLeftPointAt(0.22143634F, 4.5310254F, (-2936.4429F));
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("H", (Content) null, (Content) null, 8169, 8169, 8169, true, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.containsPoint(2208.245F, 2208.245F, 3.4028235E38F);
      Level level0 = new Level("H", 8169, 8169, 8169);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[2] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[8][5];
      Integer integer1 = new Integer(1916);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, (-1620.9552F), (-1668.96F), 2109.01F, (-1620.9552F), true, false, integer1, floatArray1, false, (-2649.9978F), true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.setModelMirrored(true);
      Float float0 = new Float((double) (-2649.9978F));
      Float float1 = new Float(2.6388338F);
      homePieceOfFurniture0.setShininess((Float) 8192.0F);
      homePieceOfFurniture0.setNameYOffset(2.0626285F);
      homePieceOfFurniture0.isMovable();
      homePieceOfFurniture0.move(744.7112F, 1986.7244F);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "work");
      Integer integer1 = new Integer(8192);
      Integer integer2 = new Integer(1166);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 2.0F, 0.0F, 0.0F, (-3414.21F), false, false, integer2, (float[][]) null, false, 8192, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(true);
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.setModelMirrored(true);
      Float float0 = new Float((double) (-3414.21F));
      homePieceOfFurniture0.setShininess((Float) null);
      homePieceOfFurniture0.setNameYOffset((-1804.392F));
      homePieceOfFurniture0.setModelMirrored(false);
      Random.setNextRandom(5);
      homePieceOfFurniture0.setAngle(8192);
      homePieceOfFurniture0.getNameStyle();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      String string0 = "com.eteks.sweethome3d.model.HomePieceOfFurniture$10";
      Sash sash0 = new Sash((-1092.0F), 889.25F, (-1089.0F), 4.9F, (-1092.0F));
      BigDecimal bigDecimal0 = new BigDecimal(2302.19848233);
      Sash[] sashArray0 = new Sash[1];
      sashArray0[0] = sash0;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("com.eteks.sweethome3d.model.HomePieceOfFurniture$10", "com.eteks.sweethome3d.model.HomePieceOfFurniture$10", "com.eteks.sweethome3d.model.HomePieceOfFurniture$10", (Content) null, (Content) null, (Content) null, (-2425.28F), (-1092.0F), 0.0F, 0.0F, false, 631.12616F, 4.9F, sashArray0, (float[][]) null, "com.eteks.sweethome3d.model.HomePieceOfFurniture$10", false, false, false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      Float float0 = new Float(2.0);
      // Undeclared exception!
      try { 
        homeDoorOrWindow0.setShininess(float0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't texturable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      int int0 = Integer.compare(8192, 2552);
      assertEquals(1, int0);
      
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, (-1291.6161F), 1.0F, 8192.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      assertFalse(integer0.equals((Object)int0));
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(9, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertFalse(integer0.equals((Object)int0));
      assertNotNull(homePieceOfFurniture0);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setDescription("editorSubFolder.Windows");
      assertFalse(integer0.equals((Object)int0));
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setElevation((-1291.6161F));
      assertFalse(integer0.equals((Object)int0));
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setNameVisible(true);
      assertFalse(integer0.equals((Object)int0));
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setWidth(675.7141F);
      assertFalse(integer0.equals((Object)int0));
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(675.7141F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      boolean boolean0 = homePieceOfFurniture0.isTopRightPointAt(1689.4241F, 1689.4241F, 8192.0F);
      assertFalse(integer0.equals((Object)int0));
      assertFalse(boolean0);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(675.7141F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(9, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, (-1291.6161F), 1.0F, 8192.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(9, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(9, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertNotNull(homePieceOfFurniture1);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(4096.0F, homePieceOfFurniture1.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertEquals("", homePieceOfFurniture1.getName());
      assertFalse(homePieceOfFurniture1.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture1.getY(), 0.01F);
      assertNull(homePieceOfFurniture1.getShininess());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertEquals(1.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals((-1291.6161F), homePieceOfFurniture1.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      homePieceOfFurniture1.setNameVisible(false);
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(4096.0F, homePieceOfFurniture1.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertEquals("", homePieceOfFurniture1.getName());
      assertFalse(homePieceOfFurniture1.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture1.getY(), 0.01F);
      assertNull(homePieceOfFurniture1.getShininess());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertEquals(1.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals((-1291.6161F), homePieceOfFurniture1.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      homePieceOfFurniture0.setNameVisible(false);
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      
      boolean boolean0 = homePieceOfFurniture0.isVisible();
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertTrue(boolean0);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      
      float float0 = homePieceOfFurniture0.getNameYOffset();
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      
      boolean boolean1 = homePieceOfFurniture1.isTopLeftPointAt(0.0F, 1556.55F, 2018.6F);
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(4096.0F, homePieceOfFurniture1.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertEquals("", homePieceOfFurniture1.getName());
      assertFalse(homePieceOfFurniture1.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture1.getY(), 0.01F);
      assertNull(homePieceOfFurniture1.getShininess());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertEquals(1.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals((-1291.6161F), homePieceOfFurniture1.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      float float1 = homePieceOfFurniture1.getDepth();
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertNotEquals(float1, float0, 0.01F);
      assertEquals((-1291.6161F), float1, 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(4096.0F, homePieceOfFurniture1.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertEquals("", homePieceOfFurniture1.getName());
      assertFalse(homePieceOfFurniture1.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture1.getY(), 0.01F);
      assertNull(homePieceOfFurniture1.getShininess());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertEquals(1.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals((-1291.6161F), homePieceOfFurniture1.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      boolean boolean2 = homePieceOfFurniture1.isTopRightPointAt(740.7504F, 8192.0F, 1.0F);
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(4096.0F, homePieceOfFurniture1.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertEquals("", homePieceOfFurniture1.getName());
      assertFalse(homePieceOfFurniture1.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture1.getY(), 0.01F);
      assertNull(homePieceOfFurniture1.getShininess());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertEquals(1.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals((-1291.6161F), homePieceOfFurniture1.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture((String) null, (Content) null, (Content) null, 4.5310254F, 709.326F, 0.0F, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDescription((String) null);
      homePieceOfFurniture0.move(0.0F, 0.5F);
      Level level0 = new Level("yr@boj_/Ty", 0.0F, 1.0F, 2117.963F);
      homePieceOfFurniture0.setLevel(level0);
      homePieceOfFurniture0.isBottomLeftPointAt(4846.0F, 2.0F, 4.5310254F);
      homePieceOfFurniture0.setX((-1.0F));
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.setWidth(1798.2F);
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.ELEVATION;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      homePieceOfFurniture0.getColor();
      homePieceOfFurniture0.setDepth(1798.2F);
      homePieceOfFurniture0.getLevel();
      homePieceOfFurniture0.getName();
      homePieceOfFurniture0.getTexture();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture((String) null, (Content) null, (Content) null, 4.5310254F, 709.326F, 0.0F, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDescription((String) null);
      homePieceOfFurniture0.move(0.0F, 2946.6F);
      homePieceOfFurniture0.isBottomLeftPointAt(4846.0F, 2.0F, 4.5310254F);
      homePieceOfFurniture0.setX((-1.0F));
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.setWidth(1798.2F);
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.ELEVATION;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      homePieceOfFurniture0.getColor();
      homePieceOfFurniture0.setDepth(1798.2F);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.CATALOG_ID;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      String string0 = "com.eteks.sweethome3d.model.HomePieceOfFurniture$8";
      String string1 = "t\"*0Dx[7B%WB'Z=";
      Class<CatalogPieceOfFurniture> class0 = CatalogPieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(class0, "YH>bSLIn]iW\"2N6I");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource YH>bSLIn]iW\"2N6I
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("4.#R@qO7zqdL f$,r--", (Content) null, (Content) null, 1.0F, 1.0F, (-1650.44F), true, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      HomePieceOfFurniture homePieceOfFurniture1 = new HomePieceOfFurniture(homePieceOfFurniture0);
      homePieceOfFurniture0.setDescription("editorSubFolder.Windows");
      homePieceOfFurniture0.isBottomLeftPointAt((-2936.4429F), 1296.2F, (-1.0F));
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setWidth(675.7141F);
      homePieceOfFurniture0.setMovable(false);
      homePieceOfFurniture0.isDoorOrWindow();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 8174, 8174, 8174, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.isNameCenterPointAt(8174, (-2894.0508F), 8174);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, 0.0F, 1.0F, 8192.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDepth(0.3926991F);
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.isVisible();
      homePieceOfFurniture0.setName("");
      homePieceOfFurniture0.setNameXOffset(1986.7244F);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[1] = 1689.4241F;
      floatArray0[2] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      Integer.min(19, 19);
      float[][] floatArray1 = new float[8][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("I2E;", (Content) null, (Content) null, (-1088.683F), 1689.4241F, 1689.4241F, 8192.0F, false, false, integer0, floatArray1, true, (-1650.44F), false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      catalogPieceOfFurniture0.setCategory((FurnitureCategory) null);
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("I2E;");
      catalogPieceOfFurniture0.setCategory(furnitureCategory0);
      homePieceOfFurniture0.setDepth(1.0F);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setWidth(1986.3317F);
      homePieceOfFurniture0.isTopRightPointAt(1.0F, 1689.4241F, 422.46924F);
      homePieceOfFurniture0.isTexturable();
      homePieceOfFurniture0.isBottomRightPointAt(0.5F, 321.20578F, 422.46924F);
      homePieceOfFurniture0.isTexturable();
      homePieceOfFurniture0.getDepth();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Integer integer0 = new Integer(615);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 1.0F, 615, 615, 615, false, integer0, (float[][]) null, false, 615, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.isTopRightPointAt(3990.0366F, 615, 3.4028235E38F);
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("");
      Integer.getInteger("");
      homePieceOfFurniture0.setColor(integer0);
      homePieceOfFurniture0.getAngle();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 0.0F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 0.0F, (-1291.6161F), 1.0F, 0.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      homePieceOfFurniture1.setNameVisible(false);
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.isVisible();
      HomePieceOfFurniture homePieceOfFurniture2 = homePieceOfFurniture1.clone();
      homePieceOfFurniture1.setName("Iw'}x!wl*wGH[6");
      homePieceOfFurniture2.containsPoint(5785.424F, (-1220.672F), 0.0F);
      homePieceOfFurniture2.getLevel();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[1] = 1689.4241F;
      floatArray0[2] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      boolean boolean0 = false;
      Integer integer1 = new Integer(8192);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 1689.4241F, 0.0F, 300.84F, (-1.0F), false, true, integer1, floatArray1, false, 2.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(false);
      LightSource[] lightSourceArray0 = new LightSource[3];
      Float float0 = new Float((double) 3.4028235E38F);
      LightSource lightSource0 = new LightSource(300.84F, 0.0F, (-5845.911F), 627, float0);
      lightSourceArray0[0] = lightSource0;
      LightSource lightSource1 = new LightSource(1.0F, (-385.0F), 0.0F, 8192);
      lightSourceArray0[1] = lightSource1;
      Float float1 = new Float(0.0F);
      LightSource lightSource2 = new LightSource(3078.8176F, 0.0F, 1689.4241F, (-1707), float1);
      lightSourceArray0[2] = lightSource2;
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight("", "java.version", "", (Content) null, (Content) null, (Content) null, (-182.0F), 3.4028235E38F, 2.0F, 3.4028235E38F, false, lightSourceArray0, floatArray1, "", false, true, false, bigDecimal0, bigDecimal0);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.getLevel();
      homePieceOfFurniture0.setLevel((Level) null);
      HomeLight homeLight2 = null;
      try {
        homeLight2 = new HomeLight((Light) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("Super class isn't cloneable", (Content) null, (Content) null, 8192, 0.0F, 1689.4241F, 1986.7244F, false, false, integer0, (float[][]) null, true, (-1291.6161F), false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.clone();
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setModelMirrored(true);
      homePieceOfFurniture0.isVisible();
      homePieceOfFurniture0.getNameYOffset();
      homePieceOfFurniture0.isTopLeftPointAt((-3327.7F), 0.0F, (-1328.3F));
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("com.eteks.sweethome3d.tools.OperatingSystem$1", (Content) null, (Content) null, 1974.0F, 1974.0F, (-437.34F), false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      linkedList0.add(homePieceOfFurniture0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "com.eteks.sweethome3d.tools.OperatingSystem$1");
      homeFurnitureGroup0.isPointAt(1974.0F, 1.0F, 1974.0F);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("wo@/k", (Content) null, (Content) null, 713, 713, 713, true, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setAngle(5031.55F);
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      linkedList0.add(homePieceOfFurniture0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "applicationSubFolder.M9c OS X");
      homeFurnitureGroup0.clone();
      // Undeclared exception!
      try { 
        HomePieceOfFurniture.Property.valueOf("wo@/k");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomePieceOfFurniture.Property.wo@/k
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer0 = new Integer(1055);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 1689.4241F, 1689.4241F, 0.0F, 0.0F, true, true, integer0, (float[][]) null, false, 0.0F, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.getNameAngle();
      homePieceOfFurniture0.getCurrency();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("TEXTURE", (Content) null, (Content) null, (-2936.19F), 2580.949F, (-706.156F), false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      Integer integer1 = new Integer((-2146959486));
      homePieceOfFurniture0.setColor(integer1);
      homePieceOfFurniture0.setDescription("editorSubFoldr.Windows");
      catalogPieceOfFurniture0.getCategory();
      catalogPieceOfFurniture0.setCategory((FurnitureCategory) null);
      homePieceOfFurniture0.isBottomLeftPointAt(0.0F, 0.0F, (-1955.0F));
      homePieceOfFurniture0.isBottomLeftPointAt((-834.48F), (-1955.0F), (-834.48F));
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.setWidth((-3996.2224F));
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      homePieceOfFurniture0.getColor();
      homePieceOfFurniture0.setDepth((-3966.651F));
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Integer integer0 = new Integer(0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "work");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("10yjFhv9=&P", (Content) null, (Content) null, (-1804.392F), 8192, (-1804.392F), 1.0F, false, false, integer0, (float[][]) null, false, 1.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      CatalogPieceOfFurniture catalogPieceOfFurniture1 = new CatalogPieceOfFurniture("10yjFhv9=&P", (Content) null, (Content) null, 517.9619F, (-1020.9893F), 517.9619F, (-1020.9893F), false, false, integer0, (float[][]) null, false, 517.9619F, true);
      homePieceOfFurniture1.setNameAngle(0);
      homePieceOfFurniture0.getWidth();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 8169, 8169, 8169, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.isBottomLeftPointAt(3.4028235E38F, 0.0F, 0.0F);
      homePieceOfFurniture0.isTopLeftPointAt(4156.83F, 3.4028235E38F, 3.4028235E38F);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 8169, 8169, 8169, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      Level level0 = new Level("Super class isn't cloneable", 72.493164F, 8169, 0.3926991F);
      Level level1 = level0.clone();
      homePieceOfFurniture0.setLevel(level1);
      homePieceOfFurniture0.isTopLeftPointAt(3.4028235E38F, 4156.993F, 3.4028235E38F);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 2147482907, 2147482907, 614.572F, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setNameAngle(614.572F);
      HomePieceOfFurniture.Property.values();
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      homePieceOfFurniture1.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture1.getGroundElevation();
      homePieceOfFurniture1.getNameXOffset();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, (-1291.6161F), 1.0F, 8192.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(9, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setDescription("editorSubFolder.Windows");
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setNameVisible(true);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setWidth(675.7141F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(675.7141F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      boolean boolean0 = homePieceOfFurniture0.isNameCenterPointAt(1689.4241F, 776.0F, 675.7141F);
      assertFalse(boolean0);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(675.7141F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setElevation(3.4028235E38F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(3.4028235E38F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(3.4028235E38F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(675.7141F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(9, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      float[] floatArray0 = new float[9];
      float[][] floatArray1 = new float[9][5];
      floatArray1[4] = floatArray1[3];
      floatArray1[8] = floatArray0;
      Sash[] sashArray0 = new Sash[9];
      Sash sash0 = new Sash((-647.439F), 0.0F, (-1291.6161F), 0.0F, 452.0F);
      Sash sash1 = new Sash(1453.343F, (-3391.2F), 622.05554F, (-647.439F), 21.2585F);
      sashArray0[5] = sashArray0[3];
      sashArray0[6] = sashArray0[5];
      Sash sash2 = new Sash((-1291.6161F), 155.0F, 1453.343F, 848.63904F, (-1089.0F));
      sashArray0[8] = sash2;
      BigDecimal bigDecimal0 = new BigDecimal(848.63904F);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", (Content) null, (Content) null, (Content) null, 0.0F, (-1291.6161F), (-1291.6161F), (-709.0F), false, 0.0F, 0.0F, sashArray0, floatArray1, "", false, false, false, bigDecimal0, bigDecimal0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 622.05554F, (-1089.0F), 53.707916F, false, true);
      catalogDoorOrWindow0.compareTo(catalogPieceOfFurniture0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      HomePieceOfFurniture.Property.values();
      homeDoorOrWindow0.getValueAddedTax();
      homeDoorOrWindow0.getPrice();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[][] floatArray0 = new float[8][5];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Integer integer1 = new Integer(8192);
      Sash sash0 = new Sash(8192, 3252.6F, 8192, 400.2611F, 8192);
      Sash sash1 = new Sash(2153.18F, 8192, (-1468.5F), 155.0F, (-1132.0F));
      BigDecimal bigDecimal0 = new BigDecimal(155.0F);
      Sash[] sashArray0 = new Sash[3];
      sashArray0[0] = sash1;
      sashArray0[1] = sash0;
      sashArray0[2] = sash1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", (Content) null, (Content) null, (Content) null, 1608.0646F, 3252.6F, 3.4028235E38F, 1598.8394F, false, (-1132.0F), (-1034.02F), sashArray0, floatArray0, "", false, false, false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      HomeDoorOrWindow homeDoorOrWindow1 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow1.getPriceValueAddedTaxIncluded();
      HomePieceOfFurniture.Property.values();
      homeDoorOrWindow0.getValueAddedTax();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("com.eteks.sweethome3d.model.HomePieceOfFurniture$10", (Content) null, (Content) null, 8169, 8169, 8169, true, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      float[][] floatArray0 = new float[8][5];
      Integer integer0 = new Integer(8192);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("<8K*_", (Content) null, (Content) null, 8192, (-3852.145F), (-3852.145F), 0.0F, true, true, integer0, floatArray0, true, 2946.6F, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setModelMirrored(true);
      homePieceOfFurniture0.isDeformable();
      homePieceOfFurniture0.getGroundElevation();
      homePieceOfFurniture0.isDoorOrWindow();
      homePieceOfFurniture0.setNameXOffset(1897.5339F);
      homePieceOfFurniture0.getNameStyle();
      homePieceOfFurniture0.getHeight();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("com.eteks.sweethome3d.model.HomePieceOfFurniture$10", (Content) null, (Content) null, 8169, 8169, 631.12616F, true, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.getValueAddedTax();
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      float[][] floatArray0 = new float[3][5];
      Integer.getInteger("W]^s+");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("W]^s+", (Content) null, (Content) null, 1689.4241F, 8192, 300.84F, 0.0F, false, true, (Integer) null, floatArray0, false, 300.84F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.isPointAt(0.0F, 8192, 0.0F);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      Integer integer1 = new Integer((-715827882));
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("work", (Content) null, (Content) null, 8192, 8192, 2.0F, false, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDescription("work");
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      linkedList0.add(homePieceOfFurniture0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "] L*TF.}e?T");
      Level level0 = new Level("work", (-4769.57F), 3132.486F, (-1.0F));
      Level level1 = level0.clone();
      homePieceOfFurniture0.setLevel(level1);
      homeFurnitureGroup0.setNameVisible(true);
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      homeFurnitureGroup0.setDescription("u`?7\"CBAsR");
      homeFurnitureGroup1.setNameVisible(false);
      homeFurnitureGroup1.isBottomLeftPointAt((-1306.2F), 2.0F, 1.0F);
      homeFurnitureGroup0.setNameXOffset((-1306.2F));
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setWidth(8192);
      homeFurnitureGroup0.getModelRotation();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      Float float0 = new Float(2854154.6959505677);
      Float float1 = new Float(8192.0F);
      LightSource[] lightSourceArray0 = new LightSource[3];
      LightSource lightSource0 = new LightSource(8.5F, 2.0F, (-3067.6572F), (-1));
      lightSourceArray0[0] = lightSource0;
      LightSource lightSource1 = new LightSource((-1.0F), 1689.4241F, (-767.4174F), 8192);
      lightSourceArray0[1] = lightSource1;
      LightSource lightSource2 = new LightSource((-1.0F), 0.0F, 0.0F, (-1));
      lightSourceArray0[2] = lightSource2;
      BigInteger bigInteger0 = BigInteger.TEN;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      CatalogLight catalogLight0 = new CatalogLight("editorSubFolder", "]XTpz^$}v~D$iXZP", "", (Content) null, (Content) null, (Content) null, 0.0F, 0.0F, 0.0F, (-293.701F), false, lightSourceArray0, "", floatArray1, "Ii.c", true, true, true, bigDecimal0, bigDecimal0, "m5A8m\"=");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.getHeight();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("wo@/k", (Content) null, (Content) null, 713, 713, 713, true, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      linkedList0.add(homePieceOfFurniture0);
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "applicationSubFolder.M9c OS X");
      homeFurnitureGroup0.isPointAt(713, 713, 713);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 8169, 8169, 8169, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.isTopLeftPointAt((-10.234211F), 8169, 8169);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("TEXTURE", (Content) null, (Content) null, 1689.4241F, 1976.0F, 1689.4241F, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.getShininess();
      homePieceOfFurniture0.setWidth(1.0F);
      homePieceOfFurniture0.getNameStyle();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 0.0F;
      floatArray0[0] = 0.0F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 0.0F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      Sash[] sashArray0 = new Sash[9];
      Sash sash0 = new Sash(0.0F, 452.0F, (-1080.3933F), 0.0F, 452.0F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-647.439F), 0.0F, 1.0F, 8192.0F, 452.0F);
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(1453.343F, 1471.13F, (-709.0F), (-1650.44F), 1157.0F);
      sashArray0[2] = sash2;
      Sash sash3 = new Sash(0.0F, (-3391.2F), 622.05554F, (-409.202F), 1.0F);
      sashArray0[3] = sash3;
      Sash sash4 = new Sash(0.0F, (-1650.44F), 8192, (-2248.0F), (-1267.8F));
      sashArray0[4] = sash4;
      sashArray0[5] = sash3;
      Sash sash5 = new Sash((-3919.7583F), 1277.1F, 0.0F, 0.0F, (-1.0F));
      sashArray0[6] = sash5;
      Sash sash6 = new Sash(0.0F, 6855.8F, 1476.8F, (-37.35871F), 0.0F);
      Sash sash7 = new Sash((-1291.6161F), 155.0F, 1471.13F, 828.0F, (-1089.0F));
      sashArray0[8] = sash7;
      BigDecimal bigDecimal0 = new BigDecimal(1327.5);
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (String) null, "", (Content) null, (Content) null, (Content) null, 8192.0F, 1.0F, (-1291.6161F), (-709.0F), false, 0.0F, 0.0F, sashArray0, floatArray1, "", false, false, false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getPriceValueAddedTaxIncluded();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Integer integer0 = new Integer(0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "work");
      Integer integer1 = new Integer(8192);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("1SyjFPv9=&P", (Content) null, (Content) null, 1.0F, (-1804.392F), (-1804.392F), 517.9619F, true, true, integer1, (float[][]) null, false, 2.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.setModelMirrored(true);
      homePieceOfFurniture0.setWidth(0.0F);
      homePieceOfFurniture0.isNameCenterPointAt(1582.2F, 1965.2155F, 8209.0F);
      homePieceOfFurniture0.isBottomLeftPointAt((-1804.392F), 1965.2155F, 517.9619F);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Integer integer0 = new Integer(8184);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 5031.55F, 8184, 8184, true, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.isBottomLeftPointAt(8184, (-2107.2F), 5031.55F);
      HomePieceOfFurniture.Property homePieceOfFurniture_Property0 = HomePieceOfFurniture.Property.TEXTURE;
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      LightSource[] lightSourceArray0 = new LightSource[6];
      Float float0 = new Float((double) 9094.196F);
      LightSource lightSource0 = new LightSource((-1707.2F), 9094.196F, 9094.196F, (-1065), float0);
      lightSourceArray0[0] = lightSource0;
      Float float1 = new Float(6.673487163422452E7);
      LightSource lightSource1 = new LightSource((-1065), 4818.0F, (-1707.2F), 3256, float1);
      lightSourceArray0[1] = lightSource1;
      LightSource lightSource2 = new LightSource(9094.196F, 3834.9773F, 9094.196F, 3256, float0);
      lightSourceArray0[2] = lightSource2;
      Float float2 = new Float((-501.28F));
      LightSource lightSource3 = new LightSource(3256, 9094.196F, 592.12915F, (-1065), float2);
      lightSourceArray0[3] = lightSource3;
      LightSource lightSource4 = new LightSource(1656.6516F, 592.12915F, (-501.28F), 1810, float2);
      lightSourceArray0[4] = lightSource4;
      LightSource lightSource5 = new LightSource(3058.353F, (-414.77878F), (-1065), (-1065));
      lightSourceArray0[5] = lightSource5;
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      BigDecimal bigDecimal1 = new BigDecimal(1056.022887908);
      CatalogLight catalogLight0 = new CatalogLight((String) null, "t8kH>F`P~&I_/", "t8kH>F`P~&I_/", temporaryURLContent0, temporaryURLContent0, 0.3926991F, 0.3926991F, (-1707.2F), 0.3926991F, false, lightSourceArray0, (float[][]) null, "nd.a7Lz`", false, bigDecimal0, bigDecimal1);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      HomePieceOfFurniture homePieceOfFurniture0 = homeLight1.clone();
      homePieceOfFurniture0.getPoints();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, 0.0F, 0.0F, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      homePieceOfFurniture1.setNameVisible(false);
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture1.setModelMirrored(true);
      homePieceOfFurniture1.setY(1119.83F);
      homePieceOfFurniture0.isVisible();
      homePieceOfFurniture0.getNameYOffset();
      homePieceOfFurniture1.isTopLeftPointAt(0.0F, 1556.55F, 2018.6F);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8169, 8169, 631.12616F, true, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      HomePieceOfFurniture homePieceOfFurniture1 = new HomePieceOfFurniture(homePieceOfFurniture0);
      BigDecimal bigDecimal0 = new BigDecimal(8169);
      homePieceOfFurniture0.getGroundElevation();
      homePieceOfFurniture0.getValueAddedTaxPercentage();
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 8169, 8169, 614.572F, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.isMovable();
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      float[] floatArray0 = new float[9];
      float[][] floatArray1 = new float[9][5];
      floatArray1[4] = floatArray1[3];
      floatArray1[8] = floatArray0;
      Sash[] sashArray0 = new Sash[9];
      Sash sash0 = new Sash((-648.13214F), 0.0F, (-1291.6161F), 0.0F, 452.0F);
      Sash sash1 = new Sash(1453.343F, (-3391.2F), 622.05554F, (-648.13214F), 21.2585F);
      sashArray0[5] = sashArray0[3];
      sashArray0[6] = sashArray0[5];
      Sash sash2 = new Sash((-1291.6161F), 155.0F, 1453.343F, 21.2585F, (-1089.0F));
      sashArray0[8] = sash2;
      BigDecimal bigDecimal0 = new BigDecimal((-709.0F));
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", (Content) null, (Content) null, (Content) null, 0.0F, (-1291.6161F), (-1291.6161F), (-709.0F), false, 0.0F, 0.0F, sashArray0, floatArray1, "", false, false, false, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getPriceValueAddedTaxIncluded();
      HomePieceOfFurniture.Property.values();
      homeDoorOrWindow0.getValueAddedTax();
      homeDoorOrWindow0.getCatalogId();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("HEIGHT", (Content) null, (Content) null, 5031.55F, 3430.5664F, 5031.55F, true, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(false);
      Float float0 = new Float(4.9F);
      homePieceOfFurniture0.setShininess(float0);
      HomePieceOfFurniture.Property.valueOf("HEIGHT");
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Integer integer0 = new Integer(0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "work");
      Integer integer1 = new Integer(8192);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("1SyjFPv9=&P", (Content) null, (Content) null, 1.0F, (-1804.392F), (-1804.392F), 517.9619F, true, true, integer1, (float[][]) null, false, 2.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.setModelMirrored(true);
      Float float0 = new Float(2854154.6959505677);
      homePieceOfFurniture0.setShininess(float0);
      homePieceOfFurniture0.setNameYOffset(1.0F);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, (-1291.6161F), 1.0F, 8192.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDepth(0.3926991F);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.isNameVisible();
      homePieceOfFurniture0.isPointAt(0.0F, 1340.72F, 1.0F);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.9303F;
      floatArray0[1] = 1689.9303F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.9303F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, (-1291.6161F), 1.0F, 8192.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDescription("editorSubFolder.Windows");
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setWidth(675.7141F);
      homePieceOfFurniture0.isNameCenterPointAt(1689.9303F, 776.0F, 675.7141F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("2cj*X=Bbi5)YE]4.", propertyChangeListener0);
      homePieceOfFurniture0.removePropertyChangeListener(propertyChangeListenerProxy0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(2302.19848233);
      Sash[] sashArray0 = new Sash[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("com.eteks.sweethome3d.model.HomePieceOfFurniture$10", "com.eteks.sweethome3d.model.HomePieceOfFurniture$10", "com.eteks.sweethome3d.model.HomePieceOfFurniture$10", (Content) null, (Content) null, (Content) null, 631.12616F, 631.12616F, 0.0F, 0.0F, true, 631.12616F, 631.12616F, sashArray0, (float[][]) null, "com.eteks.sweethome3d.model.HomePieceOfFurniture$10", true, true, true, bigDecimal0, bigDecimal0);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getPriceValueAddedTaxIncluded();
      homeDoorOrWindow0.getNameStyle();
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("work", (Content) null, (Content) null, 0.3926991F, 0.3926991F, 0.3926991F, true, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDescription("work");
      homePieceOfFurniture0.move(0.3926991F, (-853.8F));
      homePieceOfFurniture0.move(0.0F, 451.71F);
      homePieceOfFurniture0.isBottomRightPointAt(0.3926991F, 0.3926991F, 0.3926991F);
      homePieceOfFurniture0.isBottomLeftPointAt(0.3926991F, 2.0F, 451.71F);
      homePieceOfFurniture0.setDescription("work");
      homePieceOfFurniture0.isNameVisible();
      homePieceOfFurniture0.setNameYOffset(599.0488F);
      HomePieceOfFurniture.SortableProperty.values();
      homePieceOfFurniture0.getNameYOffset();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Integer integer0 = new Integer(12);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8147, 1.9959209F, 611.9516F, false, false);
      LightSource[] lightSourceArray0 = new LightSource[1];
      LightSource lightSource0 = new LightSource((-1078.762F), (-1078.762F), 3294.4F, 8147);
      lightSourceArray0[0] = lightSource0;
      BigDecimal bigDecimal0 = new BigDecimal(3294.4F);
      CatalogLight catalogLight0 = new CatalogLight((String) null, "", (String) null, (Content) null, (Content) null, (-1017.0F), (-4189.0F), 208.5903F, 208.5903F, false, lightSourceArray0, (float[][]) null, (String) null, false, bigDecimal0, bigDecimal0);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogLight0);
      Level level0 = new Level((String) null, 6443.2F, 639.168F, 611.9516F);
      homePieceOfFurniture0.isAtLevel(level0);
      Float float0 = new Float(4886.455F);
      homePieceOfFurniture0.setShininess(float0);
      homePieceOfFurniture0.getValueAddedTaxPercentage();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[4] = (float) 8192;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("?Qu}um", (Content) null, (Content) null, 8192.0F, 0.0F, 1.0F, (-1291.6161F), false, true, integer0, floatArray1, false, 173.2F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      Level level0 = new Level("?Qu}um", 8192, 834.4F, 1323.8F);
      Level level1 = level0.clone();
      homePieceOfFurniture0.setLevel(level1);
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.setModelMirrored(true);
      homePieceOfFurniture0.setNameXOffset((-1.0F));
      homePieceOfFurniture0.getIcon();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 8174, 8174, 8174, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      Integer integer0 = new Integer(8174);
      homePieceOfFurniture0.setColor(integer0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, (-1291.6161F), 1.0F, 8192.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      homePieceOfFurniture1.setNameVisible(false);
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.isVisible();
      HomePieceOfFurniture homePieceOfFurniture2 = homePieceOfFurniture1.clone();
      homePieceOfFurniture2.setMovable(true);
      HomeLight homeLight0 = null;
      try {
        homeLight0 = new HomeLight((Light) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 8169, 8169, 8169, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.isPointAt(4156.993F, (-10.234211F), (-1203.864F));
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Integer integer0 = new Integer(0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "work");
      Integer integer1 = new Integer(0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("1SyjFPv9=&P", (Content) null, (Content) null, (-1804.392F), 8192, (-1804.392F), 1.0F, true, true, integer1, (float[][]) null, false, 1.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      homePieceOfFurniture1.getValueAddedTax();
      CatalogPieceOfFurniture catalogPieceOfFurniture1 = new CatalogPieceOfFurniture("1SyjFPv9=&P", (Content) null, (Content) null, 517.9619F, (-1020.9893F), 517.9619F, 2905.8782F, false, false, integer0, (float[][]) null, false, 0.3926991F, true);
      HomePieceOfFurniture homePieceOfFurniture2 = new HomePieceOfFurniture(homePieceOfFurniture0);
      homePieceOfFurniture1.isBottomLeftPointAt(8192, 517.9619F, (-2886.956F));
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.X;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      homePieceOfFurniture2.getColor();
      homePieceOfFurniture2.setDepth((-1804.392F));
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("TEXTURE", (Content) null, (Content) null, (-2936.4429F), 2580.949F, (-706.156F), false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      Integer integer1 = new Integer((-2146959486));
      homePieceOfFurniture0.setColor(integer1);
      homePieceOfFurniture0.setDescription("editorSubFoNdr.Windows");
      catalogPieceOfFurniture0.getCategory();
      catalogPieceOfFurniture0.setCategory((FurnitureCategory) null);
      homePieceOfFurniture0.isBottomLeftPointAt(0.0F, 0.0F, (-1955.0F));
      homePieceOfFurniture0.isBottomLeftPointAt((-834.48F), (-1955.0F), (-834.48F));
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.setVisible(true);
      homePieceOfFurniture0.isTopRightPointAt(0.0F, 3884.9858F, (-2936.4429F));
      homePieceOfFurniture0.isTexturable();
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.setHeight((-1291.6161F));
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[7];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray1[4];
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, 0.0F, 1.0F, 8192.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDepth((-544.0F));
      catalogPieceOfFurniture0.getCategory();
      catalogPieceOfFurniture0.setCategory((FurnitureCategory) null);
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.isPointAt(0.0F, (-4388.1064F), 0.0F);
      homePieceOfFurniture0.getCurrency();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("TEXTURE", (Content) null, (Content) null, (-2936.4429F), 2580.949F, (-706.156F), false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      Integer integer1 = new Integer((-2146959486));
      homePieceOfFurniture0.setColor(integer1);
      homePieceOfFurniture0.setDescription("editorSubFoNdr.Windows");
      catalogPieceOfFurniture0.getCategory();
      catalogPieceOfFurniture0.setCategory((FurnitureCategory) null);
      homePieceOfFurniture0.isBottomLeftPointAt((-834.48F), (-1955.0F), (-834.48F));
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.setVisible(true);
      homePieceOfFurniture0.isTexturable();
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.setHeight((-1291.6161F));
      homePieceOfFurniture0.getNameXOffset();
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("work", (Content) null, (Content) null, 2.0F, 0.0F, 2.0F, true, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDescription("work");
      homePieceOfFurniture0.isBottomRightPointAt(2.0F, 2.0F, 2.0F);
      homePieceOfFurniture0.isBottomLeftPointAt(0.5F, (-1.0F), 2.0F);
      homePieceOfFurniture0.setDescription("work");
      homePieceOfFurniture0.isDoorOrWindow();
      HomePieceOfFurniture.SortableProperty.values();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Integer integer0 = new Integer((-788));
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("wQB{C5P b|^<", (Content) null, (Content) null, (-788), 0.5F, (-788), false, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setNameYOffset((-788));
      homePieceOfFurniture0.setDescription("wQB{C5P b|^<");
      homePieceOfFurniture0.getNameYOffset();
      homePieceOfFurniture0.setWidth(469.5F);
      homePieceOfFurniture0.isTopRightPointAt((-788), (-788.0F), (-788));
      homePieceOfFurniture0.getGroundElevation();
      homePieceOfFurniture0.isResizable();
      homePieceOfFurniture0.setNameXOffset((-788));
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 0.0F;
      floatArray0[0] = 0.0F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 0.0F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      Integer integer1 = new Integer(8192);
      Sash[] sashArray0 = new Sash[9];
      Sash sash0 = new Sash((-2311.9F), 452.0F, (-1080.3933F), 0.0F, 452.0F);
      sashArray0[0] = sash0;
      Sash sash1 = new Sash((-647.439F), 0.0F, 1.0F, 8192.0F, 452.0F);
      sashArray0[1] = sash1;
      Sash sash2 = new Sash(1453.343F, 1471.13F, (-709.0F), (-1650.44F), 1157.0F);
      sashArray0[2] = sash2;
      Sash sash3 = new Sash(0.0F, (-3391.2F), 622.05554F, (-409.202F), 1.0F);
      sashArray0[3] = sash3;
      Sash sash4 = new Sash(0.0F, (-1650.44F), 8192, (-2248.0F), (-1267.8F));
      sashArray0[4] = sash4;
      Sash sash5 = new Sash((-2248.0F), 1646.954F, 844.71204F, (-2248.0F), 0.3926991F);
      sashArray0[5] = sash5;
      Sash sash6 = new Sash((-3919.7583F), 1277.1F, 0.0F, (-2499.0F), (-1.0F));
      sashArray0[6] = sash6;
      Sash sash7 = new Sash(0.0F, 6855.8F, 1476.8F, (-37.35871F), 0.0F);
      sashArray0[7] = sash7;
      Sash sash8 = new Sash((-2499.0F), 155.0F, 1471.13F, 828.0F, (-1089.0F));
      sashArray0[8] = sash8;
      BigDecimal bigDecimal0 = new BigDecimal(1327.5);
      BigDecimal bigDecimal1 = BigDecimal.ZERO;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (String) null, "", (Content) null, (Content) null, (Content) null, 8192.0F, 1.0F, (-1291.6161F), (-709.0F), false, 0.0F, 0.0F, sashArray0, floatArray1, "", false, false, false, bigDecimal0, bigDecimal1);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getPriceValueAddedTaxIncluded();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("com.eteks.sweethome3d.model.HomePieceOfFurniture$14", (Content) null, (Content) null, 8173, 8173, 8173, true, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      Level level0 = new Level("com.eteks.sweethome3d.model.HomePieceOfFurniture$14", 1555.616F, 8173, 1555.616F);
      homePieceOfFurniture0.isNameCenterPointAt(8173, 8173, 1555.616F);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Integer integer0 = new Integer(8169);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("wQB{C5P b|^<", (Content) null, (Content) null, 8169, (-1.0F), (-1.0F), false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDescription("wQB{C5P b|^<");
      homePieceOfFurniture0.getDepth();
      homePieceOfFurniture0.isTopRightPointAt((-1.0F), (-1.0F), 8169);
      float float0 = new Float((-1.0F));
      homePieceOfFurniture0.isDoorOrWindow();
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture(".Yq<C=Z1 ^bmn1e^P)", (Content) null, (Content) null, (-4063.77F), 1.0F, 1.0F, 1689.4241F, false, false, integer0, floatArray1, true, 1.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDepth(1.0F);
      homePieceOfFurniture0.setVisible(false);
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      homePieceOfFurniture1.isBottomLeftPointAt(8192.0F, (-1369.54F), 515.26F);
      homePieceOfFurniture1.setNameVisible(false);
      homePieceOfFurniture1.setWidth(1.0F);
      homePieceOfFurniture0.getDepth();
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 0.0F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 0.0F, (-1291.6161F), 1.0F, 0.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      homePieceOfFurniture1.setNameVisible(false);
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.isVisible();
      HomePieceOfFurniture homePieceOfFurniture2 = homePieceOfFurniture1.clone();
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture2.setMovable(true);
      homePieceOfFurniture1.move((-1.0F), 0.0F);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 0.0F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 0.0F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, (-1291.6161F), 1.0F, 8192.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      homePieceOfFurniture1.setNameVisible(false);
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.isVisible();
      HomePieceOfFurniture homePieceOfFurniture2 = homePieceOfFurniture1.clone();
      homePieceOfFurniture2.setMovable(true);
      homePieceOfFurniture1.move((-1.0F), 0.0F);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[1] = 1689.4241F;
      floatArray0[2] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[2] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[8][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("I2E;", (Content) null, (Content) null, (-1088.683F), 1689.4241F, 1689.4241F, 8192.0F, false, false, integer0, floatArray1, true, (-1650.44F), false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("I2E;");
      catalogPieceOfFurniture0.setCategory(furnitureCategory0);
      homePieceOfFurniture0.setDepth(1.0F);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setWidth(1986.3317F);
      homePieceOfFurniture0.isTopRightPointAt(1.0F, 1689.4241F, 422.46924F);
      homePieceOfFurniture0.isTexturable();
      homePieceOfFurniture0.isBottomRightPointAt(0.5F, 321.20578F, 422.46924F);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Integer integer0 = new Integer(8184);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 5031.55F, 8184, 8184, true, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setShininess((Float) null);
      // Undeclared exception!
      try { 
        HomePieceOfFurniture.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomePieceOfFurniture.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[1] = 1679.4883F;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("sCoU)^a4VZayR|v(-", (Content) null, (Content) null, 1679.4883F, 1679.4883F, 614.572F, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.isBottomRightPointAt((-1481.0F), 8192, 3.4028235E38F);
      HomePieceOfFurniture.Property.values();
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 2147482907, 2147482907, 616.7272F, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      HomePieceOfFurniture.Property.values();
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      homePieceOfFurniture1.setDepth(616.7272F);
      homePieceOfFurniture1.getGroundElevation();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("Z", (Content) null, (Content) null, 8169, 8169, 614.572F, true, true);
      assertNotNull(catalogPieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(614.572F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals("Z", catalogPieceOfFurniture0.getName());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(614.572F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals("Z", catalogPieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals("Z", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(614.572F, homePieceOfFurniture0.getHeight(), 0.01F);
      
      boolean boolean0 = homePieceOfFurniture0.isBackFaceShown();
      assertFalse(boolean0);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(614.572F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals("Z", catalogPieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals("Z", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(614.572F, homePieceOfFurniture0.getHeight(), 0.01F);
      
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[2] = (float) 8192;
      float[][] floatArray1 = new float[8][5];
      floatArray1[1] = floatArray0;
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("I2E;");
      assertNotNull(furnitureCategory0);
      assertEquals("I2E;", furnitureCategory0.getName());
      assertEquals(0, furnitureCategory0.getFurnitureCount());
      
      Integer integer1 = new Integer(8192);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals(8192, (int)integer1);
      
      Random.setNextRandom(8192);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "rDnG?\"JM^1<H4u";
      stringArray0[1] = "rDnG?\"JM^1<H4u";
      stringArray0[2] = "rDnG?\"JM^1<H4u";
      Long long0 = new Long(8192);
      assertNotNull(long0);
      assertEquals(8192L, (long)long0);
      
      Float float0 = new Float((-3487.7297F));
      assertNotNull(float0);
      assertEquals((-3487.7297F), (float)float0, 0.01F);
      
      LightSource[] lightSourceArray0 = new LightSource[2];
      LightSource lightSource0 = new LightSource((-3487.7297F), 8192.0F, (-4434.1F), 2985, (Float) null);
      assertNotNull(lightSource0);
      assertEquals(8192.0F, lightSource0.getY(), 0.01F);
      assertEquals((-3487.7297F), lightSource0.getX(), 0.01F);
      assertEquals((-4434.1F), lightSource0.getZ(), 0.01F);
      assertNull(lightSource0.getDiameter());
      assertEquals(2985, lightSource0.getColor());
      
      lightSourceArray0[0] = lightSource0;
      LightSource lightSource1 = new LightSource(8192.0F, 8192.0F, 0.0F, (-2144940154));
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertNull(lightSource1.getDiameter());
      assertEquals((-2144940154), lightSource1.getColor());
      assertEquals(8192.0F, lightSource1.getY(), 0.01F);
      assertEquals(8192.0F, lightSource1.getX(), 0.01F);
      assertEquals(0.0F, lightSource1.getZ(), 0.01F);
      
      lightSourceArray0[1] = lightSource1;
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      assertNotNull(bigDecimal0);
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight("", "I2E;", "rDnG?\"JM^1<H4u", "I2E;", stringArray0, long0, float0, (Content) null, (Content) null, (Content) null, 0.25F, 8192.0F, (-1.0F), (-1025.8208F), false, lightSourceArray0, "jar", floatArray1, ">9!c3GHlnPAX", false, true, false, bigDecimal0, bigDecimal0, (String) null);
      assertNotNull(catalogLight0);
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals("I2E;", catalogLight0.getInformation());
      assertEquals("rDnG?\"JM^1<H4u", catalogLight0.getDescription());
      assertFalse(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(">9!c3GHlnPAX", catalogLight0.getCreator());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-1.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isModifiable());
      assertEquals((-3487.7297F), catalogLight0.getGrade(), 0.01F);
      assertEquals(8192L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-1025.8208F), catalogLight0.getElevation(), 0.01F);
      assertEquals("I2E;", catalogLight0.getName());
      assertEquals("", catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(8192.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isMovable());
      assertEquals(0.25F, catalogLight0.getWidth(), 0.01F);
      assertEquals("jar", catalogLight0.getStaircaseCutOutShape());
      assertEquals(8, floatArray1.length);
      assertEquals(3, stringArray0.length);
      assertEquals(2, lightSourceArray0.length);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertNotNull(homeLight0);
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals("I2E;", catalogLight0.getInformation());
      assertEquals("rDnG?\"JM^1<H4u", catalogLight0.getDescription());
      assertFalse(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(">9!c3GHlnPAX", catalogLight0.getCreator());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-1.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isModifiable());
      assertEquals((-3487.7297F), catalogLight0.getGrade(), 0.01F);
      assertEquals(8192L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-1025.8208F), catalogLight0.getElevation(), 0.01F);
      assertEquals("I2E;", catalogLight0.getName());
      assertEquals("", catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(8192.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isMovable());
      assertEquals(0.25F, catalogLight0.getWidth(), 0.01F);
      assertEquals("jar", catalogLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.125F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(4096.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.25F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals("", homeLight0.getCatalogId());
      assertFalse(homeLight0.isMovable());
      assertEquals((-1025.8208F), homeLight0.getElevation(), 0.01F);
      assertEquals((-1.0F), homeLight0.getHeight(), 0.01F);
      assertEquals("rDnG?\"JM^1<H4u", homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isTexturable());
      assertEquals((-1025.8208F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals("jar", homeLight0.getStaircaseCutOutShape());
      assertEquals("I2E;", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(8192.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(8, floatArray1.length);
      assertEquals(3, stringArray0.length);
      assertEquals(2, lightSourceArray0.length);
      
      HomeLight homeLight1 = (HomeLight)homeLight0.clone();
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals("I2E;", catalogLight0.getInformation());
      assertEquals("rDnG?\"JM^1<H4u", catalogLight0.getDescription());
      assertFalse(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(">9!c3GHlnPAX", catalogLight0.getCreator());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-1.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isModifiable());
      assertEquals((-3487.7297F), catalogLight0.getGrade(), 0.01F);
      assertEquals(8192L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-1025.8208F), catalogLight0.getElevation(), 0.01F);
      assertEquals("I2E;", catalogLight0.getName());
      assertEquals("", catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(8192.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isMovable());
      assertEquals(0.25F, catalogLight0.getWidth(), 0.01F);
      assertEquals("jar", catalogLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.125F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(4096.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.25F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals("", homeLight0.getCatalogId());
      assertFalse(homeLight0.isMovable());
      assertEquals((-1025.8208F), homeLight0.getElevation(), 0.01F);
      assertEquals((-1.0F), homeLight0.getHeight(), 0.01F);
      assertEquals("rDnG?\"JM^1<H4u", homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isTexturable());
      assertEquals((-1025.8208F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals("jar", homeLight0.getStaircaseCutOutShape());
      assertEquals("I2E;", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(8192.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isModelMirrored());
      assertNull(homeLight1.getCurrency());
      assertEquals("I2E;", homeLight1.getName());
      assertFalse(homeLight1.isBackFaceShown());
      assertFalse(homeLight1.isNameVisible());
      assertEquals("jar", homeLight1.getStaircaseCutOutShape());
      assertEquals((-1.0F), homeLight1.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals("", homeLight1.getCatalogId());
      assertEquals((-1025.8208F), homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals("rDnG?\"JM^1<H4u", homeLight1.getDescription());
      assertEquals(8192.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertFalse(homeLight1.isResizable());
      assertFalse(homeLight1.isMovable());
      assertFalse(homeLight1.isTexturable());
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(0.25F, homeLight1.getWidth(), 0.01F);
      assertEquals(0.125F, homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(homeLight1.isDeformable());
      assertEquals((-1025.8208F), homeLight1.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(8, floatArray1.length);
      assertEquals(3, stringArray0.length);
      assertEquals(2, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      
      Content content0 = homeLight1.getPlanIcon();
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNull(content0);
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals("I2E;", catalogLight0.getInformation());
      assertEquals("rDnG?\"JM^1<H4u", catalogLight0.getDescription());
      assertFalse(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(">9!c3GHlnPAX", catalogLight0.getCreator());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-1.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isModifiable());
      assertEquals((-3487.7297F), catalogLight0.getGrade(), 0.01F);
      assertEquals(8192L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-1025.8208F), catalogLight0.getElevation(), 0.01F);
      assertEquals("I2E;", catalogLight0.getName());
      assertEquals("", catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(8192.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isMovable());
      assertEquals(0.25F, catalogLight0.getWidth(), 0.01F);
      assertEquals("jar", catalogLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.125F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(4096.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.25F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals("", homeLight0.getCatalogId());
      assertFalse(homeLight0.isMovable());
      assertEquals((-1025.8208F), homeLight0.getElevation(), 0.01F);
      assertEquals((-1.0F), homeLight0.getHeight(), 0.01F);
      assertEquals("rDnG?\"JM^1<H4u", homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isTexturable());
      assertEquals((-1025.8208F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals("jar", homeLight0.getStaircaseCutOutShape());
      assertEquals("I2E;", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(8192.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isModelMirrored());
      assertNull(homeLight1.getCurrency());
      assertEquals("I2E;", homeLight1.getName());
      assertFalse(homeLight1.isBackFaceShown());
      assertFalse(homeLight1.isNameVisible());
      assertEquals("jar", homeLight1.getStaircaseCutOutShape());
      assertEquals((-1.0F), homeLight1.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals("", homeLight1.getCatalogId());
      assertEquals((-1025.8208F), homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals("rDnG?\"JM^1<H4u", homeLight1.getDescription());
      assertEquals(8192.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertFalse(homeLight1.isResizable());
      assertFalse(homeLight1.isMovable());
      assertFalse(homeLight1.isTexturable());
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(0.25F, homeLight1.getWidth(), 0.01F);
      assertEquals(0.125F, homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(homeLight1.isDeformable());
      assertEquals((-1025.8208F), homeLight1.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(8, floatArray1.length);
      assertEquals(3, stringArray0.length);
      assertEquals(2, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Integer integer0 = new Integer((-788));
      assertNotNull(integer0);
      assertEquals((-788), (int)integer0);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("wQB{C5P b|^<", (Content) null, (Content) null, (-788), 0.5F, (-788), false, true);
      assertNotNull(catalogPieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals((-788.0F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-788.0F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("wQB{C5P b|^<", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.5F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals((-788.0F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-788.0F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("wQB{C5P b|^<", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.5F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-788.0F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.25F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals("wQB{C5P b|^<", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-394.0F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals((-788.0F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      
      homePieceOfFurniture0.setDescription("wQB{C5P b|^<");
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals((-788.0F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-788.0F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("wQB{C5P b|^<", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.5F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-788.0F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.25F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals("wQB{C5P b|^<", homePieceOfFurniture0.getDescription());
      assertEquals("wQB{C5P b|^<", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-394.0F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals((-788.0F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      
      float float0 = homePieceOfFurniture0.getNameYOffset();
      assertEquals(0.0F, float0, 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals((-788.0F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-788.0F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("wQB{C5P b|^<", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.5F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-788.0F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.25F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals("wQB{C5P b|^<", homePieceOfFurniture0.getDescription());
      assertEquals("wQB{C5P b|^<", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-394.0F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals((-788.0F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      
      homePieceOfFurniture0.setWidth(469.5F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals((-788.0F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-788.0F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("wQB{C5P b|^<", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.5F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-788.0F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.25F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals("wQB{C5P b|^<", homePieceOfFurniture0.getDescription());
      assertEquals(469.5F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("wQB{C5P b|^<", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-394.0F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      
      TextStyle textStyle0 = new TextStyle(469.5F);
      assertNotNull(textStyle0);
      assertEquals(469.5F, textStyle0.getFontSize(), 0.01F);
      assertFalse(textStyle0.isItalic());
      assertFalse(textStyle0.isBold());
      
      homePieceOfFurniture0.setNameStyle(textStyle0);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals((-788.0F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-788.0F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("wQB{C5P b|^<", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.5F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-788.0F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.25F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals("wQB{C5P b|^<", homePieceOfFurniture0.getDescription());
      assertEquals(469.5F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("wQB{C5P b|^<", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-394.0F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(469.5F, textStyle0.getFontSize(), 0.01F);
      assertFalse(textStyle0.isItalic());
      assertFalse(textStyle0.isBold());
      
      boolean boolean0 = homePieceOfFurniture0.isTopRightPointAt((-788), 0.0F, (-788));
      assertFalse(boolean0);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals((-788.0F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-788.0F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("wQB{C5P b|^<", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.5F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-788.0F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.25F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals("wQB{C5P b|^<", homePieceOfFurniture0.getDescription());
      assertEquals(469.5F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("wQB{C5P b|^<", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-394.0F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      
      float float1 = homePieceOfFurniture0.getGroundElevation();
      assertEquals(float1, float0, 0.01F);
      assertEquals(0.0F, float1, 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals((-788.0F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-788.0F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("wQB{C5P b|^<", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.5F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-788.0F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.25F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals("wQB{C5P b|^<", homePieceOfFurniture0.getDescription());
      assertEquals(469.5F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("wQB{C5P b|^<", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-394.0F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      
      boolean boolean1 = homePieceOfFurniture0.isDoorOrWindow();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals((-788.0F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-788.0F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("wQB{C5P b|^<", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.5F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-788.0F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.25F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals("wQB{C5P b|^<", homePieceOfFurniture0.getDescription());
      assertEquals(469.5F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("wQB{C5P b|^<", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-394.0F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, (-1291.6161F), 1.0F, 8192.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(9, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertNotNull(homePieceOfFurniture1);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getShininess());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertEquals("", homePieceOfFurniture1.getName());
      assertEquals((-1291.6161F), homePieceOfFurniture1.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertEquals(4096.0F, homePieceOfFurniture1.getX(), 0.01F);
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertEquals(8192.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertEquals(1.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture1.getCurrency());
      assertFalse(homePieceOfFurniture1.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      BigDecimal bigDecimal0 = homePieceOfFurniture1.getValueAddedTax();
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertNull(bigDecimal0);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getShininess());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertEquals("", homePieceOfFurniture1.getName());
      assertEquals((-1291.6161F), homePieceOfFurniture1.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertEquals(4096.0F, homePieceOfFurniture1.getX(), 0.01F);
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertEquals(8192.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertEquals(1.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture1.getCurrency());
      assertFalse(homePieceOfFurniture1.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      homePieceOfFurniture1.setNameVisible(false);
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getShininess());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertEquals("", homePieceOfFurniture1.getName());
      assertEquals((-1291.6161F), homePieceOfFurniture1.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertEquals(4096.0F, homePieceOfFurniture1.getX(), 0.01F);
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertEquals(8192.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertEquals(1.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture1.getCurrency());
      assertFalse(homePieceOfFurniture1.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      homePieceOfFurniture0.setNameVisible(false);
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      
      boolean boolean0 = homePieceOfFurniture0.isVisible();
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertTrue(boolean0);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      
      float float0 = homePieceOfFurniture0.getNameYOffset();
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      
      boolean boolean1 = homePieceOfFurniture1.isTopLeftPointAt(0.0F, 1556.55F, 2018.6F);
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getShininess());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertEquals("", homePieceOfFurniture1.getName());
      assertEquals((-1291.6161F), homePieceOfFurniture1.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertEquals(4096.0F, homePieceOfFurniture1.getX(), 0.01F);
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertEquals(8192.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertEquals(1.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture1.getCurrency());
      assertFalse(homePieceOfFurniture1.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      String string0 = homePieceOfFurniture0.getCatalogId();
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertNull(string0);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("Z", (Content) null, (Content) null, 8169, 8169, 8169, true, true);
      assertNotNull(catalogPieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals("Z", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getColor());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals("Z", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals("Z", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      
      homePieceOfFurniture0.setModelMirrored(true);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals("Z", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals("Z", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      
      boolean boolean0 = homePieceOfFurniture0.isBottomRightPointAt(8169, 8169, 8169);
      assertTrue(boolean0);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals("Z", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals("Z", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("?Qu}um", (Content) null, (Content) null, 8192.0F, 8192.0F, 1.0F, (-1291.6161F), false, true, integer0, floatArray1, false, 173.2F, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("?Qu}um", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setNameVisible(false);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("?Qu}um", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setModelMirrored(true);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("?Qu}um", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setNameXOffset((-1.0F));
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("?Qu}um", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-1.0F), homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      float float0 = homePieceOfFurniture0.getGroundElevation();
      assertEquals((-1291.6161F), float0, 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("?Qu}um", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-1.0F), homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(9, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 0.0F;
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      assertFalse(boolean0);
      
      floatArray0[3] = 0.0F;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 0.0F, (-1291.6161F), 1.0F, 0.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(9, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setDepth(0.3926991F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setNameVisible(true);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(9, floatArray1.length);
      
      boolean boolean1 = homePieceOfFurniture0.isPointAt(0.0F, 1340.72F, 1.0F);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(9, floatArray1.length);
      
      float float0 = homePieceOfFurniture0.getX();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(9, floatArray1.length);
      
      float float1 = homePieceOfFurniture0.getElevation();
      assertEquals(float1, float0, 0.01F);
      assertEquals(0.0F, float1, 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(9, floatArray1.length);
      
      BigDecimal bigDecimal0 = homePieceOfFurniture0.getPrice();
      assertNull(bigDecimal0);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setNameXOffset(1167.437F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(1167.437F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(9, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Integer integer0 = new Integer(1055);
      assertNotNull(integer0);
      assertEquals(1055, (int)integer0);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 1689.4241F, 1689.4241F, 0.0F, 0.0F, true, true, integer0, (float[][]) null, false, 0.0F, true);
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1055, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1055, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(1055, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(844.71204F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(1689.4241F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      
      homePieceOfFurniture0.setNameVisible(true);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1055, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(1055, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(844.71204F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(1689.4241F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 8169, 8169, 8169, false, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getShininess());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      
      boolean boolean1 = homePieceOfFurniture0.isBottomLeftPointAt(2516.775F, (-41.9F), 3.4028235E38F);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getShininess());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 1689.4241F, 1.0F, 8192, false, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      
      Integer integer1 = new Integer(8192);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals(8192, (int)integer1);
      
      homePieceOfFurniture0.setColor(integer1);
      assertTrue(integer1.equals((Object)integer0));
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      
      homePieceOfFurniture0.setDescription("editorSubFoldr.Windows");
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals("editorSubFoldr.Windows", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      
      FurnitureCategory furnitureCategory0 = catalogPieceOfFurniture0.getCategory();
      assertNull(furnitureCategory0);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      
      catalogPieceOfFurniture0.setCategory((FurnitureCategory) null);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      
      boolean boolean0 = homePieceOfFurniture0.isBottomLeftPointAt(1.0F, 1689.4241F, 8192.0F);
      assertTrue(boolean0);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals("editorSubFoldr.Windows", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      
      boolean boolean1 = homePieceOfFurniture0.isBottomLeftPointAt((-1291.6161F), (-1.0F), 8192.0F);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals("editorSubFoldr.Windows", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      
      homePieceOfFurniture0.setNameVisible(true);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals("editorSubFoldr.Windows", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      
      boolean boolean2 = homePieceOfFurniture0.isNameCenterPointAt(8192.0F, (-3196.0F), 0.0F);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals("editorSubFoldr.Windows", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      
      boolean boolean3 = homePieceOfFurniture0.isBottomLeftPointAt(2888.5F, 1.0F, 1689.4241F);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals("editorSubFoldr.Windows", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 0.0F, (-1291.6161F), 1.0F, 0.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(9, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setDepth(0.3926991F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setNameVisible(true);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      boolean boolean0 = homePieceOfFurniture0.isPointAt(0.0F, 1340.72F, 1.0F);
      assertFalse(boolean0);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      float float0 = homePieceOfFurniture0.getWidth();
      assertEquals(0.0F, float0, 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(9, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("?Qu}um", (Content) null, (Content) null, 8192.0F, 8192.0F, 1.0F, (-1291.6161F), false, true, integer0, floatArray1, false, 173.2F, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(9, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals("?Qu}um", homePieceOfFurniture0.getName());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setNameVisible(false);
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals("?Qu}um", homePieceOfFurniture0.getName());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setModelMirrored(true);
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals("?Qu}um", homePieceOfFurniture0.getName());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setNameXOffset((-1.0F));
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals("?Qu}um", homePieceOfFurniture0.getName());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(9, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 8169, 8169, 8169, false, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      
      homePieceOfFurniture0.setDescription("");
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getDescription());
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      
      boolean boolean0 = homePieceOfFurniture0.isDoorOrWindow();
      assertFalse(boolean0);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getDescription());
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      
      HomePieceOfFurniture.SortableProperty[] homePieceOfFurniture_SortablePropertyArray0 = HomePieceOfFurniture.SortableProperty.values();
      assertNotNull(homePieceOfFurniture_SortablePropertyArray0);
      assertEquals(19, homePieceOfFurniture_SortablePropertyArray0.length);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      float[] floatArray0 = new float[9];
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[4] = floatArray1[3];
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      Sash[] sashArray0 = new Sash[9];
      Sash sash0 = new Sash((-647.439F), 0.0F, 1.0F, 0.0F, 452.0F);
      assertNotNull(sash0);
      assertEquals(452.0F, sash0.getEndAngle(), 0.01F);
      assertEquals(1.0F, sash0.getWidth(), 0.01F);
      assertEquals((-647.439F), sash0.getXAxis(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      
      sashArray0[5] = sash0;
      Sash sash1 = new Sash(1453.343F, (-3391.2F), 622.05554F, (-409.202F), 21.2585F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-3391.2F), sash1.getYAxis(), 0.01F);
      assertEquals((-409.202F), sash1.getStartAngle(), 0.01F);
      assertEquals(21.2585F, sash1.getEndAngle(), 0.01F);
      assertEquals(1453.343F, sash1.getXAxis(), 0.01F);
      assertEquals(622.05554F, sash1.getWidth(), 0.01F);
      
      sashArray0[3] = sash1;
      sashArray0[5] = sash1;
      sashArray0[6] = sash1;
      Sash sash2 = new Sash((-1291.6161F), 155.0F, 1453.343F, 848.63904F, (-1089.0F));
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals((-1089.0F), sash2.getEndAngle(), 0.01F);
      assertEquals((-1291.6161F), sash2.getXAxis(), 0.01F);
      assertEquals(1453.343F, sash2.getWidth(), 0.01F);
      assertEquals(848.63904F, sash2.getStartAngle(), 0.01F);
      assertEquals(155.0F, sash2.getYAxis(), 0.01F);
      
      sashArray0[8] = sash2;
      BigDecimal bigDecimal0 = new BigDecimal(848.63904F);
      assertNotNull(bigDecimal0);
      assertEquals((byte)80, bigDecimal0.byteValue());
      assertEquals((short)848, bigDecimal0.shortValue());
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", (String) null, "", (Content) null, (Content) null, (Content) null, 0.0F, 1.0F, (-1291.6161F), (-709.0F), false, 0.0F, 0.0F, sashArray0, floatArray1, "", false, false, false, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertFalse(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(1.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-709.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isTexturable());
      assertEquals((-1291.6161F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals((byte)80, bigDecimal0.byteValue());
      assertEquals((short)848, bigDecimal0.shortValue());
      assertEquals(9, floatArray1.length);
      assertEquals(9, sashArray0.length);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertFalse(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(1.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-709.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isTexturable());
      assertEquals((-1291.6161F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-1291.6161F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-709.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-709.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.5F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((byte)80, bigDecimal0.byteValue());
      assertEquals((short)848, bigDecimal0.shortValue());
      assertEquals(9, floatArray1.length);
      assertEquals(9, sashArray0.length);
      
      BigDecimal bigDecimal1 = homeDoorOrWindow0.getPriceValueAddedTaxIncluded();
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      assertFalse(catalogDoorOrWindow0.isDeformable());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getName());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(1.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals((-709.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isTexturable());
      assertEquals((-1291.6161F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals((-1291.6161F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals((-709.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals((-709.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals(0.5F, homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((byte) (-116), bigDecimal1.byteValue());
      assertEquals((short)140, bigDecimal1.shortValue());
      assertEquals((byte)80, bigDecimal0.byteValue());
      assertEquals((short)848, bigDecimal0.shortValue());
      assertEquals(9, floatArray1.length);
      assertEquals(9, sashArray0.length);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertNotSame(bigDecimal0, bigDecimal1);
      
      Integer integer0 = Integer.getInteger((String) null);
      assertNull(integer0);
      
      // Undeclared exception!
      try { 
        homeDoorOrWindow0.setColor((Integer) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't texturable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8169, 8169, 8169, true, true);
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      
      Level level0 = new Level("", 1555.616F, 8169, 1555.616F);
      assertNotNull(level0);
      assertTrue(level0.isVisible());
      assertEquals("", level0.getName());
      assertEquals(1555.616F, level0.getHeight(), 0.01F);
      assertEquals(8169.0F, level0.getFloorThickness(), 0.01F);
      assertEquals(1555.616F, level0.getElevation(), 0.01F);
      
      boolean boolean0 = homePieceOfFurniture0.isPointAt(8169, 8169, 840.0F);
      assertTrue(boolean0);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      LightSource[] lightSourceArray0 = new LightSource[2];
      Float float0 = new Float((-1228.2192355));
      assertNotNull(float0);
      assertEquals((-1228.2192F), (float)float0, 0.01F);
      
      LightSource lightSource0 = new LightSource((-2506.9832F), 2772.4F, (-1804.392F), 8192, float0);
      assertNotNull(lightSource0);
      assertEquals((-1804.392F), lightSource0.getZ(), 0.01F);
      assertEquals((-1228.2192F), lightSource0.getDiameter(), 0.01F);
      assertEquals(2772.4F, lightSource0.getY(), 0.01F);
      assertEquals(8192, lightSource0.getColor());
      assertEquals((-2506.9832F), lightSource0.getX(), 0.01F);
      
      lightSourceArray0[0] = lightSource0;
      LightSource lightSource1 = new LightSource(0.3926991F, 753.0F, 8192, 2147482515);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertNull(lightSource1.getDiameter());
      assertEquals(8192.0F, lightSource1.getZ(), 0.01F);
      assertEquals(2147482515, lightSource1.getColor());
      assertEquals(753.0F, lightSource1.getY(), 0.01F);
      assertEquals(0.3926991F, lightSource1.getX(), 0.01F);
      
      lightSourceArray0[1] = lightSource1;
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight("", "com.eteks.sweethome3d.model.HomeTexture", " ", (Content) null, (Content) null, (Content) null, (-1804.392F), 0.0F, (-672.983F), (-1.0F), false, lightSourceArray0, floatArray1, "", false, bigDecimal0, bigDecimal0);
      assertNotNull(catalogLight0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isModifiable());
      assertEquals("", catalogLight0.getId());
      assertNull(catalogLight0.getCreationDate());
      assertEquals((-1804.392F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isMovable());
      assertEquals((-1.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals("", catalogLight0.getCreator());
      assertEquals(" ", catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-672.983F), catalogLight0.getHeight(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeTexture", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getGrade());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(9, floatArray1.length);
      assertEquals(2, lightSourceArray0.length);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertNotNull(homeLight0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isModifiable());
      assertEquals("", catalogLight0.getId());
      assertNull(catalogLight0.getCreationDate());
      assertEquals((-1804.392F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isMovable());
      assertEquals((-1.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals("", catalogLight0.getCreator());
      assertEquals(" ", catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-672.983F), catalogLight0.getHeight(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeTexture", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getGrade());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals((-1.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-1.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals((-672.983F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertFalse(homeLight0.isMovable());
      assertEquals((-1804.392F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeTexture", homeLight0.getName());
      assertNull(homeLight0.getCurrency());
      assertEquals(" ", homeLight0.getDescription());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-902.196F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals("", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(9, floatArray1.length);
      assertEquals(2, lightSourceArray0.length);
      
      HomeLight homeLight1 = homeLight0.clone();
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isModifiable());
      assertEquals("", catalogLight0.getId());
      assertNull(catalogLight0.getCreationDate());
      assertEquals((-1804.392F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isMovable());
      assertEquals((-1.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals("", catalogLight0.getCreator());
      assertEquals(" ", catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-672.983F), catalogLight0.getHeight(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeTexture", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getGrade());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals((-1.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-1.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals((-672.983F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertFalse(homeLight0.isMovable());
      assertEquals((-1804.392F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeTexture", homeLight0.getName());
      assertNull(homeLight0.getCurrency());
      assertEquals(" ", homeLight0.getDescription());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-902.196F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals("", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals((-902.196F), homeLight1.getX(), 0.01F);
      assertEquals((-1.0F), homeLight1.getGroundElevation(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeTexture", homeLight1.getName());
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(" ", homeLight1.getDescription());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals((-1804.392F), homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isMovable());
      assertNull(homeLight1.getShininess());
      assertEquals("", homeLight1.getCatalogId());
      assertFalse(homeLight1.isResizable());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertTrue(homeLight1.isDeformable());
      assertEquals((-672.983F), homeLight1.getHeight(), 0.01F);
      assertEquals((-1.0F), homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertTrue(homeLight1.isTexturable());
      assertEquals(9, floatArray1.length);
      assertEquals(2, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      
      homeLight1.setNameAngle(1038.324F);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isModifiable());
      assertEquals("", catalogLight0.getId());
      assertNull(catalogLight0.getCreationDate());
      assertEquals((-1804.392F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isMovable());
      assertEquals((-1.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals("", catalogLight0.getCreator());
      assertEquals(" ", catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-672.983F), catalogLight0.getHeight(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeTexture", catalogLight0.getName());
      assertNull(catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getGrade());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals((-1.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-1.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals((-672.983F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertFalse(homeLight0.isMovable());
      assertEquals((-1804.392F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeTexture", homeLight0.getName());
      assertNull(homeLight0.getCurrency());
      assertEquals(" ", homeLight0.getDescription());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-902.196F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals("", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals((-902.196F), homeLight1.getX(), 0.01F);
      assertEquals((-1.0F), homeLight1.getGroundElevation(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomeTexture", homeLight1.getName());
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(" ", homeLight1.getDescription());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(1.5983989F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals((-1804.392F), homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isMovable());
      assertNull(homeLight1.getShininess());
      assertEquals("", homeLight1.getCatalogId());
      assertFalse(homeLight1.isResizable());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertTrue(homeLight1.isDeformable());
      assertEquals((-672.983F), homeLight1.getHeight(), 0.01F);
      assertEquals((-1.0F), homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertTrue(homeLight1.isTexturable());
      assertEquals(9, floatArray1.length);
      assertEquals(2, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture(")&u2l", (Content) null, (Content) null, 8192.0F, 4.5310254F, 1716.0F, false, true);
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(")&u2l", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1716.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(")&u2l", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1716.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(")&u2l", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(2.2655127F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(4.5310254F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1716.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      
      homePieceOfFurniture0.setDescription("com.eteks.sweethome3d.model.HomePieceOfFurniture$9");
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(")&u2l", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1716.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(")&u2l", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(2.2655127F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(4.5310254F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1716.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$9", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getColor());
      
      homePieceOfFurniture0.move(1689.4241F, 8192);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(")&u2l", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1716.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(5785.424F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8194.266F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(")&u2l", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(4.5310254F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1716.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$9", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getColor());
      
      boolean boolean0 = homePieceOfFurniture0.isBottomLeftPointAt(4.5310254F, 1.0F, 0.0F);
      assertFalse(boolean0);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(")&u2l", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1716.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(5785.424F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8194.266F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(")&u2l", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(4.5310254F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1716.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$9", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getColor());
      
      homePieceOfFurniture0.setX(1689.4241F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(")&u2l", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1716.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8194.266F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(")&u2l", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(4.5310254F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1716.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$9", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getColor());
      
      homePieceOfFurniture0.setNameVisible(true);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(")&u2l", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1716.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8194.266F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(")&u2l", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(4.5310254F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1716.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$9", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getColor());
      
      homePieceOfFurniture0.setWidth(0.0F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(")&u2l", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1716.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8194.266F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(")&u2l", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(4.5310254F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1716.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$9", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getColor());
      
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.ELEVATION;
      Comparator<HomePieceOfFurniture> comparator0 = HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      assertNotNull(comparator0);
      
      Integer integer1 = homePieceOfFurniture0.getColor();
      assertNull(integer1);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(")&u2l", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1716.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8194.266F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(")&u2l", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(4.5310254F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1716.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$9", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getColor());
      
      homePieceOfFurniture0.setDepth((-1062.4395F));
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(")&u2l", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1716.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8194.266F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(")&u2l", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals((-1062.4395F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1716.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$9", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getColor());
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[1] = 1689.4241F;
      floatArray0[2] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      Integer integer1 = new Integer(8192);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals(8192, (int)integer1);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 1689.4241F, 0.0F, 300.84F, (-1.0F), false, true, integer1, floatArray1, false, (-37.35871F), false);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(catalogPieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-37.35871F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(300.84F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(9, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(homePieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-37.35871F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(300.84F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1.0F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(300.84F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setDepth(8192.0F);
      assertTrue(integer1.equals((Object)integer0));
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-37.35871F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(300.84F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1.0F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(300.84F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setVisible(false);
      assertTrue(integer1.equals((Object)integer0));
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-37.35871F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(300.84F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isVisible());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1.0F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(300.84F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setNameVisible(false);
      assertTrue(integer1.equals((Object)integer0));
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-37.35871F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(300.84F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isVisible());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1.0F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(300.84F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(9, floatArray1.length);
      
      boolean boolean0 = homePieceOfFurniture0.isVisible();
      assertTrue(integer1.equals((Object)integer0));
      assertFalse(boolean0);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-37.35871F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(300.84F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isVisible());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1.0F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(300.84F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(9, floatArray1.length);
      
      boolean boolean1 = homePieceOfFurniture0.isModelMirrored();
      assertTrue(boolean1 == boolean0);
      assertTrue(integer1.equals((Object)integer0));
      assertFalse(boolean1);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-37.35871F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(300.84F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isVisible());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1.0F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(300.84F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(9, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 1689.4241F, 1.0F, 8192, false, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      
      homePieceOfFurniture0.setDescription("editorSubFolder.Windows");
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      
      homePieceOfFurniture0.move(0.0F, (-232.16188F));
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals((-231.66188F), homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      
      boolean boolean0 = homePieceOfFurniture0.isBottomLeftPointAt(1.0F, 1689.4241F, 8192.0F);
      assertTrue(boolean0);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals((-231.66188F), homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      
      homePieceOfFurniture0.setNameVisible(true);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals((-231.66188F), homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      
      homePieceOfFurniture0.setWidth(675.7141F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals((-231.66188F), homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(675.7141F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.ELEVATION;
      Comparator<HomePieceOfFurniture> comparator0 = HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      assertNotNull(comparator0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      int int0 = Integer.max(18, 8192);
      assertEquals(8192, int0);
      
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, (-1291.6161F), 1.0F, 8192.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      assertTrue(integer0.equals((Object)int0));
      assertNotNull(catalogPieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(9, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertTrue(integer0.equals((Object)int0));
      assertNotNull(homePieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setNameVisible(false);
      assertTrue(integer0.equals((Object)int0));
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(9, floatArray1.length);
      
      float float0 = homePieceOfFurniture0.getY();
      assertTrue(integer0.equals((Object)int0));
      assertEquals((-645.80804F), float0, 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(9, floatArray1.length);
      
      boolean boolean0 = homePieceOfFurniture0.isDeformable();
      assertTrue(integer0.equals((Object)int0));
      assertTrue(boolean0);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(9, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[2] = (float) 8192;
      floatArray0[4] = 1689.7263F;
      float[][] floatArray1 = new float[8][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("I2E;", (Content) null, (Content) null, (-1097.6671F), 8192.0F, 2.2655127F, (-1696.1718F), false, true, integer0, floatArray1, true, 3.4028235E38F, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(3.4028235E38F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(2.2655127F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals((-1696.1718F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(3.4028235E38F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(2.2655127F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals((-1696.1718F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals((-1097.6671F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(2.2655127F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1696.1718F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals((-1696.1718F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertNotNull(homePieceOfFurniture1);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(3.4028235E38F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(2.2655127F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals((-1696.1718F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals((-1097.6671F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(2.2655127F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1696.1718F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals((-1696.1718F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertEquals(4096.0F, homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertEquals(2.2655127F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture1.isBackFaceShown());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture1.getName());
      assertEquals((-548.83356F), homePieceOfFurniture1.getX(), 0.01F);
      assertEquals((-1097.6671F), homePieceOfFurniture1.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isMovable());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertEquals((-1696.1718F), homePieceOfFurniture1.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture1.isResizable());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture1.getShininess());
      assertNull(homePieceOfFurniture1.getDescription());
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals((-1696.1718F), homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertEquals(8, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      assertNotNull(bigDecimal0);
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertEquals((short)10, bigDecimal0.shortValue());
      
      Integer integer1 = new Integer((-1094));
      assertFalse(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals((-1094), (int)integer1);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture1 = new CatalogPieceOfFurniture("I2E;", (Content) null, (Content) null, 2905.8782F, (-517.937F), 1689.7263F, (-1.0F), true, false, integer1, floatArray1, false, (-2704.3315F), true);
      assertFalse(integer1.equals((Object)integer0));
      assertFalse(catalogPieceOfFurniture1.equals((Object)catalogPieceOfFurniture0));
      assertNotNull(catalogPieceOfFurniture1);
      assertNull(catalogPieceOfFurniture1.getCurrency());
      assertTrue(catalogPieceOfFurniture1.isTexturable());
      assertTrue(catalogPieceOfFurniture1.isProportional());
      assertEquals(2905.8782F, catalogPieceOfFurniture1.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture1.getInformation());
      assertTrue(catalogPieceOfFurniture1.isResizable());
      assertTrue(catalogPieceOfFurniture1.isDeformable());
      assertEquals("I2E;", catalogPieceOfFurniture1.getName());
      assertTrue(catalogPieceOfFurniture1.isMovable());
      assertFalse(catalogPieceOfFurniture1.isBackFaceShown());
      assertNull(catalogPieceOfFurniture1.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture1.getCreationDate());
      assertFalse(catalogPieceOfFurniture1.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals((-1094), (int)catalogPieceOfFurniture1.getColor());
      assertEquals(1689.7263F, catalogPieceOfFurniture1.getHeight(), 0.01F);
      assertEquals((-517.937F), catalogPieceOfFurniture1.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture1.getId());
      assertEquals((-1.0F), catalogPieceOfFurniture1.getElevation(), 0.01F);
      assertEquals((-2704.3315F), catalogPieceOfFurniture1.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture1.getCreator());
      assertTrue(catalogPieceOfFurniture1.isModifiable());
      assertNull(catalogPieceOfFurniture1.getDescription());
      assertEquals(8, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture2 = new HomePieceOfFurniture(homePieceOfFurniture0);
      assertFalse(integer0.equals((Object)integer1));
      assertFalse(catalogPieceOfFurniture0.equals((Object)catalogPieceOfFurniture1));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture2.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture2.equals((Object)homePieceOfFurniture0));
      assertNotNull(homePieceOfFurniture2);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(3.4028235E38F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(2.2655127F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals((-1696.1718F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals((-1097.6671F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(2.2655127F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1696.1718F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals((-1696.1718F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture2.isMovable());
      assertNull(homePieceOfFurniture2.getShininess());
      assertTrue(homePieceOfFurniture2.isResizable());
      assertNull(homePieceOfFurniture2.getStaircaseCutOutShape());
      assertEquals((-1696.1718F), homePieceOfFurniture2.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture2.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture2.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture2.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture2.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture2.isVisible());
      assertTrue(homePieceOfFurniture2.isDeformable());
      assertFalse(homePieceOfFurniture2.isNameVisible());
      assertEquals((-1696.1718F), homePieceOfFurniture2.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture2.isDoorOrWindow());
      assertEquals(4096.0F, homePieceOfFurniture2.getY(), 0.01F);
      assertTrue(homePieceOfFurniture2.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture2.getAngle(), 0.01F);
      assertEquals(2.2655127F, homePieceOfFurniture2.getHeight(), 0.01F);
      assertEquals((-1097.6671F), homePieceOfFurniture2.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture2.isBackFaceShown());
      assertFalse(homePieceOfFurniture2.isModelMirrored());
      assertNull(homePieceOfFurniture2.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture2.getNameYOffset(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture2.getName());
      assertNull(homePieceOfFurniture2.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture2.getColor());
      assertEquals((-548.83356F), homePieceOfFurniture2.getX(), 0.01F);
      assertEquals(8, floatArray1.length);
      
      homePieceOfFurniture1.setNameVisible(false);
      assertFalse(integer0.equals((Object)integer1));
      assertFalse(catalogPieceOfFurniture0.equals((Object)catalogPieceOfFurniture1));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture2));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture2));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(3.4028235E38F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(2.2655127F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals((-1696.1718F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals((-1097.6671F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(2.2655127F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1696.1718F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals((-1696.1718F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertEquals(4096.0F, homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertEquals(2.2655127F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture1.isBackFaceShown());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture1.getName());
      assertEquals((-548.83356F), homePieceOfFurniture1.getX(), 0.01F);
      assertEquals((-1097.6671F), homePieceOfFurniture1.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isMovable());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertEquals((-1696.1718F), homePieceOfFurniture1.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture1.isResizable());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture1.getShininess());
      assertNull(homePieceOfFurniture1.getDescription());
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals((-1696.1718F), homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertEquals(8, floatArray1.length);
      assertNotSame(catalogPieceOfFurniture0, catalogPieceOfFurniture1);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture2);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture2);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      homePieceOfFurniture0.setNameAngle(2905.8782F);
      assertFalse(integer0.equals((Object)integer1));
      assertFalse(catalogPieceOfFurniture0.equals((Object)catalogPieceOfFurniture1));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture2));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(3.4028235E38F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(2.2655127F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals((-1696.1718F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals((-1097.6671F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(3.046562F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(2.2655127F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1696.1718F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals((-1696.1718F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8, floatArray1.length);
      assertNotSame(catalogPieceOfFurniture0, catalogPieceOfFurniture1);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture2);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, 0.0F, 1.0F, 8192.0F, false, false, integer0, floatArray1, false, 8192.0F, true);
      assertNotNull(catalogPieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(9, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertNotNull(homePieceOfFurniture1);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getCurrency());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getY(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(4096.0F, homePieceOfFurniture1.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertNull(homePieceOfFurniture1.getShininess());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture1.isMovable());
      assertEquals("", homePieceOfFurniture1.getName());
      assertEquals(1.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      homePieceOfFurniture1.setNameVisible(true);
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getCurrency());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getY(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(4096.0F, homePieceOfFurniture1.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertNull(homePieceOfFurniture1.getShininess());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture1.isMovable());
      assertEquals("", homePieceOfFurniture1.getName());
      assertEquals(1.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture1.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      homePieceOfFurniture0.setNameVisible(false);
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      
      homePieceOfFurniture1.setModelMirrored(true);
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getCurrency());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getY(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(4096.0F, homePieceOfFurniture1.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertNull(homePieceOfFurniture1.getShininess());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture1.isMovable());
      assertEquals("", homePieceOfFurniture1.getName());
      assertEquals(1.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture1.isNameVisible());
      assertTrue(homePieceOfFurniture1.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      boolean boolean0 = homePieceOfFurniture0.isVisible();
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertTrue(boolean0);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      
      float float0 = homePieceOfFurniture0.getNameYOffset();
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertEquals(0.0F, float0, 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      
      boolean boolean1 = homePieceOfFurniture1.isTopLeftPointAt(0.0F, 1556.55F, 2018.6F);
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getCurrency());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getY(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(4096.0F, homePieceOfFurniture1.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertNull(homePieceOfFurniture1.getShininess());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture1.isMovable());
      assertEquals("", homePieceOfFurniture1.getName());
      assertEquals(1.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture1.isNameVisible());
      assertTrue(homePieceOfFurniture1.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      boolean boolean2 = homePieceOfFurniture0.isTopLeftPointAt(0.0F, 1689.4241F, 0.0F);
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      
      TextStyle textStyle0 = new TextStyle((-2151.046F));
      assertNotNull(textStyle0);
      assertEquals((-2151.046F), textStyle0.getFontSize(), 0.01F);
      assertFalse(textStyle0.isBold());
      assertFalse(textStyle0.isItalic());
      
      TextStyle textStyle1 = textStyle0.deriveStyle(0.3926991F);
      assertFalse(textStyle1.equals((Object)textStyle0));
      assertNotNull(textStyle1);
      assertEquals((-2151.046F), textStyle0.getFontSize(), 0.01F);
      assertFalse(textStyle0.isBold());
      assertFalse(textStyle0.isItalic());
      assertEquals(0.3926991F, textStyle1.getFontSize(), 0.01F);
      assertFalse(textStyle1.isBold());
      assertFalse(textStyle1.isItalic());
      assertNotSame(textStyle0, textStyle1);
      assertNotSame(textStyle1, textStyle0);
      
      TextStyle textStyle2 = textStyle1.deriveBoldStyle(false);
      assertFalse(textStyle0.equals((Object)textStyle1));
      assertFalse(textStyle1.equals((Object)textStyle0));
      assertFalse(textStyle2.equals((Object)textStyle0));
      assertNotNull(textStyle2);
      assertEquals((-2151.046F), textStyle0.getFontSize(), 0.01F);
      assertFalse(textStyle0.isBold());
      assertFalse(textStyle0.isItalic());
      assertEquals(0.3926991F, textStyle1.getFontSize(), 0.01F);
      assertFalse(textStyle1.isBold());
      assertFalse(textStyle1.isItalic());
      assertFalse(textStyle2.isItalic());
      assertEquals(0.3926991F, textStyle2.getFontSize(), 0.01F);
      assertFalse(textStyle2.isBold());
      assertNotSame(textStyle0, textStyle2);
      assertNotSame(textStyle0, textStyle1);
      assertSame(textStyle1, textStyle2);
      assertNotSame(textStyle1, textStyle0);
      assertSame(textStyle2, textStyle1);
      assertNotSame(textStyle2, textStyle0);
      
      homePieceOfFurniture0.setNameStyle(textStyle2);
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(textStyle0.equals((Object)textStyle2));
      assertFalse(textStyle0.equals((Object)textStyle1));
      assertFalse(textStyle1.equals((Object)textStyle0));
      assertFalse(textStyle2.equals((Object)textStyle0));
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals((-2151.046F), textStyle0.getFontSize(), 0.01F);
      assertFalse(textStyle0.isBold());
      assertFalse(textStyle0.isItalic());
      assertEquals(0.3926991F, textStyle1.getFontSize(), 0.01F);
      assertFalse(textStyle1.isBold());
      assertFalse(textStyle1.isItalic());
      assertFalse(textStyle2.isItalic());
      assertEquals(0.3926991F, textStyle2.getFontSize(), 0.01F);
      assertFalse(textStyle2.isBold());
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(textStyle0, textStyle2);
      assertNotSame(textStyle0, textStyle1);
      assertSame(textStyle1, textStyle2);
      assertNotSame(textStyle1, textStyle0);
      assertSame(textStyle2, textStyle1);
      assertNotSame(textStyle2, textStyle0);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Integer integer0 = new Integer(0);
      assertNotNull(integer0);
      assertEquals(0, (int)integer0);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "work");
      assertFalse(boolean0);
      
      Integer integer1 = new Integer(8192);
      assertFalse(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals(8192, (int)integer1);
      
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)123;
      byteArray0[2] = (byte)127;
      byteArray0[3] = (byte) (-30);
      byteArray0[5] = (byte)110;
      byteArray0[6] = (byte) (-101);
      byteArray0[7] = (byte)110;
      boolean boolean1 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(8, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)123, (byte)127, (byte) (-30), (byte)0, (byte)110, (byte) (-101), (byte)110}, byteArray0);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("1SyjFPv9=&P", (Content) null, (Content) null, 0, (-1804.392F), (-1804.392F), 517.9619F, true, true, integer1, (float[][]) null, false, 2.0F, false);
      assertFalse(integer1.equals((Object)integer0));
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(517.9619F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(2.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertFalse(integer1.equals((Object)integer0));
      assertNotNull(homePieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(517.9619F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(2.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-1804.392F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(517.9619F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(517.9619F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-902.196F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      
      homePieceOfFurniture0.setNameVisible(false);
      assertFalse(integer1.equals((Object)integer0));
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(517.9619F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(2.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-1804.392F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(517.9619F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(517.9619F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-902.196F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      
      homePieceOfFurniture0.setWidth(0.0F);
      assertFalse(integer1.equals((Object)integer0));
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(517.9619F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(2.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-1804.392F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(517.9619F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(517.9619F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-902.196F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      
      boolean boolean2 = homePieceOfFurniture0.isNameCenterPointAt((-1.0F), 517.9619F, 0);
      assertFalse(integer1.equals((Object)integer0));
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(517.9619F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(2.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-1804.392F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(517.9619F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(517.9619F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-902.196F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      
      homePieceOfFurniture0.setWidth((byte) (-101));
      assertFalse(integer1.equals((Object)integer0));
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(517.9619F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(2.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-1804.392F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(517.9619F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(517.9619F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-902.196F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals((-101.0F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      
      float float0 = homePieceOfFurniture0.getNameYOffset();
      assertFalse(integer1.equals((Object)integer0));
      assertEquals(0.0F, float0, 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(517.9619F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(2.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-1804.392F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(517.9619F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(517.9619F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-902.196F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals((-101.0F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      
      Level level0 = new Level("work", 2.0F, 1283.3765F, 2580.949F);
      assertNotNull(level0);
      assertEquals(2.0F, level0.getElevation(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals(1283.3765F, level0.getFloorThickness(), 0.01F);
      assertEquals("work", level0.getName());
      assertEquals(2580.949F, level0.getHeight(), 0.01F);
      
      boolean boolean3 = homePieceOfFurniture0.isAtLevel(level0);
      assertFalse(integer1.equals((Object)integer0));
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      assertEquals(2.0F, level0.getElevation(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals(1283.3765F, level0.getFloorThickness(), 0.01F);
      assertEquals("work", level0.getName());
      assertEquals(2580.949F, level0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(517.9619F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(2.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-1804.392F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(517.9619F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(517.9619F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-902.196F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals((-101.0F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[1] = 1689.4241F;
      floatArray0[2] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[8][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("I2E;", (Content) null, (Content) null, (-1097.6671F), 1689.4241F, 1689.4241F, 8192.0F, false, false, integer0, floatArray1, true, (-1650.44F), false);
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(8, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(1689.4241F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1097.6671F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(8, floatArray1.length);
      
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("I2E;");
      assertNotNull(furnitureCategory0);
      assertEquals(0, furnitureCategory0.getFurnitureCount());
      assertEquals("I2E;", furnitureCategory0.getName());
      
      catalogPieceOfFurniture0.setCategory(furnitureCategory0);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(0, furnitureCategory0.getFurnitureCount());
      assertEquals("I2E;", furnitureCategory0.getName());
      assertEquals(8, floatArray1.length);
      
      homePieceOfFurniture0.setY(1689.4241F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(1689.4241F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1097.6671F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(8, floatArray1.length);
      
      homePieceOfFurniture0.setDepth(1.0F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-1097.6671F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(8, floatArray1.length);
      
      homePieceOfFurniture0.setNameVisible(true);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-1097.6671F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(8, floatArray1.length);
      
      homePieceOfFurniture0.setWidth(1986.3317F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1986.3317F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(8, floatArray1.length);
      
      boolean boolean0 = homePieceOfFurniture0.isTopRightPointAt(1.0F, 1689.4241F, 422.46924F);
      assertFalse(boolean0);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1986.3317F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(8, floatArray1.length);
      
      boolean boolean1 = homePieceOfFurniture0.isTexturable();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1986.3317F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(8, floatArray1.length);
      
      boolean boolean2 = homePieceOfFurniture0.isBottomRightPointAt(0.5F, 321.20578F, 422.46924F);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1986.3317F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(8, floatArray1.length);
      
      boolean boolean3 = homePieceOfFurniture0.isBackFaceShown();
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1986.3317F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(8, floatArray1.length);
      
      boolean boolean4 = homePieceOfFurniture0.isBottomRightPointAt(1.0F, 921.0F, 921.0F);
      assertFalse(boolean4 == boolean3);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4 == boolean1);
      assertFalse(boolean4);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1986.3317F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(8, floatArray1.length);
      
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Integer integer0 = new Integer(615);
      assertNotNull(integer0);
      assertEquals(615, (int)integer0);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      assertFalse(boolean0);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 1.0F, 615, 615, 615, false, integer0, (float[][]) null, false, 615, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(615.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(615, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(615.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(615.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(615.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(615.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(615, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(615.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(615.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(615.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(307.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(615.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(615.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(615.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(615, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(615.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(1.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getX(), 0.01F);
      
      Integer integer1 = Integer.getInteger("");
      assertNull(integer1);
      
      homePieceOfFurniture0.setColor(integer0);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(615.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(615, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(615.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(615.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(615.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(307.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(615.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(615.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(615.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(615, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(615.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(1.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 8169, 8169, 8169, false, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      
      Level level0 = homePieceOfFurniture0.getLevel();
      assertNull(level0);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      
      boolean boolean0 = homePieceOfFurniture0.isAtLevel((Level) null);
      assertTrue(boolean0);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      
      BigDecimal bigDecimal0 = homePieceOfFurniture0.getValueAddedTax();
      assertNull(bigDecimal0);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, 8192.0F, 1.0F, 8192.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(9, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setDescription("editorSubFolder.Windows");
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(9, floatArray1.length);
      
      boolean boolean0 = homePieceOfFurniture0.isBottomLeftPointAt(1.0F, 1689.4241F, 8192.0F);
      assertFalse(boolean0);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setNameVisible(true);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setWidth(675.7141F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(675.7141F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(9, floatArray1.length);
      
      boolean boolean1 = homePieceOfFurniture0.isTopLeftPointAt(392.66F, 918.77F, 8192.0F);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(675.7141F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(9, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8169, 8169, 8169, true, true);
      assertNotNull(catalogPieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      
      HomePieceOfFurniture homePieceOfFurniture1 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertNotNull(homePieceOfFurniture1);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertEquals(8169.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertNull(homePieceOfFurniture1.getColor());
      assertEquals(0.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture1.getY(), 0.01F);
      assertNull(homePieceOfFurniture1.getCurrency());
      assertEquals(4084.5F, homePieceOfFurniture1.getX(), 0.01F);
      assertTrue(homePieceOfFurniture1.isResizable());
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals(8169.0F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture1.isMovable());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture1.getShininess());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(8169.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture1.getName());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertNull(homePieceOfFurniture1.getDescription());
      
      homePieceOfFurniture1.move(8169, 8169);
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertEquals(8169.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertNull(homePieceOfFurniture1.getColor());
      assertEquals(0.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertEquals(12253.5F, homePieceOfFurniture1.getX(), 0.01F);
      assertEquals(12253.5F, homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture1.getCurrency());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals(8169.0F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture1.isMovable());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture1.getShininess());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(8169.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture1.getName());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertNull(homePieceOfFurniture1.getDescription());
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      boolean boolean0 = homePieceOfFurniture0.isPointAt((-3220.8762F), (-1455.9492F), (-3220.8762F));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(boolean0);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("|~", (Content) null, (Content) null, 8169, 8169, 8169, false, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("|~", catalogPieceOfFurniture0.getName());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("|~", catalogPieceOfFurniture0.getName());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("|~", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      
      homePieceOfFurniture0.setHeight(8169);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("|~", catalogPieceOfFurniture0.getName());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("|~", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      
      float float0 = homePieceOfFurniture0.getGroundElevation();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("|~", catalogPieceOfFurniture0.getName());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("|~", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      
      Level level0 = homePieceOfFurniture0.getLevel();
      assertNull(level0);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("|~", catalogPieceOfFurniture0.getName());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("|~", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      
      String string0 = homePieceOfFurniture0.getStaircaseCutOutShape();
      assertNull(string0);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("|~", catalogPieceOfFurniture0.getName());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("|~", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Integer integer0 = new Integer(8184);
      assertNotNull(integer0);
      assertEquals(8184, (int)integer0);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 5031.55F, 8184, 8184, true, true);
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(5031.55F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8184.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(8184.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(5031.55F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8184.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(8184.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(2515.775F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8184.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(8184.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(5031.55F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(4092.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      
      homePieceOfFurniture0.setNameYOffset(5031.55F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(5031.55F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8184.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(8184.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(2515.775F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8184.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(8184.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(5031.55F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(5031.55F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(4092.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      
      homePieceOfFurniture0.setHeight(8184);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(5031.55F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8184.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(8184.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(2515.775F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8184.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(8184.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(5031.55F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(5031.55F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(4092.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      
      boolean boolean0 = homePieceOfFurniture0.isDoorOrWindow();
      assertFalse(boolean0);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(5031.55F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8184.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(8184.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(2515.775F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8184.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(8184.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(5031.55F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(5031.55F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(4092.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      
      HomePieceOfFurniture.SortableProperty[] homePieceOfFurniture_SortablePropertyArray0 = HomePieceOfFurniture.SortableProperty.values();
      assertNotNull(homePieceOfFurniture_SortablePropertyArray0);
      assertEquals(19, homePieceOfFurniture_SortablePropertyArray0.length);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Long long0 = new Long((-393L));
      assertNotNull(long0);
      assertEquals((-393L), (long)long0);
      
      Float float0 = new Float(0.0F);
      assertNotNull(float0);
      assertEquals(0.0F, (float)float0, 0.01F);
      
      URL uRL0 = MockURL.getFtpExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      
      URLContent uRLContent0 = new URLContent(uRL0);
      assertNotNull(uRLContent0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertFalse(uRLContent0.isJAREntry());
      
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      assertNotNull(resourceURLContent0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertFalse(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[5];
      LightSource lightSource0 = new LightSource(1567.0345F, 569.015F, (-3228.4F), (-1032));
      assertNotNull(lightSource0);
      assertEquals(1567.0345F, lightSource0.getX(), 0.01F);
      assertEquals((-1032), lightSource0.getColor());
      assertEquals(569.015F, lightSource0.getY(), 0.01F);
      assertNull(lightSource0.getDiameter());
      assertEquals((-3228.4F), lightSource0.getZ(), 0.01F);
      
      lightSourceArray0[0] = lightSource0;
      LightSource lightSource1 = new LightSource((-393L), (-393L), (-3228.4F), (-2146430436));
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals((-3228.4F), lightSource1.getZ(), 0.01F);
      assertEquals((-393.0F), lightSource1.getY(), 0.01F);
      assertEquals((-393.0F), lightSource1.getX(), 0.01F);
      assertEquals((-2146430436), lightSource1.getColor());
      assertNull(lightSource1.getDiameter());
      
      lightSourceArray0[1] = lightSource1;
      LightSource lightSource2 = new LightSource(1567.0345F, 3.29273F, (-2146430436), 19, float0);
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertNotNull(lightSource2);
      assertEquals(0.0F, lightSource2.getDiameter(), 0.01F);
      assertEquals((-2.14643046E9F), lightSource2.getZ(), 0.01F);
      assertEquals(3.29273F, lightSource2.getY(), 0.01F);
      assertEquals(19, lightSource2.getColor());
      assertEquals(1567.0345F, lightSource2.getX(), 0.01F);
      
      lightSourceArray0[2] = lightSource2;
      LightSource lightSource3 = new LightSource(1567.0345F, (-788.0F), 3.29273F, (-1032));
      assertFalse(lightSource3.equals((Object)lightSource0));
      assertFalse(lightSource3.equals((Object)lightSource2));
      assertFalse(lightSource3.equals((Object)lightSource1));
      assertNotNull(lightSource3);
      assertEquals(3.29273F, lightSource3.getZ(), 0.01F);
      assertEquals((-788.0F), lightSource3.getY(), 0.01F);
      assertEquals(1567.0345F, lightSource3.getX(), 0.01F);
      assertEquals((-1032), lightSource3.getColor());
      assertNull(lightSource3.getDiameter());
      
      lightSourceArray0[3] = lightSource3;
      Float float1 = new Float(6.283185307179586);
      assertNotEquals((float)float1, (float)float0, 0.01F);
      assertNotNull(float1);
      assertEquals(6.2831855F, (float)float1, 0.01F);
      
      LightSource lightSource4 = new LightSource(3.29273F, (-5281.0F), (-1.0F), 1, float1);
      assertFalse(lightSource4.equals((Object)lightSource1));
      assertFalse(lightSource4.equals((Object)lightSource3));
      assertFalse(lightSource4.equals((Object)lightSource0));
      assertFalse(lightSource4.equals((Object)lightSource2));
      assertNotEquals((float)float1, (float)float0, 0.01F);
      assertNotNull(lightSource4);
      assertEquals((-5281.0F), lightSource4.getY(), 0.01F);
      assertEquals(1, lightSource4.getColor());
      assertEquals(3.29273F, lightSource4.getX(), 0.01F);
      assertEquals(6.2831855F, lightSource4.getDiameter(), 0.01F);
      assertEquals((-1.0F), lightSource4.getZ(), 0.01F);
      
      lightSourceArray0[4] = lightSource4;
      float[][] floatArray0 = new float[3][1];
      float[] floatArray1 = new float[7];
      floatArray1[0] = 0.0F;
      floatArray1[1] = 3.29273F;
      floatArray1[2] = (float) 19;
      floatArray1[3] = (float) (-393L);
      floatArray1[4] = (-3228.4F);
      floatArray1[5] = (float) 19;
      floatArray1[6] = (-3228.4F);
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[4];
      assertFalse(floatArray2.equals((Object)floatArray1));
      
      floatArray2[0] = (float) 1;
      floatArray2[1] = (-3228.4F);
      floatArray2[2] = (-1088.683F);
      floatArray2[3] = (float) (-1032);
      floatArray0[1] = floatArray2;
      float[] floatArray3 = new float[8];
      assertFalse(floatArray3.equals((Object)floatArray2));
      assertFalse(floatArray3.equals((Object)floatArray1));
      
      floatArray3[0] = 3.29273F;
      floatArray3[1] = (float) (-2146430436);
      floatArray3[2] = 3.29273F;
      floatArray3[3] = 3.29273F;
      floatArray3[4] = (float) (-1032);
      floatArray3[5] = (float) 19;
      floatArray3[6] = (-1088.683F);
      floatArray3[7] = (float) (-1032);
      floatArray0[2] = floatArray3;
      CatalogLight catalogLight0 = new CatalogLight("fF|-D8gjou6my", "1>6Dimh%~Q/", "fF|-D8gjou6my", "fF|-D8gjou6my", stringArray0, long0, float0, uRLContent0, resourceURLContent0, resourceURLContent0, (-2471.378F), (-393L), 0.0F, 569.015F, false, lightSourceArray0, "", floatArray0, "1>6Dimh%~Q/", false, false, false, (BigDecimal) null, (BigDecimal) null, "fF|-D8gjou6my");
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertNotNull(catalogLight0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertFalse(uRLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertFalse(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isModifiable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("fF|-D8gjou6my", catalogLight0.getId());
      assertEquals("1>6Dimh%~Q/", catalogLight0.getCreator());
      assertEquals(569.015F, catalogLight0.getElevation(), 0.01F);
      assertEquals("fF|-D8gjou6my", catalogLight0.getInformation());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("fF|-D8gjou6my", catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isTexturable());
      assertEquals("1>6Dimh%~Q/", catalogLight0.getName());
      assertEquals("fF|-D8gjou6my", catalogLight0.getCurrency());
      assertEquals((-2471.378F), catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals((-393.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-393L), (long)catalogLight0.getCreationDate());
      assertEquals(0, stringArray0.length);
      assertEquals(3, floatArray0.length);
      assertEquals(5, lightSourceArray0.length);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertNotNull(homeLight0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertFalse(uRLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertFalse(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isModifiable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("fF|-D8gjou6my", catalogLight0.getId());
      assertEquals("1>6Dimh%~Q/", catalogLight0.getCreator());
      assertEquals(569.015F, catalogLight0.getElevation(), 0.01F);
      assertEquals("fF|-D8gjou6my", catalogLight0.getInformation());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("fF|-D8gjou6my", catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isTexturable());
      assertEquals("1>6Dimh%~Q/", catalogLight0.getName());
      assertEquals("fF|-D8gjou6my", catalogLight0.getCurrency());
      assertEquals((-2471.378F), catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals((-393.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-393L), (long)catalogLight0.getCreationDate());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("1>6Dimh%~Q/", homeLight0.getName());
      assertEquals("fF|-D8gjou6my", homeLight0.getCurrency());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals((-2471.378F), homeLight0.getWidth(), 0.01F);
      assertEquals((-1235.689F), homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertFalse(homeLight0.isNameVisible());
      assertEquals("fF|-D8gjou6my", homeLight0.getDescription());
      assertFalse(homeLight0.isDeformable());
      assertEquals(569.015F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertEquals("fF|-D8gjou6my", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertEquals((-393.0F), homeLight0.getDepth(), 0.01F);
      assertEquals(569.015F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-196.5F), homeLight0.getY(), 0.01F);
      assertEquals(0, stringArray0.length);
      assertEquals(3, floatArray0.length);
      assertEquals(5, lightSourceArray0.length);
      
      HomeLight homeLight1 = homeLight0.clone();
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("ftp", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertFalse(uRLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertFalse(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isModifiable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("fF|-D8gjou6my", catalogLight0.getId());
      assertEquals("1>6Dimh%~Q/", catalogLight0.getCreator());
      assertEquals(569.015F, catalogLight0.getElevation(), 0.01F);
      assertEquals("fF|-D8gjou6my", catalogLight0.getInformation());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("fF|-D8gjou6my", catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isTexturable());
      assertEquals("1>6Dimh%~Q/", catalogLight0.getName());
      assertEquals("fF|-D8gjou6my", catalogLight0.getCurrency());
      assertEquals((-2471.378F), catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals((-393.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-393L), (long)catalogLight0.getCreationDate());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("1>6Dimh%~Q/", homeLight0.getName());
      assertEquals("fF|-D8gjou6my", homeLight0.getCurrency());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals((-2471.378F), homeLight0.getWidth(), 0.01F);
      assertEquals((-1235.689F), homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertFalse(homeLight0.isNameVisible());
      assertEquals("fF|-D8gjou6my", homeLight0.getDescription());
      assertFalse(homeLight0.isDeformable());
      assertEquals(569.015F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertEquals("fF|-D8gjou6my", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertEquals((-393.0F), homeLight0.getDepth(), 0.01F);
      assertEquals(569.015F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-196.5F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals("fF|-D8gjou6my", homeLight1.getDescription());
      assertEquals(569.015F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals("", homeLight1.getStaircaseCutOutShape());
      assertNull(homeLight1.getShininess());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals("fF|-D8gjou6my", homeLight1.getCurrency());
      assertFalse(homeLight1.isDeformable());
      assertFalse(homeLight1.isResizable());
      assertEquals((-1235.689F), homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertEquals((-2471.378F), homeLight1.getWidth(), 0.01F);
      assertEquals((-196.5F), homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals("fF|-D8gjou6my", homeLight1.getCatalogId());
      assertEquals("1>6Dimh%~Q/", homeLight1.getName());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals((-393.0F), homeLight1.getDepth(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(569.015F, homeLight1.getElevation(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertEquals(0, stringArray0.length);
      assertEquals(3, floatArray0.length);
      assertEquals(5, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      
      Float float2 = new Float(2.25);
      assertNotEquals((float)float2, (float)float0, 0.01F);
      assertNotEquals((float)float2, (float)float1, 0.01F);
      assertNotNull(float2);
      assertEquals(2.25F, (float)float2, 0.01F);
      
      // Undeclared exception!
      try { 
        homeLight1.setShininess(float2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't texturable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[7];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[10][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, 0.0F, 1.0F, 8192.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(10, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals("", homePieceOfFurniture0.getName());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(10, floatArray1.length);
      
      homePieceOfFurniture0.setDepth((-544.0F));
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-544.0F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals("", homePieceOfFurniture0.getName());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(10, floatArray1.length);
      
      homePieceOfFurniture0.setNameVisible(false);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-544.0F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals("", homePieceOfFurniture0.getName());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(10, floatArray1.length);
      
      homePieceOfFurniture0.setNameVisible(true);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-544.0F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals("", homePieceOfFurniture0.getName());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(10, floatArray1.length);
      
      boolean boolean0 = homePieceOfFurniture0.isVisible();
      assertTrue(boolean0);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-544.0F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals("", homePieceOfFurniture0.getName());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(10, floatArray1.length);
      
      Content content0 = homePieceOfFurniture0.getModel();
      assertNull(content0);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-544.0F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals("", homePieceOfFurniture0.getName());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(10, floatArray1.length);
      
      BigDecimal bigDecimal0 = new BigDecimal(8192);
      assertNotNull(bigDecimal0);
      assertEquals((short)8192, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "(:i_#~D@4*", (Content) null, (Content) null, (Content) null, 1.0F, 3.4028235E38F, 0.5F, 3.4028235E38F, false, (-181.53554F), 0.0F, (Sash[]) null, floatArray1, (String) null, false, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((short)8192, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-181.53554F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(10, floatArray1.length);
      
      int int0 = catalogPieceOfFurniture0.compareTo((CatalogPieceOfFurniture) catalogDoorOrWindow0);
      assertEquals(1, int0);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals((short)8192, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.5F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(3.4028235E38F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-181.53554F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(10, floatArray1.length);
      
      homePieceOfFurniture0.setName("");
      assertFalse(integer0.equals((Object)int0));
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-544.0F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals("", homePieceOfFurniture0.getName());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(10, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[6] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 1689.4241F, 1.0F, 8192, false, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      
      homePieceOfFurniture0.setDescription("editorSubFolder.Windows");
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      
      float float0 = homePieceOfFurniture0.getNameYOffset();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      
      boolean boolean0 = homePieceOfFurniture0.isTopLeftPointAt(0.3926991F, (-157.0F), 0.3926991F);
      assertFalse(boolean0);
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      
      homePieceOfFurniture0.removePropertyChangeListener((PropertyChangeListener) null);
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      
      boolean boolean1 = homePieceOfFurniture0.intersectsRectangle(8192, 2580.949F, (-160.47862F), (-1.0F));
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 0.0F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture(".Yq<C=Z1 ^bmn1e^P)", (Content) null, (Content) null, (-4063.77F), 1.0F, 1.0F, 0.0F, false, false, integer0, floatArray1, true, 1.0F, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals((-4063.77F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(".Yq<C=Z1 ^bmn1e^P)", catalogPieceOfFurniture0.getName());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(9, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals((-4063.77F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(".Yq<C=Z1 ^bmn1e^P)", catalogPieceOfFurniture0.getName());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(".Yq<C=Z1 ^bmn1e^P)", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals((-2031.885F), homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals((-4063.77F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setDepth(1.0F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals((-4063.77F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(".Yq<C=Z1 ^bmn1e^P)", catalogPieceOfFurniture0.getName());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(".Yq<C=Z1 ^bmn1e^P)", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals((-2031.885F), homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals((-4063.77F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(9, floatArray1.length);
      
      boolean boolean0 = homePieceOfFurniture0.isTopRightPointAt(0.0F, 8192, 8192);
      assertFalse(boolean0);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals((-4063.77F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(".Yq<C=Z1 ^bmn1e^P)", catalogPieceOfFurniture0.getName());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(".Yq<C=Z1 ^bmn1e^P)", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals((-2031.885F), homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals((-4063.77F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(9, floatArray1.length);
      
      boolean boolean1 = homePieceOfFurniture0.isTexturable();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals((-4063.77F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(".Yq<C=Z1 ^bmn1e^P)", catalogPieceOfFurniture0.getName());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(".Yq<C=Z1 ^bmn1e^P)", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals((-2031.885F), homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals((-4063.77F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(9, floatArray1.length);
      
      float float0 = homePieceOfFurniture0.getNameAngle();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals((-4063.77F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(".Yq<C=Z1 ^bmn1e^P)", catalogPieceOfFurniture0.getName());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(".Yq<C=Z1 ^bmn1e^P)", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals((-2031.885F), homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals((-4063.77F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(9, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Integer integer0 = Integer.getInteger("", 8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, 0.0F, 1.0F, 8192.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(9, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setDepth(0.3926991F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setNameVisible(false);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setNameVisible(true);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(9, floatArray1.length);
      
      boolean boolean0 = homePieceOfFurniture0.isVisible();
      assertTrue(boolean0);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setName("!");
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("!", homePieceOfFurniture0.getName());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setNameXOffset(1986.7244F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1986.7244F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("!", homePieceOfFurniture0.getName());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(9, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = (-5.0F);
      floatArray0[4] = (float) 8196;
      float[][] floatArray1 = new float[9][5];
      floatArray1[2] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 1689.4241F, 1.0F, 8196, false, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8196.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8196.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(8196.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      
      homePieceOfFurniture0.setDescription("");
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8196.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(8196.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      
      boolean boolean0 = homePieceOfFurniture0.isBottomLeftPointAt(1.0F, 1689.4241F, 8196.0F);
      assertTrue(boolean0);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8196.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(8196.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      
      Random.setNextRandom(8196);
      homePieceOfFurniture0.setDescription("");
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8196.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(8196.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("Z", (Content) null, (Content) null, 8169, 8169, 614.572F, true, true);
      assertNotNull(catalogPieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(614.572F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals("Z", catalogPieceOfFurniture0.getName());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getInformation());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(614.572F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals("Z", catalogPieceOfFurniture0.getName());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals("Z", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(614.572F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      
      boolean boolean0 = homePieceOfFurniture0.isBottomRightPointAt((-369.98428F), 614.572F, 3.4028235E38F);
      assertFalse(boolean0);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(614.572F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals("Z", catalogPieceOfFurniture0.getName());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals("Z", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(614.572F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "work");
      assertFalse(boolean0);
      
      Integer integer1 = new Integer(8192);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals(8192, (int)integer1);
      
      Integer integer2 = new Integer(1166);
      assertFalse(integer2.equals((Object)integer0));
      assertFalse(integer2.equals((Object)integer1));
      assertNotNull(integer2);
      assertEquals(1166, (int)integer2);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 2.0F, 0.0F, 0.0F, (-3414.21F), false, false, integer2, (float[][]) null, true, 8192, false);
      assertFalse(integer2.equals((Object)integer0));
      assertFalse(integer2.equals((Object)integer1));
      assertNotNull(catalogPieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-3414.21F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(2.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1166, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertFalse(integer2.equals((Object)integer0));
      assertFalse(integer2.equals((Object)integer1));
      assertNotNull(homePieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-3414.21F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(2.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1166, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(2.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1166, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-3414.21F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals((-3414.21F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      
      homePieceOfFurniture0.setNameVisible(false);
      assertFalse(integer2.equals((Object)integer0));
      assertFalse(integer2.equals((Object)integer1));
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-3414.21F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(2.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1166, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(2.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1166, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-3414.21F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals((-3414.21F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      
      homePieceOfFurniture0.setModelMirrored(true);
      assertFalse(integer2.equals((Object)integer0));
      assertFalse(integer2.equals((Object)integer1));
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-3414.21F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(2.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1166, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(2.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1166, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-3414.21F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals((-3414.21F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      
      Float float0 = new Float((double) (-3414.21F));
      assertNotNull(float0);
      assertEquals((-3414.21F), (float)float0, 0.01F);
      
      homePieceOfFurniture0.setShininess((Float) null);
      assertFalse(integer2.equals((Object)integer0));
      assertFalse(integer2.equals((Object)integer1));
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-3414.21F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(2.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1166, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(2.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1166, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-3414.21F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals((-3414.21F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      
      homePieceOfFurniture0.setNameYOffset((-1804.392F));
      assertFalse(integer2.equals((Object)integer0));
      assertFalse(integer2.equals((Object)integer1));
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-3414.21F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(2.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1166, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(2.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertEquals(1166, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-3414.21F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals((-3414.21F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      
      Random.setNextRandom(5);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Integer integer0 = new Integer(0);
      assertNotNull(integer0);
      assertEquals(0, (int)integer0);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "work");
      assertFalse(boolean0);
      
      Integer integer1 = new Integer(0);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals(0, (int)integer1);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("1SyjFPv9=&P", (Content) null, (Content) null, (-1804.392F), 8192, 151.23F, 1.0F, true, true, integer1, (float[][]) null, false, 1.0F, false);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(151.23F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(homePieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(151.23F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(151.23F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      assertTrue(integer1.equals((Object)integer0));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertNotNull(homePieceOfFurniture1);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(151.23F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(151.23F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-1804.392F), homePieceOfFurniture1.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture1.getCurrency());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertEquals(0, (int)homePieceOfFurniture1.getColor());
      assertEquals((-902.196F), homePieceOfFurniture1.getX(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertEquals(1.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertEquals(1.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(151.23F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture1.isMovable());
      assertNull(homePieceOfFurniture1.getShininess());
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture1.getName());
      assertEquals(4096.0F, homePieceOfFurniture1.getY(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(8192.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture1.isResizable());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      BigDecimal bigDecimal0 = homePieceOfFurniture1.getValueAddedTax();
      assertTrue(integer1.equals((Object)integer0));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertNull(bigDecimal0);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(151.23F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(151.23F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-1804.392F), homePieceOfFurniture1.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture1.getCurrency());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertEquals(0, (int)homePieceOfFurniture1.getColor());
      assertEquals((-902.196F), homePieceOfFurniture1.getX(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertEquals(1.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertEquals(1.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(151.23F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture1.isMovable());
      assertNull(homePieceOfFurniture1.getShininess());
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture1.getName());
      assertEquals(4096.0F, homePieceOfFurniture1.getY(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(8192.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture1.isResizable());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture1 = new CatalogPieceOfFurniture("1SyjFPv9=&P", (Content) null, (Content) null, 517.9619F, (-1020.9893F), 151.23F, 2905.8782F, false, false, integer0, (float[][]) null, false, 0.3926991F, true);
      assertTrue(integer0.equals((Object)integer1));
      assertFalse(catalogPieceOfFurniture1.equals((Object)catalogPieceOfFurniture0));
      assertNotNull(catalogPieceOfFurniture1);
      assertFalse(catalogPieceOfFurniture1.isMovable());
      assertFalse(catalogPieceOfFurniture1.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture1.isModifiable());
      assertEquals(151.23F, catalogPieceOfFurniture1.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture1.isDeformable());
      assertNull(catalogPieceOfFurniture1.getInformation());
      assertTrue(catalogPieceOfFurniture1.isResizable());
      assertEquals(517.9619F, catalogPieceOfFurniture1.getWidth(), 0.01F);
      assertEquals((-1020.9893F), catalogPieceOfFurniture1.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture1.getCreator());
      assertNull(catalogPieceOfFurniture1.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture1.getCreationDate());
      assertEquals(0.3926991F, catalogPieceOfFurniture1.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture1.isTexturable());
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture1.getName());
      assertNull(catalogPieceOfFurniture1.getCurrency());
      assertTrue(catalogPieceOfFurniture1.isProportional());
      assertNull(catalogPieceOfFurniture1.getId());
      assertEquals(0, (int)catalogPieceOfFurniture1.getColor());
      assertNull(catalogPieceOfFurniture1.getGrade());
      assertNull(catalogPieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(2905.8782F, catalogPieceOfFurniture1.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture1.isDoorOrWindow());
      
      HomePieceOfFurniture homePieceOfFurniture2 = new HomePieceOfFurniture(homePieceOfFurniture0);
      assertTrue(integer1.equals((Object)integer0));
      assertFalse(catalogPieceOfFurniture0.equals((Object)catalogPieceOfFurniture1));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture2.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture2.equals((Object)homePieceOfFurniture0));
      assertNotNull(homePieceOfFurniture2);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(151.23F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(151.23F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture2.getShininess());
      assertTrue(homePieceOfFurniture2.isMovable());
      assertNull(homePieceOfFurniture2.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture2.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture2.getCatalogId());
      assertTrue(homePieceOfFurniture2.isResizable());
      assertTrue(homePieceOfFurniture2.isVisible());
      assertTrue(homePieceOfFurniture2.isDeformable());
      assertNull(homePieceOfFurniture2.getDescription());
      assertEquals(0.0F, homePieceOfFurniture2.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture2.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture2.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture2.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture2.isTexturable());
      assertFalse(homePieceOfFurniture2.isDoorOrWindow());
      assertEquals(4096.0F, homePieceOfFurniture2.getY(), 0.01F);
      assertFalse(homePieceOfFurniture2.isModelMirrored());
      assertFalse(homePieceOfFurniture2.isBackFaceShown());
      assertEquals((-902.196F), homePieceOfFurniture2.getX(), 0.01F);
      assertEquals(0, (int)homePieceOfFurniture2.getColor());
      assertEquals(151.23F, homePieceOfFurniture2.getHeight(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture2.getGroundElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture2.getName());
      assertNull(homePieceOfFurniture2.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture2.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture2.getDepth(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture2.getWidth(), 0.01F);
      
      float float0 = homePieceOfFurniture0.getNameYOffset();
      assertTrue(integer1.equals((Object)integer0));
      assertFalse(catalogPieceOfFurniture0.equals((Object)catalogPieceOfFurniture1));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture2));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertEquals(0.0F, float0, 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(151.23F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(151.23F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertNotSame(catalogPieceOfFurniture0, catalogPieceOfFurniture1);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture2);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      
      boolean boolean1 = homePieceOfFurniture2.isTopLeftPointAt((-1.0F), 0.0F, 2112.65F);
      assertTrue(integer1.equals((Object)integer0));
      assertFalse(catalogPieceOfFurniture0.equals((Object)catalogPieceOfFurniture1));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture2));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture2.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture2.equals((Object)homePieceOfFurniture0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(151.23F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(151.23F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture2.getShininess());
      assertTrue(homePieceOfFurniture2.isMovable());
      assertNull(homePieceOfFurniture2.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture2.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture2.getCatalogId());
      assertTrue(homePieceOfFurniture2.isResizable());
      assertTrue(homePieceOfFurniture2.isVisible());
      assertTrue(homePieceOfFurniture2.isDeformable());
      assertNull(homePieceOfFurniture2.getDescription());
      assertEquals(0.0F, homePieceOfFurniture2.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture2.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture2.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture2.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture2.isTexturable());
      assertFalse(homePieceOfFurniture2.isDoorOrWindow());
      assertEquals(4096.0F, homePieceOfFurniture2.getY(), 0.01F);
      assertFalse(homePieceOfFurniture2.isModelMirrored());
      assertFalse(homePieceOfFurniture2.isBackFaceShown());
      assertEquals((-902.196F), homePieceOfFurniture2.getX(), 0.01F);
      assertEquals(0, (int)homePieceOfFurniture2.getColor());
      assertEquals(151.23F, homePieceOfFurniture2.getHeight(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture2.getGroundElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture2.getName());
      assertNull(homePieceOfFurniture2.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture2.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture2.getDepth(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture2.getWidth(), 0.01F);
      assertNotSame(catalogPieceOfFurniture0, catalogPieceOfFurniture1);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture2);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture2, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture2, homePieceOfFurniture0);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(2302.19848233);
      assertNotNull(bigDecimal0);
      assertEquals((byte) (-2), bigDecimal0.byteValue());
      assertEquals((short)2302, bigDecimal0.shortValue());
      
      Sash[] sashArray0 = new Sash[1];
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("com.eteks.sweethome3d.model.HomePieceOfFurniture$10", "com.eteks.sweethome3d.model.HomePieceOfFurniture$10", "com.eteks.sweethome3d.model.HomePieceOfFurniture$10", (Content) null, (Content) null, (Content) null, (-2425.28F), (-1092.0F), 0.0F, 0.0F, false, 631.12616F, 4.9F, sashArray0, (float[][]) null, "com.eteks.sweethome3d.model.HomePieceOfFurniture$10", false, false, false, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((byte) (-2), bigDecimal0.byteValue());
      assertEquals((short)2302, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isDeformable());
      assertEquals((-2425.28F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$10", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isTexturable());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$10", catalogDoorOrWindow0.getCreator());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$10", catalogDoorOrWindow0.getDescription());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$10", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1092.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4.9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(631.12616F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(1, sashArray0.length);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((byte) (-2), bigDecimal0.byteValue());
      assertEquals((short)2302, bigDecimal0.shortValue());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertFalse(catalogDoorOrWindow0.isDeformable());
      assertEquals((-2425.28F), catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$10", catalogDoorOrWindow0.getId());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isTexturable());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$10", catalogDoorOrWindow0.getCreator());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$10", catalogDoorOrWindow0.getDescription());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$10", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-1092.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(4.9F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(631.12616F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$10", homeDoorOrWindow0.getName());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$10", homeDoorOrWindow0.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(4.9F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertEquals((-1212.64F), homeDoorOrWindow0.getX(), 0.01F);
      assertFalse(homeDoorOrWindow0.isTexturable());
      assertEquals((-546.0F), homeDoorOrWindow0.getY(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-2425.28F), homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals((-1092.0F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(631.12616F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$10", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(1, sashArray0.length);
      
      Integer integer0 = Integer.getInteger("com.eteks.sweethome3d.model.HomePieceOfFurniture$10");
      assertNull(integer0);
      
      Integer integer1 = new Integer((-3088));
      assertNotNull(integer1);
      assertEquals((-3088), (int)integer1);
      
      // Undeclared exception!
      try { 
        homeDoorOrWindow0.setColor(integer1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't texturable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 8174, 8174, 8174, false, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8174.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8174.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8174.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8174.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8174.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8174.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8174.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(8174.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8174.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(4087.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4087.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertTrue(homePieceOfFurniture0.isTexturable());
      
      float float0 = homePieceOfFurniture0.getDepth();
      assertEquals(8174.0F, float0, 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8174.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8174.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8174.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8174.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(8174.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8174.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(4087.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4087.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertTrue(homePieceOfFurniture0.isTexturable());
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 8169, 8169, 8169, false, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      
      boolean boolean0 = homePieceOfFurniture0.isTopLeftPointAt(4156.83F, 3.4028235E38F, 3.4028235E38F);
      assertFalse(boolean0);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      float[] floatArray0 = new float[9];
      float[][] floatArray1 = new float[9][5];
      floatArray1[4] = floatArray1[3];
      floatArray1[8] = floatArray0;
      Sash[] sashArray0 = new Sash[9];
      Sash sash0 = new Sash((-648.13214F), 0.0F, (-1291.6161F), 0.0F, 452.0F);
      assertNotNull(sash0);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      assertEquals((-648.13214F), sash0.getXAxis(), 0.01F);
      assertEquals(452.0F, sash0.getEndAngle(), 0.01F);
      assertEquals((-1291.6161F), sash0.getWidth(), 0.01F);
      
      Sash sash1 = new Sash(1453.343F, (-3391.2F), 622.05554F, (-648.13214F), 21.2585F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals(21.2585F, sash1.getEndAngle(), 0.01F);
      assertEquals((-3391.2F), sash1.getYAxis(), 0.01F);
      assertEquals(622.05554F, sash1.getWidth(), 0.01F);
      assertEquals((-648.13214F), sash1.getStartAngle(), 0.01F);
      assertEquals(1453.343F, sash1.getXAxis(), 0.01F);
      
      sashArray0[5] = sashArray0[3];
      sashArray0[6] = sashArray0[5];
      Sash sash2 = new Sash((-1291.6161F), 155.0F, 1453.343F, 21.2585F, (-1089.0F));
      assertFalse(sash2.equals((Object)sash1));
      assertFalse(sash2.equals((Object)sash0));
      assertNotNull(sash2);
      assertEquals((-1291.6161F), sash2.getXAxis(), 0.01F);
      assertEquals(1453.343F, sash2.getWidth(), 0.01F);
      assertEquals((-1089.0F), sash2.getEndAngle(), 0.01F);
      assertEquals(155.0F, sash2.getYAxis(), 0.01F);
      assertEquals(21.2585F, sash2.getStartAngle(), 0.01F);
      
      sashArray0[8] = sash2;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)110;
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      assertNotNull(bigInteger0);
      assertEquals((byte)110, bigInteger0.byteValue());
      assertEquals((short)110, bigInteger0.shortValue());
      assertEquals(1, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)110}, byteArray0);
      
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      assertNotNull(bigDecimal0);
      assertEquals((byte)110, bigInteger0.byteValue());
      assertEquals((short)110, bigInteger0.shortValue());
      assertEquals((short)110, bigDecimal0.shortValue());
      assertEquals((byte)110, bigDecimal0.byteValue());
      assertEquals(1, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)110}, byteArray0);
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "HEIGHT", "", (Content) null, (Content) null, 1453.343F, (-1.0F), 2874.894F, (-136.7429F), false, (-1.0F), 21.2585F, sashArray0, floatArray1, "", false, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((byte)110, bigInteger0.byteValue());
      assertEquals((short)110, bigInteger0.shortValue());
      assertEquals((short)110, bigDecimal0.shortValue());
      assertEquals((byte)110, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-1.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(2874.894F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(1453.343F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals((-1.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals((-136.7429F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(21.2585F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("HEIGHT", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(9, floatArray1.length);
      assertEquals(9, sashArray0.length);
      assertEquals(1, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)110}, byteArray0);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogDoorOrWindow0);
      assertNotNull(homePieceOfFurniture0);
      assertTrue(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(2874.894F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals("HEIGHT", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals((-1.0F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1453.343F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals((-136.7429F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals((-0.5F), homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals((-136.7429F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(726.6715F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getDescription());
      assertEquals((byte)110, bigInteger0.byteValue());
      assertEquals((short)110, bigInteger0.shortValue());
      assertEquals((short)110, bigDecimal0.shortValue());
      assertEquals((byte)110, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-1.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(2874.894F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(1453.343F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals((-1.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals((-136.7429F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(21.2585F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("HEIGHT", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(9, floatArray1.length);
      assertEquals(9, sashArray0.length);
      assertEquals(1, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)110}, byteArray0);
      
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertNotNull(homePieceOfFurniture1);
      assertTrue(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(2874.894F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals("HEIGHT", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals((-1.0F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1453.343F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals((-136.7429F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals((-0.5F), homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals((-136.7429F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(726.6715F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getDescription());
      assertEquals((-136.7429F), homePieceOfFurniture1.getElevation(), 0.01F);
      assertEquals(1453.343F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture1.getCurrency());
      assertFalse(homePieceOfFurniture1.isMovable());
      assertNull(homePieceOfFurniture1.getColor());
      assertEquals("", homePieceOfFurniture1.getCatalogId());
      assertTrue(homePieceOfFurniture1.isDoorOrWindow());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertEquals(2874.894F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertEquals("HEIGHT", homePieceOfFurniture1.getName());
      assertEquals("", homePieceOfFurniture1.getDescription());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertEquals(726.6715F, homePieceOfFurniture1.getX(), 0.01F);
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertEquals((-0.5F), homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals((-136.7429F), homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture1.isResizable());
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertNull(homePieceOfFurniture1.getShininess());
      assertEquals((-1.0F), homePieceOfFurniture1.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture1.isVisible());
      assertEquals((byte)110, bigInteger0.byteValue());
      assertEquals((short)110, bigInteger0.shortValue());
      assertEquals((short)110, bigDecimal0.shortValue());
      assertEquals((byte)110, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-1.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(2874.894F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(1453.343F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals((-1.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals((-136.7429F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(21.2585F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("HEIGHT", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(9, floatArray1.length);
      assertEquals(9, sashArray0.length);
      assertEquals(1, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)110}, byteArray0);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      float float0 = homePieceOfFurniture1.getAngle();
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertEquals(0.0F, float0, 0.01F);
      assertTrue(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(2874.894F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals("HEIGHT", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals((-1.0F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1453.343F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals((-136.7429F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals((-0.5F), homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals((-136.7429F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(726.6715F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getDescription());
      assertEquals((-136.7429F), homePieceOfFurniture1.getElevation(), 0.01F);
      assertEquals(1453.343F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture1.getCurrency());
      assertFalse(homePieceOfFurniture1.isMovable());
      assertNull(homePieceOfFurniture1.getColor());
      assertEquals("", homePieceOfFurniture1.getCatalogId());
      assertTrue(homePieceOfFurniture1.isDoorOrWindow());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertEquals(2874.894F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertEquals("HEIGHT", homePieceOfFurniture1.getName());
      assertEquals("", homePieceOfFurniture1.getDescription());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertEquals(726.6715F, homePieceOfFurniture1.getX(), 0.01F);
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertEquals((-0.5F), homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals((-136.7429F), homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture1.isResizable());
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertNull(homePieceOfFurniture1.getShininess());
      assertEquals((-1.0F), homePieceOfFurniture1.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture1.isVisible());
      assertEquals((byte)110, bigInteger0.byteValue());
      assertEquals((short)110, bigInteger0.shortValue());
      assertEquals((short)110, bigDecimal0.shortValue());
      assertEquals((byte)110, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals((-1.0F), catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(2874.894F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals(1453.343F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals((-1.0F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals((-136.7429F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(21.2585F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertEquals("HEIGHT", catalogDoorOrWindow0.getName());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(9, floatArray1.length);
      assertEquals(9, sashArray0.length);
      assertEquals(1, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)110}, byteArray0);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, (-1291.6161F), 1.0F, 8192.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(9, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setDescription("editorSubFolder.Windows");
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setNameVisible(true);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setWidth(675.7141F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(675.7141F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      boolean boolean0 = homePieceOfFurniture0.isPointAt((-1.0F), (-1.0F), (-1291.6161F));
      assertFalse(boolean0);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(675.7141F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(9, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 8169, 8169, 8169, true, true);
      assertNotNull(catalogPieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      
      homePieceOfFurniture0.setDescription("~");
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getDescription());
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      
      boolean boolean0 = homePieceOfFurniture0.isNameVisible();
      assertFalse(boolean0);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getDescription());
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      
      HomePieceOfFurniture.SortableProperty[] homePieceOfFurniture_SortablePropertyArray0 = HomePieceOfFurniture.SortableProperty.values();
      assertNotNull(homePieceOfFurniture_SortablePropertyArray0);
      assertEquals(19, homePieceOfFurniture_SortablePropertyArray0.length);
      
      float float0 = homePieceOfFurniture0.getNameYOffset();
      assertEquals(0.0F, float0, 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getDescription());
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Integer integer0 = new Integer(0);
      assertNotNull(integer0);
      assertEquals(0, (int)integer0);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "work");
      assertFalse(boolean0);
      
      Integer integer1 = new Integer(8192);
      assertFalse(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals(8192, (int)integer1);
      
      Integer integer2 = new Integer(0);
      assertTrue(integer2.equals((Object)integer0));
      assertFalse(integer2.equals((Object)integer1));
      assertNotNull(integer2);
      assertEquals(0, (int)integer2);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("1SyjFPv9=&P", (Content) null, (Content) null, (-1804.392F), 8192, 151.23F, 1.0F, true, true, integer2, (float[][]) null, false, 1.0F, false);
      assertTrue(integer2.equals((Object)integer0));
      assertFalse(integer2.equals((Object)integer1));
      assertNotNull(catalogPieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(151.23F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertTrue(integer2.equals((Object)integer0));
      assertFalse(integer2.equals((Object)integer1));
      assertNotNull(homePieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(151.23F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(151.23F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      assertTrue(integer2.equals((Object)integer0));
      assertFalse(integer2.equals((Object)integer1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertNotNull(homePieceOfFurniture1);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(151.23F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(151.23F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture1.isMovable());
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals(0, (int)homePieceOfFurniture1.getColor());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertEquals((-902.196F), homePieceOfFurniture1.getX(), 0.01F);
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture1.getWidth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(151.23F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture1.isVisible());
      assertNull(homePieceOfFurniture1.getShininess());
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture1.getName());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      BigDecimal bigDecimal0 = homePieceOfFurniture1.getValueAddedTax();
      assertTrue(integer2.equals((Object)integer0));
      assertFalse(integer2.equals((Object)integer1));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertNull(bigDecimal0);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(151.23F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(151.23F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture1.isMovable());
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals(0, (int)homePieceOfFurniture1.getColor());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertEquals((-902.196F), homePieceOfFurniture1.getX(), 0.01F);
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture1.getWidth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(151.23F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture1.isVisible());
      assertNull(homePieceOfFurniture1.getShininess());
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture1.getName());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      homePieceOfFurniture0.setNameVisible(true);
      assertTrue(integer2.equals((Object)integer0));
      assertFalse(integer2.equals((Object)integer1));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(151.23F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(151.23F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      
      homePieceOfFurniture0.setNameVisible(true);
      assertTrue(integer2.equals((Object)integer0));
      assertFalse(integer2.equals((Object)integer1));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(151.23F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(151.23F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      
      boolean boolean1 = homePieceOfFurniture1.isVisible();
      assertTrue(integer2.equals((Object)integer0));
      assertFalse(integer2.equals((Object)integer1));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(151.23F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(151.23F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture1.isMovable());
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals(0, (int)homePieceOfFurniture1.getColor());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertEquals((-902.196F), homePieceOfFurniture1.getX(), 0.01F);
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture1.getWidth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(151.23F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture1.isVisible());
      assertNull(homePieceOfFurniture1.getShininess());
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture1.getName());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      float float0 = homePieceOfFurniture0.getNameYOffset();
      assertTrue(integer2.equals((Object)integer0));
      assertFalse(integer2.equals((Object)integer1));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertEquals(0.0F, float0, 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(151.23F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(151.23F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      
      boolean boolean2 = homePieceOfFurniture1.isTopLeftPointAt(2.0F, 1609.5736F, 517.9619F);
      assertTrue(integer2.equals((Object)integer0));
      assertFalse(integer2.equals((Object)integer1));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(151.23F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(151.23F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture1.isMovable());
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals(0, (int)homePieceOfFurniture1.getColor());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertEquals((-902.196F), homePieceOfFurniture1.getX(), 0.01F);
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture1.getWidth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(151.23F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture1.isVisible());
      assertNull(homePieceOfFurniture1.getShininess());
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture1.getName());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      String string0 = homePieceOfFurniture1.getCatalogId();
      assertTrue(integer2.equals((Object)integer0));
      assertFalse(integer2.equals((Object)integer1));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertNull(string0);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(151.23F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(151.23F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture1.isMovable());
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals(0, (int)homePieceOfFurniture1.getColor());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertEquals((-902.196F), homePieceOfFurniture1.getX(), 0.01F);
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture1.getWidth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(151.23F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture1.isVisible());
      assertNull(homePieceOfFurniture1.getShininess());
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture1.getName());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[1] = 1689.4241F;
      floatArray0[2] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[8][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("I2E;", (Content) null, (Content) null, (-1088.683F), 1689.4241F, 1689.4241F, 0.0F, false, false, integer0, floatArray1, true, (-1650.44F), false);
      assertNotNull(catalogPieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1088.683F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1088.683F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals((-544.3415F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(1689.4241F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-1088.683F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8, floatArray1.length);
      
      homePieceOfFurniture0.setDepth(1.0F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1088.683F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals((-544.3415F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-1088.683F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8, floatArray1.length);
      
      homePieceOfFurniture0.setNameVisible(false);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1088.683F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals((-544.3415F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-1088.683F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8, floatArray1.length);
      
      homePieceOfFurniture0.setWidth(1986.3317F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1088.683F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals((-544.3415F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(1986.3317F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8, floatArray1.length);
      
      boolean boolean0 = homePieceOfFurniture0.isVisible();
      assertTrue(boolean0);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1088.683F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals((-544.3415F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(1986.3317F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8, floatArray1.length);
      
      homePieceOfFurniture0.setName("");
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1088.683F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals((-544.3415F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(1986.3317F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8, floatArray1.length);
      
      float float0 = homePieceOfFurniture0.getY();
      assertEquals(844.71204F, float0, 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1088.683F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals((-544.3415F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(1986.3317F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, (-1291.6161F), 1.0F, 8192.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(9, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setNameVisible(true);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setModelMirrored(false);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(9, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[1] = 1689.4241F;
      floatArray0[2] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[8][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("I2E;", (Content) null, (Content) null, (-1097.6671F), 1689.4241F, 1689.4241F, 8192.0F, false, false, integer0, floatArray1, false, (-1650.44F), true);
      assertNotNull(catalogPieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals((-1097.6671F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(1689.4241F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(844.71204F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8, floatArray1.length);
      
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("I2E;");
      assertNotNull(furnitureCategory0);
      assertEquals("I2E;", furnitureCategory0.getName());
      assertEquals(0, furnitureCategory0.getFurnitureCount());
      
      catalogPieceOfFurniture0.setCategory(furnitureCategory0);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals("I2E;", furnitureCategory0.getName());
      assertEquals(0, furnitureCategory0.getFurnitureCount());
      assertEquals(8, floatArray1.length);
      
      homePieceOfFurniture0.setY(1689.4241F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals((-1097.6671F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(1689.4241F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(1689.4241F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8, floatArray1.length);
      
      homePieceOfFurniture0.setDepth(1.0F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals((-1097.6671F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(1689.4241F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8, floatArray1.length);
      
      homePieceOfFurniture0.setNameVisible(true);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals((-1097.6671F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(1689.4241F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8, floatArray1.length);
      
      homePieceOfFurniture0.setWidth(1986.3317F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(1986.3317F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(1689.4241F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8, floatArray1.length);
      
      boolean boolean0 = homePieceOfFurniture0.isTopRightPointAt(1.0F, 1689.4241F, 422.46924F);
      assertFalse(boolean0);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(1986.3317F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(1689.4241F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8, floatArray1.length);
      
      boolean boolean1 = homePieceOfFurniture0.isTexturable();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(1986.3317F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(1689.4241F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8, floatArray1.length);
      
      boolean boolean2 = homePieceOfFurniture0.isBottomRightPointAt(0.5F, 321.20578F, 422.46924F);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(1986.3317F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(1689.4241F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8, floatArray1.length);
      
      boolean boolean3 = homePieceOfFurniture0.isBackFaceShown();
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(1986.3317F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(1689.4241F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 0.0F, (-1291.6161F), 1.0F, 0.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(9, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setDepth(0.3926991F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      boolean boolean0 = homePieceOfFurniture0.isVisible();
      assertTrue(boolean0);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setName("");
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      Integer integer1 = new Integer(8192);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals(8192, (int)integer1);
      
      homePieceOfFurniture0.setColor(integer1);
      assertTrue(integer0.equals((Object)integer1));
      assertTrue(integer1.equals((Object)integer0));
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(9, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Integer integer0 = new Integer((-788));
      assertNotNull(integer0);
      assertEquals((-788), (int)integer0);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("wQB{C5P b|^<", (Content) null, (Content) null, 1152.91F, 0.5F, 1152.91F, false, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("wQB{C5P b|^<", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1152.91F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1152.91F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("wQB{C5P b|^<", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1152.91F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1152.91F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1152.91F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.25F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("wQB{C5P b|^<", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(576.455F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(1152.91F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      
      homePieceOfFurniture0.setWidth(469.5F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("wQB{C5P b|^<", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1152.91F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1152.91F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(469.5F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1152.91F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.25F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("wQB{C5P b|^<", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(576.455F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      
      homePieceOfFurniture0.setWidth(469.5F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("wQB{C5P b|^<", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1152.91F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1152.91F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(469.5F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1152.91F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.25F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("wQB{C5P b|^<", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(576.455F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      
      boolean boolean0 = homePieceOfFurniture0.isTopRightPointAt(1152.91F, (-1.0F), (-2215.7876F));
      assertTrue(boolean0);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("wQB{C5P b|^<", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1152.91F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1152.91F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(469.5F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1152.91F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.25F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("wQB{C5P b|^<", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(576.455F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertNotNull(homePieceOfFurniture1);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("wQB{C5P b|^<", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1152.91F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1152.91F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(469.5F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1152.91F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.25F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("wQB{C5P b|^<", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(576.455F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals("wQB{C5P b|^<", homePieceOfFurniture1.getName());
      assertEquals(1152.91F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertEquals(469.5F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getShininess());
      assertEquals(0.5F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isMovable());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertEquals(576.455F, homePieceOfFurniture1.getX(), 0.01F);
      assertNull(homePieceOfFurniture1.getColor());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertNull(homePieceOfFurniture1.getDescription());
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      boolean boolean1 = homePieceOfFurniture1.isBackFaceShown();
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("wQB{C5P b|^<", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1152.91F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1152.91F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(469.5F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1152.91F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.25F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("wQB{C5P b|^<", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(576.455F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals("wQB{C5P b|^<", homePieceOfFurniture1.getName());
      assertEquals(1152.91F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertEquals(469.5F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getShininess());
      assertEquals(0.5F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isMovable());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertEquals(576.455F, homePieceOfFurniture1.getX(), 0.01F);
      assertNull(homePieceOfFurniture1.getColor());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertNull(homePieceOfFurniture1.getDescription());
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      boolean boolean2 = homePieceOfFurniture1.isBottomRightPointAt(469.5F, (-788), (-1.0F));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("wQB{C5P b|^<", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1152.91F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1152.91F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(469.5F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1152.91F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.25F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("wQB{C5P b|^<", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(576.455F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals("wQB{C5P b|^<", homePieceOfFurniture1.getName());
      assertEquals(1152.91F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertEquals(469.5F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getShininess());
      assertEquals(0.5F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isMovable());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertEquals(576.455F, homePieceOfFurniture1.getX(), 0.01F);
      assertNull(homePieceOfFurniture1.getColor());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertNull(homePieceOfFurniture1.getDescription());
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      
      boolean boolean3 = homePieceOfFurniture1.isBottomLeftPointAt((-2215.7876F), 1152.91F, (-2215.7876F));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(0.5F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("wQB{C5P b|^<", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1152.91F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1152.91F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(469.5F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1152.91F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.25F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("wQB{C5P b|^<", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(576.455F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals("wQB{C5P b|^<", homePieceOfFurniture1.getName());
      assertEquals(1152.91F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertEquals(469.5F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getShininess());
      assertEquals(0.5F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isMovable());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertEquals(576.455F, homePieceOfFurniture1.getX(), 0.01F);
      assertNull(homePieceOfFurniture1.getColor());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertEquals(0.25F, homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertNull(homePieceOfFurniture1.getDescription());
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      assertFalse(boolean0);
      
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("?Qu}um", (Content) null, (Content) null, 8192.0F, 8192.0F, 1.0F, (-1291.6161F), false, true, integer0, floatArray1, false, 173.2F, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(9, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals("?Qu}um", homePieceOfFurniture0.getName());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setNameVisible(false);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals("?Qu}um", homePieceOfFurniture0.getName());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setModelMirrored(true);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals("?Qu}um", homePieceOfFurniture0.getName());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setShininess((Float) 0.0F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals("?Qu}um", homePieceOfFurniture0.getName());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getShininess(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(9, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("?Qu}um", (Content) null, (Content) null, 8192.0F, 8192.0F, 1.0F, (-1291.6161F), false, true, integer0, floatArray1, false, 173.2F, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(9, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals("?Qu}um", homePieceOfFurniture0.getName());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setNameVisible(false);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals("?Qu}um", homePieceOfFurniture0.getName());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setModelMirrored(true);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals("?Qu}um", homePieceOfFurniture0.getName());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setNameXOffset((-1.0F));
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals("?Qu}um", homePieceOfFurniture0.getName());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(9, floatArray1.length);
      
      float float0 = homePieceOfFurniture0.getElevation();
      assertEquals((-1291.6161F), float0, 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals("?Qu}um", homePieceOfFurniture0.getName());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(9, floatArray1.length);
      
      CatalogTexture catalogTexture0 = new CatalogTexture("?Qu}um", "NAME", (Content) null, 4177.2505F, 0.5F, "", true);
      assertNotNull(catalogTexture0);
      assertEquals("NAME", catalogTexture0.getName());
      assertEquals("?Qu}um", catalogTexture0.getId());
      assertEquals(4177.2505F, catalogTexture0.getWidth(), 0.01F);
      assertEquals("", catalogTexture0.getCreator());
      assertTrue(catalogTexture0.isModifiable());
      assertEquals(0.5F, catalogTexture0.getHeight(), 0.01F);
      
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      assertNotNull(homeTexture0);
      assertEquals("NAME", catalogTexture0.getName());
      assertEquals("?Qu}um", catalogTexture0.getId());
      assertEquals(4177.2505F, catalogTexture0.getWidth(), 0.01F);
      assertEquals("", catalogTexture0.getCreator());
      assertTrue(catalogTexture0.isModifiable());
      assertEquals(0.5F, catalogTexture0.getHeight(), 0.01F);
      assertTrue(homeTexture0.isLeftToRightOriented());
      assertEquals(4177.2505F, homeTexture0.getWidth(), 0.01F);
      assertEquals("NAME", homeTexture0.getName());
      assertEquals(0.5F, homeTexture0.getHeight(), 0.01F);
      
      homePieceOfFurniture0.setTexture(homeTexture0);
      assertEquals("NAME", catalogTexture0.getName());
      assertEquals("?Qu}um", catalogTexture0.getId());
      assertEquals(4177.2505F, catalogTexture0.getWidth(), 0.01F);
      assertEquals("", catalogTexture0.getCreator());
      assertTrue(catalogTexture0.isModifiable());
      assertEquals(0.5F, catalogTexture0.getHeight(), 0.01F);
      assertTrue(homeTexture0.isLeftToRightOriented());
      assertEquals(4177.2505F, homeTexture0.getWidth(), 0.01F);
      assertEquals("NAME", homeTexture0.getName());
      assertEquals(0.5F, homeTexture0.getHeight(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals("?Qu}um", homePieceOfFurniture0.getName());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(9, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[][] floatArray0 = new float[5][0];
      float[] floatArray1 = new float[9];
      floatArray1[0] = 1689.4241F;
      floatArray1[1] = 1689.4241F;
      floatArray1[2] = 0.0F;
      floatArray1[3] = 0.0F;
      floatArray1[4] = (float) 8192;
      floatArray1[5] = (float) 8192;
      floatArray1[6] = 1689.4241F;
      floatArray1[7] = 1689.4241F;
      floatArray1[8] = (float) 8192;
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[7];
      assertFalse(floatArray2.equals((Object)floatArray1));
      
      floatArray2[0] = 0.0F;
      floatArray2[1] = (float) 8192;
      floatArray2[2] = (float) 8192;
      floatArray2[3] = 0.0F;
      floatArray2[4] = (float) 8192;
      floatArray2[5] = (-1803.5774F);
      floatArray2[6] = (float) 8192;
      floatArray0[1] = floatArray2;
      float[] floatArray3 = new float[6];
      assertFalse(floatArray3.equals((Object)floatArray2));
      assertFalse(floatArray3.equals((Object)floatArray1));
      
      floatArray3[0] = 1689.4241F;
      floatArray3[1] = (-1803.5774F);
      floatArray3[2] = (float) 8192;
      floatArray3[3] = (-1803.5774F);
      floatArray3[4] = (-1803.5774F);
      floatArray3[5] = (float) 8192;
      floatArray0[2] = floatArray3;
      float[] floatArray4 = new float[9];
      assertFalse(floatArray4.equals((Object)floatArray3));
      assertFalse(floatArray4.equals((Object)floatArray1));
      assertFalse(floatArray4.equals((Object)floatArray2));
      
      floatArray4[0] = 1689.4241F;
      floatArray4[1] = 0.0F;
      floatArray4[2] = 0.0F;
      floatArray4[3] = 0.0F;
      floatArray4[4] = 1689.4241F;
      floatArray4[5] = (-1803.5774F);
      floatArray4[6] = 1689.4241F;
      floatArray4[7] = 1689.4241F;
      floatArray4[8] = (-1803.5774F);
      floatArray0[3] = floatArray4;
      float[] floatArray5 = new float[2];
      assertFalse(floatArray5.equals((Object)floatArray4));
      assertFalse(floatArray5.equals((Object)floatArray2));
      assertFalse(floatArray5.equals((Object)floatArray3));
      assertFalse(floatArray5.equals((Object)floatArray1));
      
      floatArray5[0] = 0.0F;
      floatArray5[1] = 0.0F;
      floatArray0[4] = floatArray5;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 0.0F, 1689.4241F, 1689.4241F, 1689.4241F, false, false, integer0, floatArray0, true, 8192.0F, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(5, floatArray0.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(1689.4241F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(5, floatArray0.length);
      
      homePieceOfFurniture0.setNameVisible(true);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(5, floatArray0.length);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[1] = 1689.4241F;
      floatArray0[2] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[8][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("I2E;", (Content) null, (Content) null, (-1097.6671F), 1689.4241F, 1689.4241F, 8192.0F, false, false, integer0, floatArray1, true, (-1650.44F), false);
      assertNotNull(catalogPieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(1689.4241F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals((-1097.6671F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8, floatArray1.length);
      
      homePieceOfFurniture0.setWidth(8192);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(1689.4241F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8, floatArray1.length);
      
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("I2E;");
      assertNotNull(furnitureCategory0);
      assertEquals("I2E;", furnitureCategory0.getName());
      assertEquals(0, furnitureCategory0.getFurnitureCount());
      
      catalogPieceOfFurniture0.setCategory(furnitureCategory0);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals("I2E;", furnitureCategory0.getName());
      assertEquals(0, furnitureCategory0.getFurnitureCount());
      assertEquals(8, floatArray1.length);
      
      homePieceOfFurniture0.setY(1689.4241F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(1689.4241F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8, floatArray1.length);
      
      homePieceOfFurniture0.setDepth(1.0F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8, floatArray1.length);
      
      homePieceOfFurniture0.setNameVisible(true);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8, floatArray1.length);
      
      homePieceOfFurniture0.setWidth(1986.3317F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(1986.3317F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8, floatArray1.length);
      
      homePieceOfFurniture0.setDepth(1689.4241F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(1986.3317F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(1689.4241F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8, floatArray1.length);
      
      homePieceOfFurniture0.setVisible(false);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(1986.3317F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(1689.4241F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8, floatArray1.length);
      
      boolean boolean0 = homePieceOfFurniture0.isTopRightPointAt((-1.0F), 1.0F, (-37.35871F));
      assertFalse(boolean0);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(1986.3317F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(1689.4241F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8, floatArray1.length);
      
      boolean boolean1 = homePieceOfFurniture0.isTexturable();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(1986.3317F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(1689.4241F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8, floatArray1.length);
      
      float float0 = homePieceOfFurniture0.getNameAngle();
      assertEquals(0.0F, float0, 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(1986.3317F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(1689.4241F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8, floatArray1.length);
      
      homePieceOfFurniture0.setVisible(true);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1650.44F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(1986.3317F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(1689.4241F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[2] = (float) 8192;
      floatArray0[6] = 1689.7263F;
      float[][] floatArray1 = new float[8][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("I2E;", (Content) null, (Content) null, (-1097.6671F), 0.0F, 1689.7263F, 8192.0F, false, false, integer0, floatArray1, true, 1689.7263F, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.7263F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1689.7263F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.7263F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1689.7263F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals((-1097.6671F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1689.7263F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8, floatArray1.length);
      
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("I2E;");
      assertNotNull(furnitureCategory0);
      assertEquals("I2E;", furnitureCategory0.getName());
      assertEquals(0, furnitureCategory0.getFurnitureCount());
      
      catalogPieceOfFurniture0.setCategory(furnitureCategory0);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.7263F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1689.7263F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals("I2E;", furnitureCategory0.getName());
      assertEquals(0, furnitureCategory0.getFurnitureCount());
      assertEquals(8, floatArray1.length);
      
      homePieceOfFurniture0.setDepth(1.0F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.7263F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1689.7263F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals((-1097.6671F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1689.7263F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8, floatArray1.length);
      
      homePieceOfFurniture0.setNameVisible(true);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.7263F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1689.7263F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals((-1097.6671F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1689.7263F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8, floatArray1.length);
      
      boolean boolean0 = homePieceOfFurniture0.isTopRightPointAt(1.0F, 1689.7263F, 422.46924F);
      assertFalse(boolean0);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.7263F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1689.7263F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals((-1097.6671F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1689.7263F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8, floatArray1.length);
      
      boolean boolean1 = homePieceOfFurniture0.isTexturable();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.7263F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1689.7263F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals((-1097.6671F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1689.7263F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8, floatArray1.length);
      
      boolean boolean2 = homePieceOfFurniture0.isBottomRightPointAt(0.5F, 321.20578F, 422.46924F);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.7263F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1689.7263F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals((-1097.6671F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1689.7263F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8, floatArray1.length);
      
      boolean boolean3 = homePieceOfFurniture0.isTopLeftPointAt(1.0F, 0.0F, 0.0F);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.7263F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1689.7263F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals((-1097.6671F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1689.7263F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8, floatArray1.length);
      
      float float0 = homePieceOfFurniture0.getY();
      assertEquals(0.0F, float0, 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.7263F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals((-1097.6671F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1689.7263F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals("I2E;", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals((-1097.6671F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1689.7263F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("I2E;", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals((-548.83356F), homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      assertFalse(boolean0);
      
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("?Qu}um", (Content) null, (Content) null, 8192.0F, 8192.0F, 1.0F, (-1291.6161F), false, true, integer0, floatArray1, false, 173.2F, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(9, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals("?Qu}um", homePieceOfFurniture0.getName());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setNameVisible(false);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals("?Qu}um", homePieceOfFurniture0.getName());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setModelMirrored(true);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals("?Qu}um", homePieceOfFurniture0.getName());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setShininess((Float) 0.0F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getShininess(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals("?Qu}um", homePieceOfFurniture0.getName());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(9, floatArray1.length);
      
      BigDecimal bigDecimal0 = homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      assertNull(bigDecimal0);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getShininess(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals("?Qu}um", homePieceOfFurniture0.getName());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(9, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("wo@/k", (Content) null, (Content) null, 18, 18, 18, true, true);
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(18.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(18.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("wo@/k", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(18.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(18.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(18.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("wo@/k", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(18.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(18.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals("wo@/k", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(9.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(18.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(18.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(9.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertNotNull(homePieceOfFurniture1);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(18.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(18.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("wo@/k", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(18.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(18.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals("wo@/k", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(9.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(18.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(18.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(9.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(9.0F, homePieceOfFurniture1.getX(), 0.01F);
      assertEquals(9.0F, homePieceOfFurniture1.getY(), 0.01F);
      assertEquals("wo@/k", homePieceOfFurniture1.getName());
      assertNull(homePieceOfFurniture1.getShininess());
      assertEquals(18.0F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertNull(homePieceOfFurniture1.getColor());
      assertTrue(homePieceOfFurniture1.isMovable());
      assertEquals(18.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture1.getCurrency());
      assertEquals(18.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      TextStyle textStyle0 = homePieceOfFurniture1.getNameStyle();
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertNull(textStyle0);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(18.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(18.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("wo@/k", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(18.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(18.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals("wo@/k", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(9.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(18.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(18.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(9.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(9.0F, homePieceOfFurniture1.getX(), 0.01F);
      assertEquals(9.0F, homePieceOfFurniture1.getY(), 0.01F);
      assertEquals("wo@/k", homePieceOfFurniture1.getName());
      assertNull(homePieceOfFurniture1.getShininess());
      assertEquals(18.0F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertNull(homePieceOfFurniture1.getColor());
      assertTrue(homePieceOfFurniture1.isMovable());
      assertEquals(18.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture1.getCurrency());
      assertEquals(18.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      HomeTexture homeTexture0 = homePieceOfFurniture1.getTexture();
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertNull(homeTexture0);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(18.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(18.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("wo@/k", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(18.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(18.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals("wo@/k", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(9.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(18.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(18.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(9.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(9.0F, homePieceOfFurniture1.getX(), 0.01F);
      assertEquals(9.0F, homePieceOfFurniture1.getY(), 0.01F);
      assertEquals("wo@/k", homePieceOfFurniture1.getName());
      assertNull(homePieceOfFurniture1.getShininess());
      assertEquals(18.0F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertNull(homePieceOfFurniture1.getColor());
      assertTrue(homePieceOfFurniture1.isMovable());
      assertEquals(18.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture1.getCurrency());
      assertEquals(18.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      float[][] floatArray0 = new float[7][5];
      Integer integer0 = Integer.getInteger("W]^s+");
      assertNull(integer0);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("W]^s+", (Content) null, (Content) null, 0.0F, 1689.4241F, 2.0F, 4104.5F, true, false, (Integer) null, floatArray0, false, 4.5310254F, true);
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(2.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(4104.5F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("W]^s+", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(7, floatArray0.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(2.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(4104.5F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("W]^s+", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(4104.5F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(2.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("W]^s+", homePieceOfFurniture0.getName());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(4104.5F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(7, floatArray0.length);
      
      float float0 = homePieceOfFurniture0.getNameYOffset();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(2.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(4104.5F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("W]^s+", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(4104.5F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(2.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("W]^s+", homePieceOfFurniture0.getName());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(4104.5F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(7, floatArray0.length);
      
      boolean boolean0 = homePieceOfFurniture0.isPointAt(2170.79F, 2.3996856F, 867.532F);
      assertFalse(boolean0);
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(2.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(4104.5F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("W]^s+", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(4104.5F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(2.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("W]^s+", homePieceOfFurniture0.getName());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(4104.5F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(7, floatArray0.length);
      
      Level level0 = homePieceOfFurniture0.getLevel();
      assertNull(level0);
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(2.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(4104.5F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("W]^s+", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(4104.5F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(2.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("W]^s+", homePieceOfFurniture0.getName());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(4104.5F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(7, floatArray0.length);
      
      boolean boolean1 = homePieceOfFurniture0.isAtLevel((Level) null);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(2.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(4104.5F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("W]^s+", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(4104.5F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(2.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("W]^s+", homePieceOfFurniture0.getName());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(4104.5F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(7, floatArray0.length);
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Integer integer0 = new Integer(13);
      assertNotNull(integer0);
      assertEquals(13, (int)integer0);
      
      Integer integer1 = new Integer((-584));
      assertFalse(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals((-584), (int)integer1);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("work", (Content) null, (Content) null, 0.5F, 2852.3142F, 2.0F, false, true);
      assertNotNull(catalogPieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(2852.3142F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals("work", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(2.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.5F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(2852.3142F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals("work", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(2.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.5F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(2852.3142F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(2.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.25F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(1426.1571F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals("work", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("@LXr=k~");
      assertNotNull(furnitureCategory0);
      assertEquals("@LXr=k~", furnitureCategory0.getName());
      assertEquals(0, furnitureCategory0.getFurnitureCount());
      
      catalogPieceOfFurniture0.setCategory(furnitureCategory0);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(2852.3142F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals("work", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(2.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.5F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("@LXr=k~", furnitureCategory0.getName());
      assertEquals(0, furnitureCategory0.getFurnitureCount());
      
      homePieceOfFurniture0.setY(2.0F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(2852.3142F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals("work", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(2.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.5F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(2852.3142F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(2.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.25F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(2.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals("work", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      
      homePieceOfFurniture0.setDepth(0.0F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(2852.3142F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals("work", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(2.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.5F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(2.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.25F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(2.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals("work", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      
      homePieceOfFurniture0.setNameVisible(true);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(2852.3142F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals("work", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(2.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.5F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(2.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.25F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(2.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals("work", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      
      homePieceOfFurniture0.setWidth(1558.1039F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(2852.3142F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals("work", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(2.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.5F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1558.1039F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(2.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.25F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(2.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals("work", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      
      boolean boolean0 = homePieceOfFurniture0.isTopRightPointAt(2.0F, (-359.393F), 2852.3142F);
      assertFalse(boolean0);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(2852.3142F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals("work", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(2.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.5F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1558.1039F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(2.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.25F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(2.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals("work", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      
      boolean boolean1 = homePieceOfFurniture0.isTexturable();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(2852.3142F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals("work", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(2.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.5F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1558.1039F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(2.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.25F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(2.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals("work", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      
      boolean boolean2 = homePieceOfFurniture0.isBackFaceShown();
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(2852.3142F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals("work", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(2.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.5F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1558.1039F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(2.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.25F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(2.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals("work", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      
      boolean boolean3 = homePieceOfFurniture0.isBottomRightPointAt(13, 8192.0F, (-3866.64F));
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(2852.3142F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals("work", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(2.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.5F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1558.1039F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(2.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.25F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(2.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals("work", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 0.0F, (-1291.6161F), 1.0F, 0.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setDepth(0.3926991F);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(9, floatArray1.length);
      
      boolean boolean0 = homePieceOfFurniture0.isVisible();
      assertTrue(boolean0);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setName("");
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setTexture((HomeTexture) null);
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(9, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      Integer integer1 = new Integer((-715827882));
      assertFalse(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals((-715827882), (int)integer1);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("work", (Content) null, (Content) null, 8192, 8192, 2.0F, false, true);
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("work", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(2.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("work", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(2.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(2.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals("work", homePieceOfFurniture0.getName());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      
      homePieceOfFurniture0.setDescription("work");
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("work", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(2.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(2.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("work", homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals("work", homePieceOfFurniture0.getName());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      assertFalse(linkedList0.contains(homePieceOfFurniture0));
      
      boolean boolean0 = linkedList0.add(homePieceOfFurniture0);
      assertTrue(boolean0);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("work", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(2.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(2.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("work", homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals("work", homePieceOfFurniture0.getName());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(1, linkedList0.size());
      assertTrue(linkedList0.contains(homePieceOfFurniture0));
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "] L*TF.}e?T");
      assertNotNull(homeFurnitureGroup0);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(8192.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(4096.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(4096.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(8192.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals("] L*TF.}e?T", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(2.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(linkedList0.contains(homePieceOfFurniture0));
      
      homeFurnitureGroup0.setNameVisible(true);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(8192.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(4096.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(4096.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(8192.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals("] L*TF.}e?T", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(2.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(linkedList0.contains(homePieceOfFurniture0));
      
      HomeFurnitureGroup homeFurnitureGroup1 = homeFurnitureGroup0.clone();
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertNotNull(homeFurnitureGroup1);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(8192.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(4096.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(4096.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(8192.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals("] L*TF.}e?T", homeFurnitureGroup0.getName());
      assertNull(homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(2.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(8192.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertFalse(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(2.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNull(homeFurnitureGroup1.getColor());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(8192.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals("] L*TF.}e?T", homeFurnitureGroup1.getName());
      assertEquals(4096.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertTrue(linkedList0.contains(homePieceOfFurniture0));
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      homeFurnitureGroup0.setDescription("u`?7\"CBAsR");
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertEquals(1, linkedList0.size());
      assertEquals("u`?7\"CBAsR", homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(8192.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(4096.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(4096.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(8192.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals("] L*TF.}e?T", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(2.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertTrue(linkedList0.contains(homePieceOfFurniture0));
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      
      homeFurnitureGroup1.setNameVisible(true);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertEquals(1, linkedList0.size());
      assertEquals("u`?7\"CBAsR", homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(8192.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(4096.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(4096.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(8192.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals("] L*TF.}e?T", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(2.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(8192.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertFalse(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(2.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNull(homeFurnitureGroup1.getColor());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(8192.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals("] L*TF.}e?T", homeFurnitureGroup1.getName());
      assertEquals(4096.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertTrue(linkedList0.contains(homePieceOfFurniture0));
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      boolean boolean1 = homeFurnitureGroup1.isBottomLeftPointAt((-1306.2F), 2.0F, 1.0F);
      assertFalse(homeFurnitureGroup0.equals((Object)homeFurnitureGroup1));
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertEquals(1, linkedList0.size());
      assertEquals("u`?7\"CBAsR", homeFurnitureGroup0.getDescription());
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(8192.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(4096.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(4096.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(8192.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals("] L*TF.}e?T", homeFurnitureGroup0.getName());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertFalse(homeFurnitureGroup0.isMovable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(2.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertTrue(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup0.getShininess());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(8192.0F, homeFurnitureGroup1.getDepth(), 0.01F);
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isResizable());
      assertNull(homeFurnitureGroup1.getDescription());
      assertFalse(homeFurnitureGroup1.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(2.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNull(homeFurnitureGroup1.getColor());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertFalse(homeFurnitureGroup1.isMovable());
      assertEquals(8192.0F, homeFurnitureGroup1.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isNameVisible());
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertEquals("] L*TF.}e?T", homeFurnitureGroup1.getName());
      assertEquals(4096.0F, homeFurnitureGroup1.getY(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertEquals(4096.0F, homeFurnitureGroup1.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getShininess());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertTrue(linkedList0.contains(homePieceOfFurniture0));
      assertNotSame(homeFurnitureGroup0, homeFurnitureGroup1);
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      
      homePieceOfFurniture0.setNameVisible(false);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("work", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(2.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(2.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("work", homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals("work", homePieceOfFurniture0.getName());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      
      homePieceOfFurniture0.setWidth(8192);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("work", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(2.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(2.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("work", homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals("work", homePieceOfFurniture0.getName());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 8169, 8169, 8169, false, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      
      boolean boolean0 = homePieceOfFurniture0.isPointAt(806.8257F, 8169, 8169);
      assertTrue(boolean0);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[1] = 1689.4241F;
      floatArray0[2] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[8][5];
      floatArray1[0] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      Integer integer1 = new Integer(8192);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals(8192, (int)integer1);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("W]^s+", (Content) null, (Content) null, 1689.4241F, 0.0F, 300.84F, (-1.0F), false, true, integer1, floatArray1, false, (-37.35871F), false);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(300.84F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-37.35871F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals("W]^s+", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(homePieceOfFurniture0);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(300.84F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-37.35871F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals("W]^s+", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(300.84F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals("W]^s+", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-1.0F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8, floatArray1.length);
      
      float float0 = homePieceOfFurniture0.getNameYOffset();
      assertTrue(integer1.equals((Object)integer0));
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(300.84F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-37.35871F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals("W]^s+", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(300.84F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals("W]^s+", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-1.0F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8, floatArray1.length);
      
      homePieceOfFurniture0.setWidth(1689.4241F);
      assertTrue(integer1.equals((Object)integer0));
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(300.84F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-37.35871F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals("W]^s+", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(300.84F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals("W]^s+", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-1.0F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8, floatArray1.length);
      
      boolean boolean0 = homePieceOfFurniture0.isNameCenterPointAt(1689.4241F, (-1534.0F), (-1534.0F));
      assertTrue(integer1.equals((Object)integer0));
      assertFalse(boolean0);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(300.84F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-37.35871F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals("W]^s+", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(300.84F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals("W]^s+", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-1.0F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("Z", (Content) null, (Content) null, 8169, 8169, 614.572F, true, true);
      assertNotNull(catalogPieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(614.572F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals("Z", catalogPieceOfFurniture0.getName());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(614.572F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals("Z", catalogPieceOfFurniture0.getName());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals("Z", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(614.572F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      
      boolean boolean0 = homePieceOfFurniture0.isTopLeftPointAt(4156.83F, 3.4028235E38F, 3.4028235E38F);
      assertFalse(boolean0);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(614.572F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals("Z", catalogPieceOfFurniture0.getName());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals("Z", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(614.572F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      
      BigDecimal bigDecimal0 = homePieceOfFurniture0.getValueAddedTax();
      assertNull(bigDecimal0);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(614.572F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals("Z", catalogPieceOfFurniture0.getName());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals("Z", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(614.572F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      
      homePieceOfFurniture0.setAngle(4156.83F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(614.572F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals("Z", catalogPieceOfFurniture0.getName());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(3.6445901F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals("Z", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(614.572F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("Z", (Content) null, (Content) null, 8169, 8169, 631.1228F, true, true);
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("Z", catalogPieceOfFurniture0.getName());
      assertEquals(631.1228F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("Z", catalogPieceOfFurniture0.getName());
      assertEquals(631.1228F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(631.1228F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals("Z", homePieceOfFurniture0.getName());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      
      boolean boolean0 = homePieceOfFurniture0.isBottomRightPointAt(3.4028235E38F, 8169, 631.1228F);
      assertFalse(boolean0);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("Z", catalogPieceOfFurniture0.getName());
      assertEquals(631.1228F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(631.1228F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals("Z", homePieceOfFurniture0.getName());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      
      homePieceOfFurniture0.setNameAngle(0.0F);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("Z", catalogPieceOfFurniture0.getName());
      assertEquals(631.1228F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(631.1228F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals("Z", homePieceOfFurniture0.getName());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      
      String string0 = homePieceOfFurniture0.getCatalogId();
      assertNull(string0);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("Z", catalogPieceOfFurniture0.getName());
      assertEquals(631.1228F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(631.1228F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals("Z", homePieceOfFurniture0.getName());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture((String) null, (Content) null, (Content) null, 4.5310254F, 709.326F, 0.0F, false, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(4.5310254F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(709.326F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(354.663F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(2.2655127F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getDescription());
      
      homePieceOfFurniture0.setDescription((String) null);
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(4.5310254F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(709.326F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(354.663F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(2.2655127F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getDescription());
      
      homePieceOfFurniture0.move(0.0F, 2946.6F);
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(4.5310254F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(709.326F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(2.2655127F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(3301.2632F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      
      Level level0 = new Level("yr@boj_/Ty", 0.0F, 1.0F, 2117.963F);
      assertNotNull(level0);
      assertEquals(2117.963F, level0.getHeight(), 0.01F);
      assertEquals(0.0F, level0.getElevation(), 0.01F);
      assertEquals(1.0F, level0.getFloorThickness(), 0.01F);
      assertTrue(level0.isVisible());
      
      level0.setVisible(false);
      assertFalse(level0.isVisible());
      assertEquals(2117.963F, level0.getHeight(), 0.01F);
      assertEquals(0.0F, level0.getElevation(), 0.01F);
      assertEquals(1.0F, level0.getFloorThickness(), 0.01F);
      
      homePieceOfFurniture0.setLevel(level0);
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(4.5310254F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(709.326F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(2.2655127F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(3301.2632F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(level0.isVisible());
      assertEquals(2117.963F, level0.getHeight(), 0.01F);
      assertEquals(0.0F, level0.getElevation(), 0.01F);
      assertEquals(1.0F, level0.getFloorThickness(), 0.01F);
      
      boolean boolean0 = homePieceOfFurniture0.isBottomLeftPointAt(4846.0F, 2.0F, 4.5310254F);
      assertFalse(boolean0);
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(4.5310254F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(709.326F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(2.2655127F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(3301.2632F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      
      homePieceOfFurniture0.setX((-1.0F));
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(4.5310254F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(709.326F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(3301.2632F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      
      homePieceOfFurniture0.setNameVisible(false);
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(4.5310254F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(709.326F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(3301.2632F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      
      homePieceOfFurniture0.setWidth(1798.2F);
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(1798.2F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(709.326F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(3301.2632F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.ELEVATION;
      Comparator<HomePieceOfFurniture> comparator0 = HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      assertNotNull(comparator0);
      
      Integer integer0 = homePieceOfFurniture0.getColor();
      assertNull(integer0);
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(1798.2F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(709.326F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(3301.2632F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      
      homePieceOfFurniture0.setDepth(1798.2F);
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(1798.2F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(3301.2632F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(1798.2F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      
      Level level1 = homePieceOfFurniture0.getLevel();
      assertNotNull(level1);
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(1798.2F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(3301.2632F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(1798.2F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(level1.isVisible());
      assertEquals(1.0F, level1.getFloorThickness(), 0.01F);
      assertEquals(2117.963F, level1.getHeight(), 0.01F);
      assertEquals(0.0F, level1.getElevation(), 0.01F);
      assertSame(level1, level0);
      
      String string0 = homePieceOfFurniture0.getCurrency();
      assertNull(string0);
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(1798.2F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(3301.2632F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(1798.2F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 8169, 8169, 8169, false, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      
      boolean boolean0 = homePieceOfFurniture0.isNameCenterPointAt(4156.993F, 274.03452F, 274.03452F);
      assertFalse(boolean0);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      
      Level level0 = homePieceOfFurniture0.getLevel();
      assertNull(level0);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      
      float float0 = homePieceOfFurniture0.getDepth();
      assertEquals(8169.0F, float0, 0.01F);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 1.0F, (-1291.6161F), 8192.0F, 8192, false, true, integer0, floatArray1, true, (-1291.6161F), true);
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(9, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setDescription("cBwI>uRmvD|t#(h");
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals("cBwI>uRmvD|t#(h", homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setNameVisible(true);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals("cBwI>uRmvD|t#(h", homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setWidth(8192.0F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals("cBwI>uRmvD|t#(h", homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(9, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "work");
      assertFalse(boolean0);
      
      Integer integer1 = new Integer(8192);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals(8192, (int)integer1);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("1SyjFPv9=&P", (Content) null, (Content) null, 1.0F, (-1804.392F), (-1804.392F), 517.9619F, true, true, integer1, (float[][]) null, false, 2.0F, false);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(2.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(517.9619F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(homePieceOfFurniture0);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(2.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(517.9619F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(1.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals((-1804.392F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertEquals(517.9619F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(517.9619F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals((-902.196F), homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      
      homePieceOfFurniture0.setNameVisible(false);
      assertTrue(integer1.equals((Object)integer0));
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(2.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(517.9619F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(1.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals((-1804.392F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertEquals(517.9619F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(517.9619F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals((-902.196F), homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      
      homePieceOfFurniture0.setModelMirrored(true);
      assertTrue(integer1.equals((Object)integer0));
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(2.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(517.9619F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(1.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals((-1804.392F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertEquals(517.9619F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(517.9619F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals((-902.196F), homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      
      Float float0 = new Float(2854154.6959505677);
      assertNotNull(float0);
      assertEquals(2854154.8F, (float)float0, 0.01F);
      
      homePieceOfFurniture0.setShininess(float0);
      assertTrue(integer1.equals((Object)integer0));
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(2.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(517.9619F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(1.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(2854154.8F, homePieceOfFurniture0.getShininess(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals((-1804.392F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertEquals(517.9619F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(517.9619F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals((-902.196F), homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      
      homePieceOfFurniture0.setNameYOffset(1.0F);
      assertTrue(integer1.equals((Object)integer0));
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(2.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(517.9619F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(1.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(2854154.8F, homePieceOfFurniture0.getShininess(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals((-1804.392F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertEquals(517.9619F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(517.9619F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals((-902.196F), homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      assertTrue(integer1.equals((Object)integer0));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertNotNull(homePieceOfFurniture1);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(2.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(517.9619F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(1.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(2854154.8F, homePieceOfFurniture0.getShininess(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals((-1804.392F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertEquals(517.9619F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(517.9619F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals((-902.196F), homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture1.getDepth(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture1.getName());
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals(517.9619F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertEquals((-1804.392F), homePieceOfFurniture1.getHeight(), 0.01F);
      assertEquals(2854154.8F, homePieceOfFurniture1.getShininess(), 0.01F);
      assertEquals(517.9619F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertEquals(1.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(1.0F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture1.isVisible());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertTrue(homePieceOfFurniture1.isModelMirrored());
      assertEquals((-902.196F), homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertEquals(0.5F, homePieceOfFurniture1.getX(), 0.01F);
      assertTrue(homePieceOfFurniture1.isResizable());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture1.isMovable());
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      homePieceOfFurniture1.setNameXOffset((-1804.392F));
      assertTrue(integer1.equals((Object)integer0));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(2.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(517.9619F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(1.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(2854154.8F, homePieceOfFurniture0.getShininess(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals((-1804.392F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertEquals(517.9619F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(517.9619F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals((-902.196F), homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture1.getDepth(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture1.getName());
      assertEquals((-1804.392F), homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals(517.9619F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertEquals((-1804.392F), homePieceOfFurniture1.getHeight(), 0.01F);
      assertEquals(2854154.8F, homePieceOfFurniture1.getShininess(), 0.01F);
      assertEquals(517.9619F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertEquals(1.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(1.0F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture1.isVisible());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertTrue(homePieceOfFurniture1.isModelMirrored());
      assertEquals((-902.196F), homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertEquals(0.5F, homePieceOfFurniture1.getX(), 0.01F);
      assertTrue(homePieceOfFurniture1.isResizable());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture1.isMovable());
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      Content content0 = homePieceOfFurniture0.getModel();
      assertTrue(integer1.equals((Object)integer0));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertNull(content0);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(2.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(517.9619F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(1.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(2854154.8F, homePieceOfFurniture0.getShininess(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals((-1804.392F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertEquals(517.9619F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(517.9619F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals((-902.196F), homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 8151, 8151, 8151, false, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8151.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(8151.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8151.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8151.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(8151.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8151.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(8151.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8151.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals("~", homePieceOfFurniture0.getName());
      assertEquals(4075.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4075.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8151.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      
      homePieceOfFurniture0.setElevation(1798.2F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(8151.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(8151.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8151.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(8151.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1798.2F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8151.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals("~", homePieceOfFurniture0.getName());
      assertEquals(4075.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(1798.2F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(4075.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8151.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[1] = 1689.4241F;
      floatArray0[2] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[8][5];
      floatArray1[0] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      Integer integer1 = new Integer(8192);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals(8192, (int)integer1);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("W]^s+", (Content) null, (Content) null, 1689.4241F, 0.0F, 300.84F, (-0.41443592F), false, true, integer1, floatArray1, false, (-37.35871F), false);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(300.84F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals((-37.35871F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals((-0.41443592F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("W]^s+", catalogPieceOfFurniture0.getName());
      assertEquals(8, floatArray1.length);
      
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("a:Grjk2CoAd3!8SH");
      assertNotNull(furnitureCategory0);
      assertEquals(0, furnitureCategory0.getFurnitureCount());
      assertEquals("a:Grjk2CoAd3!8SH", furnitureCategory0.getName());
      
      catalogPieceOfFurniture0.setCategory(furnitureCategory0);
      assertTrue(integer1.equals((Object)integer0));
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(300.84F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals((-37.35871F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals((-0.41443592F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("W]^s+", catalogPieceOfFurniture0.getName());
      assertEquals(0, furnitureCategory0.getFurnitureCount());
      assertEquals("a:Grjk2CoAd3!8SH", furnitureCategory0.getName());
      assertEquals(8, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(homePieceOfFurniture0);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals("W]^s+", homePieceOfFurniture0.getName());
      assertEquals((-0.41443592F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals((-0.41443592F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(300.84F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(300.84F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals((-37.35871F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals((-0.41443592F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("W]^s+", catalogPieceOfFurniture0.getName());
      assertEquals(8, floatArray1.length);
      
      float float0 = homePieceOfFurniture0.getNameYOffset();
      assertTrue(integer1.equals((Object)integer0));
      assertEquals(0.0F, float0, 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals("W]^s+", homePieceOfFurniture0.getName());
      assertEquals((-0.41443592F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals((-0.41443592F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(300.84F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(300.84F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals((-37.35871F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals((-0.41443592F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("W]^s+", catalogPieceOfFurniture0.getName());
      assertEquals(8, floatArray1.length);
      
      boolean boolean0 = homePieceOfFurniture0.isTopLeftPointAt((-645.80804F), (-1.0F), (-279.48F));
      assertTrue(integer1.equals((Object)integer0));
      assertFalse(boolean0);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals("W]^s+", homePieceOfFurniture0.getName());
      assertEquals((-0.41443592F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals((-0.41443592F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(300.84F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(300.84F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals((-37.35871F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals((-0.41443592F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("W]^s+", catalogPieceOfFurniture0.getName());
      assertEquals(8, floatArray1.length);
      
      float float1 = homePieceOfFurniture0.getAngle();
      assertEquals(float1, float0, 0.01F);
      assertTrue(integer1.equals((Object)integer0));
      assertEquals(0.0F, float1, 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals("W]^s+", homePieceOfFurniture0.getName());
      assertEquals((-0.41443592F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals((-0.41443592F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(300.84F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(300.84F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals((-37.35871F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals((-0.41443592F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("W]^s+", catalogPieceOfFurniture0.getName());
      assertEquals(8, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("?Qu}um", (Content) null, (Content) null, 8192.0F, 8192.0F, 1.0F, (-1291.6161F), false, true, integer0, floatArray1, false, 173.2F, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(9, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("?Qu}um", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setNameVisible(false);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("?Qu}um", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setModelMirrored(true);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals("?Qu}um", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(173.2F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("?Qu}um", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(9, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 0.0F, 1.0F, 5031.55F, false, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(5031.55F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(5031.55F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(5031.55F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getColor());
      
      Integer integer0 = new Integer((-1));
      assertNotNull(integer0);
      assertEquals((-1), (int)integer0);
      
      float float0 = homePieceOfFurniture0.getAngle();
      assertEquals(0.0F, float0, 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(5031.55F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(5031.55F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getColor());
      
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("");
      assertNotNull(furnitureCategory0);
      assertEquals("", furnitureCategory0.getName());
      assertEquals(0, furnitureCategory0.getFurnitureCount());
      
      catalogPieceOfFurniture0.setCategory((FurnitureCategory) null);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(5031.55F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      
      homePieceOfFurniture0.setY((-1));
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(5031.55F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals((-1.0F), homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(5031.55F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getColor());
      
      boolean boolean0 = homePieceOfFurniture0.isNameCenterPointAt((-1), 0.0F, 1.0F);
      assertTrue(boolean0);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(5031.55F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals((-1.0F), homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(5031.55F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getColor());
      
      boolean boolean1 = homePieceOfFurniture0.isDoorOrWindow();
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(5031.55F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals((-1.0F), homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(5031.55F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getColor());
      
      HomePieceOfFurniture.SortableProperty[] homePieceOfFurniture_SortablePropertyArray0 = HomePieceOfFurniture.SortableProperty.values();
      assertNotNull(homePieceOfFurniture_SortablePropertyArray0);
      assertEquals(19, homePieceOfFurniture_SortablePropertyArray0.length);
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[][] floatArray0 = new float[9][5];
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192, (-1291.6161F), 1.0F, 1689.4241F, false, false, integer0, floatArray0, false, 0.0F, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(9, floatArray0.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1689.4241F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(9, floatArray0.length);
      
      homePieceOfFurniture0.setDepth(0.3926991F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(9, floatArray0.length);
      
      homePieceOfFurniture0.setNameVisible(true);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(9, floatArray0.length);
      
      boolean boolean0 = homePieceOfFurniture0.isVisible();
      assertTrue(boolean0);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(9, floatArray0.length);
      
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertNotNull(homePieceOfFurniture1);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture1.getCurrency());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertEquals(1689.4241F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getShininess());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertEquals(4096.0F, homePieceOfFurniture1.getX(), 0.01F);
      assertFalse(homePieceOfFurniture1.isMovable());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals((-645.80804F), homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals("", homePieceOfFurniture1.getName());
      assertEquals(0.3926991F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture1.isNameVisible());
      assertEquals(9, floatArray0.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      boolean boolean1 = homePieceOfFurniture1.isVisible();
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(0.3926991F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture1.getCurrency());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertEquals(1689.4241F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getShininess());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertEquals(4096.0F, homePieceOfFurniture1.getX(), 0.01F);
      assertFalse(homePieceOfFurniture1.isMovable());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals((-645.80804F), homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals("", homePieceOfFurniture1.getName());
      assertEquals(0.3926991F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture1.isNameVisible());
      assertEquals(9, floatArray0.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("u", (Content) null, (Content) null, 8169, 8169, 8169, false, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals("u", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals("u", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals("u", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("u", propertyChangeListener0);
      assertNotNull(propertyChangeListenerProxy0);
      assertEquals("u", propertyChangeListenerProxy0.getPropertyName());
      
      homePieceOfFurniture0.addPropertyChangeListener(propertyChangeListenerProxy0);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals("u", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals("u", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("u", propertyChangeListenerProxy0.getPropertyName());
      
      boolean boolean0 = homePieceOfFurniture0.isPointAt(4156.993F, (-10.234211F), 4979.5347F);
      assertTrue(boolean0);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals("u", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals("u", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      float[] floatArray0 = new float[9];
      float[][] floatArray1 = new float[9][5];
      floatArray1[4] = floatArray1[3];
      floatArray1[8] = floatArray0;
      Sash[] sashArray0 = new Sash[9];
      float float0 = (-648.13214F);
      Sash sash0 = new Sash((-648.13214F), 0.0F, (-1291.6161F), 0.0F, 452.0F);
      assertNotNull(sash0);
      assertEquals(452.0F, sash0.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash0.getStartAngle(), 0.01F);
      assertEquals((-1291.6161F), sash0.getWidth(), 0.01F);
      assertEquals((-648.13214F), sash0.getXAxis(), 0.01F);
      assertEquals(0.0F, sash0.getYAxis(), 0.01F);
      
      Sash sash1 = new Sash(1453.343F, (-3391.2F), 622.05554F, (-648.13214F), 21.2585F);
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-648.13214F), sash1.getStartAngle(), 0.01F);
      assertEquals(21.2585F, sash1.getEndAngle(), 0.01F);
      assertEquals((-3391.2F), sash1.getYAxis(), 0.01F);
      assertEquals(1453.343F, sash1.getXAxis(), 0.01F);
      assertEquals(622.05554F, sash1.getWidth(), 0.01F);
      
      sashArray0[5] = sashArray0[3];
      sashArray0[6] = sashArray0[5];
      Sash sash2 = new Sash((-1291.6161F), 155.0F, 1453.343F, 21.2585F, (-1089.0F));
      assertFalse(sash2.equals((Object)sash0));
      assertFalse(sash2.equals((Object)sash1));
      assertNotNull(sash2);
      assertEquals(21.2585F, sash2.getStartAngle(), 0.01F);
      assertEquals((-1089.0F), sash2.getEndAngle(), 0.01F);
      assertEquals(155.0F, sash2.getYAxis(), 0.01F);
      assertEquals((-1291.6161F), sash2.getXAxis(), 0.01F);
      assertEquals(1453.343F, sash2.getWidth(), 0.01F);
      
      sashArray0[8] = sash2;
      BigDecimal bigDecimal0 = new BigDecimal((-709.0F));
      assertNotNull(bigDecimal0);
      assertEquals((byte)59, bigDecimal0.byteValue());
      assertEquals((short) (-709), bigDecimal0.shortValue());
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", "", (Content) null, (Content) null, (Content) null, 0.0F, (-1291.6161F), (-1291.6161F), (-709.0F), false, 0.0F, 0.0F, sashArray0, floatArray1, "", false, false, false, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((byte)59, bigDecimal0.byteValue());
      assertEquals((short) (-709), bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals((-1291.6161F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-709.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-1291.6161F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(9, floatArray1.length);
      assertEquals(9, sashArray0.length);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((byte)59, bigDecimal0.byteValue());
      assertEquals((short) (-709), bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals((-1291.6161F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-709.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-1291.6161F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1291.6161F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-1291.6161F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-645.80804F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-709.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-709.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isTexturable());
      assertEquals(9, floatArray1.length);
      assertEquals(9, sashArray0.length);
      
      BigDecimal bigDecimal1 = homeDoorOrWindow0.getPriceValueAddedTaxIncluded();
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      assertEquals((byte)59, bigDecimal0.byteValue());
      assertEquals((short) (-709), bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals((-1291.6161F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-709.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-1291.6161F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1291.6161F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-1291.6161F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-645.80804F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-709.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-709.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isTexturable());
      assertEquals((byte) (-44), bigDecimal1.byteValue());
      assertEquals((short) (-22316), bigDecimal1.shortValue());
      assertEquals(9, floatArray1.length);
      assertEquals(9, sashArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(bigDecimal1, bigDecimal0);
      
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      
      BigDecimal bigDecimal2 = homeDoorOrWindow0.getValueAddedTax();
      assertFalse(bigDecimal2.equals((Object)bigDecimal0));
      assertFalse(bigDecimal2.equals((Object)bigDecimal1));
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertNotNull(bigDecimal2);
      assertEquals((byte) (-103), bigDecimal2.byteValue());
      assertEquals((short) (-21607), bigDecimal2.shortValue());
      assertEquals((byte)59, bigDecimal0.byteValue());
      assertEquals((short) (-709), bigDecimal0.shortValue());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertFalse(catalogDoorOrWindow0.isDeformable());
      assertEquals("", catalogDoorOrWindow0.getCreator());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals((-1291.6161F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(0.0F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertFalse(catalogDoorOrWindow0.isTexturable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals((-709.0F), catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals((-1291.6161F), catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals((-1291.6161F), homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(0.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertNull(homeDoorOrWindow0.getColor());
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-1291.6161F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isMovable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(0.0F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals((-645.80804F), homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isDeformable());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals((-709.0F), homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals((-709.0F), homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isTexturable());
      assertEquals(9, floatArray1.length);
      assertEquals(9, sashArray0.length);
      assertNotSame(bigDecimal2, bigDecimal0);
      assertNotSame(bigDecimal2, bigDecimal1);
      assertNotSame(bigDecimal0, bigDecimal2);
      assertNotSame(bigDecimal0, bigDecimal1);
      
      // Undeclared exception!
      try { 
        homeDoorOrWindow0.setDepth(1453.343F);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Integer integer0 = new Integer(0);
      assertNotNull(integer0);
      assertEquals(0, (int)integer0);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "work");
      assertFalse(boolean0);
      
      Integer integer1 = new Integer(8192);
      assertFalse(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals(8192, (int)integer1);
      
      Integer integer2 = new Integer(0);
      assertFalse(integer2.equals((Object)integer1));
      assertTrue(integer2.equals((Object)integer0));
      assertNotNull(integer2);
      assertEquals(0, (int)integer2);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("1SyjFPv9=&P", (Content) null, (Content) null, (-1804.392F), 8192, 151.23F, 1.0F, true, true, integer2, (float[][]) null, false, 1.0F, false);
      assertFalse(integer2.equals((Object)integer1));
      assertTrue(integer2.equals((Object)integer0));
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(151.23F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertFalse(integer2.equals((Object)integer1));
      assertTrue(integer2.equals((Object)integer0));
      assertNotNull(homePieceOfFurniture0);
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(151.23F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(151.23F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      assertFalse(integer2.equals((Object)integer1));
      assertTrue(integer2.equals((Object)integer0));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertNotNull(homePieceOfFurniture1);
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(151.23F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(151.23F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertEquals(1.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture1.getName());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertEquals(151.23F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture1.getShininess());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertEquals(4096.0F, homePieceOfFurniture1.getY(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture1.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertTrue(homePieceOfFurniture1.isMovable());
      assertEquals(0, (int)homePieceOfFurniture1.getColor());
      assertEquals((-902.196F), homePieceOfFurniture1.getX(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      BigDecimal bigDecimal0 = homePieceOfFurniture1.getValueAddedTax();
      assertFalse(integer2.equals((Object)integer1));
      assertTrue(integer2.equals((Object)integer0));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertNull(bigDecimal0);
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(151.23F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(151.23F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertEquals(1.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture1.getName());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertEquals(151.23F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture1.getShininess());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertEquals(4096.0F, homePieceOfFurniture1.getY(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture1.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertTrue(homePieceOfFurniture1.isMovable());
      assertEquals(0, (int)homePieceOfFurniture1.getColor());
      assertEquals((-902.196F), homePieceOfFurniture1.getX(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      homePieceOfFurniture0.setNameVisible(true);
      assertFalse(integer2.equals((Object)integer1));
      assertTrue(integer2.equals((Object)integer0));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(151.23F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(151.23F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      
      homePieceOfFurniture0.setNameVisible(true);
      assertFalse(integer2.equals((Object)integer1));
      assertTrue(integer2.equals((Object)integer0));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(151.23F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(151.23F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      
      boolean boolean1 = homePieceOfFurniture1.isVisible();
      assertFalse(integer2.equals((Object)integer1));
      assertTrue(integer2.equals((Object)integer0));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(151.23F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(151.23F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(1.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture1.getName());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertEquals(151.23F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture1.getShininess());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertEquals(4096.0F, homePieceOfFurniture1.getY(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture1.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertTrue(homePieceOfFurniture1.isMovable());
      assertEquals(0, (int)homePieceOfFurniture1.getColor());
      assertEquals((-902.196F), homePieceOfFurniture1.getX(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      Integer integer3 = Integer.getInteger("work");
      assertNull(integer3);
      
      Float float0 = new Float(455.124F);
      assertNotNull(float0);
      assertEquals(455.124F, (float)float0, 0.01F);
      
      homePieceOfFurniture1.setShininess(float0);
      assertFalse(integer2.equals((Object)integer1));
      assertTrue(integer2.equals((Object)integer0));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(151.23F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(151.23F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(1.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture1.getName());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertEquals(151.23F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertEquals(4096.0F, homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(455.124F, homePieceOfFurniture1.getShininess(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture1.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertTrue(homePieceOfFurniture1.isMovable());
      assertEquals(0, (int)homePieceOfFurniture1.getColor());
      assertEquals((-902.196F), homePieceOfFurniture1.getX(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      homePieceOfFurniture1.setNameYOffset(151.23F);
      assertFalse(integer2.equals((Object)integer1));
      assertTrue(integer2.equals((Object)integer0));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(151.23F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(151.23F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(1.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture1.getName());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertEquals(151.23F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertEquals(151.23F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertEquals(4096.0F, homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(455.124F, homePieceOfFurniture1.getShininess(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture1.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertTrue(homePieceOfFurniture1.isMovable());
      assertEquals(0, (int)homePieceOfFurniture1.getColor());
      assertEquals((-902.196F), homePieceOfFurniture1.getX(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      boolean boolean2 = homePieceOfFurniture1.isMovable();
      assertFalse(integer2.equals((Object)integer1));
      assertTrue(integer2.equals((Object)integer0));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2);
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(151.23F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(151.23F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(1.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture1.getName());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertEquals(151.23F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertEquals(151.23F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertEquals(4096.0F, homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(455.124F, homePieceOfFurniture1.getShininess(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture1.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertTrue(homePieceOfFurniture1.isMovable());
      assertEquals(0, (int)homePieceOfFurniture1.getColor());
      assertEquals((-902.196F), homePieceOfFurniture1.getX(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      homePieceOfFurniture1.move((-1.0F), 455.124F);
      assertFalse(integer2.equals((Object)integer1));
      assertTrue(integer2.equals((Object)integer0));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(151.23F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(151.23F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(1.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture1.getName());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals((-903.196F), homePieceOfFurniture1.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertEquals(151.23F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertEquals(4551.124F, homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(151.23F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertEquals(455.124F, homePieceOfFurniture1.getShininess(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture1.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertTrue(homePieceOfFurniture1.isMovable());
      assertEquals(0, (int)homePieceOfFurniture1.getColor());
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      String string0 = homePieceOfFurniture1.getStaircaseCutOutShape();
      assertFalse(integer2.equals((Object)integer1));
      assertTrue(integer2.equals((Object)integer0));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertNull(string0);
      assertEquals("1SyjFPv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(151.23F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(151.23F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(1.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertEquals("1SyjFPv9=&P", homePieceOfFurniture1.getName());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals((-903.196F), homePieceOfFurniture1.getX(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertEquals(151.23F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertEquals(4551.124F, homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(151.23F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertEquals(455.124F, homePieceOfFurniture1.getShininess(), 0.01F);
      assertEquals((-1804.392F), homePieceOfFurniture1.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertTrue(homePieceOfFurniture1.isMovable());
      assertEquals(0, (int)homePieceOfFurniture1.getColor());
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Sash[] sashArray0 = new Sash[2];
      Sash sash0 = new Sash(0.0F, (-4547.5F), (-2864.0F), 1.0F, (-3049.3F));
      assertNotNull(sash0);
      assertEquals((-3049.3F), sash0.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash0.getXAxis(), 0.01F);
      assertEquals((-2864.0F), sash0.getWidth(), 0.01F);
      assertEquals(1.0F, sash0.getStartAngle(), 0.01F);
      assertEquals((-4547.5F), sash0.getYAxis(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(1243.69F, (-359.393F), (-887.62F), (-2093.0F), (-2831.68F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-359.393F), sash1.getYAxis(), 0.01F);
      assertEquals((-2831.68F), sash1.getEndAngle(), 0.01F);
      assertEquals(1243.69F, sash1.getXAxis(), 0.01F);
      assertEquals((-887.62F), sash1.getWidth(), 0.01F);
      assertEquals((-2093.0F), sash1.getStartAngle(), 0.01F);
      
      sashArray0[1] = sash1;
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      assertNotNull(bigDecimal0);
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "", (String) null, (Content) null, (Content) null, (Content) null, 4156.993F, (-3049.3F), 2147482907, 1337.4697F, true, 4156.993F, 0.0F, sashArray0, (float[][]) null, "kH", true, true, true, bigDecimal0, (BigDecimal) null);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(1337.4697F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(4156.993F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(4156.993F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-3049.3F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("kH", catalogDoorOrWindow0.getCreator());
      assertEquals(2.14748288E9F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(2, sashArray0.length);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(1337.4697F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(4156.993F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(4156.993F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-3049.3F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("kH", catalogDoorOrWindow0.getCreator());
      assertEquals(2.14748288E9F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(1337.4697F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(4156.993F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(2.14748288E9F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-1524.65F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-3049.3F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(2078.4966F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(4156.993F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(1337.4697F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(2, sashArray0.length);
      
      BigDecimal bigDecimal1 = homeDoorOrWindow0.getPriceValueAddedTaxIncluded();
      assertNotNull(bigDecimal1);
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(1337.4697F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(4156.993F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(4156.993F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-3049.3F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("kH", catalogDoorOrWindow0.getCreator());
      assertEquals(2.14748288E9F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(1337.4697F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(4156.993F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(2.14748288E9F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-1524.65F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-3049.3F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(2078.4966F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(4156.993F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(1337.4697F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals((byte)10, bigDecimal1.byteValue());
      assertEquals((short)10, bigDecimal1.shortValue());
      assertEquals(2, sashArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertSame(bigDecimal1, bigDecimal0);
      
      TextStyle textStyle0 = homeDoorOrWindow0.getNameStyle();
      assertNull(textStyle0);
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      assertNull(catalogDoorOrWindow0.getDescription());
      assertEquals("", catalogDoorOrWindow0.getName());
      assertEquals(1337.4697F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(4156.993F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals(4156.993F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow0.getGrade());
      assertEquals((-3049.3F), catalogDoorOrWindow0.getDepth(), 0.01F);
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertNull(catalogDoorOrWindow0.getColor());
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(0.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals("kH", catalogDoorOrWindow0.getCreator());
      assertEquals(2.14748288E9F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(1337.4697F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertEquals(4156.993F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals("", homeDoorOrWindow0.getName());
      assertEquals(2.14748288E9F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertEquals((-1524.65F), homeDoorOrWindow0.getY(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals((-3049.3F), homeDoorOrWindow0.getDepth(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(2078.4966F, homeDoorOrWindow0.getX(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(4156.993F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertTrue(homeDoorOrWindow0.isResizable());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertEquals(1337.4697F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(2, sashArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[1] = 1689.4241F;
      floatArray0[2] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      Integer integer1 = new Integer(8192);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals(8192, (int)integer1);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 1689.4241F, 0.0F, 300.84F, (-1.0F), false, true, integer1, floatArray1, false, (-37.35871F), false);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-37.35871F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(300.84F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(homePieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-37.35871F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(300.84F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals((-1.0F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(300.84F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setDepth(8192.0F);
      assertTrue(integer1.equals((Object)integer0));
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-37.35871F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(300.84F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals((-1.0F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(300.84F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setVisible(false);
      assertTrue(integer1.equals((Object)integer0));
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-37.35871F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(300.84F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals((-1.0F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isVisible());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(300.84F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(9, floatArray1.length);
      
      homePieceOfFurniture0.setNameVisible(false);
      assertTrue(integer1.equals((Object)integer0));
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-37.35871F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(300.84F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals((-1.0F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isVisible());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(300.84F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(9, floatArray1.length);
      
      boolean boolean0 = homePieceOfFurniture0.isPointAt(300.84F, 300.84F, (-37.35871F));
      assertTrue(integer1.equals((Object)integer0));
      assertFalse(boolean0);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-37.35871F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(300.84F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals((-1.0F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isVisible());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(300.84F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(9, floatArray1.length);
      
      String string0 = homePieceOfFurniture0.getName();
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(string0);
      assertEquals("", string0);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals((-37.35871F), catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(300.84F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals((-1.0F), homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isVisible());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(300.84F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(9, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("work", (Content) null, (Content) null, 2.0F, 8192, 2.0F, true, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals("work", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(2.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(2.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals("work", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(2.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(2.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(2.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(2.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("work", homePieceOfFurniture0.getName());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      
      homePieceOfFurniture0.setDescription("work");
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals("work", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(2.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(2.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(2.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(2.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("work", homePieceOfFurniture0.getName());
      assertEquals("work", homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      
      boolean boolean0 = homePieceOfFurniture0.isBottomLeftPointAt(8192, 8192, 8192);
      assertFalse(boolean0);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals("work", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(2.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(2.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(2.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(2.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("work", homePieceOfFurniture0.getName());
      assertEquals("work", homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      
      homePieceOfFurniture0.setDescription("work");
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals("work", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(2.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(2.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(2.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(2.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("work", homePieceOfFurniture0.getName());
      assertEquals("work", homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      
      boolean boolean1 = homePieceOfFurniture0.isDoorOrWindow();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertEquals("work", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(2.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(2.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(2.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(2.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals("work", homePieceOfFurniture0.getName());
      assertEquals("work", homePieceOfFurniture0.getDescription());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      
      HomePieceOfFurniture.SortableProperty[] homePieceOfFurniture_SortablePropertyArray0 = HomePieceOfFurniture.SortableProperty.values();
      assertNotNull(homePieceOfFurniture_SortablePropertyArray0);
      assertEquals(19, homePieceOfFurniture_SortablePropertyArray0.length);
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 0.0F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 0.0F, (-1291.6161F), 1.0F, 0.0F, false, false, integer0, floatArray1, false, 8192.0F, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(9, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertNotNull(homePieceOfFurniture1);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture1.getName());
      assertEquals(0.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture1.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertEquals(1.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getX(), 0.01F);
      assertTrue(homePieceOfFurniture1.isResizable());
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertNull(homePieceOfFurniture1.getShininess());
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      homePieceOfFurniture1.setNameVisible(false);
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture1.getName());
      assertEquals(0.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture1.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertEquals(1.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getX(), 0.01F);
      assertTrue(homePieceOfFurniture1.isResizable());
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertNull(homePieceOfFurniture1.getShininess());
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      homePieceOfFurniture0.setNameVisible(false);
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      
      boolean boolean0 = homePieceOfFurniture0.isVisible();
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertTrue(boolean0);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      
      HomePieceOfFurniture homePieceOfFurniture2 = homePieceOfFurniture1.clone();
      assertFalse(homePieceOfFurniture2.equals((Object)homePieceOfFurniture0));
      assertFalse(homePieceOfFurniture2.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertNotNull(homePieceOfFurniture2);
      assertEquals(0.0F, homePieceOfFurniture2.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture2.getName());
      assertNull(homePieceOfFurniture2.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture2.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture2.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture2.getDescription());
      assertFalse(homePieceOfFurniture2.isMovable());
      assertEquals(1.0F, homePieceOfFurniture2.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture2.isModelMirrored());
      assertNull(homePieceOfFurniture2.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture2.getColor());
      assertEquals(0.0F, homePieceOfFurniture2.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture2.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture2.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture2.isBackFaceShown());
      assertFalse(homePieceOfFurniture2.isNameVisible());
      assertEquals((-1291.6161F), homePieceOfFurniture2.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture2.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture2.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture2.getShininess());
      assertFalse(homePieceOfFurniture2.isDoorOrWindow());
      assertEquals((-645.80804F), homePieceOfFurniture2.getY(), 0.01F);
      assertTrue(homePieceOfFurniture2.isResizable());
      assertTrue(homePieceOfFurniture2.isVisible());
      assertTrue(homePieceOfFurniture2.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture2.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture2.getGroundElevation(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture1.getName());
      assertEquals(0.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture1.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertEquals(1.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getX(), 0.01F);
      assertTrue(homePieceOfFurniture1.isResizable());
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertNull(homePieceOfFurniture1.getShininess());
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture2, homePieceOfFurniture0);
      assertNotSame(homePieceOfFurniture2, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture2);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture2);
      
      homePieceOfFurniture0.setElevation(0.0F);
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture2));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture2);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      
      BigDecimal bigDecimal0 = homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture2));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertNull(bigDecimal0);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture2);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      
      homePieceOfFurniture2.setMovable(true);
      assertFalse(homePieceOfFurniture2.equals((Object)homePieceOfFurniture0));
      assertFalse(homePieceOfFurniture2.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture2));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture2));
      assertEquals(0.0F, homePieceOfFurniture2.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture2.getName());
      assertNull(homePieceOfFurniture2.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture2.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture2.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture2.getDescription());
      assertTrue(homePieceOfFurniture2.isMovable());
      assertEquals(1.0F, homePieceOfFurniture2.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture2.isModelMirrored());
      assertNull(homePieceOfFurniture2.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture2.getColor());
      assertEquals(0.0F, homePieceOfFurniture2.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture2.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture2.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture2.isBackFaceShown());
      assertFalse(homePieceOfFurniture2.isNameVisible());
      assertEquals((-1291.6161F), homePieceOfFurniture2.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture2.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture2.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture2.getShininess());
      assertFalse(homePieceOfFurniture2.isDoorOrWindow());
      assertEquals((-645.80804F), homePieceOfFurniture2.getY(), 0.01F);
      assertTrue(homePieceOfFurniture2.isResizable());
      assertTrue(homePieceOfFurniture2.isVisible());
      assertTrue(homePieceOfFurniture2.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture2.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture2.getGroundElevation(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture1.getName());
      assertEquals(0.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture1.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertEquals(1.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getX(), 0.01F);
      assertTrue(homePieceOfFurniture1.isResizable());
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertNull(homePieceOfFurniture1.getShininess());
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture2, homePieceOfFurniture0);
      assertNotSame(homePieceOfFurniture2, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture2);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture2);
      
      homePieceOfFurniture1.move((-1.0F), 0.0F);
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture2));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture2));
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture1.getName());
      assertEquals(0.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture1.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertEquals(1.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture1.getX(), 0.01F);
      assertTrue(homePieceOfFurniture1.isResizable());
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertNull(homePieceOfFurniture1.getShininess());
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture2);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture2);
      
      boolean boolean1 = homePieceOfFurniture2.isBottomRightPointAt(1257.767F, 8192.0F, (-1.0F));
      assertFalse(homePieceOfFurniture2.equals((Object)homePieceOfFurniture0));
      assertFalse(homePieceOfFurniture2.equals((Object)homePieceOfFurniture1));
      assertFalse(boolean1 == boolean0);
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture2));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture2));
      assertFalse(boolean1);
      assertEquals(0.0F, homePieceOfFurniture2.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture2.getName());
      assertNull(homePieceOfFurniture2.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture2.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture2.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture2.getDescription());
      assertTrue(homePieceOfFurniture2.isMovable());
      assertEquals(1.0F, homePieceOfFurniture2.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture2.isModelMirrored());
      assertNull(homePieceOfFurniture2.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture2.getColor());
      assertEquals(0.0F, homePieceOfFurniture2.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture2.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture2.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture2.isBackFaceShown());
      assertFalse(homePieceOfFurniture2.isNameVisible());
      assertEquals((-1291.6161F), homePieceOfFurniture2.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture2.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture2.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture2.getShininess());
      assertFalse(homePieceOfFurniture2.isDoorOrWindow());
      assertEquals((-645.80804F), homePieceOfFurniture2.getY(), 0.01F);
      assertTrue(homePieceOfFurniture2.isResizable());
      assertTrue(homePieceOfFurniture2.isVisible());
      assertTrue(homePieceOfFurniture2.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture2.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture2.getGroundElevation(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture1.getName());
      assertEquals(0.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture1.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertEquals(1.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture1.getX(), 0.01F);
      assertTrue(homePieceOfFurniture1.isResizable());
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertNull(homePieceOfFurniture1.getShininess());
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture2, homePieceOfFurniture0);
      assertNotSame(homePieceOfFurniture2, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture2);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture2);
      
      boolean boolean2 = homePieceOfFurniture2.intersectsRectangle((-1.0F), (-1291.6161F), 8192.0F, 3341.9F);
      assertFalse(homePieceOfFurniture2.equals((Object)homePieceOfFurniture0));
      assertFalse(homePieceOfFurniture2.equals((Object)homePieceOfFurniture1));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture2));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture2));
      assertFalse(boolean2);
      assertEquals(0.0F, homePieceOfFurniture2.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture2.getName());
      assertNull(homePieceOfFurniture2.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture2.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture2.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture2.getDescription());
      assertTrue(homePieceOfFurniture2.isMovable());
      assertEquals(1.0F, homePieceOfFurniture2.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture2.isModelMirrored());
      assertNull(homePieceOfFurniture2.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture2.getColor());
      assertEquals(0.0F, homePieceOfFurniture2.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture2.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture2.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture2.isBackFaceShown());
      assertFalse(homePieceOfFurniture2.isNameVisible());
      assertEquals((-1291.6161F), homePieceOfFurniture2.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture2.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture2.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture2.getShininess());
      assertFalse(homePieceOfFurniture2.isDoorOrWindow());
      assertEquals((-645.80804F), homePieceOfFurniture2.getY(), 0.01F);
      assertTrue(homePieceOfFurniture2.isResizable());
      assertTrue(homePieceOfFurniture2.isVisible());
      assertTrue(homePieceOfFurniture2.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture2.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture2.getGroundElevation(), 0.01F);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals((-1291.6161F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals((-1291.6161F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-645.80804F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals("", homePieceOfFurniture1.getName());
      assertEquals(0.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals((-1291.6161F), homePieceOfFurniture1.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertEquals(1.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isMovable());
      assertEquals((-645.80804F), homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture1.getX(), 0.01F);
      assertTrue(homePieceOfFurniture1.isResizable());
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertNull(homePieceOfFurniture1.getShininess());
      assertEquals(9, floatArray1.length);
      assertNotSame(homePieceOfFurniture2, homePieceOfFurniture0);
      assertNotSame(homePieceOfFurniture2, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture2);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture2);
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("~", (Content) null, (Content) null, 8169, 8169, 8169, false, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      
      boolean boolean0 = homePieceOfFurniture0.isTopLeftPointAt(3.4028235E38F, 4156.993F, 3.4028235E38F);
      assertFalse(boolean0);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      
      float[][] floatArray0 = homePieceOfFurniture0.getModelRotation();
      assertNotNull(floatArray0);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("~", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("~", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(3, floatArray0.length);
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 1689.4241F, 1.0F, 8192, false, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      
      homePieceOfFurniture0.setDescription("editorSubFoldr.Windows");
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("editorSubFoldr.Windows", homePieceOfFurniture0.getDescription());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      
      boolean boolean0 = homePieceOfFurniture0.isBottomLeftPointAt(1.0F, 1689.4241F, 8192.0F);
      assertTrue(boolean0);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("editorSubFoldr.Windows", homePieceOfFurniture0.getDescription());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      
      boolean boolean1 = homePieceOfFurniture0.containsPoint((-1291.6161F), (-535.628F), 3039.2F);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("editorSubFoldr.Windows", homePieceOfFurniture0.getDescription());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      
      homePieceOfFurniture0.setNameVisible(true);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("editorSubFoldr.Windows", homePieceOfFurniture0.getDescription());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      
      homePieceOfFurniture0.setElevation(1326.0F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(1326.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals("editorSubFoldr.Windows", homePieceOfFurniture0.getDescription());
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1326.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 0.0F, (-3068.0F), 0.0F, 8192.0F, false, true, integer0, (float[][]) null, false, 1.0F, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals((-3068.0F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals((-3068.0F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-1534.0F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals((-3068.0F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      
      homePieceOfFurniture0.setNameVisible(false);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals((-3068.0F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-1534.0F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals((-3068.0F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      
      homePieceOfFurniture0.setModelMirrored(true);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals((-3068.0F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-1534.0F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals((-3068.0F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      
      Float float0 = new Float(2854154.6959505677);
      assertNotNull(float0);
      assertEquals(2854154.8F, (float)float0, 0.01F);
      
      Float float1 = new Float(8192.0F);
      assertNotEquals((float)float1, (float)float0, 0.01F);
      assertNotNull(float1);
      assertEquals(8192.0F, (float)float1, 0.01F);
      
      homePieceOfFurniture0.setShininess(float1);
      assertNotEquals((float)float1, (float)float0, 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals((-3068.0F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-1534.0F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals((-3068.0F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getShininess(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      
      homePieceOfFurniture0.setNameYOffset((-1.0F));
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals((-3068.0F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-1534.0F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1.0F), homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals((-3068.0F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getShininess(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      
      boolean boolean1 = homePieceOfFurniture0.isMovable();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals((-3068.0F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-1534.0F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1.0F), homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals((-3068.0F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getShininess(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      
      homePieceOfFurniture0.move((-354.0987F), (-1.0F));
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals((-3068.0F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1.0F), homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals((-354.0987F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals((-3068.0F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getShininess(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals((-1535.0F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("Z", (Content) null, (Content) null, 4772.5F, (-830.3F), 4772.5F, false, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals("Z", catalogPieceOfFurniture0.getName());
      assertEquals((-830.3F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(4772.5F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(4772.5F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals("Z", catalogPieceOfFurniture0.getName());
      assertEquals((-830.3F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(4772.5F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(4772.5F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals((-830.3F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(4772.5F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals((-415.15F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(2386.25F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(4772.5F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("Z", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      
      homePieceOfFurniture0.setNameAngle(1094.6F);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals("Z", catalogPieceOfFurniture0.getName());
      assertEquals((-830.3F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(4772.5F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(4772.5F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals((-830.3F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals(4772.5F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1.3257321F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals((-415.15F), homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(2386.25F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(4772.5F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals("Z", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getColor());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture0.isMovable());
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Integer integer0 = new Integer(0);
      assertNotNull(integer0);
      assertEquals(0, (int)integer0);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "work");
      assertFalse(boolean0);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("10yjFhv9=&P", (Content) null, (Content) null, (-1804.392F), 8192, (-1804.392F), 1.0F, false, false, integer0, (float[][]) null, false, 1.0F, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("10yjFhv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("10yjFhv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1804.392F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals("10yjFhv9=&P", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getDescription());
      
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertNotNull(homePieceOfFurniture1);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("10yjFhv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1804.392F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals("10yjFhv9=&P", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertNull(homePieceOfFurniture1.getShininess());
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertEquals("10yjFhv9=&P", homePieceOfFurniture1.getName());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertEquals(1.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertEquals((-1804.392F), homePieceOfFurniture1.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertEquals((-902.196F), homePieceOfFurniture1.getX(), 0.01F);
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(0, (int)homePieceOfFurniture1.getColor());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertEquals((-1804.392F), homePieceOfFurniture1.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isMovable());
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      assertNotNull(bigDecimal0);
      assertEquals((short)10, bigDecimal0.shortValue());
      assertEquals((byte)10, bigDecimal0.byteValue());
      
      CatalogPieceOfFurniture catalogPieceOfFurniture1 = new CatalogPieceOfFurniture("10yjFhv9=&P", (Content) null, (Content) null, 517.9619F, (-1020.9893F), 517.9619F, (-1020.9893F), false, false, integer0, (float[][]) null, false, 517.9619F, true);
      assertFalse(catalogPieceOfFurniture1.equals((Object)catalogPieceOfFurniture0));
      assertNotNull(catalogPieceOfFurniture1);
      assertFalse(catalogPieceOfFurniture1.isMovable());
      assertTrue(catalogPieceOfFurniture1.isModifiable());
      assertTrue(catalogPieceOfFurniture1.isDeformable());
      assertNull(catalogPieceOfFurniture1.getInformation());
      assertNull(catalogPieceOfFurniture1.getStaircaseCutOutShape());
      assertFalse(catalogPieceOfFurniture1.isBackFaceShown());
      assertEquals((-1020.9893F), catalogPieceOfFurniture1.getDepth(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture1.getColor());
      assertEquals("10yjFhv9=&P", catalogPieceOfFurniture1.getName());
      assertNull(catalogPieceOfFurniture1.getId());
      assertNull(catalogPieceOfFurniture1.getCurrency());
      assertEquals(517.9619F, catalogPieceOfFurniture1.getWidth(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture1.getCreationDate());
      assertNull(catalogPieceOfFurniture1.getCreator());
      assertNull(catalogPieceOfFurniture1.getDescription());
      assertFalse(catalogPieceOfFurniture1.isDoorOrWindow());
      assertEquals(517.9619F, catalogPieceOfFurniture1.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture1.getGrade());
      assertTrue(catalogPieceOfFurniture1.isTexturable());
      assertTrue(catalogPieceOfFurniture1.isProportional());
      assertTrue(catalogPieceOfFurniture1.isResizable());
      assertEquals((-1020.9893F), catalogPieceOfFurniture1.getElevation(), 0.01F);
      assertEquals(517.9619F, catalogPieceOfFurniture1.getHeight(), 0.01F);
      
      HomePieceOfFurniture homePieceOfFurniture2 = new HomePieceOfFurniture(homePieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.equals((Object)catalogPieceOfFurniture1));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture2.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture2.equals((Object)homePieceOfFurniture0));
      assertNotNull(homePieceOfFurniture2);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("10yjFhv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1804.392F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals("10yjFhv9=&P", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals("10yjFhv9=&P", homePieceOfFurniture2.getName());
      assertEquals((-1804.392F), homePieceOfFurniture2.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture2.getCurrency());
      assertFalse(homePieceOfFurniture2.isNameVisible());
      assertFalse(homePieceOfFurniture2.isMovable());
      assertEquals((-1804.392F), homePieceOfFurniture2.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture2.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture2.getStaircaseCutOutShape());
      assertEquals(8192.0F, homePieceOfFurniture2.getDepth(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture2.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture2.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture2.isVisible());
      assertNull(homePieceOfFurniture2.getShininess());
      assertEquals(1.0F, homePieceOfFurniture2.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture2.isResizable());
      assertTrue(homePieceOfFurniture2.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture2.getAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture2.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture2.isDoorOrWindow());
      assertNull(homePieceOfFurniture2.getDescription());
      assertTrue(homePieceOfFurniture2.isTexturable());
      assertNull(homePieceOfFurniture2.getCatalogId());
      assertEquals((-902.196F), homePieceOfFurniture2.getX(), 0.01F);
      assertFalse(homePieceOfFurniture2.isModelMirrored());
      assertFalse(homePieceOfFurniture2.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture2.getNameYOffset(), 0.01F);
      assertEquals(0, (int)homePieceOfFurniture2.getColor());
      
      homePieceOfFurniture0.setNameVisible(false);
      assertFalse(catalogPieceOfFurniture0.equals((Object)catalogPieceOfFurniture1));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture2));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("10yjFhv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1804.392F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals("10yjFhv9=&P", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getDescription());
      assertNotSame(catalogPieceOfFurniture0, catalogPieceOfFurniture1);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture2);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      
      homePieceOfFurniture1.setNameAngle(0);
      assertFalse(catalogPieceOfFurniture0.equals((Object)catalogPieceOfFurniture1));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture2));
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture2));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("10yjFhv9=&P", catalogPieceOfFurniture0.getName());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals((-1804.392F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(1.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals("10yjFhv9=&P", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals(8192.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertNull(homePieceOfFurniture1.getShininess());
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertEquals("10yjFhv9=&P", homePieceOfFurniture1.getName());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertEquals(1.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertEquals((-1804.392F), homePieceOfFurniture1.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertEquals((-902.196F), homePieceOfFurniture1.getX(), 0.01F);
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals(4096.0F, homePieceOfFurniture1.getY(), 0.01F);
      assertEquals(0, (int)homePieceOfFurniture1.getColor());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertEquals((-1804.392F), homePieceOfFurniture1.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture1.isMovable());
      assertNotSame(catalogPieceOfFurniture0, catalogPieceOfFurniture1);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture2);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture2);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[6] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 1689.4241F, 1.0F, 8192, false, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      
      homePieceOfFurniture0.setDescription("editorSubFolder.Windows");
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      
      float float0 = homePieceOfFurniture0.getNameYOffset();
      assertEquals(0.0F, float0, 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      
      boolean boolean0 = homePieceOfFurniture0.isTopLeftPointAt(0.3926991F, (-157.0F), 0.3926991F);
      assertFalse(boolean0);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      
      homePieceOfFurniture0.setAngle(0.0F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals("editorSubFolder.Windows", homePieceOfFurniture0.getDescription());
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture((String) null, (Content) null, (Content) null, 2.0F, 2.0F, (-1.0F), true, true);
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(2.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getName());
      assertEquals(2.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(2.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getName());
      assertEquals(2.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(2.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals((-1.0F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(1.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(2.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      
      homePieceOfFurniture0.setDescription("work");
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(2.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getName());
      assertEquals(2.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals("work", homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(2.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals((-1.0F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(1.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(2.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      
      boolean boolean0 = homePieceOfFurniture0.isBottomRightPointAt(0.5F, 2.0F, 0.5F);
      assertFalse(boolean0);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(2.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getName());
      assertEquals(2.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals("work", homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(2.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals((-1.0F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(1.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(2.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      
      boolean boolean1 = homePieceOfFurniture0.isBottomLeftPointAt(2.0F, 2.0F, 451.715F);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(2.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getName());
      assertEquals(2.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals("work", homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(2.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals((-1.0F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(1.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(2.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      
      homePieceOfFurniture0.setDescription("work");
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(2.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getName());
      assertEquals(2.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals("work", homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(2.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals((-1.0F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(1.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(2.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      
      boolean boolean2 = homePieceOfFurniture0.isDoorOrWindow();
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(2.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getName());
      assertEquals(2.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals("work", homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(2.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals((-1.0F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(1.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(2.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      
      HomePieceOfFurniture.SortableProperty[] homePieceOfFurniture_SortablePropertyArray0 = HomePieceOfFurniture.SortableProperty.values();
      assertNotNull(homePieceOfFurniture_SortablePropertyArray0);
      assertEquals(19, homePieceOfFurniture_SortablePropertyArray0.length);
      
      homePieceOfFurniture0.setName((String) null);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(2.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertEquals((-1.0F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getName());
      assertEquals(2.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals("work", homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(2.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals((-1.0F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(1.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(2.0F, homePieceOfFurniture0.getDepth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      float[][] floatArray1 = new float[9][5];
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[7] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("Mac OS X", (Content) null, (Content) null, 1689.4241F, 1.0F, 8192, false, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals("Mac OS X", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture1 = new CatalogPieceOfFurniture("Mac OS X", (Content) null, (Content) null, 1.0F, 5041.0103F, 1.0F, 674.702F, false, integer0, floatArray1, false, 1.0F, false);
      assertFalse(catalogPieceOfFurniture1.equals((Object)catalogPieceOfFurniture0));
      assertNotNull(catalogPieceOfFurniture1);
      assertFalse(catalogPieceOfFurniture1.isMovable());
      assertTrue(catalogPieceOfFurniture1.isModifiable());
      assertNull(catalogPieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(1.0F, catalogPieceOfFurniture1.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture1.getId());
      assertEquals("Mac OS X", catalogPieceOfFurniture1.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture1.getColor());
      assertTrue(catalogPieceOfFurniture1.isDeformable());
      assertNull(catalogPieceOfFurniture1.getInformation());
      assertFalse(catalogPieceOfFurniture1.isProportional());
      assertFalse(catalogPieceOfFurniture1.isBackFaceShown());
      assertNull(catalogPieceOfFurniture1.getCreator());
      assertTrue(catalogPieceOfFurniture1.isTexturable());
      assertNull(catalogPieceOfFurniture1.getDescription());
      assertEquals(1.0F, catalogPieceOfFurniture1.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture1.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture1.getCurrency());
      assertNull(catalogPieceOfFurniture1.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture1.getCreationDate());
      assertEquals(1.0F, catalogPieceOfFurniture1.getWidth(), 0.01F);
      assertEquals(674.702F, catalogPieceOfFurniture1.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture1.isResizable());
      assertEquals(5041.0103F, catalogPieceOfFurniture1.getDepth(), 0.01F);
      assertEquals(9, floatArray1.length);
      
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("Mac OS X");
      assertNotNull(furnitureCategory0);
      assertEquals("Mac OS X", furnitureCategory0.getName());
      assertEquals(0, furnitureCategory0.getFurnitureCount());
      
      catalogPieceOfFurniture1.setCategory(furnitureCategory0);
      assertFalse(catalogPieceOfFurniture1.equals((Object)catalogPieceOfFurniture0));
      assertFalse(catalogPieceOfFurniture1.isMovable());
      assertTrue(catalogPieceOfFurniture1.isModifiable());
      assertNull(catalogPieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(1.0F, catalogPieceOfFurniture1.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture1.getId());
      assertEquals("Mac OS X", catalogPieceOfFurniture1.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture1.getColor());
      assertTrue(catalogPieceOfFurniture1.isDeformable());
      assertNull(catalogPieceOfFurniture1.getInformation());
      assertFalse(catalogPieceOfFurniture1.isProportional());
      assertFalse(catalogPieceOfFurniture1.isBackFaceShown());
      assertNull(catalogPieceOfFurniture1.getCreator());
      assertTrue(catalogPieceOfFurniture1.isTexturable());
      assertNull(catalogPieceOfFurniture1.getDescription());
      assertEquals(1.0F, catalogPieceOfFurniture1.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture1.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture1.getCurrency());
      assertNull(catalogPieceOfFurniture1.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture1.getCreationDate());
      assertEquals(1.0F, catalogPieceOfFurniture1.getWidth(), 0.01F);
      assertEquals(674.702F, catalogPieceOfFurniture1.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture1.isResizable());
      assertEquals(5041.0103F, catalogPieceOfFurniture1.getDepth(), 0.01F);
      assertEquals("Mac OS X", furnitureCategory0.getName());
      assertEquals(0, furnitureCategory0.getFurnitureCount());
      assertEquals(9, floatArray1.length);
      assertNotSame(catalogPieceOfFurniture1, catalogPieceOfFurniture0);
      
      int int0 = catalogPieceOfFurniture0.compareTo(catalogPieceOfFurniture1);
      assertFalse(catalogPieceOfFurniture0.equals((Object)catalogPieceOfFurniture1));
      assertFalse(catalogPieceOfFurniture1.equals((Object)catalogPieceOfFurniture0));
      assertEquals((-1), int0);
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals("Mac OS X", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(catalogPieceOfFurniture1.isMovable());
      assertTrue(catalogPieceOfFurniture1.isModifiable());
      assertNull(catalogPieceOfFurniture1.getStaircaseCutOutShape());
      assertEquals(1.0F, catalogPieceOfFurniture1.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture1.getId());
      assertEquals("Mac OS X", catalogPieceOfFurniture1.getName());
      assertEquals(8192, (int)catalogPieceOfFurniture1.getColor());
      assertTrue(catalogPieceOfFurniture1.isDeformable());
      assertNull(catalogPieceOfFurniture1.getInformation());
      assertFalse(catalogPieceOfFurniture1.isProportional());
      assertFalse(catalogPieceOfFurniture1.isBackFaceShown());
      assertNull(catalogPieceOfFurniture1.getCreator());
      assertTrue(catalogPieceOfFurniture1.isTexturable());
      assertNull(catalogPieceOfFurniture1.getDescription());
      assertEquals(1.0F, catalogPieceOfFurniture1.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture1.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture1.getCurrency());
      assertNull(catalogPieceOfFurniture1.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture1.getCreationDate());
      assertEquals(1.0F, catalogPieceOfFurniture1.getWidth(), 0.01F);
      assertEquals(674.702F, catalogPieceOfFurniture1.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture1.isResizable());
      assertEquals(5041.0103F, catalogPieceOfFurniture1.getDepth(), 0.01F);
      assertEquals(9, floatArray1.length);
      assertNotSame(catalogPieceOfFurniture0, catalogPieceOfFurniture1);
      assertNotSame(catalogPieceOfFurniture1, catalogPieceOfFurniture0);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.equals((Object)catalogPieceOfFurniture1));
      assertNotNull(homePieceOfFurniture0);
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("Mac OS X", homePieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals("Mac OS X", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      
      homePieceOfFurniture0.setDescription((String) null);
      assertFalse(catalogPieceOfFurniture0.equals((Object)catalogPieceOfFurniture1));
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("Mac OS X", homePieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals("Mac OS X", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNotSame(catalogPieceOfFurniture0, catalogPieceOfFurniture1);
      
      boolean boolean0 = homePieceOfFurniture0.isBottomLeftPointAt(1689.4241F, 1689.4241F, 8192.0F);
      assertFalse(catalogPieceOfFurniture0.equals((Object)catalogPieceOfFurniture1));
      assertFalse(boolean0);
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("Mac OS X", homePieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals("Mac OS X", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNotSame(catalogPieceOfFurniture0, catalogPieceOfFurniture1);
      
      homePieceOfFurniture0.setNameVisible(true);
      assertFalse(catalogPieceOfFurniture0.equals((Object)catalogPieceOfFurniture1));
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals("Mac OS X", homePieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals("Mac OS X", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNotSame(catalogPieceOfFurniture0, catalogPieceOfFurniture1);
      
      homePieceOfFurniture0.setWidth(675.7141F);
      assertFalse(catalogPieceOfFurniture0.equals((Object)catalogPieceOfFurniture1));
      assertEquals(675.7141F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals("Mac OS X", homePieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals("Mac OS X", catalogPieceOfFurniture0.getName());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNotSame(catalogPieceOfFurniture0, catalogPieceOfFurniture1);
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      float[][] floatArray0 = new float[9][5];
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 1689.4241F, 0.0F, 1.0F, 0.0F, false, false, integer0, floatArray0, false, 0.0F, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(9, floatArray0.length);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(9, floatArray0.length);
      
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertNotNull(homePieceOfFurniture1);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertEquals("", homePieceOfFurniture1.getName());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertFalse(homePieceOfFurniture1.isMovable());
      assertEquals(1689.4241F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture1.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getY(), 0.01F);
      assertTrue(homePieceOfFurniture1.isResizable());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture1.getShininess());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertEquals(1.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals(9, floatArray0.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      homePieceOfFurniture1.setNameVisible(false);
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertEquals("", homePieceOfFurniture1.getName());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertFalse(homePieceOfFurniture1.isMovable());
      assertEquals(1689.4241F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture1.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getY(), 0.01F);
      assertTrue(homePieceOfFurniture1.isResizable());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture1.getShininess());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertEquals(1.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals(9, floatArray0.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      homePieceOfFurniture0.setNameVisible(false);
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(9, floatArray0.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      
      TextStyle textStyle0 = new TextStyle(1.0F, true, true);
      assertNotNull(textStyle0);
      assertTrue(textStyle0.isItalic());
      assertTrue(textStyle0.isBold());
      assertEquals(1.0F, textStyle0.getFontSize(), 0.01F);
      
      TextStyle textStyle1 = textStyle0.deriveStyle((-1111.42F));
      assertFalse(textStyle1.equals((Object)textStyle0));
      assertNotNull(textStyle1);
      assertTrue(textStyle0.isItalic());
      assertTrue(textStyle0.isBold());
      assertEquals(1.0F, textStyle0.getFontSize(), 0.01F);
      assertEquals((-1111.42F), textStyle1.getFontSize(), 0.01F);
      assertTrue(textStyle1.isBold());
      assertTrue(textStyle1.isItalic());
      assertNotSame(textStyle0, textStyle1);
      assertNotSame(textStyle1, textStyle0);
      
      homePieceOfFurniture0.setNameStyle(textStyle1);
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(textStyle0.equals((Object)textStyle1));
      assertFalse(textStyle1.equals((Object)textStyle0));
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(textStyle0.isItalic());
      assertTrue(textStyle0.isBold());
      assertEquals(1.0F, textStyle0.getFontSize(), 0.01F);
      assertEquals((-1111.42F), textStyle1.getFontSize(), 0.01F);
      assertTrue(textStyle1.isBold());
      assertTrue(textStyle1.isItalic());
      assertEquals(9, floatArray0.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(textStyle0, textStyle1);
      assertNotSame(textStyle1, textStyle0);
      
      homePieceOfFurniture1.setModelMirrored(true);
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertEquals("", homePieceOfFurniture1.getName());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertFalse(homePieceOfFurniture1.isMovable());
      assertEquals(1689.4241F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture1.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getY(), 0.01F);
      assertTrue(homePieceOfFurniture1.isResizable());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture1.getShininess());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertTrue(homePieceOfFurniture1.isModelMirrored());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertNull(homePieceOfFurniture1.getCurrency());
      assertEquals(1.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals(9, floatArray0.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
      
      boolean boolean0 = homePieceOfFurniture0.isVisible();
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertTrue(boolean0);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(9, floatArray0.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      
      float float0 = homePieceOfFurniture0.getNameYOffset();
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertEquals(0.0F, float0, 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(9, floatArray0.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      
      boolean boolean1 = homePieceOfFurniture0.isPointAt((-391.7589F), (-1650.44F), 1882.0F);
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(9, floatArray0.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      
      Float float1 = new Float(1541.0F);
      assertNotEquals((float)float1, (float)float0, 0.01F);
      assertNotNull(float1);
      assertEquals(1541.0F, (float)float1, 0.01F);
      
      homePieceOfFurniture1.setShininess(float1);
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertNotEquals((float)float1, (float)float0, 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getId());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(1689.4241F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(1.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(844.71204F, homePieceOfFurniture0.getX(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(1.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertEquals("", homePieceOfFurniture1.getName());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture1.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getDescription());
      assertFalse(homePieceOfFurniture1.isMovable());
      assertEquals(1689.4241F, homePieceOfFurniture1.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertEquals(844.71204F, homePieceOfFurniture1.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture1.getY(), 0.01F);
      assertTrue(homePieceOfFurniture1.isResizable());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertTrue(homePieceOfFurniture1.isModelMirrored());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertEquals(1541.0F, homePieceOfFurniture1.getShininess(), 0.01F);
      assertNull(homePieceOfFurniture1.getCurrency());
      assertEquals(1.0F, homePieceOfFurniture1.getHeight(), 0.01F);
      assertEquals(8192, (int)homePieceOfFurniture1.getColor());
      assertFalse(homePieceOfFurniture1.isBackFaceShown());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertEquals(9, floatArray0.length);
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      assertNotSame(homePieceOfFurniture1, homePieceOfFurniture0);
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8169, 8169, 8169, true, true);
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isMovable());
      
      Level level0 = new Level("", 1555.616F, 8169, 1555.616F);
      assertNotNull(level0);
      assertEquals(1555.616F, level0.getElevation(), 0.01F);
      assertEquals(1555.616F, level0.getHeight(), 0.01F);
      assertEquals("", level0.getName());
      assertEquals(8169.0F, level0.getFloorThickness(), 0.01F);
      assertTrue(level0.isVisible());
      
      boolean boolean0 = homePieceOfFurniture0.isAtLevel(level0);
      assertFalse(boolean0);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(8169.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8169.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(4084.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(4084.5F, homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(8169.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals(8169.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(1555.616F, level0.getElevation(), 0.01F);
      assertEquals(1555.616F, level0.getHeight(), 0.01F);
      assertEquals("", level0.getName());
      assertEquals(8169.0F, level0.getFloorThickness(), 0.01F);
      assertTrue(level0.isVisible());
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      assertNotNull(integer0);
      assertEquals(8192, (int)integer0);
      
      Integer integer1 = new Integer(8192);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals(8192, (int)integer1);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 839.74414F, 8192, 8192, 839.74414F, true, true, integer1, (float[][]) null, false, 38.1F, true);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(839.74414F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(839.74414F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(38.1F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertTrue(integer1.equals((Object)integer0));
      assertNotNull(homePieceOfFurniture0);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(839.74414F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(839.74414F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(38.1F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(839.74414F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(419.87207F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(839.74414F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(839.74414F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      
      homePieceOfFurniture0.setDepth(8192);
      assertTrue(integer1.equals((Object)integer0));
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(839.74414F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(839.74414F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(38.1F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(839.74414F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(419.87207F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(839.74414F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(839.74414F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      
      boolean boolean0 = homePieceOfFurniture0.isVisible();
      assertTrue(integer1.equals((Object)integer0));
      assertTrue(boolean0);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(839.74414F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(839.74414F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(38.1F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(839.74414F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(419.87207F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(839.74414F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(839.74414F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      
      homePieceOfFurniture0.setName((String) null);
      assertTrue(integer1.equals((Object)integer0));
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(839.74414F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(839.74414F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(38.1F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(839.74414F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(419.87207F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(839.74414F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(839.74414F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      
      FurnitureCategory furnitureCategory0 = catalogPieceOfFurniture0.getCategory();
      assertTrue(integer1.equals((Object)integer0));
      assertNull(furnitureCategory0);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(839.74414F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(839.74414F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(38.1F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      
      Sash[] sashArray0 = new Sash[2];
      Sash sash0 = new Sash(839.74414F, 839.74414F, 0.5F, 8192, 0.0F);
      assertNotNull(sash0);
      assertEquals(0.0F, sash0.getEndAngle(), 0.01F);
      assertEquals(839.74414F, sash0.getYAxis(), 0.01F);
      assertEquals(0.5F, sash0.getWidth(), 0.01F);
      assertEquals(839.74414F, sash0.getXAxis(), 0.01F);
      assertEquals(8192.0F, sash0.getStartAngle(), 0.01F);
      
      sashArray0[0] = sash0;
      Sash sash1 = new Sash(38.1F, 0.0F, (-3639.1F), (-1154.6F), (-1154.6F));
      assertFalse(sash1.equals((Object)sash0));
      assertNotNull(sash1);
      assertEquals((-1154.6F), sash1.getStartAngle(), 0.01F);
      assertEquals((-3639.1F), sash1.getWidth(), 0.01F);
      assertEquals((-1154.6F), sash1.getEndAngle(), 0.01F);
      assertEquals(0.0F, sash1.getYAxis(), 0.01F);
      assertEquals(38.1F, sash1.getXAxis(), 0.01F);
      
      sashArray0[1] = sash1;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow((String) null, (String) null, "", (Content) null, (Content) null, (Content) null, 839.74414F, 8192, 38.1F, 38.1F, true, 8192, 8192, sashArray0, (float[][]) null, "G*`;|", true, false, true, bigDecimal0, bigDecimal0);
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("G*`;|", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isDeformable());
      assertEquals(8192.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(8192.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(38.1F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(839.74414F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(38.1F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8192.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(2, sashArray0.length);
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertNotNull(homeDoorOrWindow0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("G*`;|", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isDeformable());
      assertEquals(8192.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(8192.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(38.1F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(839.74414F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(38.1F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8192.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(8192.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(38.1F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8192.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(8192.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(419.87207F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(4096.0F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(38.1F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isDeformable());
      assertEquals(839.74414F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(38.1F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(2, sashArray0.length);
      
      BigDecimal bigDecimal1 = homeDoorOrWindow0.getPriceValueAddedTaxIncluded();
      assertNotNull(bigDecimal1);
      assertEquals((short)0, bigDecimal1.shortValue());
      assertEquals((byte)0, bigDecimal1.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("G*`;|", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isDeformable());
      assertEquals(8192.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(8192.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(38.1F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(839.74414F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(38.1F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8192.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(8192.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(38.1F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8192.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(8192.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(419.87207F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(4096.0F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(38.1F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isDeformable());
      assertEquals(839.74414F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(38.1F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(2, sashArray0.length);
      assertSame(bigDecimal1, bigDecimal0);
      assertSame(bigDecimal0, bigDecimal1);
      
      BigDecimal bigDecimal2 = bigDecimal0.min(bigDecimal1);
      assertNotNull(bigDecimal2);
      assertEquals((short)0, bigDecimal1.shortValue());
      assertEquals((byte)0, bigDecimal1.byteValue());
      assertEquals((short)0, bigDecimal2.shortValue());
      assertEquals((byte)0, bigDecimal2.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("G*`;|", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isDeformable());
      assertEquals(8192.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(8192.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(38.1F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(839.74414F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(38.1F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8192.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(8192.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(38.1F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8192.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(8192.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(419.87207F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(4096.0F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(38.1F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isDeformable());
      assertEquals(839.74414F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(38.1F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(2, sashArray0.length);
      assertSame(bigDecimal1, bigDecimal0);
      assertSame(bigDecimal1, bigDecimal2);
      assertSame(bigDecimal2, bigDecimal0);
      assertSame(bigDecimal2, bigDecimal1);
      assertSame(bigDecimal0, bigDecimal1);
      assertSame(bigDecimal0, bigDecimal2);
      
      Integer integer2 = Integer.getInteger("");
      assertNull(integer2);
      
      boolean boolean1 = homePieceOfFurniture0.isResizable();
      assertTrue(integer1.equals((Object)integer0));
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(8192, (int)catalogPieceOfFurniture0.getColor());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertEquals(839.74414F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(839.74414F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(38.1F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertEquals(8192.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertEquals(839.74414F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(4096.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(8192, (int)homePieceOfFurniture0.getColor());
      assertEquals(419.87207F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(839.74414F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getName());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(839.74414F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(8192.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(8192.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      
      homeDoorOrWindow0.setAngle((-2082.9473F));
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals("", catalogDoorOrWindow0.getDescription());
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("G*`;|", catalogDoorOrWindow0.getCreator());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertTrue(catalogDoorOrWindow0.isMovable());
      assertNull(catalogDoorOrWindow0.getName());
      assertFalse(catalogDoorOrWindow0.isDeformable());
      assertEquals(8192.0F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(8192.0F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isResizable());
      assertTrue(catalogDoorOrWindow0.isTexturable());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertNull(catalogDoorOrWindow0.getId());
      assertEquals(38.1F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertNull(catalogDoorOrWindow0.getColor());
      assertEquals(839.74414F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(38.1F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals(8192.0F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(homeDoorOrWindow0.getCatalogId());
      assertEquals(8192.0F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertTrue(homeDoorOrWindow0.isResizable());
      assertEquals(38.1F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(8192.0F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertNull(homeDoorOrWindow0.getName());
      assertTrue(homeDoorOrWindow0.isMovable());
      assertEquals(8192.0F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(419.87207F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(4096.0F, homeDoorOrWindow0.getY(), 0.01F);
      assertTrue(homeDoorOrWindow0.isTexturable());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals("", homeDoorOrWindow0.getDescription());
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertNull(homeDoorOrWindow0.getColor());
      assertNull(homeDoorOrWindow0.getCurrency());
      assertEquals(38.1F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isDeformable());
      assertEquals(839.74414F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(38.1F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(3.0702565F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertEquals(2, sashArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertSame(bigDecimal0, bigDecimal2);
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Integer integer0 = new Integer(0);
      assertNotNull(integer0);
      assertEquals(0, (int)integer0);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      float float0 = (-1804.392F);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("work", (Content) null, (Content) null, (-1804.392F), 8147, (-1804.392F), 2394.5378F, true, true, integer0, (float[][]) null, true, 2394.5378F, true);
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("work", catalogPieceOfFurniture0.getName());
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(2394.5378F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(2394.5378F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8147.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("work", catalogPieceOfFurniture0.getName());
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(2394.5378F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(2394.5378F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8147.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals((-1804.392F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(2394.5378F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(8147.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(2394.5378F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("work", homePieceOfFurniture0.getName());
      assertEquals(4073.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      
      HomePieceOfFurniture homePieceOfFurniture1 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertFalse(homePieceOfFurniture1.equals((Object)homePieceOfFurniture0));
      assertNotNull(homePieceOfFurniture1);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("work", catalogPieceOfFurniture0.getName());
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(2394.5378F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(2394.5378F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8147.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(homePieceOfFurniture1.getDescription());
      assertEquals(0.0F, homePieceOfFurniture1.getNameXOffset(), 0.01F);
      assertEquals(4073.5F, homePieceOfFurniture1.getY(), 0.01F);
      assertEquals("work", homePieceOfFurniture1.getName());
      assertEquals(0.0F, homePieceOfFurniture1.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture1.getStaircaseCutOutShape());
      assertTrue(homePieceOfFurniture1.isResizable());
      assertFalse(homePieceOfFurniture1.isDoorOrWindow());
      assertEquals((-1804.392F), homePieceOfFurniture1.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture1.isModelMirrored());
      assertEquals(0.0F, homePieceOfFurniture1.getAngle(), 0.01F);
      assertFalse(homePieceOfFurniture1.isNameVisible());
      assertTrue(homePieceOfFurniture1.isTexturable());
      assertEquals(8147.0F, homePieceOfFurniture1.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture1.isDeformable());
      assertTrue(homePieceOfFurniture1.isVisible());
      assertEquals(0.0F, homePieceOfFurniture1.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture1.isBackFaceShown());
      assertEquals(0, (int)homePieceOfFurniture1.getColor());
      assertTrue(homePieceOfFurniture1.isMovable());
      assertNull(homePieceOfFurniture1.getShininess());
      assertNull(homePieceOfFurniture1.getCatalogId());
      assertEquals((-902.196F), homePieceOfFurniture1.getX(), 0.01F);
      assertEquals(2394.5378F, homePieceOfFurniture1.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture1.getCurrency());
      assertEquals((-1804.392F), homePieceOfFurniture1.getWidth(), 0.01F);
      assertEquals(2394.5378F, homePieceOfFurniture1.getElevation(), 0.01F);
      
      homePieceOfFurniture0.setShininess((Float) null);
      assertFalse(homePieceOfFurniture0.equals((Object)homePieceOfFurniture1));
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("work", catalogPieceOfFurniture0.getName());
      assertEquals(0, (int)catalogPieceOfFurniture0.getColor());
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(2394.5378F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertEquals((-1804.392F), catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(2394.5378F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(8147.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertTrue(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals((-1804.392F), homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(2394.5378F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(8147.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(2394.5378F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals("work", homePieceOfFurniture0.getName());
      assertEquals(4073.5F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertEquals((-902.196F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0, (int)homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals((-1804.392F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertNotSame(homePieceOfFurniture0, homePieceOfFurniture1);
      
      LightSource[] lightSourceArray0 = new LightSource[0];
      BigDecimal bigDecimal0 = new BigDecimal((-1.0));
      assertNotNull(bigDecimal0);
      assertEquals((short) (-1), bigDecimal0.shortValue());
      assertEquals((byte) (-1), bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight("0t$#28.}D]BDl7ACu@5", "_!5g%?NEJn;CvK&%", "VALUE_ADDED_TAX", (Content) null, (Content) null, (Content) null, 2394.5378F, 8147, 0, (-688.4605F), true, lightSourceArray0, "f?&dgb*oJw5g", (float[][]) null, "0t$#28.}D]BDl7ACu@5", false, true, true, bigDecimal0, bigDecimal0, "com.eteks.sweethome3d.model.HomePieceOfFurniture$15");
      assertNotNull(catalogLight0);
      assertEquals((short) (-1), bigDecimal0.shortValue());
      assertEquals((byte) (-1), bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("VALUE_ADDED_TAX", catalogLight0.getDescription());
      assertNull(catalogLight0.getInformation());
      assertEquals((-688.4605F), catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$15", catalogLight0.getCurrency());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(8147.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getGrade());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals("_!5g%?NEJn;CvK&%", catalogLight0.getName());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreationDate());
      assertEquals("f?&dgb*oJw5g", catalogLight0.getStaircaseCutOutShape());
      assertEquals(2394.5378F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0, lightSourceArray0.length);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertNotNull(homeLight0);
      assertEquals((short) (-1), bigDecimal0.shortValue());
      assertEquals((byte) (-1), bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("VALUE_ADDED_TAX", catalogLight0.getDescription());
      assertNull(catalogLight0.getInformation());
      assertEquals((-688.4605F), catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$15", catalogLight0.getCurrency());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(8147.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getGrade());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals("_!5g%?NEJn;CvK&%", catalogLight0.getName());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreationDate());
      assertEquals("f?&dgb*oJw5g", catalogLight0.getStaircaseCutOutShape());
      assertEquals(2394.5378F, catalogLight0.getWidth(), 0.01F);
      assertEquals("f?&dgb*oJw5g", homeLight0.getStaircaseCutOutShape());
      assertEquals(4073.5F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-688.4605F), homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(8147.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-688.4605F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals("VALUE_ADDED_TAX", homeLight0.getDescription());
      assertEquals("_!5g%?NEJn;CvK&%", homeLight0.getName());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isResizable());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$15", homeLight0.getCurrency());
      assertTrue(homeLight0.isMovable());
      assertEquals(1197.2689F, homeLight0.getX(), 0.01F);
      assertEquals(2394.5378F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0, lightSourceArray0.length);
      
      catalogLight0.setCategory((FurnitureCategory) null);
      assertEquals((short) (-1), bigDecimal0.shortValue());
      assertEquals((byte) (-1), bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("VALUE_ADDED_TAX", catalogLight0.getDescription());
      assertNull(catalogLight0.getInformation());
      assertEquals((-688.4605F), catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$15", catalogLight0.getCurrency());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(8147.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getGrade());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals("_!5g%?NEJn;CvK&%", catalogLight0.getName());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreationDate());
      assertEquals("f?&dgb*oJw5g", catalogLight0.getStaircaseCutOutShape());
      assertEquals(2394.5378F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0, lightSourceArray0.length);
      
      float float1 = (-2936.19F);
      // Undeclared exception!
      try { 
        homeLight0.setHeight((-608.93F));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " doesn't contain piece ");
      assertFalse(boolean0);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture((String) null, (Content) null, (Content) null, 4.5310254F, 709.326F, 0.13417281F, false, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.13417281F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.13417281F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(354.663F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(709.326F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.13417281F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(2.2655127F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getName());
      assertEquals(4.5310254F, homePieceOfFurniture0.getWidth(), 0.01F);
      
      homePieceOfFurniture0.setDescription((String) null);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.13417281F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(354.663F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(709.326F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.13417281F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(2.2655127F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getName());
      assertEquals(4.5310254F, homePieceOfFurniture0.getWidth(), 0.01F);
      
      homePieceOfFurniture0.move(0.13417281F, 2946.6F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.13417281F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(3301.2632F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(2.3996856F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(709.326F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.13417281F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getName());
      assertEquals(4.5310254F, homePieceOfFurniture0.getWidth(), 0.01F);
      
      boolean boolean1 = homePieceOfFurniture0.isPointAt(709.326F, 709.326F, 709.326F);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.13417281F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(3301.2632F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(2.3996856F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(709.326F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.13417281F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getName());
      assertEquals(4.5310254F, homePieceOfFurniture0.getWidth(), 0.01F);
      
      homePieceOfFurniture0.setX((-1.0F));
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.13417281F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(3301.2632F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(709.326F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.13417281F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getName());
      assertEquals(4.5310254F, homePieceOfFurniture0.getWidth(), 0.01F);
      
      homePieceOfFurniture0.setNameVisible(false);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.13417281F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(3301.2632F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(709.326F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.13417281F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getName());
      assertEquals(4.5310254F, homePieceOfFurniture0.getWidth(), 0.01F);
      
      FurnitureCategory furnitureCategory0 = new FurnitureCategory((String) null);
      assertNotNull(furnitureCategory0);
      assertEquals(0, furnitureCategory0.getFurnitureCount());
      assertNull(furnitureCategory0.getName());
      
      catalogPieceOfFurniture0.setCategory(furnitureCategory0);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.13417281F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertEquals(0, furnitureCategory0.getFurnitureCount());
      assertNull(furnitureCategory0.getName());
      
      homePieceOfFurniture0.setWidth(1798.2F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.13417281F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(3301.2632F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1798.2F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(709.326F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.13417281F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getName());
      
      homePieceOfFurniture0.setNameVisible(false);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.13417281F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(3301.2632F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1798.2F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(709.326F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.13417281F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getName());
      
      boolean boolean2 = homePieceOfFurniture0.isTopLeftPointAt(4846.0F, 0.13417281F, 8192.414F);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(0.13417281F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(3301.2632F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getColor());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(1798.2F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(709.326F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals((-1.0F), homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertEquals(0.13417281F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getName());
      
      HomePieceOfFurniture.SortableProperty[] homePieceOfFurniture_SortablePropertyArray0 = HomePieceOfFurniture.SortableProperty.values();
      assertNotNull(homePieceOfFurniture_SortablePropertyArray0);
      assertEquals(19, homePieceOfFurniture_SortablePropertyArray0.length);
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      float[][] floatArray0 = new float[9][5];
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture(")&u2l", (Content) null, (Content) null, 0.0F, 4.5310254F, 1716.0F, false, true);
      assertNotNull(catalogPieceOfFurniture0);
      assertEquals(")&u2l", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1716.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertEquals(")&u2l", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1716.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(homePieceOfFurniture0.getShininess());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(1716.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(")&u2l", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(4.5310254F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(2.2655127F, homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      
      homePieceOfFurniture0.setDescription("com.eteks.sweethome3d.model.HomePieceOfFurniture$9");
      assertEquals(")&u2l", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1716.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$9", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getShininess());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(1716.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(")&u2l", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(4.5310254F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(2.2655127F, homePieceOfFurniture0.getY(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      
      homePieceOfFurniture0.move(1689.4241F, 8192);
      assertEquals(")&u2l", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1716.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8194.266F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$9", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getShininess());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(1716.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(")&u2l", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(4.5310254F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      
      boolean boolean0 = homePieceOfFurniture0.isBottomLeftPointAt(4.5310254F, 1.0F, 8192);
      assertFalse(boolean0);
      assertEquals(")&u2l", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1716.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8194.266F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$9", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getShininess());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(1716.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(")&u2l", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(4.5310254F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      
      homePieceOfFurniture0.setX(1689.4241F);
      assertEquals(")&u2l", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1716.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8194.266F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$9", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getShininess());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(1716.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(")&u2l", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(4.5310254F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      
      homePieceOfFurniture0.setNameVisible(true);
      assertEquals(")&u2l", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1716.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8194.266F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$9", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getShininess());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(1716.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(")&u2l", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(4.5310254F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      
      homePieceOfFurniture0.setWidth(0.0F);
      assertEquals(")&u2l", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1716.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8194.266F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$9", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getShininess());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(1716.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(")&u2l", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(4.5310254F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.ELEVATION;
      Comparator<HomePieceOfFurniture> comparator0 = HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      assertNotNull(comparator0);
      
      Integer integer0 = homePieceOfFurniture0.getColor();
      assertNull(integer0);
      assertEquals(")&u2l", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1716.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8194.266F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$9", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getShininess());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(1716.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(")&u2l", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(4.5310254F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
      
      homePieceOfFurniture0.setDepth((-1062.4395F));
      assertEquals(")&u2l", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(1716.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(4.5310254F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8194.266F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$9", homePieceOfFurniture0.getDescription());
      assertNull(homePieceOfFurniture0.getShininess());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertEquals(1716.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(")&u2l", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertEquals((-1062.4395F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(1689.4241F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertEquals(0.0F, homePieceOfFurniture0.getWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Integer integer0 = new Integer(1541);
      assertNotNull(integer0);
      assertEquals(1541, (int)integer0);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      Integer integer1 = new Integer((-1528));
      assertFalse(integer1.equals((Object)integer0));
      assertNotNull(integer1);
      assertEquals((-1528), (int)integer1);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, (-1668.96F), (-1302.2003F), 0.39F, 0.0F, false, true, integer1, (float[][]) null, false, 0.0F, false);
      assertFalse(integer1.equals((Object)integer0));
      assertNotNull(catalogPieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.39F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals((-1528), (int)catalogPieceOfFurniture0.getColor());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1668.96F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-1302.2003F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertFalse(integer1.equals((Object)integer0));
      assertNotNull(homePieceOfFurniture0);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.39F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals((-1528), (int)catalogPieceOfFurniture0.getColor());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1668.96F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-1302.2003F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.39F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1668.96F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals((-651.10016F), homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals((-1302.2003F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals((-1528), (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-834.48F), homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      
      homePieceOfFurniture0.setNameVisible(false);
      assertFalse(integer1.equals((Object)integer0));
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.39F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals((-1528), (int)catalogPieceOfFurniture0.getColor());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1668.96F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-1302.2003F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.39F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1668.96F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals((-651.10016F), homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals((-1302.2003F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals((-1528), (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-834.48F), homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      
      homePieceOfFurniture0.setModelMirrored(false);
      assertFalse(integer1.equals((Object)integer0));
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.39F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals((-1528), (int)catalogPieceOfFurniture0.getColor());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1668.96F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-1302.2003F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.39F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1668.96F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals((-651.10016F), homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals((-1302.2003F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals((-1528), (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-834.48F), homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      Float float0 = new Float(2854154.6959505677);
      assertNotNull(float0);
      assertEquals(2854154.8F, (float)float0, 0.01F);
      
      Float float1 = new Float((float) 1541);
      assertNotEquals((float)float1, (float)float0, 0.01F);
      assertNotNull(float1);
      assertEquals(1541.0F, (float)float1, 0.01F);
      
      homePieceOfFurniture0.setShininess(float0);
      assertFalse(integer1.equals((Object)integer0));
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.39F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals((-1528), (int)catalogPieceOfFurniture0.getColor());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1668.96F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-1302.2003F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.39F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-1668.96F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals((-651.10016F), homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals((-1302.2003F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals((-1528), (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-834.48F), homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(2854154.8F, homePieceOfFurniture0.getShininess(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      
      homePieceOfFurniture0.setNameYOffset(0.39F);
      assertFalse(integer1.equals((Object)integer0));
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.39F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals((-1528), (int)catalogPieceOfFurniture0.getColor());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1668.96F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-1302.2003F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.39F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1668.96F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.39F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-651.10016F), homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals((-1302.2003F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals((-1528), (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-834.48F), homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(2854154.8F, homePieceOfFurniture0.getShininess(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      
      boolean boolean1 = homePieceOfFurniture0.isMovable();
      assertFalse(integer1.equals((Object)integer0));
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.39F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals((-1528), (int)catalogPieceOfFurniture0.getColor());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1668.96F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-1302.2003F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.39F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1668.96F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.39F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals((-651.10016F), homePieceOfFurniture0.getY(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals((-1302.2003F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals((-1528), (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals((-834.48F), homePieceOfFurniture0.getX(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(2854154.8F, homePieceOfFurniture0.getShininess(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      
      homePieceOfFurniture0.move((-1302.2003F), 1689.4241F);
      assertFalse(integer1.equals((Object)integer0));
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.39F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals((-1528), (int)catalogPieceOfFurniture0.getColor());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1668.96F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-1302.2003F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.39F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1668.96F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.39F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals((-1302.2003F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals((-1528), (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1038.324F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(2854154.8F, homePieceOfFurniture0.getShininess(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-2136.6802F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      
      homePieceOfFurniture0.setNameYOffset(0.39F);
      assertFalse(integer1.equals((Object)integer0));
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.39F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals((-1528), (int)catalogPieceOfFurniture0.getColor());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1668.96F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-1302.2003F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.39F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1668.96F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.39F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals((-1302.2003F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals((-1528), (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1038.324F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(2854154.8F, homePieceOfFurniture0.getShininess(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-2136.6802F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      
      boolean boolean2 = homePieceOfFurniture0.isDeformable();
      assertFalse(integer1.equals((Object)integer0));
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2);
      assertFalse(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertEquals(0.0F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(0.39F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(1392409281320L, (long)catalogPieceOfFurniture0.getCreationDate());
      assertEquals((-1528), (int)catalogPieceOfFurniture0.getColor());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertEquals((-1668.96F), catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertEquals((-1302.2003F), catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(0.39F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals((-1668.96F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals(0.39F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals((-1302.2003F), homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals((-1528), (int)homePieceOfFurniture0.getColor());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(1038.324F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(2854154.8F, homePieceOfFurniture0.getShininess(), 0.01F);
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals((-2136.6802F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 709.326F, 709.326F, 3602.9255F, false, false);
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(3602.9255F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(709.326F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(3602.9255F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(709.326F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(354.663F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(354.663F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(3602.9255F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(709.326F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(709.326F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getColor());
      
      homePieceOfFurniture0.setDescription("3%H9Dy7f#w");
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(3602.9255F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(709.326F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals("3%H9Dy7f#w", homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(354.663F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(354.663F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(3602.9255F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(709.326F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(709.326F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getColor());
      
      homePieceOfFurniture0.move((-1271.8923F), (-796.0F));
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(3602.9255F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(709.326F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals("3%H9Dy7f#w", homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(3602.9255F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(709.326F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(709.326F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-441.337F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-917.2294F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getColor());
      
      boolean boolean0 = homePieceOfFurniture0.isPointAt(4.5310254F, 4104.5F, (-1271.8923F));
      assertFalse(boolean0);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(3602.9255F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(709.326F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals("3%H9Dy7f#w", homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(3602.9255F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(709.326F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(709.326F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-441.337F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals((-917.2294F), homePieceOfFurniture0.getX(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getColor());
      
      homePieceOfFurniture0.setX(2170.79F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(3602.9255F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(709.326F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals("3%H9Dy7f#w", homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(2170.79F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(3602.9255F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(709.326F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(709.326F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-441.337F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getColor());
      
      homePieceOfFurniture0.setNameVisible(false);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(3602.9255F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(709.326F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals("3%H9Dy7f#w", homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(2170.79F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(3602.9255F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertEquals(709.326F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(709.326F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-441.337F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getColor());
      
      homePieceOfFurniture0.setWidth((-1218.04F));
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(3602.9255F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(709.326F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals((-1218.04F), homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals("3%H9Dy7f#w", homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(2170.79F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(3602.9255F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(709.326F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-441.337F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getColor());
      
      homePieceOfFurniture0.setWidth(4.5310254F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(3602.9255F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(709.326F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals("3%H9Dy7f#w", homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(2170.79F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(3602.9255F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(4.5310254F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(709.326F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-441.337F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getColor());
      
      float float0 = homePieceOfFurniture0.getHeight();
      assertEquals(3602.9255F, float0, 0.01F);
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertEquals(709.326F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(3602.9255F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertNull(catalogPieceOfFurniture0.getColor());
      assertEquals(709.326F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertNull(catalogPieceOfFurniture0.getId());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertFalse(catalogPieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getShininess());
      assertTrue(homePieceOfFurniture0.isResizable());
      assertFalse(homePieceOfFurniture0.isMovable());
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertEquals("3%H9Dy7f#w", homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(2170.79F, homePieceOfFurniture0.getX(), 0.01F);
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertTrue(homePieceOfFurniture0.isVisible());
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertEquals(3602.9255F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertEquals(4.5310254F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertEquals(709.326F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals((-441.337F), homePieceOfFurniture0.getY(), 0.01F);
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertNull(homePieceOfFurniture0.getColor());
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      HomePieceOfFurniture homePieceOfFurniture0 = null;
      try {
        homePieceOfFurniture0 = new HomePieceOfFurniture((PieceOfFurniture) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Integer integer0 = new Integer(8184);
      assertNotNull(integer0);
      assertEquals(8184, (int)integer0);
      
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 5031.55F, 8184, 8184, true, true);
      assertNotNull(catalogPieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(5031.55F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8184.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8184.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      assertNotNull(homePieceOfFurniture0);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(5031.55F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8184.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8184.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(2515.775F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(5031.55F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8184.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8184.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(4092.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      
      CatalogTexture catalogTexture0 = new CatalogTexture("M IJu8!G", (Content) null, 5031.55F, 5031.55F);
      assertNotNull(catalogTexture0);
      assertEquals("M IJu8!G", catalogTexture0.getName());
      assertFalse(catalogTexture0.isModifiable());
      assertEquals(5031.55F, catalogTexture0.getHeight(), 0.01F);
      assertNull(catalogTexture0.getCreator());
      assertEquals(5031.55F, catalogTexture0.getWidth(), 0.01F);
      assertNull(catalogTexture0.getId());
      
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      assertNotNull(homeTexture0);
      assertEquals("M IJu8!G", catalogTexture0.getName());
      assertFalse(catalogTexture0.isModifiable());
      assertEquals(5031.55F, catalogTexture0.getHeight(), 0.01F);
      assertNull(catalogTexture0.getCreator());
      assertEquals(5031.55F, catalogTexture0.getWidth(), 0.01F);
      assertNull(catalogTexture0.getId());
      assertTrue(homeTexture0.isLeftToRightOriented());
      assertEquals(5031.55F, homeTexture0.getWidth(), 0.01F);
      assertEquals("M IJu8!G", homeTexture0.getName());
      assertEquals(5031.55F, homeTexture0.getHeight(), 0.01F);
      
      homePieceOfFurniture0.setTexture(homeTexture0);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(5031.55F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8184.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8184.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(2515.775F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(5031.55F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8184.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8184.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(4092.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      assertEquals("M IJu8!G", catalogTexture0.getName());
      assertFalse(catalogTexture0.isModifiable());
      assertEquals(5031.55F, catalogTexture0.getHeight(), 0.01F);
      assertNull(catalogTexture0.getCreator());
      assertEquals(5031.55F, catalogTexture0.getWidth(), 0.01F);
      assertNull(catalogTexture0.getId());
      assertTrue(homeTexture0.isLeftToRightOriented());
      assertEquals(5031.55F, homeTexture0.getWidth(), 0.01F);
      assertEquals("M IJu8!G", homeTexture0.getName());
      assertEquals(5031.55F, homeTexture0.getHeight(), 0.01F);
      
      homePieceOfFurniture0.setShininess((Float) null);
      assertNull(catalogPieceOfFurniture0.getStaircaseCutOutShape());
      assertTrue(catalogPieceOfFurniture0.isDeformable());
      assertNull(catalogPieceOfFurniture0.getInformation());
      assertTrue(catalogPieceOfFurniture0.isResizable());
      assertEquals(5031.55F, catalogPieceOfFurniture0.getWidth(), 0.01F);
      assertFalse(catalogPieceOfFurniture0.isBackFaceShown());
      assertEquals(8184.0F, catalogPieceOfFurniture0.getDepth(), 0.01F);
      assertTrue(catalogPieceOfFurniture0.isMovable());
      assertNull(catalogPieceOfFurniture0.getCurrency());
      assertNull(catalogPieceOfFurniture0.getCreator());
      assertNull(catalogPieceOfFurniture0.getDescription());
      assertNull(catalogPieceOfFurniture0.getId());
      assertEquals(8184.0F, catalogPieceOfFurniture0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogPieceOfFurniture0.getIconYaw(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getColor());
      assertFalse(catalogPieceOfFurniture0.isModifiable());
      assertEquals(0.0F, catalogPieceOfFurniture0.getElevation(), 0.01F);
      assertNull(catalogPieceOfFurniture0.getCreationDate());
      assertFalse(catalogPieceOfFurniture0.isDoorOrWindow());
      assertEquals("", catalogPieceOfFurniture0.getName());
      assertTrue(catalogPieceOfFurniture0.isProportional());
      assertNull(catalogPieceOfFurniture0.getGrade());
      assertTrue(catalogPieceOfFurniture0.isTexturable());
      assertFalse(homePieceOfFurniture0.isModelMirrored());
      assertFalse(homePieceOfFurniture0.isBackFaceShown());
      assertFalse(homePieceOfFurniture0.isDoorOrWindow());
      assertNull(homePieceOfFurniture0.getColor());
      assertFalse(homePieceOfFurniture0.isNameVisible());
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
      assertTrue(homePieceOfFurniture0.isTexturable());
      assertNull(homePieceOfFurniture0.getCurrency());
      assertEquals(0.0F, homePieceOfFurniture0.getNameYOffset(), 0.01F);
      assertEquals(2515.775F, homePieceOfFurniture0.getX(), 0.01F);
      assertEquals("", homePieceOfFurniture0.getName());
      assertNull(homePieceOfFurniture0.getShininess());
      assertEquals(5031.55F, homePieceOfFurniture0.getWidth(), 0.01F);
      assertTrue(homePieceOfFurniture0.isResizable());
      assertNull(homePieceOfFurniture0.getCatalogId());
      assertEquals(8184.0F, homePieceOfFurniture0.getHeight(), 0.01F);
      assertTrue(homePieceOfFurniture0.isMovable());
      assertEquals(0.0F, homePieceOfFurniture0.getElevation(), 0.01F);
      assertTrue(homePieceOfFurniture0.isDeformable());
      assertNull(homePieceOfFurniture0.getDescription());
      assertEquals(0.0F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertEquals(8184.0F, homePieceOfFurniture0.getDepth(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homePieceOfFurniture0.getNameAngle(), 0.01F);
      assertNull(homePieceOfFurniture0.getStaircaseCutOutShape());
      assertEquals(4092.0F, homePieceOfFurniture0.getY(), 0.01F);
      assertTrue(homePieceOfFurniture0.isVisible());
      
      // Undeclared exception!
      try { 
        HomePieceOfFurniture.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomePieceOfFurniture.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      float[][] floatArray0 = new float[8][5];
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      Long long0 = new Long(2606L);
      assertNotNull(long0);
      assertEquals(2606L, (long)long0);
      
      Float float0 = new Float((-722.6151));
      assertNotNull(float0);
      assertEquals((-722.6151F), (float)float0, 0.01F);
      
      LightSource[] lightSourceArray0 = new LightSource[3];
      LightSource lightSource0 = new LightSource(4.807939F, 2606L, 1.0F, (-1586));
      assertNotNull(lightSource0);
      assertNull(lightSource0.getDiameter());
      assertEquals(4.807939F, lightSource0.getX(), 0.01F);
      assertEquals((-1586), lightSource0.getColor());
      assertEquals(1.0F, lightSource0.getZ(), 0.01F);
      assertEquals(2606.0F, lightSource0.getY(), 0.01F);
      
      lightSourceArray0[0] = lightSource0;
      Float float1 = new Float((double) 4.807939F);
      assertNotEquals((float)float1, (float)float0, 0.01F);
      assertNotNull(float1);
      assertEquals(4.807939F, (float)float1, 0.01F);
      
      LightSource lightSource1 = new LightSource((-2134.0F), 4.807939F, 2606L, (-1586), float1);
      assertNotEquals((float)float1, (float)float0, 0.01F);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals((-1586), lightSource1.getColor());
      assertEquals(2606.0F, lightSource1.getZ(), 0.01F);
      assertEquals(4.807939F, lightSource1.getY(), 0.01F);
      assertEquals((-2134.0F), lightSource1.getX(), 0.01F);
      assertEquals(4.807939F, lightSource1.getDiameter(), 0.01F);
      
      lightSourceArray0[1] = lightSource1;
      LightSource lightSource2 = new LightSource((-1068.0F), (-1068.0F), 0.5F, (-1586), float1);
      assertNotEquals((float)float1, (float)float0, 0.01F);
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertNotNull(lightSource2);
      assertEquals(4.807939F, lightSource2.getDiameter(), 0.01F);
      assertEquals((-1586), lightSource2.getColor());
      assertEquals((-1068.0F), lightSource2.getX(), 0.01F);
      assertEquals(0.5F, lightSource2.getZ(), 0.01F);
      assertEquals((-1068.0F), lightSource2.getY(), 0.01F);
      
      lightSourceArray0[2] = lightSource2;
      CatalogLight catalogLight0 = new CatalogLight("", "", "", "?Je&Bv>:|Z)", stringArray0, long0, float0, (Content) null, (Content) null, (Content) null, 1.0F, 4.2086115F, 1.0F, 289.1088F, false, lightSourceArray0, (String) null, floatArray0, "?Je&Bv>:|Z)", false, false, false, (BigDecimal) null, (BigDecimal) null, "");
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertNotNull(catalogLight0);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getDescription());
      assertEquals("", catalogLight0.getName());
      assertEquals(2606L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isTexturable());
      assertEquals("", catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getId());
      assertFalse(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isMovable());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(289.1088F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isResizable());
      assertEquals("?Je&Bv>:|Z)", catalogLight0.getCreator());
      assertEquals(4.2086115F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("?Je&Bv>:|Z)", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertEquals((-722.6151F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(8, floatArray0.length);
      assertEquals(1, stringArray0.length);
      assertEquals(3, lightSourceArray0.length);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertNotNull(homeLight0);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getDescription());
      assertEquals("", catalogLight0.getName());
      assertEquals(2606L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isTexturable());
      assertEquals("", catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getId());
      assertFalse(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isMovable());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(289.1088F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isResizable());
      assertEquals("?Je&Bv>:|Z)", catalogLight0.getCreator());
      assertEquals(4.2086115F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("?Je&Bv>:|Z)", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertEquals((-722.6151F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(2.1043057F, homeLight0.getY(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals("", homeLight0.getCatalogId());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(4.2086115F, homeLight0.getDepth(), 0.01F);
      assertEquals("", homeLight0.getName());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isVisible());
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(289.1088F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isDeformable());
      assertEquals(289.1088F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals(8, floatArray0.length);
      assertEquals(1, stringArray0.length);
      assertEquals(3, lightSourceArray0.length);
      
      // Undeclared exception!
      try { 
        homeLight0.setHeight((-2239.7F));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Integer integer0 = new Integer((-788));
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("wQB{C5P b|^<", (Content) null, (Content) null, (-788), 0.5F, (-788), false, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDescription("wQB{C5P b|^<");
      homePieceOfFurniture0.getNameYOffset();
      homePieceOfFurniture0.setWidth(469.5F);
      homePieceOfFurniture0.isTopRightPointAt((-788), 0.0F, (-788));
      homePieceOfFurniture0.getGroundElevation();
      homePieceOfFurniture0.isDoorOrWindow();
      homePieceOfFurniture0.setNameXOffset((-788));
      boolean boolean0 = homePieceOfFurniture0.isNameCenterPointAt((-788), (-5031.3F), 469.5F);
      assertEquals((-788.0F), homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)120;
      byteArray0[1] = (byte)121;
      byteArray0[2] = (byte)33;
      byteArray0[3] = (byte)33;
      byteArray0[4] = (byte)14;
      byteArray0[5] = (byte)68;
      byteArray0[6] = (byte) (-60);
      byteArray0[7] = (byte)101;
      byteArray0[8] = (byte) (-109);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Integer integer0 = new Integer(8192);
      float[][] floatArray0 = new float[8][5];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("Q379", (Content) null, (Content) null, 1679.4883F, 1679.4883F, 1679.4883F, 1679.4883F, false, false, integer0, floatArray0, false, (-359.393F), false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      catalogPieceOfFurniture0.getCategory();
      homePieceOfFurniture0.clone();
      homePieceOfFurniture0.setNameXOffset(3663.043F);
      HomePieceOfFurniture.Property.values();
      homePieceOfFurniture0.clone();
      assertEquals(3663.043F, homePieceOfFurniture0.getNameXOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Integer integer0 = new Integer(8192);
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1689.4241F;
      floatArray0[1] = 1689.4241F;
      floatArray0[1] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (float) 8192;
      floatArray0[5] = (float) 8192;
      floatArray0[6] = 1689.4241F;
      Integer.compare(8192, 2552);
      float[][] floatArray1 = new float[9][5];
      floatArray1[0] = floatArray0;
      floatArray1[1] = floatArray0;
      floatArray1[3] = floatArray0;
      floatArray1[4] = floatArray0;
      floatArray1[5] = floatArray0;
      floatArray1[7] = floatArray0;
      floatArray1[8] = floatArray0;
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", (Content) null, (Content) null, 8192.0F, (-1291.6161F), 1.0F, 8192.0F, false, false, integer0, floatArray1, false, 8192.0F, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDescription("editorSubFolder.Windows");
      homePieceOfFurniture0.setElevation((-1291.6161F));
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setWidth(675.7141F);
      homePieceOfFurniture0.isTopRightPointAt(1689.4241F, 1689.4241F, 8192.0F);
      homePieceOfFurniture0.isTexturable();
      assertEquals((-1291.6161F), homePieceOfFurniture0.getGroundElevation(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Integer integer0 = new Integer(0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "work");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Integer integer1 = new Integer(0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("1SyjFPv9=&P", (Content) null, (Content) null, (-1804.392F), 8192, 151.23F, 1.0F, true, true, integer1, (float[][]) null, false, 1.0F, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      homePieceOfFurniture1.getValueAddedTax();
      CatalogPieceOfFurniture catalogPieceOfFurniture1 = new CatalogPieceOfFurniture("1SyjFPv9=&P", (Content) null, (Content) null, (-1804.392F), 517.9619F, 8192, 2905.8782F, false, integer0, (float[][]) null, true, 151.23F, true);
      HomePieceOfFurniture homePieceOfFurniture2 = new HomePieceOfFurniture(homePieceOfFurniture0);
      homePieceOfFurniture0.getNameYOffset();
      homePieceOfFurniture0.setHeight(3.4028235E38F);
      homePieceOfFurniture2.isTopLeftPointAt((-1.0F), 0.0F, 2112.65F);
      Random.setNextRandom(2088);
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("F]&,N", (Content) null, (Content) null, 8169, 8169, 614.572F, false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      boolean boolean0 = homePieceOfFurniture0.isTopLeftPointAt(0.0F, 0.0F, 8169);
      assertTrue(boolean0);
      
      homePieceOfFurniture0.getValueAddedTax();
      assertEquals(0.0F, homePieceOfFurniture0.getAngle(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("work", (Content) null, (Content) null, 2.0F, 8192, 2.0F, true, false);
      Level level0 = new Level("work", 2.0F, 8192, 8192);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      String string0 = homePieceOfFurniture0.getCatalogId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Integer integer0 = new Integer((-788));
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("wQB{C5P b|^<", (Content) null, (Content) null, (-788), 0.5F, (-788), false, false);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDescription("wQB{C5P b|^<");
      homePieceOfFurniture0.getNameYOffset();
      homePieceOfFurniture0.setWidth(469.5F);
      homePieceOfFurniture0.isTopRightPointAt((-788), 0.0F, (-788));
      homePieceOfFurniture0.getGroundElevation();
      homePieceOfFurniture0.isDoorOrWindow();
      homePieceOfFurniture0.setNameXOffset((-788));
      boolean boolean0 = homePieceOfFurniture0.isTopRightPointAt(469.5F, 315.13745F, (-3607.5F));
      assertEquals((-788.0F), homePieceOfFurniture0.getNameXOffset(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Integer integer0 = new Integer((-788));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("wQB{C5P b|^<", (Content) null, (Content) null, 1152.91F, 0.5F, 1152.91F, false, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDescription("wQB{C5P b|^<");
      homePieceOfFurniture0.getNameYOffset();
      homePieceOfFurniture0.setWidth(469.5F);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setWidth(469.5F);
      homePieceOfFurniture0.isTopRightPointAt(1152.91F, (-1.0F), (-2215.839F));
      homePieceOfFurniture0.isTexturable();
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      homePieceOfFurniture1.isBackFaceShown();
      homePieceOfFurniture1.isBottomRightPointAt(469.5F, (-788), 2.0F);
      HomePieceOfFurniture.Property.values();
      boolean boolean0 = homePieceOfFurniture1.isBottomLeftPointAt(2.0F, (-684.7886F), 2.0F);
      assertTrue(homePieceOfFurniture0.isNameVisible());
      assertFalse(boolean0);
  }
}
