/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 25 17:30:12 GMT 2019
 */

package module;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.MultipleGradientPaint;
import java.util.NoSuchElementException;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.StyledEditorKit;
import module.Message;
import module.MessageFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MessageFactory_ESTest extends MessageFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      System.setCurrentTimeMillis(0);
      Message message0 = MessageFactory.createWarningMessage("2[d}W=iR]w@uM/q", objectArray0);
      assertEquals("WARNING", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      System.setCurrentTimeMillis((-469L));
      Object[] objectArray0 = new Object[3];
      Message message0 = MessageFactory.createWarningMessage("", objectArray0);
      assertEquals("*", message0.getRecipient());
      assertEquals("WARNING", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MessageFactory.getInstance();
      Message message0 = MessageFactory.createUnloadMessage("2[d}W=iR]w@uM/q");
      assertEquals("KERNEL", message0.getHeader());
      assertEquals("*", message0.getRecipient());
      
      Object[] objectArray0 = new Object[2];
      Message message1 = MessageFactory.createWarningMessage("2[d}W=iR]w@uM/q", objectArray0);
      assertEquals("WARNING", message1.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MessageFactory.getInstance();
      System.setCurrentTimeMillis(0);
      Message message0 = MessageFactory.createUnloadMessage("2[d}W=iR]w@uM/q");
      assertEquals("KERNEL", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      Message message0 = MessageFactory.createWarningMessage("", objectArray0);
      assertEquals("*", message0.getRecipient());
      assertEquals("WARNING", message0.getHeader());
      
      System.setCurrentTimeMillis((-3824L));
      Message message1 = MessageFactory.createUnloadMessage(".* (PRIVMSG #[A-Za-z0-9]+) .*");
      assertEquals("KERNEL", message1.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = new Message("", "");
      messageFactory0.unrefObject(message0);
      Message message1 = MessageFactory.createUnloadMessage("module.Kernel");
      assertEquals("*", message1.getRecipient());
      assertEquals("KERNEL", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object object0 = new Object();
      MessageFactory.createMessage("module.GameModule", "module.GameModule", object0);
      Message message0 = MessageFactory.createUnloadMessage("ERROR");
      assertEquals("*", message0.getRecipient());
      assertEquals("KERNEL", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MessageFactory.getInstance();
      Message message0 = MessageFactory.createUnloadMessage("2[d}W=iR]w@uM/q");
      System.setCurrentTimeMillis(0);
      MessageFactory.createMessage("mH,'IgIjag(^O=a35%l", "0,WDg\"=s%1{,ra", (Object) message0);
      assertEquals("*", message0.getRecipient());
      assertEquals("KERNEL", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      System.setCurrentTimeMillis((-469L));
      MultipleGradientPaint.CycleMethod multipleGradientPaint_CycleMethod0 = MultipleGradientPaint.CycleMethod.REPEAT;
      Message message0 = MessageFactory.createMessage("", "", (Object) multipleGradientPaint_CycleMethod0);
      assertEquals("", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = new Message();
      messageFactory0.unrefObject(message0);
      Object object0 = new Object();
      Message message1 = MessageFactory.createMessage("", "Lt..](pukjM!9Uz2*q", object0);
      assertEquals("", message1.getHeader());
      assertEquals("Lt..](pukjM!9Uz2*q", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MessageFactory.getInstance();
      Object[] objectArray0 = new Object[2];
      System.setCurrentTimeMillis(0);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, 0);
      Message message0 = MessageFactory.createMessage("6S(ftF|-EV7rty1", (Object) defaultTableModel0);
      assertEquals("6S(ftF|-EV7rty1", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      Message message0 = MessageFactory.createWarningMessage("\"", objectArray0);
      System.setCurrentTimeMillis((-546L));
      Message message1 = MessageFactory.createMessage("$/wdFvx", (Object) message0);
      assertEquals("$/wdFvx", message1.getHeader());
      assertEquals("WARNING", message0.getHeader());
      assertEquals("*", message0.getRecipient());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      Message message0 = new Message("f%m6s]{@[<B*@5", objectArray0[0]);
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject(message0);
      MessageFactory.createMessage("$/wdFvx", (Object) message0);
      assertEquals("$/wdFvx", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      System.setCurrentTimeMillis(0);
      Message message0 = messageFactory0.createMessage();
      assertEquals("*", message0.getRecipient());
      assertEquals("", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      System.setCurrentTimeMillis((-546L));
      Message message0 = messageFactory0.createMessage();
      assertEquals("*", message0.getRecipient());
      assertEquals("", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = new Message();
      messageFactory0.unrefObject(message0);
      Message message1 = messageFactory0.createMessage();
      assertEquals("", message1.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object object0 = new Object();
      MessageFactory.createMessage("module.GameModule", "module.GameModule", object0);
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = messageFactory0.createMessage();
      assertEquals("*", message0.getRecipient());
      assertEquals("", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MessageFactory.getInstance();
      Object[] objectArray0 = new Object[2];
      System.setCurrentTimeMillis(0);
      Message message0 = MessageFactory.createErrorMessage("dat/mdl/female-skin01.jpg", objectArray0);
      assertEquals("ERROR", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      Message message0 = MessageFactory.createWarningMessage("", objectArray0);
      assertEquals("WARNING", message0.getHeader());
      
      System.setCurrentTimeMillis((-3824L));
      Message message1 = MessageFactory.createErrorMessage("", objectArray0);
      assertEquals("*", message1.getRecipient());
      assertEquals("ERROR", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = new Message();
      messageFactory0.unrefObject(message0);
      Object[] objectArray0 = new Object[0];
      Message message1 = MessageFactory.createErrorMessage("", objectArray0);
      assertEquals("*", message1.getRecipient());
      assertEquals("ERROR", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Message message0 = MessageFactory.createConnectionDroppedMessage(100, "");
      assertEquals("DROPPED", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      System.setCurrentTimeMillis((-3824L));
      Message message0 = MessageFactory.createConnectionDroppedMessage(1137, "");
      assertEquals("DROPPED", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Object object0 = new Object();
      MessageFactory.createMessage("module.GameModule", "module.GameModule", object0);
      Message message0 = MessageFactory.createConnectionDroppedMessage(646, "N");
      assertEquals("DROPPED", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Message message0 = new Message();
      Object[] objectArray0 = new Object[21];
      MessageFactory.createMessage((String) null, (String) null, (Object) message0);
      MessageFactory.instance = null;
      // Undeclared exception!
      try { 
        MessageFactory.createWarningMessage((String) null, objectArray0);
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject((Message) null);
      Object[] objectArray0 = new Object[6];
      // Undeclared exception!
      try { 
        MessageFactory.createWarningMessage("n?/mPk>hq);$/I6{)De", objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("util.AbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject((Message) null);
      // Undeclared exception!
      try { 
        MessageFactory.createUnloadMessage("usage: chan CHANNEL");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("util.AbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject((Message) null);
      StyledEditorKit.FontSizeAction styledEditorKit_FontSizeAction0 = new StyledEditorKit.FontSizeAction("[r\"`", 1246);
      // Undeclared exception!
      try { 
        MessageFactory.createMessage(":T1$u%~zF;$pY'M8(", "usage: chan CHANNEL", (Object) styledEditorKit_FontSizeAction0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("util.AbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        MessageFactory.createMessage("4NkE/`", (Object) "4NkE/`");
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject((Message) null);
      // Undeclared exception!
      try { 
        MessageFactory.createMessage("", (Object) "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("util.AbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject((Message) null);
      // Undeclared exception!
      try { 
        messageFactory0.createMessage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("util.AbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject((Message) null);
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        MessageFactory.createErrorMessage("/K:O%1tfVc:$Dpw*M", objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("util.AbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject((Message) null);
      // Undeclared exception!
      try { 
        MessageFactory.createConnectionDroppedMessage(1, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("util.AbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        MessageFactory.createUnloadMessage("6");
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MessageFactory.createConnectionDroppedMessage(1, (String) null);
      MessageFactory.instance = null;
      // Undeclared exception!
      try { 
        MessageFactory.getInstance();
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        MessageFactory.createErrorMessage("", objectArray0);
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }
}
