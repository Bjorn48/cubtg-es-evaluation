/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 13:09:08 GMT 2019
 */

package ghm.follow.search;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ghm.follow.search.LineResult;
import ghm.follow.search.SearchableTextPane;
import java.awt.Font;
import java.util.List;
import java.util.regex.PatternSyntaxException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SearchableTextPane_ESTest extends SearchableTextPane_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Font font0 = Font.decode("fni$a\"|~oS6|)1}d");
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, 1);
      int int0 = searchableTextPane0.search("N3k0&bAX0", 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, 1240);
      // Undeclared exception!
      try { 
        searchableTextPane0.search((String) null, 1240);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, (-2957));
      // Undeclared exception!
      try { 
        searchableTextPane0.highlight("-$i^wyr7P-29)[>lD", (-2957));
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unmatched closing ')' near index 11
         // -$i^wyr7P-29)[>lD
         //            ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, 8);
      // Undeclared exception!
      try { 
        searchableTextPane0.highlight("`rW =Sb`/7ZC,", 8);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown search strategy requested [flags=8
         //
         verifyException("ghm.follow.search.SearchEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Font font0 = Font.decode((String) null);
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, 0);
      searchableTextPane0.removeHighlights();
      assertFalse(searchableTextPane0.isFocusCycleRoot());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, (-1));
      List<LineResult> list0 = searchableTextPane0.highlight("tGr@", 1553);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, 1240);
      int int0 = searchableTextPane0.search("");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, (-1));
      int int0 = searchableTextPane0.search(";jY~0^a(Ce[>X");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Font font0 = Font.decode((String) null);
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, (-2926));
      int int0 = searchableTextPane0.search((String) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, (-1));
      List<LineResult> list0 = searchableTextPane0.highlight("", 17);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Font font0 = Font.decode((String) null);
      SearchableTextPane searchableTextPane0 = new SearchableTextPane(font0, (-2909));
      List<LineResult> list0 = searchableTextPane0.highlight((String) null, (-2909));
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, (-1));
      boolean boolean0 = searchableTextPane0.getScrollableTracksViewportWidth();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, (-1));
      int int0 = searchableTextPane0.search("", (-1));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SearchableTextPane searchableTextPane0 = new SearchableTextPane((Font) null, (-1));
      List<LineResult> list0 = searchableTextPane0.highlight("|eS$C*%1Ia*", (-1));
      assertEquals(1, list0.size());
  }
}
