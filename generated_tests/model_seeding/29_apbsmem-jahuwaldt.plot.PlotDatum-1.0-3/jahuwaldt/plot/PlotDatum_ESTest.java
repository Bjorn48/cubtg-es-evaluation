/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 25 17:33:39 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import jahuwaldt.plot.PlotDatum;
import jahuwaldt.plot.PlotSymbol;
import jahuwaldt.plot.RTriangle4Symbol;
import jahuwaldt.plot.TabUpSymbol;
import jahuwaldt.plot.XSymbol;
import java.awt.Color;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlotDatum_ESTest extends PlotDatum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XSymbol xSymbol0 = new XSymbol();
      PlotDatum plotDatum0 = new PlotDatum(3040.3, 1.0, false, xSymbol0);
      plotDatum0.setYError(1.0);
      boolean boolean0 = plotDatum0.hasErrorBar();
      assertEquals(1.0, plotDatum0.getYError(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XSymbol xSymbol0 = new XSymbol();
      PlotDatum plotDatum0 = new PlotDatum(3040.3, 1.0, false, xSymbol0);
      assertEquals(0.0, plotDatum0.getYError(), 0.01);
      
      plotDatum0.setYError(1.0);
      double double0 = plotDatum0.getYError();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-2040.548), (-2040.548), false);
      assertEquals(0.0, plotDatum0.getYError(), 0.01);
      
      plotDatum0.setYError((-2040.548));
      double double0 = plotDatum0.getYError();
      assertEquals((-2040.548), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-289.2409743635395), (-289.2409743635395), true);
      assertEquals((-289.2409743635395), plotDatum0.y, 0.01);
      
      plotDatum0.setY(0.0);
      double double0 = plotDatum0.getY();
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-2421.8568392743), (-2421.8568392743), false);
      plotDatum0.setY(192);
      double double0 = plotDatum0.getY();
      assertEquals(192.0, plotDatum0.y, 0.01);
      assertEquals(192.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, false);
      double double0 = plotDatum0.getX();
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertEquals(0.0, double0, 0.01);
      assertFalse(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XSymbol xSymbol0 = new XSymbol();
      PlotDatum plotDatum0 = new PlotDatum(3040.3, 1.0, false, xSymbol0);
      plotDatum0.setX((-1047.0));
      double double0 = plotDatum0.getX();
      assertEquals((-1047.0), plotDatum0.x, 0.01);
      assertEquals((-1047.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1292.905771070516, 1292.905771070516, true);
      plotDatum0.getPlotSymbol();
      assertEquals(1292.905771070516, plotDatum0.y, 0.01);
      assertEquals(1292.905771070516, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertTrue(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XSymbol xSymbol0 = new XSymbol();
      xSymbol0.setSize(0);
      PlotDatum plotDatum0 = new PlotDatum(3040.3, 1.0, false, xSymbol0);
      plotDatum0.getPlotSymbol();
      assertEquals(1.0, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(3040.3, plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RTriangle4Symbol rTriangle4Symbol0 = new RTriangle4Symbol();
      PlotDatum plotDatum0 = new PlotDatum((-2447.14557131), (-2447.14557131), false, rTriangle4Symbol0);
      rTriangle4Symbol0.setSize((-2519));
      plotDatum0.getPlotSymbol();
      assertEquals((-2447.14557131), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-2447.14557131), plotDatum0.y, 0.01);
      assertFalse(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1779.7861656254731, 1779.7861656254731, false);
      Color color0 = new Color(0.4193962F, 0.4193962F, 0.4193962F, 0.4193962F);
      plotDatum0.setLineColor(color0);
      Color color1 = plotDatum0.getLineColor();
      assertFalse(plotDatum0.connected());
      assertEquals(1779.7861656254731, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(1779.7861656254731, plotDatum0.y, 0.01);
      assertEquals(3, color1.getTransparency());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1779.7861656254731, 1779.7861656254731, true);
      Color color0 = new Color(0.0F, 0.0F, 0.0F, 0.0F);
      plotDatum0.setLineColor(color0);
      Color color1 = plotDatum0.getLineColor();
      assertTrue(plotDatum0.connected());
      assertEquals(1779.7861656254731, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(1779.7861656254731, plotDatum0.x, 0.01);
      assertEquals(0, color1.getAlpha());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-2040.548), (-2040.548), false);
      assertFalse(plotDatum0.connected());
      
      plotDatum0.setConnected(true);
      boolean boolean0 = plotDatum0.connected();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RTriangle4Symbol rTriangle4Symbol0 = new RTriangle4Symbol();
      PlotDatum plotDatum0 = new PlotDatum((-2447.14557131), (-2447.14557131), false, rTriangle4Symbol0);
      PlotDatum plotDatum1 = (PlotDatum)plotDatum0.clone();
      assertNotSame(plotDatum1, plotDatum0);
      assertFalse(plotDatum1.hasErrorBar());
      assertFalse(plotDatum1.connected());
      assertEquals((-2447.14557131), plotDatum1.x, 0.01);
      assertEquals((-2447.14557131), plotDatum1.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-2421.8568392743), (-2421.8568392743), false);
      PlotDatum plotDatum1 = (PlotDatum)plotDatum0.clone();
      assertEquals((-2421.8568392743), plotDatum1.x, 0.01);
      assertEquals((-2421.8568392743), plotDatum1.y, 0.01);
      assertFalse(plotDatum1.hasErrorBar());
      assertFalse(plotDatum1.connected());
      assertNotSame(plotDatum1, plotDatum0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-2421.8568392743), (-2421.8568392743), false);
      Color color0 = Color.LIGHT_GRAY;
      plotDatum0.setLineColor(color0);
      Color color1 = plotDatum0.getLineColor();
      assertEquals((-2421.8568392743), plotDatum0.y, 0.01);
      assertEquals((-2421.8568392743), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(plotDatum0.connected());
      assertEquals(192, color1.getGreen());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-2491.6152), (-2491.6152), false);
      plotDatum0.setLineColor((Color) null);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-2491.6152), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.connected());
      assertEquals((-2491.6152), plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, false);
      plotDatum0.setYError(0.0);
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(plotDatum0.connected());
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertEquals(0.0, plotDatum0.getYError(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-2421.8568392743), (-2421.8568392743), false);
      plotDatum0.setYError((-1496.220707105086));
      assertEquals((-1496.220707105086), plotDatum0.getYError(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-2421.8568392743), (-2421.8568392743), false);
      double double0 = plotDatum0.getYError();
      assertEquals(0.0, double0, 0.01);
      assertEquals((-2421.8568392743), plotDatum0.y, 0.01);
      assertFalse(plotDatum0.connected());
      assertEquals((-2421.8568392743), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RTriangle4Symbol rTriangle4Symbol0 = new RTriangle4Symbol();
      PlotDatum plotDatum0 = new PlotDatum((-2447.14557131), (-2447.14557131), false, rTriangle4Symbol0);
      boolean boolean0 = plotDatum0.connected();
      assertFalse(boolean0);
      assertEquals((-2447.14557131), plotDatum0.y, 0.01);
      assertEquals((-2447.14557131), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1015.62, 1015.62, false);
      boolean boolean0 = plotDatum0.hasErrorBar();
      assertEquals(1015.62, plotDatum0.y, 0.01);
      assertEquals(1015.62, plotDatum0.x, 0.01);
      assertFalse(boolean0);
      assertFalse(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RTriangle4Symbol rTriangle4Symbol0 = new RTriangle4Symbol();
      PlotDatum plotDatum0 = new PlotDatum((-2447.14557131), (-2447.14557131), false, rTriangle4Symbol0);
      plotDatum0.getPlotSymbol();
      assertEquals((-2447.14557131), plotDatum0.x, 0.01);
      assertEquals((-2447.14557131), plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-3457.159361185895), (-3457.159361185895), false);
      double double0 = plotDatum0.getY();
      assertEquals((-3457.159361185895), plotDatum0.x, 0.01);
      assertEquals((-3457.159361185895), double0, 0.01);
      assertFalse(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1779.7861656254731, 1779.7861656254731, false);
      plotDatum0.setPlotSymbol((PlotSymbol) null);
      assertEquals(1779.7861656254731, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(plotDatum0.connected());
      assertEquals(1779.7861656254731, plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TabUpSymbol tabUpSymbol0 = new TabUpSymbol();
      PlotDatum plotDatum0 = new PlotDatum(1.0, 1.0, false, tabUpSymbol0);
      double double0 = plotDatum0.getX();
      assertEquals(1.0, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(1.0, double0, 0.01);
      assertFalse(plotDatum0.connected());
  }
}
