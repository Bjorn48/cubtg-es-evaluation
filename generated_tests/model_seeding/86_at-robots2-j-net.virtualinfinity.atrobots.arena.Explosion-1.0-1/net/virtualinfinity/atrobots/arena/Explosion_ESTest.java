/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 25 11:29:28 GMT 2019
 */

package net.virtualinfinity.atrobots.arena;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.virtualinfinity.atrobots.ArenaObjectVisitor;
import net.virtualinfinity.atrobots.ArenaObjectVisitorAdaptor;
import net.virtualinfinity.atrobots.arena.Explosion;
import net.virtualinfinity.atrobots.measures.Duration;
import net.virtualinfinity.atrobots.measures.Vector;
import net.virtualinfinity.atrobots.snapshots.ExplosionSnapshot;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Explosion_ESTest extends Explosion_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Vector vector0 = Vector.createCartesian(2.0, 2.0);
      Explosion explosion0 = new Explosion(vector0, 2.0);
      Duration duration0 = Duration.fromCycles(1);
      explosion0.update(duration0);
      assertFalse(explosion0.isDead());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Explosion explosion0 = new Explosion((Vector) null, (-2475));
      // Undeclared exception!
      try { 
        explosion0.update((Duration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.virtualinfinity.atrobots.measures.Duration", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Vector vector0 = Vector.createCartesian(242.93, 0.0);
      Explosion explosion0 = new Explosion(vector0, 242.93);
      // Undeclared exception!
      try { 
        explosion0.accept((ArenaObjectVisitor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.virtualinfinity.atrobots.arena.Explosion", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Explosion explosion0 = new Explosion((Vector) null, 1992.81273848);
      Duration duration0 = Duration.ONE_CYCLE;
      explosion0.update(duration0);
      assertFalse(explosion0.isDead());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Vector vector0 = Vector.createCartesian((-1251.55978073386), (-1251.55978073386));
      Explosion explosion0 = new Explosion(vector0, (-1251.55978073386));
      Duration duration0 = Duration.fromCycles(3056);
      explosion0.update(duration0);
      explosion0.update(duration0);
      assertTrue(explosion0.isDead());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Explosion explosion0 = new Explosion((Vector) null, 1710.0442591);
      ArenaObjectVisitorAdaptor arenaObjectVisitorAdaptor0 = new ArenaObjectVisitorAdaptor();
      explosion0.accept(arenaObjectVisitorAdaptor0);
      assertFalse(explosion0.isDead());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Explosion explosion0 = new Explosion((Vector) null, 2461.4);
      ExplosionSnapshot explosionSnapshot0 = (ExplosionSnapshot)explosion0.createSpecificSnapshot();
      assertEquals(2461.4, explosionSnapshot0.getRadius(), 0.01);
  }
}
