* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.sat4j.core.Vec
* Starting Client-0
* Connecting to master process on port 5938
* Analyzing classpath: 
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
* Finished analyzing classpath
* Generating tests for class org.sat4j.core.Vec
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1334
* Using seed 1550386697302
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 418 / 1334
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.7988505747126436
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6947368421052632
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.758177570093458
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.47368421052631576
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9736842105263158
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.8947368421052632
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.6421052631578947
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 200
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 277
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.8735632183908046
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7894736842105263
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.8411214953271028
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5263157894736842
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9736842105263158
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.9210526315789473
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.7473684210526316
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 369
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 462
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9367816091954023
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9157894736842105
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9287383177570093
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.6052631578947368
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.9736842105263158
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9052631578947369
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 557
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9367816091954023
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9157894736842105
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9310747663551402
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.6052631578947368
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.9736842105263158
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9052631578947369
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 658
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9367816091954023
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9157894736842105
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9322429906542056
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.631578947368421
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.9736842105263158
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9052631578947369
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 760
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9425287356321839
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9357476635514018
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.6578947368421053
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.9736842105263158
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9263157894736842
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 868
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 969
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9482758620689655
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9439252336448598
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.6578947368421053
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.9736842105263158
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9263157894736842
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 1067
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 1168
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9540229885057471
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9439252336448598
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.6842105263157895
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9263157894736842
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 1261
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 1360
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 1463
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 1566
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9540229885057471
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9462616822429907
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.6842105263157895
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9263157894736842
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 1668
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 1768
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9540229885057471
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.947429906542056
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.6842105263157895
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9263157894736842
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 1860
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 1954
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9540229885057471
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.947429906542056
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7105263157894737
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9263157894736842
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 2050
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 2146
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9540229885057471
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.947429906542056
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7105263157894737
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9263157894736842
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 2240
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 2332
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 2421
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9540229885057471
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.947429906542056
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7105263157894737
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9263157894736842
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 2519
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 2561
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9540229885057471
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.947429906542056
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7105263157894737
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9263157894736842
* Search finished after 121s and 25 generations, 22467 statements, best individual has fitness: 78.0
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9540229885057471
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.947429906542056
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7105263157894737
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9263157894736842
* Minimizing test suite
[MASTER] 08:01:31.435 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 174
* Number of covered goals: 166
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 93%
* Total number of goals: 95
* Number of covered goals: 88
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 40
* Number of covered goals: 40
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 95%
* Total number of goals: 856
* Number of covered goals: 811
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 71%
* Total number of goals: 38
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 38
* Number of covered goals: 38
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 38
* Number of covered goals: 38
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 93%
* Total number of goals: 95
* Number of covered goals: 88
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9540229885057471
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.947429906542056
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7105263157894737
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9263157894736842
* Generated 160 tests with total length 2064
* Resulting test suite's coverage: 93% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 08:02:15.783 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.7083666666666667% of time used, but only 7/160 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 12%
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9540229885057471
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.947429906542056
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7105263157894737
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.9263157894736842
* Compiling and checking tests
[MASTER] 08:02:45.752 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 08:02:45.755 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<Vec<String>> vec0 = new Vec<Vec<String>>();
assertNotNull(vec0);
assertTrue(vec0.isEmpty());
assertEquals(0, vec0.size());

vec0.clear();
assertTrue(vec0.isEmpty());
assertEquals(0, vec0.size());

int int0 = vec0.size();
assertTrue(vec0.isEmpty());
assertEquals(0, vec0.size());
assertEquals(0, int0);

Vec<Object> vec1 = new Vec<Object>(0);
assertNotNull(vec1);
assertEquals(0, vec1.size());
assertTrue(vec1.isEmpty());

String[] stringArray0 = new String[8];
stringArray0[0] = "2<5j";
stringArray0[1] = "2<5j";
stringArray0[2] = "2<5j";
stringArray0[3] = "";
stringArray0[4] = "2<5j";
stringArray0[5] = "2<5j";
stringArray0[6] = "#Q_ a";
stringArray0[7] = "";
Vec<String> vec2 = new Vec<String>(stringArray0);
assertNotNull(vec2);
assertFalse(vec2.isEmpty());
assertEquals(8, vec2.size());
assertEquals(8, stringArray0.length);

IVec<String> iVec0 = vec2.push("2<5j");
assertNotNull(iVec0);
assertEquals(9, vec2.size());
assertFalse(vec2.isEmpty());
assertEquals(9, iVec0.size());
assertFalse(iVec0.isEmpty());
assertEquals(8, stringArray0.length);

Vec<Integer> vec3 = new Vec<Integer>();
assertNotNull(vec3);
assertEquals(0, vec3.size());
assertTrue(vec3.isEmpty());

Integer integer0 = new Integer(0);
assertNotNull(integer0);
assertTrue(integer0.equals((Object)int0));
assertEquals(0, (int)integer0);

String string0 = integer0.toString();
assertNotNull(string0);
assertTrue(integer0.equals((Object)int0));
assertEquals("0", string0);

vec1.ensure(1087);
assertEquals(0, vec1.size());
assertTrue(vec1.isEmpty());

vec3.growTo(0, integer0);
assertEquals(0, vec3.size());
assertTrue(vec3.isEmpty());
assertTrue(integer0.equals((Object)int0));

Vec<Integer> vec4 = new Vec<Integer>(1087);
assertNotNull(vec4);
assertEquals(0, vec4.size());
assertTrue(vec4.isEmpty());
assertTrue(vec4.equals((Object)vec3));

vec4.clear();
assertEquals(0, vec4.size());
assertTrue(vec4.isEmpty());
assertTrue(vec4.equals((Object)vec3));
assertNotSame(vec4, vec3);

Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
vec4.sort(comparator0);
assertEquals(0, vec4.size());
assertTrue(vec4.isEmpty());
assertTrue(vec4.equals((Object)vec3));
assertNotSame(vec4, vec3);

IVec<String> iVec1 = vec2.clone();
assertNotNull(iVec1);
assertEquals(9, iVec1.size());
assertFalse(iVec1.isEmpty());
assertEquals(9, vec2.size());
assertFalse(vec2.isEmpty());
assertTrue(iVec1.equals((Object)iVec0));
assertEquals(8, stringArray0.length);
assertNotSame(iVec1, iVec0);

Vec<Object> vec5 = new Vec<Object>(stringArray0);
assertNotNull(vec5);
assertEquals(8, vec5.size());
assertFalse(vec5.isEmpty());
assertFalse(vec5.equals((Object)vec1));
assertEquals(8, stringArray0.length);

String string1 = vec1.toString();
assertNotNull(string1);
assertEquals(0, vec1.size());
assertTrue(vec1.isEmpty());
assertFalse(vec1.equals((Object)vec5));
assertFalse(string1.equals((Object)string0));
assertNotSame(vec1, vec5);
assertEquals("", string1);

vec2.removeFromLast("");

[MASTER] 08:02:46.091 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.sat4j.core.ReadOnlyVec;
[MASTER] 08:02:46.092 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<Integer> vec0 = new Vec<Integer>();
assertNotNull(vec0);
assertTrue(vec0.isEmpty());
assertEquals(0, vec0.size());

Vec<ReadOnlyVec<Object>> vec1 = new Vec<ReadOnlyVec<Object>>();
assertNotNull(vec1);
assertEquals(0, vec1.size());
assertTrue(vec1.isEmpty());

ReadOnlyVec<Object>[] readOnlyVecArray0 = vec1.toArray();
assertNotNull(readOnlyVecArray0);
assertEquals(0, vec1.size());
assertTrue(vec1.isEmpty());
assertEquals(5, readOnlyVecArray0.length);


[MASTER] 08:02:46.999 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 08:02:46.999 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<String> vec0 = new Vec<String>(1, "");
assertNotNull(vec0);
assertFalse(vec0.isEmpty());
assertEquals(1, vec0.size());

String string0 = vec0.toString();
assertNotNull(string0);
assertFalse(vec0.isEmpty());
assertEquals(1, vec0.size());
assertEquals("", string0);

vec0.removeFromLast("");

[MASTER] 08:02:54.392 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ArrayIndexOutOfBoundsException: 5714
[MASTER] 08:02:54.393 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<ReadOnlyVec<String>> vec0 = new Vec<ReadOnlyVec<String>>();
assertNotNull(vec0);
assertEquals(0, vec0.size());
assertTrue(vec0.isEmpty());

int int0 = 5714;
String[] stringArray0 = new String[3];
stringArray0[0] = "";
ToLongFunction<Object> toLongFunction0 = (ToLongFunction<Object>) mock(ToLongFunction.class, new ViolatedAssumptionAnswer());
Comparator<Object> comparator0 = Comparator.comparingLong((ToLongFunction<? super Object>) toLongFunction0);
assertNotNull(comparator0);

Vec<String> vec1 = new Vec<String>();
assertNotNull(vec1);
assertTrue(vec1.isEmpty());
assertEquals(0, vec1.size());

Vec<String> vec2 = new Vec<String>(0);
assertNotNull(vec2);
assertEquals(0, vec2.size());
assertTrue(vec2.isEmpty());
assertTrue(vec2.equals((Object)vec1));

Vec<Vec<String>> vec3 = new Vec<Vec<String>>(5714, vec2);
assertNotNull(vec3);
assertEquals(0, vec2.size());
assertTrue(vec2.isEmpty());
assertEquals(5714, vec3.size());
assertFalse(vec3.isEmpty());
assertTrue(vec2.equals((Object)vec1));

vec3.remove(vec1);

[MASTER] 08:03:00.078 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 08:03:00.081 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<Vec<String>> vec0 = new Vec<Vec<String>>();
assertNotNull(vec0);
assertTrue(vec0.isEmpty());
assertEquals(0, vec0.size());

vec0.clear();
assertTrue(vec0.isEmpty());
assertEquals(0, vec0.size());

int int0 = vec0.size();
assertTrue(vec0.isEmpty());
assertEquals(0, vec0.size());
assertEquals(0, int0);

Vec<Object> vec1 = new Vec<Object>(0);
assertNotNull(vec1);
assertEquals(0, vec1.size());
assertTrue(vec1.isEmpty());

String[] stringArray0 = new String[8];
stringArray0[0] = "2<5j";
stringArray0[1] = "#Q_ a";
String[] stringArray1 = new String[2];
assertFalse(stringArray1.equals((Object)stringArray0));

stringArray1[0] = "#Q_ a";
stringArray1[1] = "z2!P1D";
Vec<String> vec2 = new Vec<String>(stringArray1);
assertNotNull(vec2);
assertEquals(2, vec2.size());
assertFalse(vec2.isEmpty());
assertFalse(stringArray1.equals((Object)stringArray0));
assertEquals(2, stringArray1.length);

IVec<String> iVec0 = vec2.push("");
assertNotNull(iVec0);
assertEquals(3, vec2.size());
assertFalse(vec2.isEmpty());
assertEquals(3, iVec0.size());
assertFalse(iVec0.isEmpty());
assertFalse(stringArray1.equals((Object)stringArray0));
assertEquals(2, stringArray1.length);
assertNotSame(stringArray1, stringArray0);

Vec<Integer> vec3 = new Vec<Integer>();
assertNotNull(vec3);
assertEquals(0, vec3.size());
assertTrue(vec3.isEmpty());

Integer integer0 = new Integer(0);
assertNotNull(integer0);
assertTrue(integer0.equals((Object)int0));
assertEquals(0, (int)integer0);

String string0 = integer0.toString();
assertNotNull(string0);
assertTrue(integer0.equals((Object)int0));
assertEquals("0", string0);

vec3.growTo(0, integer0);
assertEquals(0, vec3.size());
assertTrue(vec3.isEmpty());
assertTrue(integer0.equals((Object)int0));

Vec<Integer> vec4 = new Vec<Integer>(1087);
assertNotNull(vec4);
assertTrue(vec4.isEmpty());
assertEquals(0, vec4.size());
assertTrue(vec4.equals((Object)vec3));

vec3.clear();
assertEquals(0, vec3.size());
assertTrue(vec3.isEmpty());
assertTrue(vec3.equals((Object)vec4));
assertNotSame(vec3, vec4);

Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
vec4.sort(comparator0);
assertTrue(vec4.isEmpty());
assertEquals(0, vec4.size());
assertTrue(vec4.equals((Object)vec3));
assertNotSame(vec4, vec3);

IVec<String> iVec1 = vec2.clone();
assertNotNull(iVec1);
assertEquals(3, iVec1.size());
assertFalse(iVec1.isEmpty());
assertEquals(3, vec2.size());
assertFalse(vec2.isEmpty());
assertTrue(iVec1.equals((Object)iVec0));
assertFalse(stringArray1.equals((Object)stringArray0));
assertEquals(2, stringArray1.length);
assertNotSame(iVec1, iVec0);
assertNotSame(stringArray1, stringArray0);

Vec<Object> vec5 = new Vec<Object>(stringArray0);
assertNotNull(vec5);
assertEquals(8, vec5.size());
assertFalse(vec5.isEmpty());
assertFalse(stringArray0.equals((Object)stringArray1));
assertFalse(vec5.equals((Object)vec1));
assertEquals(8, stringArray0.length);

String string1 = vec5.toString();
assertNotNull(string1);
assertEquals(8, vec5.size());
assertFalse(vec5.isEmpty());
assertFalse(stringArray0.equals((Object)stringArray1));
assertFalse(vec5.equals((Object)vec1));
assertFalse(string1.equals((Object)string0));
assertEquals(8, stringArray0.length);
assertNotSame(stringArray0, stringArray1);
assertNotSame(vec5, vec1);
assertEquals("2<5j,#Q_ a,null,null,null,null,null,null", string1);

vec2.removeFromLast("z2!P1D");

[MASTER] 08:03:01.382 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.sat4j.core.ReadOnlyVec;
[MASTER] 08:03:01.383 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<Integer> vec0 = new Vec<Integer>();
assertNotNull(vec0);
assertEquals(0, vec0.size());
assertTrue(vec0.isEmpty());

Vec<ReadOnlyVec<Object>> vec1 = new Vec<ReadOnlyVec<Object>>();
assertNotNull(vec1);
assertTrue(vec1.isEmpty());
assertEquals(0, vec1.size());

ReadOnlyVec<Object>[] readOnlyVecArray0 = vec1.toArray();
assertNotNull(readOnlyVecArray0);
assertTrue(vec1.isEmpty());
assertEquals(0, vec1.size());
assertEquals(5, readOnlyVecArray0.length);

Integer.parseInt("o!,^^slDm");

[MASTER] 08:03:01.828 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 08:03:01.831 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<Vec<String>> vec0 = new Vec<Vec<String>>();
assertNotNull(vec0);
assertEquals(0, vec0.size());
assertTrue(vec0.isEmpty());

vec0.clear();
assertEquals(0, vec0.size());
assertTrue(vec0.isEmpty());

int int0 = vec0.size();
assertEquals(0, vec0.size());
assertTrue(vec0.isEmpty());
assertEquals(0, int0);

Vec<Object> vec1 = new Vec<Object>(0);
assertNotNull(vec1);
assertTrue(vec1.isEmpty());
assertEquals(0, vec1.size());

String[] stringArray0 = new String[8];
stringArray0[0] = "2<5j";
stringArray0[1] = "#Q_ a";
stringArray0[2] = "2<5j";
stringArray0[3] = "";
stringArray0[4] = "2<5j";
stringArray0[5] = "2<5j";
stringArray0[6] = "#Q_ a";
stringArray0[7] = "";
Vec<String> vec2 = new Vec<String>(stringArray0);
assertNotNull(vec2);
assertEquals(8, vec2.size());
assertFalse(vec2.isEmpty());
assertEquals(8, stringArray0.length);

IVec<String> iVec0 = vec2.push("2<5j");
assertNotNull(iVec0);
assertEquals(9, vec2.size());
assertFalse(vec2.isEmpty());
assertFalse(iVec0.isEmpty());
assertEquals(9, iVec0.size());
assertEquals(8, stringArray0.length);

Vec<Integer> vec3 = new Vec<Integer>();
assertNotNull(vec3);
assertTrue(vec3.isEmpty());
assertEquals(0, vec3.size());

Integer integer0 = new Integer(0);
assertNotNull(integer0);
assertTrue(integer0.equals((Object)int0));
assertEquals(0, (int)integer0);

String string0 = integer0.toString();
assertNotNull(string0);
assertTrue(integer0.equals((Object)int0));
assertEquals("0", string0);

vec3.growTo(0, integer0);
assertTrue(vec3.isEmpty());
assertEquals(0, vec3.size());
assertTrue(integer0.equals((Object)int0));

Vec<Integer> vec4 = new Vec<Integer>(1087);
assertNotNull(vec4);
assertEquals(0, vec4.size());
assertTrue(vec4.isEmpty());
assertTrue(vec4.equals((Object)vec3));

vec4.clear();
assertEquals(0, vec4.size());
assertTrue(vec4.isEmpty());
assertTrue(vec4.equals((Object)vec3));
assertNotSame(vec4, vec3);

Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
vec4.sort(comparator0);
assertEquals(0, vec4.size());
assertTrue(vec4.isEmpty());
assertTrue(vec4.equals((Object)vec3));
assertNotSame(vec4, vec3);

IVec<String> iVec1 = vec2.clone();
assertNotNull(iVec1);
assertEquals(9, iVec1.size());
assertFalse(iVec1.isEmpty());
assertEquals(9, vec2.size());
assertFalse(vec2.isEmpty());
assertTrue(iVec1.equals((Object)iVec0));
assertEquals(8, stringArray0.length);
assertNotSame(iVec1, iVec0);

Vec<Object> vec5 = new Vec<Object>(stringArray0);
assertNotNull(vec5);
assertEquals(8, vec5.size());
assertFalse(vec5.isEmpty());
assertFalse(vec5.equals((Object)vec1));
assertEquals(8, stringArray0.length);

String string1 = vec1.toString();
assertNotNull(string1);
assertTrue(vec1.isEmpty());
assertEquals(0, vec1.size());
assertFalse(vec1.equals((Object)vec5));
assertFalse(string1.equals((Object)string0));
assertNotSame(vec1, vec5);
assertEquals("", string1);

vec2.removeFromLast("");

[MASTER] 08:03:04.193 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 08:03:04.194 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<Object> vec0 = new Vec<Object>(609);
assertNotNull(vec0);
assertEquals(0, vec0.size());
assertTrue(vec0.isEmpty());

Vec<Vec<Object>> vec1 = new Vec<Vec<Object>>(609, vec0);
assertNotNull(vec1);
assertEquals(0, vec0.size());
assertTrue(vec0.isEmpty());
assertEquals(609, vec1.size());
assertFalse(vec1.isEmpty());

ToLongFunction<Object> toLongFunction0 = (ToLongFunction<Object>) mock(ToLongFunction.class, new ViolatedAssumptionAnswer());
String[] stringArray0 = new String[8];
stringArray0[0] = "GyTY&eZn";
stringArray0[1] = "Ybj0WE;uXb$TX7U6";
stringArray0[2] = "";
stringArray0[3] = "bM>vi7qHH8pS";
stringArray0[4] = "Ux";
stringArray0[5] = "";
stringArray0[6] = "K{S$8kpqLsn0+T95,";
String string0 = "Kt~?b='S%A5uD-].I7";
stringArray0[7] = "Kt~?b='S%A5uD-].I7";
Vec<String> vec2 = new Vec<String>(stringArray0);
assertNotNull(vec2);
assertEquals(8, vec2.size());
assertFalse(vec2.isEmpty());
assertEquals(8, stringArray0.length);

vec2.removeFromLast("");

* Writing tests to file
* Writing JUnit test case 'Vec_ESTest' to evosuite-tests
* Done!

* Computation finished
