<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s3" action="org.junit.Assert.assertNull(java.lang.Object)" proba="0.16666666666666666"></transition><transition target="sX" action="epsilon" proba="0.25"></transition><transition target="s2" action="org.junit.Assert.assertNotNull(java.lang.Object)" proba="0.5833333333333334"></transition></state><state id="s4"><transition target="s4" action="org.junit.Assert.assertEquals(long,long)" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.2857142857142857"></transition><transition target="s1" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.21428571428571427"></transition></state><state id="s5"><transition target="s5" action="org.junit.Assert.assertFalse(boolean)" proba="0.5"></transition><transition target="s6" action="org.junit.Assert.assertTrue(boolean)" proba="0.5"></transition></state><state id="s6"><transition target="s6" action="org.junit.Assert.assertTrue(boolean)" proba="0.45454545454545453"></transition><transition target="sX" action="epsilon" proba="0.5454545454545454"></transition></state><state id="s10"><transition target="s1" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="1.0"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s7" action="org.junit.Assert.assertThat(java.lang.Object,org.hamcrest.Matcher)" proba="1.0"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.junit.Assert.assertNull(java.lang.Object)" proba="0.16216216216216217"></transition><transition target="s4" action="org.junit.Assert.assertEquals(long,long)" proba="0.02702702702702703"></transition><transition target="s5" action="org.junit.Assert.assertFalse(boolean)" proba="0.16216216216216217"></transition><transition target="s10" action="org.junit.Assert.assertNotEquals(java.lang.Object,java.lang.Object)" proba="0.02702702702702703"></transition><transition target="s7" action="org.junit.Assert.assertThat(java.lang.Object,org.hamcrest.Matcher)" proba="0.16216216216216217"></transition><transition target="s8" action="org.junit.Assert.assertThat(java.lang.String,java.lang.Object,org.hamcrest.Matcher)" proba="0.02702702702702703"></transition><transition target="s9" action="org.junit.Assert.fail(java.lang.String)" proba="0.02702702702702703"></transition><transition target="s1" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.35135135135135137"></transition><transition target="s2" action="org.junit.Assert.assertNotNull(java.lang.Object)" proba="0.05405405405405406"></transition></state><state id="s1"><transition target="s3" action="org.junit.Assert.assertNull(java.lang.Object)" proba="0.037037037037037035"></transition><transition target="s4" action="org.junit.Assert.assertEquals(long,long)" proba="0.2222222222222222"></transition><transition target="sX" action="epsilon" proba="0.4444444444444444"></transition><transition target="s1" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.2962962962962963"></transition></state><state id="s2"><transition target="s3" action="org.junit.Assert.assertNull(java.lang.Object)" proba="0.3"></transition><transition target="sX" action="epsilon" proba="0.4"></transition><transition target="s1" action="org.junit.Assert.assertEquals(java.lang.Object,java.lang.Object)" proba="0.2"></transition><transition target="s2" action="org.junit.Assert.assertNotNull(java.lang.Object)" proba="0.1"></transition></state></states></ts>