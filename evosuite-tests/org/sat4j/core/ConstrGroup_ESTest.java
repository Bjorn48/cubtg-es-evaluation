/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 18 19:40:40 GMT 2019
 */

package org.sat4j.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.sat4j.BasicLauncher;
import org.sat4j.core.ASolverFactory;
import org.sat4j.core.ConstrGroup;
import org.sat4j.core.VecInt;
import org.sat4j.minisat.constraints.CardinalityDataStructure;
import org.sat4j.minisat.constraints.MixedDataStructureSingleWL;
import org.sat4j.minisat.constraints.cnf.UnitClause;
import org.sat4j.minisat.core.SearchParams;
import org.sat4j.minisat.core.Solver;
import org.sat4j.minisat.learning.PercentLengthLearning;
import org.sat4j.minisat.orders.PureOrder;
import org.sat4j.minisat.restarts.LubyRestarts;
import org.sat4j.specs.Constr;
import org.sat4j.specs.FakeConstr;
import org.sat4j.specs.IConstr;
import org.sat4j.specs.ISolver;
import org.sat4j.specs.VarMapper;
import org.sat4j.tools.DimacsStringSolver;
import org.sat4j.tools.DotSearchTracing;
import org.sat4j.tools.ModelIteratorToSATAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConstrGroup_ESTest extends ConstrGroup_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConstrGroup constrGroup0 = new ConstrGroup();
      UnitClause unitClause0 = new UnitClause(0);
      constrGroup0.add(unitClause0);
      constrGroup0.add(unitClause0);
      // Undeclared exception!
      try { 
        constrGroup0.removeFrom((ISolver) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.core.ConstrGroup", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ConstrGroup constrGroup0 = new ConstrGroup();
      UnitClause unitClause0 = new UnitClause(0);
      constrGroup0.add(unitClause0);
      int int0 = constrGroup0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ConstrGroup constrGroup0 = new ConstrGroup();
      CardinalityDataStructure cardinalityDataStructure0 = new CardinalityDataStructure();
      VecInt vecInt0 = new VecInt(0, (-1619));
      Constr constr0 = cardinalityDataStructure0.createUnregisteredClause(vecInt0);
      constrGroup0.add(constr0);
      boolean boolean0 = constrGroup0.learnt();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConstrGroup constrGroup0 = new ConstrGroup();
      UnitClause unitClause0 = new UnitClause(0);
      constrGroup0.add(unitClause0);
      UnitClause unitClause1 = (UnitClause)constrGroup0.getConstr(0);
      assertTrue(unitClause1.isSatisfied());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ConstrGroup constrGroup0 = new ConstrGroup();
      UnitClause unitClause0 = new UnitClause((-1099));
      constrGroup0.add(unitClause0);
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      // Undeclared exception!
      try { 
        constrGroup0.removeFrom(dimacsStringSolver0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.AbstractOutputSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ConstrGroup constrGroup0 = new ConstrGroup();
      UnitClause unitClause0 = new UnitClause(1086);
      constrGroup0.add(unitClause0);
      PercentLengthLearning<MixedDataStructureSingleWL> percentLengthLearning0 = new PercentLengthLearning<MixedDataStructureSingleWL>();
      MixedDataStructureSingleWL mixedDataStructureSingleWL0 = new MixedDataStructureSingleWL();
      SearchParams searchParams0 = new SearchParams(0.0, 0.0, (-2221.0), 1086);
      PureOrder pureOrder0 = new PureOrder(1086);
      LubyRestarts lubyRestarts0 = new LubyRestarts(1086);
      ASolverFactory<ModelIteratorToSATAdapter> aSolverFactory0 = (ASolverFactory<ModelIteratorToSATAdapter>) mock(ASolverFactory.class, new ViolatedAssumptionAnswer());
      BasicLauncher<ModelIteratorToSATAdapter> basicLauncher0 = new BasicLauncher<ModelIteratorToSATAdapter>(aSolverFactory0);
      Solver<MixedDataStructureSingleWL> solver0 = new Solver<MixedDataStructureSingleWL>(percentLengthLearning0, mixedDataStructureSingleWL0, searchParams0, pureOrder0, lubyRestarts0, basicLauncher0);
      // Undeclared exception!
      try { 
        constrGroup0.removeFrom(solver0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1086
         //
         verifyException("org.sat4j.minisat.constraints.cnf.Lits", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ConstrGroup constrGroup0 = new ConstrGroup();
      // Undeclared exception!
      try { 
        constrGroup0.getConstr(183);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 183
         //
         verifyException("org.sat4j.core.Vec", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ConstrGroup constrGroup0 = new ConstrGroup();
      boolean boolean0 = constrGroup0.learnt();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ConstrGroup constrGroup0 = new ConstrGroup();
      IConstr iConstr0 = FakeConstr.instance();
      constrGroup0.add(iConstr0);
      // Undeclared exception!
      try { 
        constrGroup0.learnt();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Fake IConstr
         //
         verifyException("org.sat4j.specs.FakeConstr", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ConstrGroup constrGroup0 = new ConstrGroup();
      constrGroup0.removeFrom((ISolver) null);
      assertEquals(0, constrGroup0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConstrGroup constrGroup0 = new ConstrGroup();
      // Undeclared exception!
      try { 
        constrGroup0.add((IConstr) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The constraint you entered cannot be removed from the solver.
         //
         verifyException("org.sat4j.core.ConstrGroup", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ConstrGroup constrGroup0 = new ConstrGroup(false);
      constrGroup0.add((IConstr) null);
      // Undeclared exception!
      try { 
        constrGroup0.learnt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.core.ConstrGroup", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ConstrGroup constrGroup0 = new ConstrGroup();
      int int0 = constrGroup0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ConstrGroup constrGroup0 = new ConstrGroup();
      constrGroup0.clear();
      assertFalse(constrGroup0.canBePropagatedMultipleTimes());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ConstrGroup constrGroup0 = new ConstrGroup(false);
      // Undeclared exception!
      try { 
        constrGroup0.get((-713));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.core.ConstrGroup", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ConstrGroup constrGroup0 = new ConstrGroup();
      boolean boolean0 = constrGroup0.canBePropagatedMultipleTimes();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ConstrGroup constrGroup0 = new ConstrGroup();
      String string0 = constrGroup0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ConstrGroup constrGroup0 = new ConstrGroup();
      IConstr iConstr0 = constrGroup0.getConstr(0);
      assertNull(iConstr0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ConstrGroup constrGroup0 = new ConstrGroup();
      DotSearchTracing<Object> dotSearchTracing0 = new DotSearchTracing<Object>("");
      // Undeclared exception!
      try { 
        constrGroup0.toString((VarMapper) dotSearchTracing0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.core.ConstrGroup", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ConstrGroup constrGroup0 = new ConstrGroup();
      double double0 = constrGroup0.getActivity();
      assertEquals(0.0, double0, 0.01);
  }
}
