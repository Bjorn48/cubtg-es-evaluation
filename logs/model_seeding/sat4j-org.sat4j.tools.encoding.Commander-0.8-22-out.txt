* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.sat4j.tools.encoding.Commander
* Starting Client-0
* Connecting to master process on port 14297
* Analyzing classpath: 
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
* Finished analyzing classpath
* Generating tests for class org.sat4j.tools.encoding.Commander
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 234
* Using seed 1550559732376
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 61 / 234
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.3673469387755102
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3181818181818182
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.3228346456692913
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.0
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.25
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 200
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
[MASTER] 08:03:00.482 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.specs.UnitPropagationListener
[MASTER] 08:03:03.181 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.specs.IConstr
[MASTER] 08:03:03.350 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.minisat.core.ILits
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 255
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.40816326530612246
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3181818181818182
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.3937007874015748
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.16666666666666666
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 323
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.40816326530612246
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3181818181818182
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.3937007874015748
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.16666666666666666
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 374
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.40816326530612246
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3181818181818182
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.3937007874015748
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.16666666666666666
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.40816326530612246
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3181818181818182
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.3937007874015748
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.16666666666666666
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
* Search finished after 123s and 3 generations, 3257 statements, best individual has fitness: 146.0
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.40816326530612246
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3181818181818182
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.3937007874015748
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.16666666666666666
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
* Minimizing test suite
[MASTER] 08:05:46.603 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 41%
* Total number of goals: 49
* Number of covered goals: 20
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 32%
* Total number of goals: 22
* Number of covered goals: 7
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 39%
* Total number of goals: 127
* Number of covered goals: 50
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 17%
* Total number of goals: 6
* Number of covered goals: 1
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 18%
* Total number of goals: 22
* Number of covered goals: 4
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.40816326530612246
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3181818181818182
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.3937007874015748
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.16666666666666666
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
* Generated 14 tests with total length 248
* Resulting test suite's coverage: 50% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 08:06:48.772 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 13%
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.40816326530612246
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3181818181818182
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.3937007874015748
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.16666666666666666
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
* Compiling and checking tests
[MASTER] 08:07:21.711 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:07:21.713 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Commander commander0 = new Commander();
DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
int int0 = 0;
VecInt vecInt0 = new VecInt(0);
dimacsStringSolver0.addClause((IVecInt) vecInt0, 0);
commander0.addExactlyOne(dimacsStringSolver0, vecInt0);
vecInt0.toString();
commander0.addExactly(dimacsStringSolver0, vecInt0, int0);
commander0.addExactlyOne(dimacsStringSolver0, vecInt0);
int int1 = 288;
commander0.addExactly(dimacsStringSolver0, vecInt0, int1);
commander0.addExactly(dimacsStringSolver0, vecInt0, int1);

[MASTER] 08:07:26.903 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:07:26.905 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Commander commander0 = new Commander();
MiniSATLearning<CardinalityDataStructureYanMin> miniSATLearning0 = new MiniSATLearning<CardinalityDataStructureYanMin>();
CardinalityDataStructureYanMin cardinalityDataStructureYanMin0 = new CardinalityDataStructureYanMin();
RSATPhaseSelectionStrategy rSATPhaseSelectionStrategy0 = new RSATPhaseSelectionStrategy();
LevelBasedVarOrderHeap levelBasedVarOrderHeap0 = new LevelBasedVarOrderHeap(rSATPhaseSelectionStrategy0);
SearchParams searchParams0 = new SearchParams(1.0, 1.0, (-1.0), 0);
RandomWalkDecorator randomWalkDecorator0 = new RandomWalkDecorator(levelBasedVarOrderHeap0);
searchParams0.toString();
int int0 = 883;
LubyRestarts lubyRestarts0 = new LubyRestarts(883);
Solver<CardinalityDataStructureYanMin> solver0 = new Solver<CardinalityDataStructureYanMin>(miniSATLearning0, cardinalityDataStructureYanMin0, searchParams0, randomWalkDecorator0, lubyRestarts0);
RestartStrategy restartStrategy0 = solver0.getRestartStrategy();
Solver<CardinalityDataStructureYanMin> solver1 = new Solver<CardinalityDataStructureYanMin>(miniSATLearning0, cardinalityDataStructureYanMin0, levelBasedVarOrderHeap0, restartStrategy0);
int int1 = 0;
VecInt vecInt0 = new VecInt(0, (-75));
commander0.addAtMostOne(solver1, vecInt0);
IConstr iConstr0 = null;
solver1.removeConstr(iConstr0);
DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver();
IVecInt iVecInt0 = dimacsOutputSolver0.createBlockingClauseForCurrentModel();
int int2 = (-1586);
solver0.addAtLeast(iVecInt0, int2);
solver1.addClause(iVecInt0);
dimacsOutputSolver0.addAtLeast(iVecInt0, int0);
int int3 = 1;
solver1.addAtMost(iVecInt0, int3);
int int4 = 0;
dimacsOutputSolver0.addAtMost(iVecInt0, int4);
commander0.addExactly(dimacsOutputSolver0, iVecInt0, int0);
commander0.addAtMostOne(dimacsOutputSolver0, iVecInt0);
commander0.addExactlyOne(dimacsOutputSolver0, iVecInt0);
commander0.addExactlyOne(solver0, vecInt0);
commander0.addExactly(solver1, vecInt0, int1);
commander0.addExactlyOne(solver1, vecInt0);

[MASTER] 08:07:33.702 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:07:33.703 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Commander commander0 = new Commander();
DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
VecInt vecInt0 = new VecInt(0);
FakeConstr.instance();
vecInt0.toString();
commander0.addExactly(dimacsStringSolver0, vecInt0, 0);
dimacsStringSolver0.newVar(0);
commander0.addExactlyOne(dimacsStringSolver0, vecInt0);
int int0 = 288;
commander0.addExactly(dimacsStringSolver0, vecInt0, int0);
commander0.addExactly(dimacsStringSolver0, vecInt0, int0);

[MASTER] 08:07:39.632 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:07:39.649 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Commander commander0 = new Commander();
DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
int int0 = 0;
VecInt vecInt0 = new VecInt(0);
dimacsStringSolver0.addClause((IVecInt) vecInt0, 0);
commander0.addExactlyOne(dimacsStringSolver0, vecInt0);
vecInt0.toString();
commander0.addExactly(dimacsStringSolver0, vecInt0, int0);
commander0.addExactly(dimacsStringSolver0, vecInt0, int0);
commander0.addExactly(dimacsStringSolver0, vecInt0, int0);

[MASTER] 08:07:45.560 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 08:07:45.561 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Commander commander0 = new Commander();
DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
dimacsStringSolver0.setExpectedNumberOfClauses(398);
dimacsStringSolver0.reset();
dimacsStringSolver0.reset();
dimacsStringSolver0.reset();
dimacsStringSolver0.reset();
VecInt vecInt0 = new VecInt();
IVecInt iVecInt0 = vecInt0.pop();
Minimal4CardinalityModel minimal4CardinalityModel0 = new Minimal4CardinalityModel(dimacsStringSolver0, iVecInt0);
minimal4CardinalityModel0.clearLearntClauses();
commander0.addAtMostOne(minimal4CardinalityModel0, iVecInt0);

* Writing tests to file
* Writing JUnit test case 'Commander_ESTest' to evosuite-tests
* Done!

* Computation finished
