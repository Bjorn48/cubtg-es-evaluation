/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 11:53:24 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jahuwaldt.plot.PlotAxis;
import jahuwaldt.plot.PlotAxisScale;
import jahuwaldt.plot.PlotRunList;
import jahuwaldt.plot.PlotXAxis;
import jahuwaldt.plot.PlotYAxis;
import jahuwaldt.plot.RTriangle3Symbol;
import jahuwaldt.plot.SimplePlotXY;
import jahuwaldt.plot.Triangle4Symbol;
import java.awt.Rectangle;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.Box;
import javax.swing.DebugGraphics;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimplePlotXY_ESTest extends SimplePlotXY_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      Locale locale0 = Locale.GERMAN;
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      double[] doubleArray1 = new double[1];
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray1, "%dvN#?)Os<", "{r^nXtWlb<pPpg", "1Dj!UkPhw", numberFormat0, numberFormat0);
      assertEquals("%dvN#?)Os<", simplePlotXY0.getTitle());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      PlotYAxis plotYAxis0 = new PlotYAxis();
      simplePlotXY0.setVerticalAxis(plotYAxis0);
      plotYAxis0.setAxisTickLimits();
      Rectangle rectangle0 = new Rectangle(4, (-617), 2, (-617));
      plotYAxis0.setSize(rectangle0);
      PlotAxis plotAxis0 = simplePlotXY0.getVerticalAxis();
      assertEquals(Double.NaN, plotAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[4];
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance();
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "", "Help", "wTv\"|uIn*=", numberFormat0, numberFormat0);
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.setAxisTickLimits();
      simplePlotXY0.setVerticalAxis(plotXAxis0);
      simplePlotXY0.getVerticalAxis();
      assertEquals("", simplePlotXY0.getTitle());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      Locale locale0 = Locale.GERMAN;
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "%dvN#?)Os<", "{r^nXtWlb<pPpg", "1Dj!UkPhw", numberFormat0, numberFormat0);
      String string0 = simplePlotXY0.getTitle();
      assertEquals("%dvN#?)Os<", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      Locale locale0 = Locale.GERMAN;
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "", "", (String) null, numberFormat0, numberFormat0);
      String string0 = simplePlotXY0.getTitle();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      simplePlotXY0.setRuns((PlotRunList) null);
      PlotRunList plotRunList0 = simplePlotXY0.getRuns();
      assertNull(plotRunList0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      Locale locale0 = Locale.GERMAN;
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      RTriangle3Symbol rTriangle3Symbol0 = new RTriangle3Symbol();
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "Rep", "", "Rep", numberFormat0, (NumberFormat) null, rTriangle3Symbol0);
      simplePlotXY0.getRuns();
      assertEquals("Rep", simplePlotXY0.getTitle());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      PlotRunList plotRunList0 = new PlotRunList();
      SimplePlotXY simplePlotXY1 = new SimplePlotXY(plotRunList0, "Ks", "jahuwaldt.plot.Triangle2Symbol", "LA6%!", (NumberFormat) null, (NumberFormat) null);
      PlotAxis plotAxis0 = simplePlotXY1.getVerticalAxis();
      plotAxis0.setAxisBounds(plotRunList0);
      Rectangle rectangle0 = new Rectangle();
      plotAxis0.setSize(rectangle0);
      simplePlotXY0.setHorizontalAxis(plotAxis0);
      assertEquals("Ks", simplePlotXY1.getTitle());
      
      PlotAxis plotAxis1 = simplePlotXY0.getHorizontalAxis();
      assertEquals(2, plotAxis1.getGridStyle());
      assertEquals("LA6%!", plotAxis1.getLabel());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.setAxisTickLimits();
      simplePlotXY0.setHorizontalAxis(plotYAxis0);
      PlotAxis plotAxis0 = simplePlotXY0.getHorizontalAxis();
      assertEquals(1, PlotAxis.kTickMarksOnly);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      PlotRunList plotRunList0 = new PlotRunList();
      SimplePlotXY simplePlotXY1 = new SimplePlotXY(plotRunList0, "Ks", "jahuwaldt.plot.Triangle2Symbol", "LA6%!", (NumberFormat) null, (NumberFormat) null);
      PlotAxis plotAxis0 = simplePlotXY1.getVerticalAxis();
      plotAxis0.setAxisBounds(plotRunList0);
      simplePlotXY0.setHorizontalAxis(plotAxis0);
      assertEquals("Ks", simplePlotXY1.getTitle());
      
      PlotAxis plotAxis1 = simplePlotXY0.getHorizontalAxis();
      assertEquals(2, plotAxis1.getGridStyle());
      assertEquals("LA6%!", plotAxis1.getLabel());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      DecimalFormat decimalFormat0 = new DecimalFormat("dvN#?)s<");
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "dvN#?)s<", "dvN#?)s<", "dvN#?)s<", decimalFormat0, decimalFormat0);
      PlotYAxis plotYAxis0 = new PlotYAxis("dvN#?)s<", (PlotAxisScale) null, decimalFormat0, (-1304));
      simplePlotXY0.setHorizontalAxis(plotYAxis0);
      PlotAxis plotAxis0 = simplePlotXY0.getHorizontalAxis();
      assertEquals(0, PlotAxis.kNoGrid);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      // Undeclared exception!
      try { 
        simplePlotXY0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat();
      RTriangle3Symbol rTriangle3Symbol0 = new RTriangle3Symbol();
      SimplePlotXY simplePlotXY0 = null;
      try {
        simplePlotXY0 = new SimplePlotXY((double[]) null, (double[]) null, "P)43y'", "", "", decimalFormat0, decimalFormat0, rTriangle3Symbol0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat("]=Yn,G#7");
      SimplePlotXY simplePlotXY0 = null;
      try {
        simplePlotXY0 = new SimplePlotXY((double[]) null, (double[]) null, "]=Yn,G#7", "]=Yn,G#7", "]=Yn,G#7", decimalFormat0, decimalFormat0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[14];
      DecimalFormat decimalFormat0 = new DecimalFormat();
      double[] doubleArray1 = new double[0];
      SimplePlotXY simplePlotXY0 = null;
      try {
        simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray1, "/`GIjHZlK,C~", "`SWe.U4*", "`SWe.U4*", decimalFormat0, decimalFormat0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Inconsistant array sizes.
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      DecimalFormat decimalFormat0 = new DecimalFormat("dvN#<s<");
      Box box0 = Box.createVerticalBox();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, (String) null, (String) null, (String) null, decimalFormat0, decimalFormat0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      // Undeclared exception!
      try { 
        simplePlotXY0.draw(debugGraphics0, box0, defaultCaret0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      PlotAxis plotAxis0 = simplePlotXY0.getHorizontalAxis();
      assertNull(plotAxis0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      Locale locale0 = Locale.ITALY;
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "%dvN#?)Os<", "%dvN#?)Os<", "1Dj!UkPhw", numberFormat0, numberFormat0);
      simplePlotXY0.setTitle("%dvN#?)Os<");
      assertEquals("%dvN#?)Os<", simplePlotXY0.getTitle());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      PlotAxis plotAxis0 = simplePlotXY0.getVerticalAxis();
      assertNull(plotAxis0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      DecimalFormat decimalFormat0 = new DecimalFormat("dvN#<s<");
      Box box0 = Box.createVerticalBox();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "dvN#<s<", "dvN#<s<", "dvN#<s<", decimalFormat0, decimalFormat0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      // Undeclared exception!
      try { 
        simplePlotXY0.draw(debugGraphics0, box0, defaultCaret0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      PlotRunList plotRunList0 = simplePlotXY0.getRuns();
      assertEquals(0, plotRunList0.size());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      Locale locale0 = Locale.GERMAN;
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance(locale0);
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "%dvN#?)Os<", "{r^nXtWlb<pPpg", "1Dj!UkPhw", numberFormat0, numberFormat0);
      SimplePlotXY simplePlotXY1 = (SimplePlotXY)simplePlotXY0.clone();
      assertNotSame(simplePlotXY1, simplePlotXY0);
      assertEquals("%dvN#?)Os<", simplePlotXY1.getTitle());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      String string0 = simplePlotXY0.getTitle();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      double[] doubleArray1 = new double[2];
      Triangle4Symbol triangle4Symbol0 = new Triangle4Symbol();
      SimplePlotXY simplePlotXY0 = null;
      try {
        simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray1, "]MUtZRb<", "}Y]vY", "1gK", (NumberFormat) null, (NumberFormat) null, triangle4Symbol0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Inconsistant array sizes.
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }
}
