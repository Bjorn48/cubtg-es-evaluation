<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s6"><transition target="s7" action="org.jvnet.winp.WinProcess.iterator()" proba="1.0"></transition></state><state id="s7"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="org.jvnet.winp.WinProcess.getEnvironmentVariables()" proba="0.16666666666666666"></transition><transition target="s4" action="org.jvnet.winp.WinProcess.kill()" proba="0.16666666666666666"></transition><transition target="s5" action="org.jvnet.winp.WinProcess.getPid()" proba="0.16666666666666666"></transition><transition target="s6" action="org.jvnet.winp.WinProcess.all()" proba="0.16666666666666666"></transition><transition target="s1" action="org.jvnet.winp.WinProcess.getCommandLine()" proba="0.16666666666666666"></transition><transition target="s2" action="org.jvnet.winp.WinProcess.killRecursively()" proba="0.16666666666666666"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="1.0"></transition></state></states></ts>