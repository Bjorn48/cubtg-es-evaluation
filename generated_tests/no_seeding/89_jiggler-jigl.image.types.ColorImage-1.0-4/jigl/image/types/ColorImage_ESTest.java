/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 17:38:02 GMT 2019
 */

package jigl.image.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jigl.image.ColorModel;
import jigl.image.ROI;
import jigl.image.types.ColorImage;
import jigl.image.types.InterpolatedColorImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ColorImage_ESTest extends ColorImage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage();
      ROI rOI0 = new ROI(11, 11, 852, 11);
      // Undeclared exception!
      try { 
        interpolatedColorImage0.get(11, 852, rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.ColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(2967, 0);
      ColorImage colorImage0 = new ColorImage(interpolatedColorImage0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(121, 121);
      ROI rOI0 = new ROI();
      interpolatedColorImage0.copy(rOI0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(1, 1);
      ROI rOI0 = new ROI();
      colorImage0.toString(rOI0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 0);
      int[] intArray0 = new int[6];
      colorImage0.subtract(intArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(0, 124);
      interpolatedColorImage0.subtract(0, (-32768), 124);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage();
      colorImage0.plane(0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(255, 0);
      colorImage0.plane(0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 0);
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(0, 0);
      colorImage0.multiply((ColorImage) interpolatedColorImage0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(255, 0);
      colorImage0.multiply(0, 255, 1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 0);
      colorImage0.multiply(0, 1048);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(255, 0);
      colorImage0.minComponent();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 0);
      colorImage0.min();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(0, 0);
      interpolatedColorImage0.max();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 2259);
      int[] intArray0 = new int[9];
      colorImage0.divide(intArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(0, 0);
      interpolatedColorImage0.divide(0, 0, 0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(0, 0);
      interpolatedColorImage0.divide(0, 1453);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(0, 0);
      colorImage0.diff(colorImage0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(1, 1);
      colorImage0.copy();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage();
      interpolatedColorImage0.copy();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(255, 0);
      Integer[] integerArray0 = new Integer[3];
      colorImage0.clear(integerArray0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(128, 0);
      int[] intArray0 = new int[9];
      interpolatedColorImage0.addbuffer(128, 0, intArray0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(361, 6);
      int[] intArray0 = new int[5];
      ColorImage colorImage0 = interpolatedColorImage0.addbuffer(361, 6, intArray0);
      assertEquals(361, colorImage0.X());
      assertEquals(6, colorImage0.Y());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(1, 0);
      int[] intArray0 = new int[7];
      ColorImage colorImage0 = interpolatedColorImage0.addbuffer(56, 1, (-1510), (-1510), intArray0);
      assertEquals(56, colorImage0.X());
      assertEquals(1, colorImage0.Y());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(255, 0);
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(colorImage0);
      int[] intArray0 = new int[8];
      ColorImage colorImage1 = interpolatedColorImage0.add(intArray0);
      assertEquals(255, colorImage0.X());
      assertEquals(0, colorImage1.Y());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage();
      ColorImage colorImage0 = new ColorImage(0, 0);
      ColorImage colorImage1 = colorImage0.add((ColorImage) interpolatedColorImage0);
      assertEquals(ColorModel.RGB, colorImage1.getColorModel());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(255, 0);
      ColorImage colorImage1 = colorImage0.add((-33), 2114, (-13));
      assertEquals(0, colorImage1.Y());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage();
      int int0 = interpolatedColorImage0.Y();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(4, 4);
      int int0 = colorImage0.Y();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage();
      int int0 = interpolatedColorImage0.X();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage(255, 0);
      ROI rOI0 = new ROI(0, 0, (-2101), 0);
      // Undeclared exception!
      try { 
        colorImage0.toString(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage();
      // Undeclared exception!
      try { 
        colorImage0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.ColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage();
      int[] intArray0 = new int[1];
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        interpolatedColorImage0.subtract(intArray0, rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.ColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ROI rOI0 = new ROI();
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage();
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        interpolatedColorImage0.subtract(1801, 1801, intArray0, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.ColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage();
      ROI rOI0 = new ROI((-2147483624), (-2147483624), (-2147483624), 2118);
      // Undeclared exception!
      try { 
        interpolatedColorImage0.subtract(0, (-2147483624), rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.ColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(128, 0);
      ROI rOI0 = new ROI((-690), (-995), (-1996), (-690));
      // Undeclared exception!
      try { 
        interpolatedColorImage0.subtract(2239, 0, (-524), rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -995
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(0, 0);
      // Undeclared exception!
      try { 
        interpolatedColorImage0.subtract(0, 1258, 1671, 2, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1258
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(1, 1);
      // Undeclared exception!
      try { 
        interpolatedColorImage0.subtract(1094, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage();
      // Undeclared exception!
      try { 
        interpolatedColorImage0.subtract(0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.ColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ColorImage colorImage0 = new ColorImage();
      // Undeclared exception!
      try { 
        colorImage0.subtract((-1056), 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1056
         //
         verifyException("jigl.image.types.ColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage();
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        interpolatedColorImage0.set(4, 4, (Integer[]) null, rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.ColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(25, 25);
      Integer[] integerArray0 = new Integer[0];
      // Undeclared exception!
      try { 
        interpolatedColorImage0.set(11, 2961, integerArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.ColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(0, 0);
      ROI rOI0 = new ROI();
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        interpolatedColorImage0.multiply(intArray0, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.ColorImage", e);
      }
  }
}
