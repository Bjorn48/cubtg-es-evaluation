/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 25 11:41:22 GMT 2019
 */

package src;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.stream.Stream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import src.Fiefdoms;
import src.Intruders;
import src.Knight;
import src.Player;
import src.Vassals;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Fiefdoms_ESTest extends Fiefdoms_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Knight knight0 = new Knight();
      ArrayList<String> arrayList0 = knight0.getFiefdoms();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      arrayList0.add((String) null);
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "viking", "viking", 1, false, arrayList0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-127);
      byteArray0[1] = (byte)76;
      byteArray0[2] = (byte) (-43);
      byteArray0[3] = (byte)78;
      byteArray0[4] = (byte)22;
      byteArray0[5] = (byte)25;
      byteArray0[6] = (byte) (-50);
      byteArray0[7] = (byte)88;
      byteArray0[8] = (byte)121;
      fiefdoms0.selectioncolor = byteArray0;
      fiefdoms0.getLoyalVassals();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setFiefdomCastles(false);
      fiefdoms0.getShaderColor();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setName("You cannot buymoe than a tota of ");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      EvoSuiteFile evoSuiteFile0 = null;
      fiefdoms0.setMuslim((-2175), true);
      fiefdoms0.setRebelliousVassals((ArrayList<Vassals>) null);
      fiefdoms0.setViking((-2175), true);
      ArrayList<Intruders> arrayList0 = fiefdoms0.getViking();
      fiefdoms0.setViking(arrayList0);
      fiefdoms0.setPeasants((-2175));
      fiefdoms0.loyalVassals = null;
      // Undeclared exception!
      try { 
        fiefdoms0.setRebelliousVassals((-2175), true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.Fiefdoms", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setSelectioncolor((byte[]) null);
      fiefdoms0.getConqueror();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.getMagyar();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Knight knight0 = new Knight();
      knight0.setName(" castles for ");
      knight0.getName();
      knight0.getTotalMoney();
      ArrayList<String> arrayList0 = knight0.getFiefdoms();
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, " castles for ", " castles for ", 0, false, arrayList0);
      fiefdoms0.setViking(0, false);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setValue(3288);
      fiefdoms0.buyPersonalCastles(3288);
      fiefdoms0.setOwner("2");
      fiefdoms0.setOwner("2");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setPersonalCastles(2);
      ArrayList<Vassals> arrayList0 = new ArrayList<Vassals>();
      fiefdoms0.setRebelliousVassals(arrayList0);
      fiefdoms0.getNeighbors();
      fiefdoms0.setOwner("");
      fiefdoms0.buyFiefdomCastles(0);
      fiefdoms0.setOwner("3}*Covh[@u+LvB");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      ArrayList<Vassals> arrayList0 = fiefdoms0.getLoyalVassals();
      fiefdoms0.setRebelliousVassals(arrayList0);
      fiefdoms0.getViking();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotNull(fiefdoms0);
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getViking();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte) (-46);
      byteArray0[2] = (byte) (-37);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      arrayList0.trimToSize();
      fiefdoms0.setMagyar(arrayList0);
      byte[] byteArray1 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      fiefdoms0.setValue((-1411));
      fiefdoms0.setFiefdomCastles(718);
      fiefdoms0.getVassalsList();
      fiefdoms0.setSelectioncolor(byteArray1);
      byte[] byteArray2 = fiefdoms0.getSelectioncolor();
      fiefdoms0.setSelectioncolor(byteArray2);
      fiefdoms0.setPersonalCastles(1);
      fiefdoms0.getSelectioncolor();
      fiefdoms0.getVassalsList();
      fiefdoms0.getShaderColor();
      fiefdoms0.getLoyalVassals();
      fiefdoms0.setOwner("~Oew$FhP6TW2Nu");
      fiefdoms0.getNeighbors();
      fiefdoms0.getConqueror();
      fiefdoms0.getConqueror();
      fiefdoms0.getInvaderType();
      fiefdoms0.getConqueror();
      fiefdoms0.getConqueror();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.buyPersonalCastles(3212);
      fiefdoms0.getMagyar();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.getRebelliousVassals();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Knight knight0 = new Knight();
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNotNull(knight0);
      
      String string0 = knight0.getLocation();
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", string0);
      assertNotNull(string0);
      
      Knight knight1 = new Knight();
      assertNull(knight1.getName());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals("", knight1.getOrder());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getHitsCounter());
      assertFalse(knight1.getDead());
      assertNull(knight1.getPassword());
      assertEquals(0, knight1.getKill());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getwound());
      assertEquals("knight", knight1.getRank());
      assertEquals(0, knight1.getScore());
      assertFalse(knight1.equals((Object)knight0));
      assertNotNull(knight1);
      
      ArrayList<String> arrayList0 = knight1.getConversation();
      assertNull(knight1.getName());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals("", knight1.getOrder());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getHitsCounter());
      assertFalse(knight1.getDead());
      assertNull(knight1.getPassword());
      assertEquals(0, knight1.getKill());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getwound());
      assertEquals("knight", knight1.getRank());
      assertEquals(0, knight1.getScore());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertFalse(knight1.equals((Object)knight0));
      assertNotSame(knight1, knight0);
      assertFalse(arrayList0.contains(string0));
      assertNotNull(arrayList0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "MbP6$_3O:4W/", "viking", 2683, false, arrayList0);
      assertNull(knight1.getName());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals("", knight1.getOrder());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getHitsCounter());
      assertFalse(knight1.getDead());
      assertNull(knight1.getPassword());
      assertEquals(0, knight1.getKill());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getwound());
      assertEquals("knight", knight1.getRank());
      assertEquals(0, knight1.getScore());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(2683, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("viking", fiefdoms0.getOwner());
      assertEquals("MbP6$_3O:4W/", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(knight1.equals((Object)knight0));
      assertFalse(arrayList0.contains("MbP6$_3O:4W/"));
      assertNotNull(fiefdoms0);
      
      float[] floatArray0 = fiefdoms0.getShaderColor();
      assertNull(knight1.getName());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals("", knight1.getOrder());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getHitsCounter());
      assertFalse(knight1.getDead());
      assertNull(knight1.getPassword());
      assertEquals(0, knight1.getKill());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getwound());
      assertEquals("knight", knight1.getRank());
      assertEquals(0, knight1.getScore());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(2683, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("viking", fiefdoms0.getOwner());
      assertEquals("MbP6$_3O:4W/", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(knight1.equals((Object)knight0));
      assertNotSame(knight1, knight0);
      assertEquals(2, floatArray0.length);
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
      assertFalse(arrayList0.contains("MbP6$_3O:4W/"));
      assertNotNull(floatArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setOwner("bXy\"|");
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("bXy\"|", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setMuslim((-477), false);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setLoyalVassals((-477), false);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setPeasants((-477));
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-477), fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(fiefdoms0);
      
      String string0 = fiefdoms0.getOwner();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(string0);
      
      fiefdoms0.setFiefdomCastles(false);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setPeasants((-1));
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals((-1), fiefdoms0.getPeasants());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setPeasants((-1718));
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals((-1718), fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.buyFiefdomCastles(1402);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals((-1718), fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setOwner((String) null);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals((-1718), fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setPersonalCastles(false);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals((-1718), fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setMagyar((-1), false);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals((-1718), fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      
      String string1 = fiefdoms0.getConqueror();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertEquals((-1718), fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertNull(string1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      boolean boolean0 = arrayList0.add("e=~x4<PnfT8");
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertTrue(boolean0);
      assertTrue(arrayList0.contains("e=~x4<PnfT8"));
      
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setOwner("src.Fiefdoms");
      assertEquals("src.Fiefdoms", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setName("}fLQUNG4");
      assertEquals("src.Fiefdoms", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("}fLQUNG4", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      
      ArrayList<Player> arrayList1 = fiefdoms0.getVassalsList();
      assertEquals("src.Fiefdoms", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("}fLQUNG4", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(arrayList1);
      
      ArrayList<String> arrayList2 = fiefdoms0.getInvaderType();
      assertEquals("src.Fiefdoms", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("}fLQUNG4", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(arrayList2);
      
      // Undeclared exception!
      fiefdoms0.setMagyar(2147483645, true);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Knight knight0 = new Knight();
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertNotNull(knight0);
      
      String string0 = knight0.getLocation();
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals("Ile-De-France", string0);
      assertNotNull(string0);
      
      Knight knight1 = new Knight();
      assertEquals("knight", knight1.getRank());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertEquals(0, knight1.getWounds());
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals("", knight1.getOrder());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getRebellionCounter());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertEquals(0, knight1.getwound());
      assertNull(knight1.getPassword());
      assertFalse(knight1.equals((Object)knight0));
      assertNotNull(knight1);
      
      boolean boolean0 = knight1.setTotalMoney(571, false);
      assertEquals("knight", knight1.getRank());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertEquals(0, knight1.getWounds());
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals("", knight1.getOrder());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getRebellionCounter());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertEquals(0, knight1.getwound());
      assertNull(knight1.getPassword());
      assertFalse(knight1.equals((Object)knight0));
      assertNotSame(knight1, knight0);
      assertFalse(boolean0);
      
      ArrayList<String> arrayList0 = knight1.getConversation();
      assertEquals("knight", knight1.getRank());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertEquals(0, knight1.getWounds());
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals("", knight1.getOrder());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getRebellionCounter());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertEquals(0, knight1.getwound());
      assertNull(knight1.getPassword());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(knight1.equals((Object)knight0));
      assertNotSame(knight1, knight0);
      assertFalse(arrayList0.contains(string0));
      assertNotNull(arrayList0);
      
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      assertEquals("knight", knight1.getRank());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertEquals(0, knight1.getWounds());
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals("", knight1.getOrder());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getRebellionCounter());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertEquals(0, knight1.getwound());
      assertNull(knight1.getPassword());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(knight1.equals((Object)knight0));
      assertNotSame(knight1, knight0);
      assertFalse(arrayList0.contains(string0));
      
      boolean boolean1 = arrayList0.add("Ile-De-France");
      assertEquals("knight", knight1.getRank());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertEquals(0, knight1.getWounds());
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals("", knight1.getOrder());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getRebellionCounter());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertEquals(0, knight1.getwound());
      assertNull(knight1.getPassword());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertFalse(knight1.equals((Object)knight0));
      assertFalse(boolean1 == boolean0);
      assertNotSame(knight1, knight0);
      assertTrue(boolean1);
      assertTrue(arrayList0.contains("Ile-De-France"));
      
      knight0.setHitsCounter((-1));
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals((-1), knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.equals((Object)knight1));
      assertNotSame(knight0, knight1);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "Ile-De-France", "Invalid number", (-1), true, arrayList0);
      assertEquals("knight", knight1.getRank());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertEquals(0, knight1.getWounds());
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals("", knight1.getOrder());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getRebellionCounter());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertEquals(0, knight1.getwound());
      assertNull(knight1.getPassword());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("Invalid number", fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(knight1.equals((Object)knight0));
      assertTrue(arrayList0.contains("Ile-De-France"));
      assertFalse(arrayList0.contains("Invalid number"));
      assertNotNull(fiefdoms0);
      
      knight0.setKills(571);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(571, knight0.getKill());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertEquals((-1), knight0.getHitsCounter());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(571, knight0.getKills());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getWounds());
      assertFalse(knight0.equals((Object)knight1));
      assertNotSame(knight0, knight1);
      
      fiefdoms0.setName("Ile-De-France");
      assertEquals("knight", knight1.getRank());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertEquals(0, knight1.getWounds());
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals("", knight1.getOrder());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getRebellionCounter());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertEquals(0, knight1.getwound());
      assertNull(knight1.getPassword());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("Invalid number", fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(knight1.equals((Object)knight0));
      assertNotSame(knight1, knight0);
      assertTrue(arrayList0.contains("Ile-De-France"));
      assertFalse(arrayList0.contains("Invalid number"));
      
      fiefdoms0.setFiefdomCastles(true);
      assertEquals("knight", knight1.getRank());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertEquals(0, knight1.getWounds());
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals("", knight1.getOrder());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getRebellionCounter());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertEquals(0, knight1.getwound());
      assertNull(knight1.getPassword());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("Invalid number", fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getValue());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(knight1.equals((Object)knight0));
      assertNotSame(knight1, knight0);
      assertTrue(arrayList0.contains("Ile-De-France"));
      assertFalse(arrayList0.contains("Invalid number"));
      
      fiefdoms0.setFiefdomCastles(true);
      assertEquals("knight", knight1.getRank());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertEquals(0, knight1.getWounds());
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals("", knight1.getOrder());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getRebellionCounter());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertEquals(0, knight1.getwound());
      assertNull(knight1.getPassword());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("Invalid number", fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getValue());
      assertEquals(2, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(knight1.equals((Object)knight0));
      assertNotSame(knight1, knight0);
      assertTrue(arrayList0.contains("Ile-De-France"));
      assertFalse(arrayList0.contains("Invalid number"));
      
      fiefdoms0.setRebelliousVassals((-5028), true);
      assertEquals("knight", knight1.getRank());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertEquals(0, knight1.getWounds());
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals("", knight1.getOrder());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getRebellionCounter());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertEquals(0, knight1.getwound());
      assertNull(knight1.getPassword());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("Invalid number", fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getValue());
      assertEquals(2, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(knight1.equals((Object)knight0));
      assertNotSame(knight1, knight0);
      assertTrue(arrayList0.contains("Ile-De-France"));
      assertFalse(arrayList0.contains("Invalid number"));
      
      ArrayList<String> arrayList1 = fiefdoms0.getNeighbors();
      assertEquals("knight", knight1.getRank());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertEquals(0, knight1.getWounds());
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals("", knight1.getOrder());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getRebellionCounter());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertEquals(0, knight1.getwound());
      assertNull(knight1.getPassword());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("Invalid number", fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getValue());
      assertEquals(2, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, arrayList1.size());
      assertFalse(knight1.equals((Object)knight0));
      assertNotSame(knight1, knight0);
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList1, arrayList0);
      assertTrue(arrayList0.contains("Ile-De-France"));
      assertFalse(arrayList0.contains("Invalid number"));
      assertTrue(arrayList1.contains("Ile-De-France"));
      assertFalse(arrayList1.contains("Invalid number"));
      assertNotNull(arrayList1);
      
      int int0 = fiefdoms0.getValue();
      assertEquals("knight", knight1.getRank());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertEquals(0, knight1.getWounds());
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals("", knight1.getOrder());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getRebellionCounter());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertEquals(0, knight1.getwound());
      assertNull(knight1.getPassword());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("Invalid number", fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getValue());
      assertEquals(2, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(knight1.equals((Object)knight0));
      assertNotSame(knight1, knight0);
      assertSame(arrayList0, arrayList1);
      assertEquals((-1), int0);
      assertTrue(arrayList0.contains("Ile-De-France"));
      assertFalse(arrayList0.contains("Invalid number"));
      
      ArrayList<Vassals> arrayList2 = fiefdoms0.getRebelliousVassals();
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertEquals("knight", knight1.getRank());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertEquals(0, knight1.getWounds());
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals("", knight1.getOrder());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getRebellionCounter());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertEquals(0, knight1.getwound());
      assertNull(knight1.getPassword());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("Invalid number", fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getValue());
      assertEquals(2, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(knight1.equals((Object)knight0));
      assertNotSame(knight1, knight0);
      assertSame(arrayList0, arrayList1);
      assertTrue(arrayList0.contains("Ile-De-France"));
      assertFalse(arrayList0.contains("Invalid number"));
      assertNotNull(arrayList2);
      
      int int1 = fiefdoms0.getFiefdomCastles();
      assertEquals("knight", knight1.getRank());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertEquals(0, knight1.getWounds());
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals("", knight1.getOrder());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getRebellionCounter());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertEquals(0, knight1.getwound());
      assertNull(knight1.getPassword());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("Invalid number", fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getValue());
      assertEquals(2, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(int1 == int0);
      assertFalse(knight1.equals((Object)knight0));
      assertNotSame(knight1, knight0);
      assertSame(arrayList0, arrayList1);
      assertEquals(2, int1);
      assertTrue(arrayList0.contains("Ile-De-France"));
      assertFalse(arrayList0.contains("Invalid number"));
      
      ArrayList<String> arrayList3 = fiefdoms0.getInvaderType();
      assertEquals("knight", knight1.getRank());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertEquals(0, knight1.getWounds());
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals("", knight1.getOrder());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getRebellionCounter());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertEquals(0, knight1.getwound());
      assertNull(knight1.getPassword());
      assertFalse(arrayList3.isEmpty());
      assertEquals(1, arrayList3.size());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("Invalid number", fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getValue());
      assertEquals(2, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(knight1.equals((Object)knight0));
      assertNotSame(knight1, knight0);
      assertSame(arrayList3, arrayList0);
      assertSame(arrayList3, arrayList1);
      assertSame(arrayList0, arrayList3);
      assertSame(arrayList0, arrayList1);
      assertFalse(arrayList3.contains("Invalid number"));
      assertTrue(arrayList3.contains("Ile-De-France"));
      assertTrue(arrayList0.contains("Ile-De-France"));
      assertFalse(arrayList0.contains("Invalid number"));
      assertNotNull(arrayList3);
      
      ArrayList<Intruders> arrayList4 = fiefdoms0.getMagyar();
      assertEquals("knight", knight1.getRank());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getKill());
      assertEquals(0, knight1.getWounds());
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getHitsCounter());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals("", knight1.getOrder());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getRebellionCounter());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getScore());
      assertEquals(0, knight1.getwound());
      assertNull(knight1.getPassword());
      assertEquals(0, arrayList4.size());
      assertTrue(arrayList4.isEmpty());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("Invalid number", fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getValue());
      assertEquals(2, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("Ile-De-France", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(knight1.equals((Object)knight0));
      assertNotSame(knight1, knight0);
      assertSame(arrayList0, arrayList3);
      assertSame(arrayList0, arrayList1);
      assertTrue(arrayList0.contains("Ile-De-France"));
      assertFalse(arrayList0.contains("Invalid number"));
      assertNotNull(arrayList4);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNotNull(fiefdoms0);
      
      Knight knight0 = new Knight();
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getTotalMoney());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertNotNull(knight0);
      
      knight0.setTotalMoney((-660));
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals((-660), knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      
      String string0 = knight0.getRank();
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals((-660), knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertEquals("knight", string0);
      assertNotNull(string0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      int int0 = knight0.getTotalMoney();
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals((-660), knight0.getTotalMoney());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertEquals((-660), int0);
      
      knight0.setTotalMoney(1);
      assertEquals(1, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      
      knight0.setScore((-4930));
      assertEquals(1, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals((-4930), knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      
      String string1 = knight0.getName();
      assertEquals(1, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals((-4930), knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertNull(string1);
      
      String string2 = knight0.getPassword();
      assertEquals(1, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals((-4930), knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertNull(string2);
      
      ArrayList<String> arrayList0 = knight0.getVotes();
      assertEquals(1, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals((-4930), knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string0));
      assertNotNull(arrayList0);
      
      Fiefdoms fiefdoms1 = new Fiefdoms((ArrayList<String>) null, "knight", "muslim", (-660), true, arrayList0);
      assertEquals(1, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertFalse(knight0.getDead());
      assertEquals((-4930), knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals((-660), fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertTrue(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getConqueror());
      assertEquals("muslim", fiefdoms1.getOwner());
      assertEquals("knight", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(arrayList0.contains(string0));
      assertNotNull(fiefdoms1);
      
      ArrayList<String> arrayList1 = fiefdoms0.getNeighbors();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNull(arrayList1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setLoyalVassals(3, true);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      
      int int0 = fiefdoms0.getValue();
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setViking(1922, false);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getViking();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      Intruders intruders0 = new Intruders();
      assertNull(intruders0.getLocation());
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      assertNotNull(intruders0);
      
      boolean boolean0 = arrayList0.add(intruders0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertNull(intruders0.getLocation());
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      assertTrue(boolean0);
      assertTrue(arrayList0.contains(intruders0));
      
      int int0 = 1036;
      ArrayList arrayList1 = (ArrayList)arrayList0.clone();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, arrayList1.size());
      assertTrue(arrayList0.contains(intruders0));
      assertNotNull(arrayList1);
      
      ArrayList<Intruders> arrayList2 = fiefdoms0.getMagyar();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertNotSame(arrayList2, arrayList0);
      assertFalse(arrayList2.contains(intruders0));
      assertNotNull(arrayList2);
      
      intruders0.setType("vA4 l");
      assertNull(intruders0.getLocation());
      assertEquals("vA4 l", intruders0.getType());
      assertNull(intruders0.getRank());
      
      fiefdoms0.setMuslim(arrayList2);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertNotSame(arrayList2, arrayList0);
      assertFalse(arrayList2.contains(intruders0));
      
      arrayList2.trimToSize();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertNotSame(arrayList2, arrayList0);
      assertFalse(arrayList2.contains(intruders0));
      
      boolean boolean1 = arrayList0.add(intruders0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertNull(intruders0.getLocation());
      assertEquals("vA4 l", intruders0.getType());
      assertNull(intruders0.getRank());
      assertFalse(arrayList0.equals((Object)arrayList2));
      assertTrue(boolean1 == boolean0);
      assertNotSame(arrayList0, arrayList2);
      assertTrue(boolean1);
      assertTrue(arrayList0.contains(intruders0));
      
      Stream<Intruders> stream0 = arrayList2.stream();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertNotSame(arrayList2, arrayList0);
      assertFalse(arrayList2.contains(intruders0));
      assertNotNull(stream0);
      
      arrayList2.clear();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertNotSame(arrayList2, arrayList0);
      assertFalse(arrayList2.contains(intruders0));
      
      // Undeclared exception!
      try { 
        arrayList0.addAll(1036, (Collection<? extends Intruders>) arrayList2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1036, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      
      ArrayList<Vassals> arrayList0 = new ArrayList<Vassals>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      Vassals vassals0 = new Vassals();
      assertNull(vassals0.getLord());
      assertNull(vassals0.getLocation());
      assertEquals("vassal", vassals0.getRank());
      assertNull(vassals0.getFiefdom());
      assertNotNull(vassals0);
      
      vassals0.setLocation("Invalid rank. Ranks are case sensitive as follows: knight, count, duke, and king.");
      assertNull(vassals0.getLord());
      assertEquals("Invalid rank. Ranks are case sensitive as follows: knight, count, duke, and king.", vassals0.getLocation());
      assertEquals("vassal", vassals0.getRank());
      assertNull(vassals0.getFiefdom());
      
      boolean boolean0 = arrayList0.add(vassals0);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertNull(vassals0.getLord());
      assertEquals("Invalid rank. Ranks are case sensitive as follows: knight, count, duke, and king.", vassals0.getLocation());
      assertEquals("vassal", vassals0.getRank());
      assertNull(vassals0.getFiefdom());
      assertTrue(boolean0);
      assertTrue(arrayList0.contains(vassals0));
      
      fiefdoms0.setViking(1212, true);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      
      Vassals vassals1 = new Vassals("cyAlue;rgpIA8d:_f", "fiefdomsSax.xml");
      assertEquals("cyAlue;rgpIA8d:_f", vassals1.getLord());
      assertEquals("vassal", vassals1.getRank());
      assertNull(vassals1.getLocation());
      assertEquals("fiefdomsSax.xml", vassals1.getFiefdom());
      assertFalse(vassals1.equals((Object)vassals0));
      assertNotNull(vassals1);
      
      vassals1.setLocation("cyAlue;rgpIA8d:_f");
      assertEquals("cyAlue;rgpIA8d:_f", vassals1.getLord());
      assertEquals("vassal", vassals1.getRank());
      assertEquals("fiefdomsSax.xml", vassals1.getFiefdom());
      assertEquals("cyAlue;rgpIA8d:_f", vassals1.getLocation());
      assertFalse(vassals1.equals((Object)vassals0));
      assertNotSame(vassals1, vassals0);
      
      vassals1.setLocation("n=[*md2[;E\"\"-mO#t|");
      assertEquals("n=[*md2[;E\"\"-mO#t|", vassals1.getLocation());
      assertEquals("cyAlue;rgpIA8d:_f", vassals1.getLord());
      assertEquals("vassal", vassals1.getRank());
      assertEquals("fiefdomsSax.xml", vassals1.getFiefdom());
      assertFalse(vassals1.equals((Object)vassals0));
      assertNotSame(vassals1, vassals0);
      
      vassals1.setLocation((String) null);
      assertEquals("cyAlue;rgpIA8d:_f", vassals1.getLord());
      assertEquals("vassal", vassals1.getRank());
      assertNull(vassals1.getLocation());
      assertEquals("fiefdomsSax.xml", vassals1.getFiefdom());
      assertFalse(vassals1.equals((Object)vassals0));
      assertNotSame(vassals1, vassals0);
      
      boolean boolean1 = arrayList0.add(vassals1);
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertEquals("cyAlue;rgpIA8d:_f", vassals1.getLord());
      assertEquals("vassal", vassals1.getRank());
      assertNull(vassals1.getLocation());
      assertEquals("fiefdomsSax.xml", vassals1.getFiefdom());
      assertFalse(vassals1.equals((Object)vassals0));
      assertTrue(boolean1 == boolean0);
      assertNotSame(vassals1, vassals0);
      assertTrue(boolean1);
      assertTrue(arrayList0.contains(vassals0));
      
      arrayList0.ensureCapacity(2);
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertTrue(arrayList0.contains(vassals0));
      
      fiefdoms0.setLoyalVassals(arrayList0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertTrue(arrayList0.contains(vassals0));
      
      fiefdoms0.setFiefdomCastles(false);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setLoyalVassals(1438, false);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      ArrayList<Vassals> arrayList1 = fiefdoms0.getLoyalVassals();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertSame(arrayList1, arrayList0);
      assertFalse(arrayList1.contains(vassals0));
      assertNotNull(arrayList1);
      
      fiefdoms0.buyFiefdomCastles(0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setKingdom(false);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(3, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArray0);
      
      ArrayList<String> arrayList2 = fiefdoms0.getInvaderType();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(arrayList2);
      
      fiefdoms0.setPersonalCastles(false);
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.buyPersonalCastles((-2310));
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setValue((-2310));
      assertEquals((-2310), fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      ArrayList<Vassals> arrayList3 = fiefdoms0.getRebelliousVassals();
      assertEquals((-2310), fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertTrue(arrayList3.equals((Object)arrayList1));
      assertTrue(arrayList3.equals((Object)arrayList0));
      assertNotSame(arrayList3, arrayList0);
      assertNotSame(arrayList3, arrayList1);
      assertFalse(arrayList3.contains(vassals0));
      assertNotNull(arrayList3);
      
      fiefdoms0.setPersonalCastles(1438);
      assertEquals((-2310), fiefdoms0.getValue());
      assertEquals(1438, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      Knight knight0 = new Knight();
      assertNull(knight0.getName());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertNotNull(knight0);
      
      knight0.setName(" castles for ");
      assertEquals(" castles for ", knight0.getName());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      
      String string0 = knight0.getName();
      assertEquals(" castles for ", knight0.getName());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals(" castles for ", string0);
      assertNotNull(string0);
      
      int int0 = knight0.getTotalMoney();
      assertEquals(" castles for ", knight0.getName());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals(0, int0);
      
      ArrayList<String> arrayList0 = knight0.getFiefdoms();
      assertEquals(" castles for ", knight0.getName());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertFalse(arrayList0.contains(" castles for "));
      assertNotNull(arrayList0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, " castles for ", " castles for ", 0, false, arrayList0);
      assertEquals(" castles for ", knight0.getName());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(" castles for ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(" castles for ", fiefdoms0.getName());
      assertFalse(arrayList0.contains(string0));
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setViking(0, false);
      assertEquals(" castles for ", knight0.getName());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(" castles for ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(" castles for ", fiefdoms0.getName());
      assertFalse(arrayList0.contains(string0));
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(" castles for ", knight0.getName());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(" castles for ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(" castles for ", fiefdoms0.getName());
      assertEquals(3, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertFalse(arrayList0.contains(string0));
      assertNotNull(byteArray0);
      
      String string1 = fiefdoms0.getName();
      assertEquals(" castles for ", knight0.getName());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(knight0.getDead());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(" castles for ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(" castles for ", fiefdoms0.getName());
      assertTrue(string1.equals((Object)string0));
      assertEquals(" castles for ", string1);
      assertFalse(arrayList0.contains(string1));
      assertNotNull(string1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setRebelliousVassals((-1), true);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setFiefdomCastles((-1));
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<String> arrayList0 = fiefdoms0.getNeighbors();
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.buyFiefdomCastles(720);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMuslim();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setPersonalCastles(1);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setPersonalCastles(false);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setOwner("");
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      int int0 = fiefdoms0.getFiefdomCastles();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, int0);
      
      ArrayList<Vassals> arrayList0 = fiefdoms0.getLoyalVassals();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMagyar();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      
      int int1 = fiefdoms0.getFiefdomCastles();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      
      Fiefdoms fiefdoms1 = new Fiefdoms();
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms1);
      
      ArrayList<Intruders> arrayList2 = fiefdoms1.getMuslim();
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertTrue(arrayList2.equals((Object)arrayList1));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotSame(arrayList2, arrayList1);
      assertNotNull(arrayList2);
      
      ArrayList<Intruders> arrayList3 = fiefdoms1.getMuslim();
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertTrue(arrayList3.equals((Object)arrayList1));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertSame(arrayList3, arrayList2);
      assertNotSame(arrayList3, arrayList1);
      assertNotNull(arrayList3);
      
      fiefdoms1.setMagyar(17, false);
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      
      ArrayList<Intruders> arrayList4 = fiefdoms0.getMuslim();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertTrue(arrayList4.isEmpty());
      assertEquals(0, arrayList4.size());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertTrue(arrayList4.equals((Object)arrayList1));
      assertTrue(arrayList4.equals((Object)arrayList3));
      assertTrue(arrayList4.equals((Object)arrayList2));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(arrayList4, arrayList1);
      assertNotSame(arrayList4, arrayList3);
      assertNotSame(arrayList4, arrayList2);
      assertNotNull(arrayList4);
      
      ArrayList<Intruders> arrayList5 = fiefdoms1.getMuslim();
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertTrue(arrayList5.isEmpty());
      assertEquals(0, arrayList5.size());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertTrue(arrayList5.equals((Object)arrayList1));
      assertTrue(arrayList5.equals((Object)arrayList4));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertSame(arrayList5, arrayList3);
      assertNotSame(arrayList5, arrayList4);
      assertSame(arrayList5, arrayList2);
      assertNotSame(arrayList5, arrayList1);
      assertNotNull(arrayList5);
      
      String string0 = fiefdoms1.getName();
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(string0);
      
      int int2 = fiefdoms0.getValue();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertTrue(int2 == int0);
      assertTrue(int2 == int1);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertEquals(0, int2);
      
      ArrayList<Vassals> arrayList6 = fiefdoms0.getRebelliousVassals();
      assertEquals(0, arrayList6.size());
      assertTrue(arrayList6.isEmpty());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertTrue(arrayList6.equals((Object)arrayList0));
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNotSame(arrayList6, arrayList0);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotNull(arrayList6);
      
      ArrayList<Vassals> arrayList7 = fiefdoms0.getLoyalVassals();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertTrue(arrayList7.isEmpty());
      assertEquals(0, arrayList7.size());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertTrue(arrayList7.equals((Object)arrayList6));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(arrayList7, arrayList6);
      assertSame(arrayList7, arrayList0);
      assertNotNull(arrayList7);
      
      ArrayList<Intruders> arrayList8 = fiefdoms1.getMagyar();
      assertTrue(arrayList8.isEmpty());
      assertEquals(0, arrayList8.size());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertTrue(arrayList8.equals((Object)arrayList5));
      assertTrue(arrayList8.equals((Object)arrayList3));
      assertTrue(arrayList8.equals((Object)arrayList2));
      assertTrue(arrayList8.equals((Object)arrayList1));
      assertTrue(arrayList8.equals((Object)arrayList4));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(arrayList8, arrayList2);
      assertNotSame(arrayList8, arrayList1);
      assertNotSame(arrayList8, arrayList4);
      assertNotSame(arrayList8, arrayList3);
      assertNotSame(arrayList8, arrayList5);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotNull(arrayList8);
      
      ArrayList<Intruders> arrayList9 = fiefdoms1.getMuslim();
      assertEquals(0, arrayList9.size());
      assertTrue(arrayList9.isEmpty());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertTrue(arrayList9.equals((Object)arrayList4));
      assertTrue(arrayList9.equals((Object)arrayList8));
      assertTrue(arrayList9.equals((Object)arrayList1));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(arrayList9, arrayList8);
      assertSame(arrayList9, arrayList2);
      assertNotSame(arrayList9, arrayList1);
      assertNotSame(arrayList9, arrayList4);
      assertSame(arrayList9, arrayList5);
      assertSame(arrayList9, arrayList3);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotNull(arrayList9);
      
      ArrayList<Intruders> arrayList10 = fiefdoms1.getMuslim();
      assertTrue(arrayList10.isEmpty());
      assertEquals(0, arrayList10.size());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertTrue(arrayList10.equals((Object)arrayList1));
      assertTrue(arrayList10.equals((Object)arrayList8));
      assertTrue(arrayList10.equals((Object)arrayList4));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(arrayList10, arrayList1);
      assertNotSame(arrayList10, arrayList4);
      assertSame(arrayList10, arrayList5);
      assertSame(arrayList10, arrayList3);
      assertSame(arrayList10, arrayList2);
      assertNotSame(arrayList10, arrayList8);
      assertSame(arrayList10, arrayList9);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotNull(arrayList10);
      
      int int3 = fiefdoms0.getFiefdomCastles();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertTrue(int3 == int2);
      assertTrue(int3 == int1);
      assertTrue(int3 == int0);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertEquals(0, int3);
      
      fiefdoms0.setPersonalCastles(false);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNotSame(fiefdoms0, fiefdoms1);
      
      ArrayList<String> arrayList11 = fiefdoms1.getInvaderType();
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(arrayList11);
      
      fiefdoms1.setPeasants(2261);
      assertEquals(2261, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertNull(fiefdoms1.getConqueror());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      
      fiefdoms0.buyFiefdomCastles(1);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNotSame(fiefdoms0, fiefdoms1);
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertEquals(3, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms((ArrayList<String>) null, "", "", 1073, false, (ArrayList<String>) null);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1073, fiefdoms0.getValue());
      assertNotNull(fiefdoms0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      fiefdoms0.setMuslim(1073, false);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1073, fiefdoms0.getValue());
      
      fiefdoms0.setValue(1667);
      assertEquals(1667, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setRebelliousVassals(1073, true);
      assertEquals(1667, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setMuslim((-1), false);
      assertEquals(1667, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setOwner((String) null);
      assertEquals(1667, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      assertFalse(fileSystemHandling1.equals((Object)fileSystemHandling0));
      assertNotNull(fileSystemHandling1);
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getViking();
      assertEquals(1667, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      fiefdoms0.setRebelliousVassals((-2225), true);
      assertEquals(1667, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      Intruders intruders0 = new Intruders();
      assertNull(intruders0.getRank());
      assertNull(intruders0.getLocation());
      assertNull(intruders0.getType());
      assertNotNull(intruders0);
      
      boolean boolean0 = arrayList0.add((Intruders) null);
      assertEquals(1667, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertTrue(boolean0);
      assertFalse(arrayList0.contains(intruders0));
      
      Fiefdoms fiefdoms1 = new Fiefdoms();
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms1);
      
      fiefdoms1.setLoyalVassals((-1317), false);
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      
      fiefdoms1.setViking(arrayList0);
      assertEquals(1667, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertFalse(arrayList0.contains(intruders0));
      
      ArrayList<Vassals> arrayList1 = fiefdoms0.getLoyalVassals();
      assertEquals(1667, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotNull(arrayList1);
      
      ArrayList<Intruders> arrayList2 = fiefdoms0.getMuslim();
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertEquals(1667, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNotSame(arrayList2, arrayList0);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertFalse(arrayList2.contains(intruders0));
      assertNotNull(arrayList2);
      
      fiefdoms1.setOwner("Invalid number");
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals("Invalid number", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      
      ArrayList<String> arrayList3 = fiefdoms1.getInvaderType();
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals("Invalid number", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(arrayList3);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNotNull(fiefdoms0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      fiefdoms0.setMuslim((-3), false);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setLoyalVassals((-3), false);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setPeasants((-477));
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-477), fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      int int0 = fiefdoms0.getPeasants();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-477), fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals((-477), int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setMuslim(579, false);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.setPersonalCastles(false);
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.setMagyar(579, false);
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      
      fiefdoms0.setFiefdomCastles(2);
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getFiefdomCastles());
      
      Fiefdoms fiefdoms1 = new Fiefdoms();
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms1);
      
      fiefdoms1.buyFiefdomCastles((-227));
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      
      String string0 = fiefdoms1.getOwner();
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(string0);
      
      fiefdoms1.setName((String) null);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      
      fiefdoms1.setOwner((String) null);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      
      fiefdoms1.setName((String) null);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      
      ArrayList<String> arrayList0 = fiefdoms1.getNeighbors();
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(arrayList0);
      
      Fiefdoms fiefdoms2 = new Fiefdoms();
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPeasants());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getValue());
      assertNull(fiefdoms2.getOwner());
      assertNull(fiefdoms2.getConqueror());
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertNotNull(fiefdoms2);
      
      ArrayList<Intruders> arrayList1 = fiefdoms2.getMuslim();
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPeasants());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getValue());
      assertNull(fiefdoms2.getOwner());
      assertNull(fiefdoms2.getConqueror());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertNotSame(fiefdoms2, fiefdoms0);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotNull(arrayList1);
      
      boolean boolean0 = arrayList1.add((Intruders) null);
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPeasants());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getValue());
      assertNull(fiefdoms2.getOwner());
      assertNull(fiefdoms2.getConqueror());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertNotSame(fiefdoms2, fiefdoms0);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertTrue(boolean0);
      
      ArrayList<Player> arrayList2 = new ArrayList<Player>();
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertNotNull(arrayList2);
      
      boolean boolean1 = arrayList2.add((Player) null);
      assertFalse(arrayList2.isEmpty());
      assertEquals(1, arrayList2.size());
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      fiefdoms1.setViking(arrayList1);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPeasants());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getValue());
      assertNull(fiefdoms2.getOwner());
      assertNull(fiefdoms2.getConqueror());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(fiefdoms1.equals((Object)fiefdoms2));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotSame(fiefdoms1, fiefdoms2);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertNotSame(fiefdoms2, fiefdoms1);
      
      fiefdoms0.setVassalsList(arrayList2);
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList2.isEmpty());
      assertEquals(1, arrayList2.size());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(fiefdoms0.equals((Object)fiefdoms2));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(fiefdoms0, fiefdoms2);
      
      fiefdoms0.setValue((-227));
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals((-227), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(fiefdoms0.equals((Object)fiefdoms2));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(fiefdoms0, fiefdoms2);
      
      ArrayList<Intruders> arrayList3 = fiefdoms2.getMagyar();
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getPeasants());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getValue());
      assertNull(fiefdoms2.getOwner());
      assertNull(fiefdoms2.getConqueror());
      assertFalse(arrayList3.equals((Object)arrayList1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertNotSame(arrayList3, arrayList1);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotNull(arrayList3);
      
      fiefdoms0.setRebelliousVassals((-2567), true);
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals((-227), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(fiefdoms0.equals((Object)fiefdoms2));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(fiefdoms0, fiefdoms2);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms((ArrayList<String>) null, (String) null, "", 533, true, (ArrayList<String>) null);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(533, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(fiefdoms0);
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMagyar();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(533, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      Intruders intruders0 = new Intruders();
      assertNull(intruders0.getLocation());
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      assertNotNull(intruders0);
      
      boolean boolean0 = arrayList0.add(intruders0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(533, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertNull(intruders0.getLocation());
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      assertTrue(boolean0);
      assertTrue(arrayList0.contains(intruders0));
      
      fiefdoms0.buyPersonalCastles((-2221));
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(533, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      ArrayList<Player> arrayList1 = fiefdoms0.getVassalsList();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(533, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(arrayList1);
      
      fiefdoms0.setPeasants((-2221));
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(533, fiefdoms0.getValue());
      assertEquals((-2221), fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setVassalsList((ArrayList<Player>) null);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(533, fiefdoms0.getValue());
      assertEquals((-2221), fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setViking(533, true);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(533, fiefdoms0.getValue());
      assertEquals((-2221), fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setMagyar(arrayList0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(533, fiefdoms0.getValue());
      assertEquals((-2221), fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertTrue(arrayList0.contains(intruders0));
      
      fiefdoms0.setSelectioncolor((byte[]) null);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(533, fiefdoms0.getValue());
      assertEquals((-2221), fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      
      fiefdoms0.setConqueror("");
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(533, fiefdoms0.getValue());
      assertEquals((-2221), fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      
      fiefdoms0.setLoyalVassals((ArrayList<Vassals>) null);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(533, fiefdoms0.getValue());
      assertEquals((-2221), fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      
      ArrayList<String> arrayList2 = fiefdoms0.getNeighbors();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(533, fiefdoms0.getValue());
      assertEquals((-2221), fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertNull(arrayList2);
      
      String string0 = fiefdoms0.getConqueror();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(533, fiefdoms0.getValue());
      assertEquals((-2221), fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals("", string0);
      assertNotNull(string0);
      
      float[] floatArray0 = fiefdoms0.getShaderColor();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(533, fiefdoms0.getValue());
      assertEquals((-2221), fiefdoms0.getPeasants());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(2, floatArray0.length);
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
      assertNotNull(floatArray0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setLoyalVassals(2, true);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setFiefdomCastles(0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getViking();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      Intruders intruders0 = new Intruders("", "");
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getLocation());
      assertNotNull(intruders0);
      
      intruders0.setLocation((String) null);
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getLocation());
      
      boolean boolean0 = arrayList0.add(intruders0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getLocation());
      assertTrue(boolean0);
      assertTrue(arrayList0.contains(intruders0));
      
      fiefdoms0.setViking(arrayList0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(arrayList0.contains(intruders0));
      
      int int0 = fiefdoms0.getPeasants();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, int0);
      
      fiefdoms0.setNeighbors((ArrayList<String>) null);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMuslim();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertFalse(arrayList1.equals((Object)arrayList0));
      assertNotSame(arrayList1, arrayList0);
      assertFalse(arrayList1.contains(intruders0));
      assertNotNull(arrayList1);
      
      fiefdoms0.setMagyar(arrayList1);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertFalse(arrayList1.equals((Object)arrayList0));
      assertNotSame(arrayList1, arrayList0);
      assertFalse(arrayList1.contains(intruders0));
      
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-65);
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte) (-122);
      byteArray0[4] = (byte) (-126);
      byteArray0[5] = (byte)100;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)1;
      fiefdoms0.setSelectioncolor(byteArray0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(9, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte) (-65), (byte)2, (byte) (-122), (byte) (-126), (byte)100, (byte)0, (byte)0, (byte)1}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Knight knight0 = new Knight();
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertNotNull(knight0);
      
      String string0 = knight0.getName();
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertNull(string0);
      
      String string1 = knight0.getPassword();
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertNull(string1);
      
      ArrayList<String> arrayList0 = knight0.getConversation();
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      boolean boolean0 = arrayList0.add((String) null);
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertTrue(boolean0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "muslim", (String) null, 1164, true, arrayList0);
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals(1164, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(arrayList0.contains("muslim"));
      assertNotNull(fiefdoms0);
      
      boolean boolean1 = arrayList0.add((String) null);
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertFalse(arrayList0.contains("muslim"));
      
      fiefdoms0.setMuslim(1164, true);
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals(1164, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(arrayList0.contains("muslim"));
      
      boolean boolean2 = arrayList0.add((String) null);
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals(3, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2);
      assertFalse(arrayList0.contains("muslim"));
      
      fiefdoms0.setMuslim(1164, true);
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals(3, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals(1164, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(arrayList0.contains("muslim"));
      
      boolean boolean3 = arrayList0.add("}");
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(arrayList0.isEmpty());
      assertEquals(4, arrayList0.size());
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3);
      assertTrue(arrayList0.contains("}"));
      assertFalse(arrayList0.contains("muslim"));
      
      fiefdoms0.setLoyalVassals(1164, false);
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(arrayList0.isEmpty());
      assertEquals(4, arrayList0.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals(1164, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertTrue(arrayList0.contains("}"));
      assertFalse(arrayList0.contains("muslim"));
      
      fiefdoms0.setViking(3, true);
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(arrayList0.isEmpty());
      assertEquals(4, arrayList0.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals(1164, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertTrue(arrayList0.contains("}"));
      assertFalse(arrayList0.contains("muslim"));
      
      float[] floatArray0 = fiefdoms0.getShaderColor();
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(arrayList0.isEmpty());
      assertEquals(4, arrayList0.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals(1164, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(2, floatArray0.length);
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
      assertTrue(arrayList0.contains("}"));
      assertFalse(arrayList0.contains("muslim"));
      assertNotNull(floatArray0);
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMagyar();
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(arrayList0.isEmpty());
      assertEquals(4, arrayList0.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals(1164, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertTrue(arrayList0.contains("}"));
      assertFalse(arrayList0.contains("muslim"));
      assertNotNull(arrayList1);
      
      ArrayList<Intruders> arrayList2 = fiefdoms0.getMagyar();
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(arrayList0.isEmpty());
      assertEquals(4, arrayList0.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals(1164, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertSame(arrayList2, arrayList1);
      assertTrue(arrayList0.contains("}"));
      assertFalse(arrayList0.contains("muslim"));
      assertNotNull(arrayList2);
      
      ArrayList<Intruders> arrayList3 = fiefdoms0.getMuslim();
      assertEquals(2328, arrayList3.size());
      assertFalse(arrayList3.isEmpty());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(arrayList0.isEmpty());
      assertEquals(4, arrayList0.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals(1164, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(arrayList3.equals((Object)arrayList1));
      assertFalse(arrayList3.equals((Object)arrayList2));
      assertNotSame(arrayList3, arrayList1);
      assertNotSame(arrayList3, arrayList2);
      assertTrue(arrayList0.contains("}"));
      assertFalse(arrayList0.contains("muslim"));
      assertNotNull(arrayList3);
      
      fiefdoms0.setViking(311, true);
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(arrayList0.isEmpty());
      assertEquals(4, arrayList0.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals(1164, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertTrue(arrayList0.contains("}"));
      assertFalse(arrayList0.contains("muslim"));
      
      fiefdoms0.setMuslim(3, false);
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(arrayList0.isEmpty());
      assertEquals(4, arrayList0.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals(1164, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertTrue(arrayList0.contains("}"));
      assertFalse(arrayList0.contains("muslim"));
      
      ArrayList<Intruders> arrayList4 = fiefdoms0.getMuslim();
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(arrayList4.isEmpty());
      assertEquals(2325, arrayList4.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(4, arrayList0.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals(1164, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(arrayList4.equals((Object)arrayList1));
      assertFalse(arrayList4.equals((Object)arrayList2));
      assertNotSame(arrayList4, arrayList1);
      assertNotSame(arrayList4, arrayList2);
      assertSame(arrayList4, arrayList3);
      assertTrue(arrayList0.contains("}"));
      assertFalse(arrayList0.contains("muslim"));
      assertNotNull(arrayList4);
      
      ArrayList<Vassals> arrayList5 = fiefdoms0.getLoyalVassals();
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(arrayList0.isEmpty());
      assertEquals(4, arrayList0.size());
      assertEquals(0, arrayList5.size());
      assertTrue(arrayList5.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals(1164, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertTrue(arrayList0.contains("}"));
      assertFalse(arrayList0.contains("muslim"));
      assertNotNull(arrayList5);
      
      ArrayList<Vassals> arrayList6 = fiefdoms0.getRebelliousVassals();
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(arrayList0.isEmpty());
      assertEquals(4, arrayList0.size());
      assertEquals(0, arrayList6.size());
      assertTrue(arrayList6.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals(1164, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertTrue(arrayList6.equals((Object)arrayList5));
      assertNotSame(arrayList6, arrayList5);
      assertTrue(arrayList0.contains("}"));
      assertFalse(arrayList0.contains("muslim"));
      assertNotNull(arrayList6);
      
      ArrayList<String> arrayList7 = fiefdoms0.getNeighbors();
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(arrayList0.isEmpty());
      assertEquals(4, arrayList0.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals(1164, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(arrayList7.isEmpty());
      assertEquals(4, arrayList7.size());
      assertSame(arrayList0, arrayList7);
      assertSame(arrayList7, arrayList0);
      assertTrue(arrayList0.contains("}"));
      assertFalse(arrayList0.contains("muslim"));
      assertFalse(arrayList7.contains("muslim"));
      assertTrue(arrayList7.contains("}"));
      assertNotNull(arrayList7);
      
      fiefdoms0.setMuslim(3, false);
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(arrayList0.isEmpty());
      assertEquals(4, arrayList0.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals(1164, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertSame(arrayList0, arrayList7);
      assertTrue(arrayList0.contains("}"));
      assertFalse(arrayList0.contains("muslim"));
      
      ArrayList<Vassals> arrayList8 = fiefdoms0.getLoyalVassals();
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(arrayList0.isEmpty());
      assertEquals(4, arrayList0.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals(1164, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, arrayList8.size());
      assertTrue(arrayList8.isEmpty());
      assertTrue(arrayList8.equals((Object)arrayList6));
      assertSame(arrayList0, arrayList7);
      assertNotSame(arrayList8, arrayList6);
      assertSame(arrayList8, arrayList5);
      assertTrue(arrayList0.contains("}"));
      assertFalse(arrayList0.contains("muslim"));
      assertNotNull(arrayList8);
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertFalse(arrayList0.isEmpty());
      assertEquals(4, arrayList0.size());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals(1164, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertSame(arrayList0, arrayList7);
      assertEquals(3, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertTrue(arrayList0.contains("}"));
      assertFalse(arrayList0.contains("muslim"));
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Knight knight0 = new Knight();
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertNull(knight0.getName());
      assertNotNull(knight0);
      
      knight0.setName("Dk#$7");
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals("Dk#$7", knight0.getName());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      
      String string0 = knight0.getName();
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals("Dk#$7", knight0.getName());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals("Dk#$7", string0);
      assertNotNull(string0);
      
      String string1 = knight0.getRank();
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals("Dk#$7", knight0.getName());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertFalse(string1.equals((Object)string0));
      assertEquals("knight", string1);
      assertNotNull(string1);
      
      knight0.setTotalMoney(0);
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals("Dk#$7", knight0.getName());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      
      String string2 = knight0.getRank();
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals("Dk#$7", knight0.getName());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertFalse(string2.equals((Object)string0));
      assertEquals("knight", string2);
      assertNotNull(string2);
      
      int int0 = knight0.getTotalMoney();
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals("Dk#$7", knight0.getName());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, int0);
      
      knight0.setTotalMoney(1);
      assertEquals(1, knight0.getTotalMoney());
      assertEquals(0, knight0.getScore());
      assertEquals("Dk#$7", knight0.getName());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      
      knight0.setScore(1);
      assertEquals(1, knight0.getScore());
      assertEquals(1, knight0.getTotalMoney());
      assertEquals("Dk#$7", knight0.getName());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      
      String string3 = knight0.getName();
      assertEquals(1, knight0.getScore());
      assertEquals(1, knight0.getTotalMoney());
      assertEquals("Dk#$7", knight0.getName());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals("Dk#$7", string3);
      assertNotNull(string3);
      
      String string4 = knight0.getPassword();
      assertEquals(1, knight0.getScore());
      assertEquals(1, knight0.getTotalMoney());
      assertEquals("Dk#$7", knight0.getName());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertNull(string4);
      
      ArrayList<String> arrayList0 = knight0.getVotes();
      assertEquals(1, knight0.getScore());
      assertEquals(1, knight0.getTotalMoney());
      assertEquals("Dk#$7", knight0.getName());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string1));
      assertNotNull(arrayList0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "knight", "knight", 1043, false, arrayList0);
      assertEquals(1, knight0.getScore());
      assertEquals(1, knight0.getTotalMoney());
      assertEquals("Dk#$7", knight0.getName());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("knight", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("knight", fiefdoms0.getName());
      assertEquals(1043, fiefdoms0.getValue());
      assertFalse(arrayList0.contains(string1));
      assertNotNull(fiefdoms0);
      
      ArrayList<String> arrayList1 = fiefdoms0.getNeighbors();
      assertEquals(1, knight0.getScore());
      assertEquals(1, knight0.getTotalMoney());
      assertEquals("Dk#$7", knight0.getName());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("knight", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("knight", fiefdoms0.getName());
      assertEquals(1043, fiefdoms0.getValue());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList1, arrayList0);
      assertFalse(arrayList0.contains(string1));
      assertFalse(arrayList1.contains(string1));
      assertNotNull(arrayList1);
      
      fiefdoms0.setLoyalVassals(2, true);
      assertEquals(1, knight0.getScore());
      assertEquals(1, knight0.getTotalMoney());
      assertEquals("Dk#$7", knight0.getName());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("knight", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("knight", fiefdoms0.getName());
      assertEquals(1043, fiefdoms0.getValue());
      assertSame(arrayList0, arrayList1);
      assertFalse(arrayList0.contains(string1));
      
      ArrayList<String> arrayList2 = fiefdoms0.getNeighbors();
      assertEquals(1, knight0.getScore());
      assertEquals(1, knight0.getTotalMoney());
      assertEquals("Dk#$7", knight0.getName());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("knight", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("knight", fiefdoms0.getName());
      assertEquals(1043, fiefdoms0.getValue());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList2, arrayList1);
      assertSame(arrayList2, arrayList0);
      assertFalse(arrayList0.contains(string1));
      assertFalse(arrayList2.contains(string1));
      assertNotNull(arrayList2);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotNull(fiefdoms0);
      
      int int0 = fiefdoms0.getPeasants();
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms((ArrayList<String>) null, "AGf}m?z", "Vh&haT^qt+RW[", 2, false, (ArrayList<String>) null);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("Vh&haT^qt+RW[", fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("AGf}m?z", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      
      Fiefdoms fiefdoms1 = new Fiefdoms();
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms1);
      
      fiefdoms1.setOwner("");
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals("", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      
      String string0 = fiefdoms1.getOwner();
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals("", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals("", string0);
      assertNotNull(string0);
      
      int int0 = fiefdoms0.getValue();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("Vh&haT^qt+RW[", fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("AGf}m?z", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertEquals(2, int0);
      
      ArrayList<String> arrayList0 = fiefdoms1.getInvaderType();
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals("", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(arrayList0);
      
      fiefdoms1.setInvaderType((ArrayList<String>) null);
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals("", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      
      ArrayList<Intruders> arrayList1 = fiefdoms1.getViking();
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals("", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotNull(arrayList1);
      
      fiefdoms0.setMagyar(arrayList1);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("Vh&haT^qt+RW[", fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("AGf}m?z", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals("", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(fiefdoms1, fiefdoms0);
      
      fiefdoms0.setKingdom(false);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("Vh&haT^qt+RW[", fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("AGf}m?z", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNotSame(fiefdoms0, fiefdoms1);
      
      Fiefdoms fiefdoms2 = new Fiefdoms();
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertNull(fiefdoms2.getOwner());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getValue());
      assertNull(fiefdoms2.getConqueror());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertEquals(0, fiefdoms2.getPeasants());
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertNotNull(fiefdoms2);
      
      byte[] byteArray0 = fiefdoms2.getSelectioncolor();
      assertNull(fiefdoms2.getName());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertNull(fiefdoms2.getOwner());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getValue());
      assertNull(fiefdoms2.getConqueror());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertEquals(0, fiefdoms2.getPeasants());
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertNotSame(fiefdoms2, fiefdoms0);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertEquals(3, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArray0);
      
      Fiefdoms fiefdoms3 = new Fiefdoms();
      assertEquals(0, fiefdoms3.getValue());
      assertNull(fiefdoms3.getName());
      assertEquals(0, fiefdoms3.getPeasants());
      assertFalse(fiefdoms3.isKingdom());
      assertEquals(0, fiefdoms3.getPersonalCastles());
      assertNull(fiefdoms3.getConqueror());
      assertEquals(0, fiefdoms3.getFiefdomCastles());
      assertNull(fiefdoms3.getOwner());
      assertFalse(fiefdoms3.equals((Object)fiefdoms0));
      assertFalse(fiefdoms3.equals((Object)fiefdoms1));
      assertFalse(fiefdoms3.equals((Object)fiefdoms2));
      assertNotNull(fiefdoms3);
      
      fiefdoms3.setMuslim(893, false);
      assertEquals(0, fiefdoms3.getValue());
      assertNull(fiefdoms3.getName());
      assertEquals(0, fiefdoms3.getPeasants());
      assertFalse(fiefdoms3.isKingdom());
      assertEquals(0, fiefdoms3.getPersonalCastles());
      assertNull(fiefdoms3.getConqueror());
      assertEquals(0, fiefdoms3.getFiefdomCastles());
      assertNull(fiefdoms3.getOwner());
      assertFalse(fiefdoms3.equals((Object)fiefdoms0));
      assertFalse(fiefdoms3.equals((Object)fiefdoms1));
      assertFalse(fiefdoms3.equals((Object)fiefdoms2));
      assertNotSame(fiefdoms3, fiefdoms0);
      assertNotSame(fiefdoms3, fiefdoms1);
      assertNotSame(fiefdoms3, fiefdoms2);
      
      ArrayList<String> arrayList2 = fiefdoms0.getInvaderType();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("Vh&haT^qt+RW[", fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("AGf}m?z", fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(fiefdoms0.equals((Object)fiefdoms2));
      assertFalse(fiefdoms0.equals((Object)fiefdoms3));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(fiefdoms0, fiefdoms2);
      assertNotSame(fiefdoms0, fiefdoms3);
      assertNull(arrayList2);
      
      ArrayList<Vassals> arrayList3 = fiefdoms1.getRebelliousVassals();
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals("", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(fiefdoms1.equals((Object)fiefdoms2));
      assertFalse(fiefdoms1.equals((Object)fiefdoms3));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotSame(fiefdoms1, fiefdoms2);
      assertNotSame(fiefdoms1, fiefdoms3);
      assertNotNull(arrayList3);
      
      boolean boolean0 = fiefdoms3.isKingdom();
      assertEquals(0, fiefdoms3.getValue());
      assertNull(fiefdoms3.getName());
      assertEquals(0, fiefdoms3.getPeasants());
      assertFalse(fiefdoms3.isKingdom());
      assertEquals(0, fiefdoms3.getPersonalCastles());
      assertNull(fiefdoms3.getConqueror());
      assertEquals(0, fiefdoms3.getFiefdomCastles());
      assertNull(fiefdoms3.getOwner());
      assertFalse(fiefdoms3.equals((Object)fiefdoms0));
      assertFalse(fiefdoms3.equals((Object)fiefdoms1));
      assertFalse(fiefdoms3.equals((Object)fiefdoms2));
      assertNotSame(fiefdoms3, fiefdoms0);
      assertNotSame(fiefdoms3, fiefdoms1);
      assertNotSame(fiefdoms3, fiefdoms2);
      assertFalse(boolean0);
      
      fiefdoms1.setViking(749, false);
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertEquals("", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(fiefdoms1.equals((Object)fiefdoms2));
      assertFalse(fiefdoms1.equals((Object)fiefdoms3));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotSame(fiefdoms1, fiefdoms2);
      assertNotSame(fiefdoms1, fiefdoms3);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNotNull(fiefdoms0);
      
      ArrayList<String> arrayList0 = fiefdoms0.getInvaderType();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(arrayList0);
      
      fiefdoms0.setNeighbors((ArrayList<String>) null);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      ArrayList<String> arrayList1 = fiefdoms0.getInvaderType();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(arrayList1);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      
      ArrayList<Vassals> arrayList0 = fiefdoms0.loyalVassals;
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      Vassals vassals0 = new Vassals();
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertNull(vassals0.getLocation());
      assertNull(vassals0.getLord());
      assertNotNull(vassals0);
      
      vassals0.setLocation("Invalid rank. Ranks are case sensitive as follows: knight, count, duke, and king.");
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertEquals("Invalid rank. Ranks are case sensitive as follows: knight, count, duke, and king.", vassals0.getLocation());
      assertNull(vassals0.getLord());
      
      boolean boolean0 = arrayList0.add(vassals0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertEquals("Invalid rank. Ranks are case sensitive as follows: knight, count, duke, and king.", vassals0.getLocation());
      assertNull(vassals0.getLord());
      assertTrue(boolean0);
      assertTrue(arrayList0.contains(vassals0));
      
      boolean boolean1 = arrayList0.add(vassals0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertEquals("Invalid rank. Ranks are case sensitive as follows: knight, count, duke, and king.", vassals0.getLocation());
      assertNull(vassals0.getLord());
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertTrue(arrayList0.contains(vassals0));
      
      boolean boolean2 = arrayList0.add((Vassals) null);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.isEmpty());
      assertEquals(3, arrayList0.size());
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2);
      assertTrue(arrayList0.contains(vassals0));
      
      boolean boolean3 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3);
      
      boolean boolean4 = arrayList0.add((Vassals) null);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.isEmpty());
      assertEquals(4, arrayList0.size());
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4 == boolean3);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4);
      assertTrue(arrayList0.contains(vassals0));
      
      fiefdoms0.setRebelliousVassals(arrayList0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.isEmpty());
      assertEquals(4, arrayList0.size());
      assertTrue(arrayList0.contains(vassals0));
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getViking();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      
      vassals0.setLocation("7");
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertNull(vassals0.getLord());
      assertEquals("7", vassals0.getLocation());
      
      ArrayList<String> arrayList2 = fiefdoms0.getNeighbors();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(arrayList2);
      
      ArrayList<Intruders> arrayList3 = fiefdoms0.getMagyar();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.equals((Object)arrayList1));
      assertNotSame(arrayList3, arrayList1);
      assertNotNull(arrayList3);
      
      ArrayList<Vassals> arrayList4 = fiefdoms0.getRebelliousVassals();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList4.isEmpty());
      assertEquals(4, arrayList4.size());
      assertSame(arrayList4, arrayList0);
      assertTrue(arrayList4.contains(vassals0));
      assertNotNull(arrayList4);
      
      String string0 = fiefdoms0.getConqueror();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(string0);
      
      String string1 = fiefdoms0.getConqueror();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(string1);
      
      float[] floatArray0 = fiefdoms0.getShaderColor();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(2, floatArray0.length);
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
      assertNotNull(floatArray0);
      
      fiefdoms0.setLoyalVassals(1220, true);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      ArrayList<String> arrayList5 = fiefdoms0.getNeighbors();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(arrayList5);
      
      ArrayList<Player> arrayList6 = fiefdoms0.getVassalsList();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(arrayList6);
      
      fiefdoms0.setLoyalVassals(1220, true);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setPersonalCastles(2933);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(2933, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setOwner("You cannot buy more than a total of ");
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(2933, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getOwner());
      
      ArrayList<Intruders> arrayList7 = fiefdoms0.getViking();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(2933, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getOwner());
      assertTrue(arrayList7.isEmpty());
      assertEquals(0, arrayList7.size());
      assertTrue(arrayList7.equals((Object)arrayList3));
      assertNotSame(arrayList7, arrayList3);
      assertSame(arrayList7, arrayList1);
      assertNotNull(arrayList7);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setFiefdomCastles(true);
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      String string0 = fiefdoms0.getConqueror();
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(string0);
      
      ArrayList<String> arrayList0 = fiefdoms0.getNeighbors();
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(1, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Knight knight0 = new Knight();
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertNotNull(knight0);
      
      knight0.setName("d_^N1rM/^Rd");
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals("d_^N1rM/^Rd", knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      
      ArrayList<String> arrayList0 = knight0.conversation;
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertFalse(arrayList0.contains("d_^N1rM/^Rd"));
      assertNotNull(arrayList0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "You cannot have more than a total of ", "You cannot have more than a total of ", 3, true, arrayList0);
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals("d_^N1rM/^Rd", knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(3, fiefdoms0.getValue());
      assertEquals("You cannot have more than a total of ", fiefdoms0.getName());
      assertEquals("You cannot have more than a total of ", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(arrayList0.contains("d_^N1rM/^Rd"));
      assertNotNull(fiefdoms0);
      
      ArrayList<String> arrayList1 = fiefdoms0.getInvaderType();
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals("d_^N1rM/^Rd", knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(3, fiefdoms0.getValue());
      assertEquals("You cannot have more than a total of ", fiefdoms0.getName());
      assertEquals("You cannot have more than a total of ", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertSame(arrayList0, arrayList1);
      assertSame(arrayList1, arrayList0);
      assertFalse(arrayList0.contains("d_^N1rM/^Rd"));
      assertFalse(arrayList1.contains("d_^N1rM/^Rd"));
      assertNotNull(arrayList1);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setMagyar(2, false);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      
      float[] floatArray0 = new float[1];
      floatArray0[0] = 1.0F;
      fiefdoms0.setShaderColor(floatArray0);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1, floatArray0.length);
      assertArrayEquals(new float[] {1.0F}, floatArray0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setRebelliousVassals(1960, false);
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      String string0 = fiefdoms0.getName();
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(string0);
      
      String string1 = fiefdoms0.getOwner();
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(string1);
      
      int int0 = fiefdoms0.getFiefdomCastles();
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, int0);
      
      ArrayList<Vassals> arrayList0 = fiefdoms0.getLoyalVassals();
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMagyar();
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      
      int int1 = fiefdoms0.getFiefdomCastles();
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      
      ArrayList<String> arrayList2 = fiefdoms0.getNeighbors();
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(arrayList2);
      
      Fiefdoms fiefdoms1 = new Fiefdoms((ArrayList<String>) null, (String) null, (String) null, 1960, false, (ArrayList<String>) null);
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getOwner());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(1960, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms1);
      
      ArrayList<Vassals> arrayList3 = fiefdoms1.getLoyalVassals();
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getOwner());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(1960, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(1960, arrayList3.size());
      assertFalse(arrayList3.isEmpty());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(arrayList3.equals((Object)arrayList0));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotSame(arrayList3, arrayList0);
      assertNotNull(arrayList3);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      assertFalse(boolean0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotNull(fiefdoms0);
      
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{zv8n");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      ArrayList<Player> arrayList0 = new ArrayList<Player>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      float[] floatArray0 = new float[8];
      floatArray0[0] = (-276.13358F);
      floatArray0[1] = (-1023.99115F);
      floatArray0[2] = (-626.71F);
      floatArray0[3] = 0.0F;
      floatArray0[4] = 0.0F;
      floatArray0[5] = 11.0F;
      floatArray0[6] = 1.0F;
      floatArray0[7] = 0.0F;
      fiefdoms0.setShaderColor(floatArray0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(8, floatArray0.length);
      assertArrayEquals(new float[] {(-276.13358F), (-1023.99115F), (-626.71F), 0.0F, 0.0F, 11.0F, 1.0F, 0.0F}, floatArray0, 0.01F);
      
      fiefdoms0.setKingdom(false);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setVassalsList(arrayList0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      fiefdoms0.setLoyalVassals((ArrayList<Vassals>) null);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      String string0 = fiefdoms0.getConqueror();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(string0);
      
      String string1 = fiefdoms0.getConqueror();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(string1);
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(3, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArray0);
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMuslim();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      
      ArrayList<Vassals> arrayList2 = fiefdoms0.getLoyalVassals();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(arrayList2);
      
      ArrayList<Intruders> arrayList3 = fiefdoms0.getMuslim();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      assertSame(arrayList3, arrayList1);
      assertNotNull(arrayList3);
      
      ArrayList<String> arrayList4 = fiefdoms0.getNeighbors();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(arrayList4);
      
      String string2 = fiefdoms0.getConqueror();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(string2);
      
      fiefdoms0.setKingdom(true);
      assertNull(fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<Vassals> arrayList5 = fiefdoms0.getLoyalVassals();
      assertNull(fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(arrayList5);
      
      ArrayList<Player> arrayList6 = fiefdoms0.getVassalsList();
      assertNull(fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, arrayList6.size());
      assertTrue(arrayList6.isEmpty());
      assertSame(arrayList6, arrayList0);
      assertNotNull(arrayList6);
      
      float[] floatArray1 = fiefdoms0.getShaderColor();
      assertNull(fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertSame(floatArray1, floatArray0);
      assertEquals(8, floatArray1.length);
      assertArrayEquals(new float[] {(-276.13358F), (-1023.99115F), (-626.71F), 0.0F, 0.0F, 11.0F, 1.0F, 0.0F}, floatArray1, 0.01F);
      assertNotNull(floatArray1);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms((ArrayList<String>) null, "magyar", "magyar", 3267, false, (ArrayList<String>) null);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(3267, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("magyar", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("magyar", fiefdoms0.getOwner());
      assertNotNull(fiefdoms0);
      
      ArrayList<Player> arrayList0 = fiefdoms0.getVassalsList();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(3267, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("magyar", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("magyar", fiefdoms0.getOwner());
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Knight knight0 = new Knight();
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertNotNull(knight0);
      
      String string0 = knight0.getLocation();
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals("Ile-De-France", string0);
      assertNotNull(string0);
      
      Knight knight1 = new Knight();
      assertEquals(0, knight1.getTotalMoney());
      assertFalse(knight1.getDead());
      assertEquals("knight", knight1.getRank());
      assertEquals(0, knight1.getHitsCounter());
      assertNull(knight1.getPassword());
      assertEquals(0, knight1.getKill());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getwound());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getScore());
      assertEquals(0, knight1.getKills());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals("", knight1.getOrder());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertFalse(knight1.equals((Object)knight0));
      assertNotNull(knight1);
      
      boolean boolean0 = knight0.isFiefdomMine("Ile-De-France");
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.equals((Object)knight1));
      assertNotSame(knight0, knight1);
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      knight0.setTotalMoney((-2244));
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals((-2244), knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.equals((Object)knight1));
      assertNotSame(knight0, knight1);
      
      String string1 = knight1.getRank();
      assertEquals(0, knight1.getTotalMoney());
      assertFalse(knight1.getDead());
      assertEquals("knight", knight1.getRank());
      assertEquals(0, knight1.getHitsCounter());
      assertNull(knight1.getPassword());
      assertEquals(0, knight1.getKill());
      assertFalse(knight1.isDead());
      assertEquals(0, knight1.getwound());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getScore());
      assertEquals(0, knight1.getKills());
      assertNull(knight1.getName());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals("", knight1.getOrder());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertFalse(knight1.equals((Object)knight0));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(knight1, knight0);
      assertEquals("knight", string1);
      assertNotNull(string1);
      
      Knight knight2 = new Knight();
      assertEquals(0, knight2.getHitsCounter());
      assertEquals(0, knight2.getKill());
      assertFalse(knight2.getDead());
      assertNull(knight2.getPassword());
      assertEquals(0, knight2.getWounds());
      assertEquals("knight", knight2.getRank());
      assertEquals(0, knight2.getScore());
      assertEquals(0, knight2.getwound());
      assertFalse(knight2.isDead());
      assertNull(knight2.getName());
      assertEquals(0, knight2.getKills());
      assertEquals(0, knight2.getTotalMoney());
      assertEquals("", knight2.getOrder());
      assertEquals(0, knight2.getRebellionCounter());
      assertEquals("Ile-De-France", knight2.getLocation());
      assertFalse(knight2.equals((Object)knight0));
      assertFalse(knight2.equals((Object)knight1));
      assertNotNull(knight2);
      
      ArrayList<String> arrayList0 = knight2.getVotes();
      assertEquals(0, knight2.getHitsCounter());
      assertEquals(0, knight2.getKill());
      assertFalse(knight2.getDead());
      assertNull(knight2.getPassword());
      assertEquals(0, knight2.getWounds());
      assertEquals("knight", knight2.getRank());
      assertEquals(0, knight2.getScore());
      assertEquals(0, knight2.getwound());
      assertFalse(knight2.isDead());
      assertNull(knight2.getName());
      assertEquals(0, knight2.getKills());
      assertEquals(0, knight2.getTotalMoney());
      assertEquals("", knight2.getOrder());
      assertEquals(0, knight2.getRebellionCounter());
      assertEquals("Ile-De-France", knight2.getLocation());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(knight2.equals((Object)knight0));
      assertFalse(knight2.equals((Object)knight1));
      assertNotSame(knight2, knight0);
      assertNotSame(knight2, knight1);
      assertFalse(arrayList0.contains(string0));
      assertNotNull(arrayList0);
      
      boolean boolean2 = arrayList0.add("knight");
      assertEquals(0, knight2.getHitsCounter());
      assertEquals(0, knight2.getKill());
      assertFalse(knight2.getDead());
      assertNull(knight2.getPassword());
      assertEquals(0, knight2.getWounds());
      assertEquals("knight", knight2.getRank());
      assertEquals(0, knight2.getScore());
      assertEquals(0, knight2.getwound());
      assertFalse(knight2.isDead());
      assertNull(knight2.getName());
      assertEquals(0, knight2.getKills());
      assertEquals(0, knight2.getTotalMoney());
      assertEquals("", knight2.getOrder());
      assertEquals(0, knight2.getRebellionCounter());
      assertEquals("Ile-De-France", knight2.getLocation());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertFalse(knight2.equals((Object)knight0));
      assertFalse(knight2.equals((Object)knight1));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertNotSame(knight2, knight0);
      assertNotSame(knight2, knight1);
      assertTrue(boolean2);
      assertTrue(arrayList0.contains("knight"));
      assertFalse(arrayList0.contains(string0));
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "knight", "Ile-De-France", 463, false, arrayList0);
      assertEquals(0, knight2.getHitsCounter());
      assertEquals(0, knight2.getKill());
      assertFalse(knight2.getDead());
      assertNull(knight2.getPassword());
      assertEquals(0, knight2.getWounds());
      assertEquals("knight", knight2.getRank());
      assertEquals(0, knight2.getScore());
      assertEquals(0, knight2.getwound());
      assertFalse(knight2.isDead());
      assertNull(knight2.getName());
      assertEquals(0, knight2.getKills());
      assertEquals(0, knight2.getTotalMoney());
      assertEquals("", knight2.getOrder());
      assertEquals(0, knight2.getRebellionCounter());
      assertEquals("Ile-De-France", knight2.getLocation());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("Ile-De-France", fiefdoms0.getOwner());
      assertEquals("knight", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(463, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(knight2.equals((Object)knight0));
      assertFalse(knight2.equals((Object)knight1));
      assertTrue(arrayList0.contains("knight"));
      assertFalse(arrayList0.contains(string0));
      assertNotNull(fiefdoms0);
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getViking();
      assertEquals(0, knight2.getHitsCounter());
      assertEquals(0, knight2.getKill());
      assertFalse(knight2.getDead());
      assertNull(knight2.getPassword());
      assertEquals(0, knight2.getWounds());
      assertEquals("knight", knight2.getRank());
      assertEquals(0, knight2.getScore());
      assertEquals(0, knight2.getwound());
      assertFalse(knight2.isDead());
      assertNull(knight2.getName());
      assertEquals(0, knight2.getKills());
      assertEquals(0, knight2.getTotalMoney());
      assertEquals("", knight2.getOrder());
      assertEquals(0, knight2.getRebellionCounter());
      assertEquals("Ile-De-France", knight2.getLocation());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("Ile-De-France", fiefdoms0.getOwner());
      assertEquals("knight", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(463, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertFalse(knight2.equals((Object)knight0));
      assertFalse(knight2.equals((Object)knight1));
      assertNotSame(knight2, knight0);
      assertNotSame(knight2, knight1);
      assertTrue(arrayList0.contains("knight"));
      assertFalse(arrayList0.contains(string0));
      assertNotNull(arrayList1);
      
      ArrayList<Intruders> arrayList2 = fiefdoms0.getViking();
      assertEquals(0, knight2.getHitsCounter());
      assertEquals(0, knight2.getKill());
      assertFalse(knight2.getDead());
      assertNull(knight2.getPassword());
      assertEquals(0, knight2.getWounds());
      assertEquals("knight", knight2.getRank());
      assertEquals(0, knight2.getScore());
      assertEquals(0, knight2.getwound());
      assertFalse(knight2.isDead());
      assertNull(knight2.getName());
      assertEquals(0, knight2.getKills());
      assertEquals(0, knight2.getTotalMoney());
      assertEquals("", knight2.getOrder());
      assertEquals(0, knight2.getRebellionCounter());
      assertEquals("Ile-De-France", knight2.getLocation());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("Ile-De-France", fiefdoms0.getOwner());
      assertEquals("knight", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(463, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertFalse(knight2.equals((Object)knight0));
      assertFalse(knight2.equals((Object)knight1));
      assertNotSame(knight2, knight0);
      assertNotSame(knight2, knight1);
      assertSame(arrayList2, arrayList1);
      assertTrue(arrayList0.contains("knight"));
      assertFalse(arrayList0.contains(string0));
      assertNotNull(arrayList2);
      
      fiefdoms0.setViking(3, true);
      assertEquals(0, knight2.getHitsCounter());
      assertEquals(0, knight2.getKill());
      assertFalse(knight2.getDead());
      assertNull(knight2.getPassword());
      assertEquals(0, knight2.getWounds());
      assertEquals("knight", knight2.getRank());
      assertEquals(0, knight2.getScore());
      assertEquals(0, knight2.getwound());
      assertFalse(knight2.isDead());
      assertNull(knight2.getName());
      assertEquals(0, knight2.getKills());
      assertEquals(0, knight2.getTotalMoney());
      assertEquals("", knight2.getOrder());
      assertEquals(0, knight2.getRebellionCounter());
      assertEquals("Ile-De-France", knight2.getLocation());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("Ile-De-France", fiefdoms0.getOwner());
      assertEquals("knight", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(463, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(knight2.equals((Object)knight0));
      assertFalse(knight2.equals((Object)knight1));
      assertNotSame(knight2, knight0);
      assertNotSame(knight2, knight1);
      assertTrue(arrayList0.contains("knight"));
      assertFalse(arrayList0.contains(string0));
      
      fiefdoms0.buyFiefdomCastles(3);
      assertEquals(0, knight2.getHitsCounter());
      assertEquals(0, knight2.getKill());
      assertFalse(knight2.getDead());
      assertNull(knight2.getPassword());
      assertEquals(0, knight2.getWounds());
      assertEquals("knight", knight2.getRank());
      assertEquals(0, knight2.getScore());
      assertEquals(0, knight2.getwound());
      assertFalse(knight2.isDead());
      assertNull(knight2.getName());
      assertEquals(0, knight2.getKills());
      assertEquals(0, knight2.getTotalMoney());
      assertEquals("", knight2.getOrder());
      assertEquals(0, knight2.getRebellionCounter());
      assertEquals("Ile-De-France", knight2.getLocation());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(3, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("Ile-De-France", fiefdoms0.getOwner());
      assertEquals("knight", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(463, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(knight2.equals((Object)knight0));
      assertFalse(knight2.equals((Object)knight1));
      assertNotSame(knight2, knight0);
      assertNotSame(knight2, knight1);
      assertTrue(arrayList0.contains("knight"));
      assertFalse(arrayList0.contains(string0));
      
      float[] floatArray0 = fiefdoms0.getShaderColor();
      assertEquals(0, knight2.getHitsCounter());
      assertEquals(0, knight2.getKill());
      assertFalse(knight2.getDead());
      assertNull(knight2.getPassword());
      assertEquals(0, knight2.getWounds());
      assertEquals("knight", knight2.getRank());
      assertEquals(0, knight2.getScore());
      assertEquals(0, knight2.getwound());
      assertFalse(knight2.isDead());
      assertNull(knight2.getName());
      assertEquals(0, knight2.getKills());
      assertEquals(0, knight2.getTotalMoney());
      assertEquals("", knight2.getOrder());
      assertEquals(0, knight2.getRebellionCounter());
      assertEquals("Ile-De-France", knight2.getLocation());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(3, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("Ile-De-France", fiefdoms0.getOwner());
      assertEquals("knight", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(463, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(knight2.equals((Object)knight0));
      assertFalse(knight2.equals((Object)knight1));
      assertNotSame(knight2, knight0);
      assertNotSame(knight2, knight1);
      assertEquals(2, floatArray0.length);
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
      assertTrue(arrayList0.contains("knight"));
      assertFalse(arrayList0.contains(string0));
      assertNotNull(floatArray0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setConqueror("ile-de-france");
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("ile-de-france", fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.buyFiefdomCastles((-24));
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("ile-de-france", fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setPersonalCastles(false);
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("ile-de-france", fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setOwner("bXy\"G");
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("bXy\"G", fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("ile-de-france", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      
      String string0 = fiefdoms0.getConqueror();
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("bXy\"G", fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("ile-de-france", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals("ile-de-france", string0);
      assertNotNull(string0);
      
      ArrayList<Vassals> arrayList1 = fiefdoms0.getLoyalVassals();
      assertEquals((-1), fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("bXy\"G", fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("ile-de-france", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setPersonalCastles(2);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      ArrayList<Vassals> arrayList0 = new ArrayList<Vassals>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      fiefdoms0.setRebelliousVassals(arrayList0);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      ArrayList<String> arrayList1 = fiefdoms0.getNeighbors();
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(arrayList1);
      
      fiefdoms0.setOwner("");
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.buyFiefdomCastles(2);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      ArrayList<Player> arrayList2 = fiefdoms0.getVassalsList();
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(arrayList2);
      
      fiefdoms0.buyPersonalCastles(3);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      
      ArrayList<Vassals> arrayList3 = fiefdoms0.getRebelliousVassals();
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertSame(arrayList3, arrayList0);
      assertNotNull(arrayList3);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setName("You cannot buy more than a total of ");
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setRebelliousVassals(1, true);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setPersonalCastles(2);
      assertNull(fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setPersonalCastles(false);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setRebelliousVassals(2, false);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setMuslim(2, true);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      
      ArrayList<String> arrayList0 = fiefdoms0.getInvaderType();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(arrayList0);
      
      Fiefdoms fiefdoms1 = new Fiefdoms((ArrayList<String>) null, ")j%@Ve", "", 1, false, (ArrayList<String>) null);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("", fiefdoms1.getOwner());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(1, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(")j%@Ve", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotNull(fiefdoms1);
      
      ArrayList<Player> arrayList1 = fiefdoms0.getVassalsList();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("You cannot buy more than a total of ", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNull(arrayList1);
      
      fiefdoms1.buyPersonalCastles(1);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("", fiefdoms1.getOwner());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(1, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(")j%@Ve", fiefdoms1.getName());
      assertEquals(1, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      
      int int0 = fiefdoms1.getPeasants();
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("", fiefdoms1.getOwner());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(1, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(")j%@Ve", fiefdoms1.getName());
      assertEquals(1, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getPeasants());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>(0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "", "", 0, false, arrayList0);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(arrayList0.contains(""));
      assertNotNull(fiefdoms0);
  }
}
