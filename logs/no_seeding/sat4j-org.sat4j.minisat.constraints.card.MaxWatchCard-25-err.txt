[MASTER] 00:58:24.784 [logback-2] ERROR TestCluster - Failed to check cache for org.sat4j.tools.FullClauseSelectorSolver<T> : Type points to itself
[MASTER] 00:58:24.784 [logback-2] ERROR TestCluster - Failed to check cache for org.sat4j.minisat.core.Solver<D> : Type points to itself
[MASTER] 01:02:36.420 [logback-2] ERROR ClientNodeImpl - Cannot inform master of change of state
java.rmi.MarshalException: error marshalling arguments; nested exception is: 
	java.net.SocketException: Broken pipe
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:158) ~[na:1.8.0_91]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_91]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_91]
	at com.sun.proxy.$Proxy7.evosuite_collectStatistics(Unknown Source) ~[na:na]
	at org.evosuite.rmi.service.ClientNodeImpl.updateStatistics(ClientNodeImpl.java:279) ~[evosuite-master-1.0.7-SNAPSHOT.jar:1.0.7-SNAPSHOT]
	at org.evosuite.statistics.StatisticsSender.sendIndividualToMaster(StatisticsSender.java:68) [evosuite-master-1.0.7-SNAPSHOT.jar:1.0.7-SNAPSHOT]
	at org.evosuite.TestSuiteGenerator.postProcessTests(TestSuiteGenerator.java:543) [evosuite-master-1.0.7-SNAPSHOT.jar:1.0.7-SNAPSHOT]
	at org.evosuite.TestSuiteGenerator.generateTestSuite(TestSuiteGenerator.java:254) [evosuite-master-1.0.7-SNAPSHOT.jar:1.0.7-SNAPSHOT]
	at org.evosuite.rmi.service.ClientNodeImpl$1.run(ClientNodeImpl.java:160) [evosuite-master-1.0.7-SNAPSHOT.jar:1.0.7-SNAPSHOT]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_91]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_91]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_91]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_91]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_91]
Caused by: java.net.SocketException: Broken pipe
	at java.net.SocketOutputStream.socketWrite0(Native Method) ~[na:1.8.0_91]
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:109) ~[na:1.8.0_91]
	at java.net.SocketOutputStream.write(SocketOutputStream.java:153) ~[na:1.8.0_91]
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82) ~[na:1.8.0_91]
	at java.io.BufferedOutputStream.write(BufferedOutputStream.java:126) ~[na:1.8.0_91]
	at java.io.ObjectOutputStream$BlockDataOutputStream.drain(ObjectOutputStream.java:1877) ~[na:1.8.0_91]
	at java.io.ObjectOutputStream$BlockDataOutputStream.setBlockDataMode(ObjectOutputStream.java:1786) ~[na:1.8.0_91]
	at java.io.ObjectOutputStream.writeNonProxyDesc(ObjectOutputStream.java:1286) ~[na:1.8.0_91]
	at java.io.ObjectOutputStream.writeClassDesc(ObjectOutputStream.java:1231) ~[na:1.8.0_91]
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1427) ~[na:1.8.0_91]
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178) ~[na:1.8.0_91]
	at java.io.ObjectOutputStream.writeFatalException(ObjectOutputStream.java:1577) ~[na:1.8.0_91]
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:351) ~[na:1.8.0_91]
	at sun.rmi.server.UnicastRef.marshalValue(UnicastRef.java:294) ~[na:1.8.0_91]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:153) ~[na:1.8.0_91]
	... 13 common frames omitted
[MASTER] 01:02:49.007 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_44_1550448168896/org/sat4j/minisat/constraints/card/MaxWatchCard_44_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_44_1550448168896/org/sat4j/minisat/constraints/card/MaxWatchCard_44_tmp__ESTest_scaffolding.java]]
[MASTER] 01:02:49.007 [logback-2] ERROR JUnitAnalyzer - Classpath: bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 01:02:49.007 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 01:02:49.019 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: org.sat4j.minisat.constraints.cnf.UnitClauses cannot be converted to org.sat4j.minisat.constraints.card.MaxWatchCard: 51
[MASTER] 01:02:49.021 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_44_1550448168896/org/sat4j/minisat/constraints/card/MaxWatchCard_44_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Feb 18 00:02:48 GMT 2019
4:  */
5: 
6: package org.sat4j.minisat.constraints.card;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: import org.sat4j.core.VecInt;
15: import org.sat4j.minisat.constraints.CardinalityDataStructure;
16: import org.sat4j.minisat.constraints.CardinalityDataStructureYanMax;
17: import org.sat4j.minisat.constraints.card.MaxWatchCard;
18: import org.sat4j.minisat.constraints.cnf.Lits;
19: import org.sat4j.minisat.constraints.cnf.UnitClauses;
20: import org.sat4j.minisat.core.Solver;
21: import org.sat4j.minisat.core.WatcherBasedPrimeImplicantStrategy;
22: import org.sat4j.minisat.learning.ActiveLearning;
23: import org.sat4j.minisat.orders.PureOrder;
24: import org.sat4j.minisat.orders.RSATLastLearnedClausesPhaseSelectionStrategy;
25: import org.sat4j.minisat.restarts.ArminRestarts;
26: import org.sat4j.specs.VarMapper;
27: import org.sat4j.tools.DotSearchTracing;
28: 
29: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
30: public class MaxWatchCard_44_tmp__ESTest extends MaxWatchCard_44_tmp__ESTest_scaffolding {
31: 
32:   @Test(timeout = 4000)
33:   public void test0()  throws Throwable  {
34:       VecInt vecInt0 = new VecInt(1346, 1346);
35:       ActiveLearning<CardinalityDataStructureYanMax> activeLearning0 = new ActiveLearning<CardinalityDataStructureYanMax>();
36:       CardinalityDataStructureYanMax cardinalityDataStructureYanMax0 = new CardinalityDataStructureYanMax();
37:       PureOrder pureOrder0 = new PureOrder(1346);
38:       ArminRestarts arminRestarts0 = new ArminRestarts();
39:       Solver<CardinalityDataStructureYanMax> solver0 = new Solver<CardinalityDataStructureYanMax>(activeLearning0, cardinalityDataStructureYanMax0, pureOrder0, arminRestarts0);
40:       UnitClauses unitClauses0 = (UnitClauses)solver0.addAtLeast(vecInt0, 1346);
41:       RSATLastLearnedClausesPhaseSelectionStrategy rSATLastLearnedClausesPhaseSelectionStrategy0 = new RSATLastLearnedClausesPhaseSelectionStrategy();
42:       VecInt vecInt1 = new VecInt();
43:       pureOrder0.init();
44:       String string0 = "";
45:       DotSearchTracing<Object> dotSearchTracing0 = new DotSearchTracing<Object>("");
46:       CardinalityDataStructure cardinalityDataStructure0 = new CardinalityDataStructure();
47:       Lits lits0 = (Lits)cardinalityDataStructure0.getVocabulary();
48:       MaxWatchCard maxWatchCard0 = new MaxWatchCard(lits0, vecInt1, true, 1346);
49:       // Undeclared exception!
50:       try { 
51:         ((MaxWatchCard) unitClauses0).normalize();
52:         fail("Expecting exception: IllegalArgumentException");
53:       
54:       } catch(IllegalArgumentException e) {
55:       }
56:   }
57: }
RegularFileObject[/tmp/EvoSuite_44_1550448168896/org/sat4j/minisat/constraints/card/MaxWatchCard_44_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Feb 18 00:02:48 GMT 2019
5:  */
6: 
7: package org.sat4j.minisat.constraints.card;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class MaxWatchCard_44_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "org.sat4j.minisat.constraints.card.MaxWatchCard"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MaxWatchCard_44_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "org.sat4j.minisat.core.ConflictTimerAdapter",
82:       "org.sat4j.specs.UnitPropagationListener",
83:       "org.sat4j.minisat.core.SizeComparator",
84:       "org.sat4j.tools.FullClauseSelectorSolver",
85:       "org.sat4j.reader.LecteurDimacs",
86:       "org.sat4j.tools.AbstractClauseSelectorSolver$1",
87:       "org.sat4j.tools.SolverDecorator",
88:       "org.sat4j.specs.Propagatable",
89:       "org.sat4j.minisat.core.Counter",
90:       "org.sat4j.minisat.core.Undoable",
91:       "org.sat4j.ILauncherMode",
92:       "org.sat4j.minisat.learning.FixedLengthLearning",
93:       "org.sat4j.minisat.core.Pair",
94:       "org.sat4j.core.EmptyVecInt",
95:       "org.sat4j.ExitCode",
96:       "org.sat4j.minisat.constraints.AbstractCardinalityDataStructure",
97:       "org.sat4j.specs.IVec",
98:       "org.sat4j.minisat.orders.AbstractPhaserecordingSelectionStrategy",
99:       "org.sat4j.minisat.restarts.FixedPeriodRestarts",
100:       "org.sat4j.specs.Lbool",
101:       "org.sat4j.minisat.constraints.AbstractDataStructureFactory",
102:       "org.sat4j.AbstractLauncher$2",
103:       "org.sat4j.minisat.constraints.CardinalityDataStructureYanMax",
104:       "org.sat4j.AbstractLauncher$1",
105:       "org.sat4j.minisat.orders.NegativeLiteralSelectionStrategy",
106:       "org.sat4j.specs.IOptimizationProblem",
107:       "org.sat4j.specs.SearchListener",
108:       "org.sat4j.minisat.core.SimplificationType",
109:       "org.sat4j.minisat.learning.MiniSATLearning",
110:       "org.sat4j.tools.AbstractClauseSelectorSolver$2",
111:       "org.sat4j.minisat.core.SearchParams",
112:       "org.sat4j.tools.AbstractMinimalModel",
113:       "org.sat4j.minisat.core.Heap",
114:       "org.sat4j.specs.ILogAble$1",
115:       "org.sat4j.specs.Constr",
116:       "org.sat4j.specs.TimeoutException",
117:       "org.sat4j.minisat.learning.NoLearningButHeuristics",
118:       "org.sat4j.specs.ISolverService",
119:       "org.sat4j.minisat.orders.RSATPhaseSelectionStrategy",
120:       "org.sat4j.minisat.core.LearningStrategy",
121:       "org.sat4j.specs.IGroupSolver",
122:       "org.sat4j.opt.MaxSatDecorator",
123:       "org.sat4j.DecisionMode",
124:       "org.sat4j.minisat.orders.PhaseInLastLearnedClauseSelectionStrategy",
125:       "org.sat4j.specs.IteratorInt",
126:       "org.sat4j.specs.ISolver",
127:       "org.sat4j.minisat.orders.RandomWalkDecorator",
128:       "org.sat4j.specs.UnitClauseProvider$1",
129:       "org.sat4j.minisat.core.CircularBuffer",
130:       "org.sat4j.minisat.learning.LimitedLearning",
131:       "org.sat4j.minisat.restarts.LubyRestarts",
132:       "org.sat4j.minisat.core.VoidTracing",
133:       "org.sat4j.minisat.core.ActivityListener",
134:       "org.sat4j.minisat.restarts.Glucose21Restarts",
135:       "org.sat4j.minisat.core.GlucoseLCDS",
136:       "org.sat4j.tools.SubModelIterator",
137:       "org.sat4j.tools.AbstractClauseSelectorSolver$SelectorState",
138:       "org.sat4j.minisat.core.ILits",
139:       "org.sat4j.BasicLauncher",
140:       "org.sat4j.tools.DotSearchTracing",
141:       "org.sat4j.tools.OptToSatAdapter",
142:       "org.sat4j.specs.ILogAble",
143:       "org.sat4j.specs.ContradictionException",
144:       "org.sat4j.opt.AbstractSelectorVariablesDecorator",
145:       "org.sat4j.reader.GroupedCNFReader",
146:       "org.sat4j.core.LiteralsUtils",
147:       "org.sat4j.minisat.learning.PercentLengthLearning",
148:       "org.sat4j.specs.IConstr",
149:       "org.sat4j.specs.IVecInt",
150:       "org.sat4j.tools.SolutionFoundListener",
151:       "org.sat4j.minisat.restarts.EMARestarts",
152:       "org.sat4j.minisat.core.PrimeImplicantStrategy",
153:       "org.sat4j.OptimizationMode",
154:       "org.sat4j.minisat.core.Learner",
155:       "org.sat4j.tools.DimacsStringSolver",
156:       "org.sat4j.minisat.orders.ActivityBasedVariableComparator",
157:       "org.sat4j.specs.MandatoryLiteralListener",
158:       "org.sat4j.minisat.core.ActivityComparator",
159:       "org.sat4j.minisat.constraints.card.MaxWatchCard",
160:       "org.sat4j.specs.IProblem",
161:       "org.sat4j.minisat.orders.RSATLastLearnedClausesPhaseSelectionStrategy",
162:       "org.sat4j.minisat.restarts.MiniSATRestarts",
163:       "org.sat4j.core.VecInt",
164:       "org.sat4j.minisat.core.Solver",
165:       "org.sat4j.tools.xplain.HighLevelXplain",
166:       "org.sat4j.minisat.constraints.cnf.Lits",
167:       "org.sat4j.minisat.core.Solver$2",
168:       "org.sat4j.specs.UnitClauseProvider",
169:       "org.sat4j.minisat.core.Solver$1",
170:       "org.sat4j.AbstractLauncher",
171:       "org.sat4j.minisat.learning.AbstractLearning",
172:       "org.sat4j.minisat.core.Solver$4",
173:       "org.sat4j.minisat.core.Solver$3",
174:       "org.sat4j.minisat.core.LearnedConstraintsEvaluationType",
175:       "org.sat4j.minisat.learning.ClauseOnlyLearning",
176:       "org.sat4j.core.VecInt$1",
177:       "org.sat4j.core.ASolverFactory",
178:       "org.sat4j.reader.DimacsReader",
179:       "org.sat4j.minisat.core.DataStructureFactory",
180:       "org.sat4j.core.Vec",
181:       "org.sat4j.minisat.core.Glucose2LCDS",
182:       "org.sat4j.minisat.core.Solver$6",
183:       "org.sat4j.minisat.core.SolverStats",
184:       "org.sat4j.minisat.core.Solver$8",
185:       "org.sat4j.minisat.core.IPhaseSelectionStrategy",
186:       "org.sat4j.minisat.core.ConstrActivityListener",
187:       "org.sat4j.minisat.orders.SubsetVarOrder",
188:       "org.sat4j.minisat.restarts.ArminRestarts",
189:       "org.sat4j.tools.GroupClauseSelectorSolver",
190:       "org.sat4j.specs.SearchListenerAdapter",
191:       "org.sat4j.minisat.constraints.cnf.UnitClauses",
192:       "org.sat4j.tools.xplain.Xplain",
193:       "org.sat4j.tools.ModelIterator",
194:       "org.sat4j.reader.ParseFormatException",
195:       "org.sat4j.tools.AbstractClauseSelectorSolver",
196:       "org.sat4j.minisat.constraints.MixedDataStructureDanielWL",
197:       "org.sat4j.minisat.core.ActivityLCDS",
198:       "org.sat4j.tools.AbstractOutputSolver",
199:       "org.sat4j.minisat.learning.ActiveLearning",
200:       "org.sat4j.MUSLauncher",
201:       "org.sat4j.minisat.orders.VarOrderHeap",
202:       "org.sat4j.minisat.orders.NaturalStaticOrder",
203:       "org.sat4j.LightFactory",
204:       "org.sat4j.minisat.core.ISimplifier",
205:       "org.sat4j.reader.InstanceReader",
206:       "org.sat4j.minisat.core.ConflictTimer",
207:       "org.sat4j.minisat.core.VarActivityListener",
208:       "org.sat4j.specs.VarMapper",
209:       "org.sat4j.minisat.orders.LevelBasedVarOrderHeap",
210:       "org.sat4j.specs.RandomAccessModel",
211:       "org.sat4j.minisat.SolverFactory",
212:       "org.sat4j.minisat.core.LBDConflictTimer",
213:       "org.sat4j.tools.DimacsOutputSolver",
214:       "org.sat4j.minisat.orders.TabuListDecorator",
215:       "org.sat4j.minisat.learning.NoLearningNoHeuristics",
216:       "org.sat4j.minisat.orders.PureOrder",
217:       "org.sat4j.minisat.orders.UserFixedPhaseSelectionStrategy",
218:       "org.sat4j.minisat.core.SizeLCDS",
219:       "org.sat4j.minisat.core.RestartStrategy",
220:       "org.sat4j.minisat.core.AgeLCDS",
221:       "org.sat4j.tools.xplain.Explainer",
222:       "org.sat4j.reader.Reader",
223:       "org.sat4j.core.ReadOnlyVecInt",
224:       "org.sat4j.minisat.core.IOrder",
225:       "org.sat4j.minisat.orders.VariableComparator",
226:       "org.sat4j.minisat.core.WatcherBasedPrimeImplicantStrategy",
227:       "org.sat4j.minisat.core.ICDCL",
228:       "org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy",
229:       "org.sat4j.minisat.restarts.NoRestarts",
230:       "org.sat4j.minisat.constraints.CardinalityDataStructure",
231:       "org.sat4j.minisat.core.MemoryBasedConflictTimer"
232:     );
233:   } 
234: 
235:   private static void resetClasses() {
236:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MaxWatchCard_44_tmp__ESTest_scaffolding.class.getClassLoader()); 
237: 
238:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
239:       "org.sat4j.minisat.constraints.card.MaxWatchCard",
240:       "org.sat4j.specs.Constr$1",
241:       "org.sat4j.specs.Constr",
242:       "org.sat4j.minisat.orders.VarOrderHeap",
243:       "org.sat4j.minisat.orders.LevelBasedVarOrderHeap",
244:       "org.sat4j.minisat.orders.AbstractPhaserecordingSelectionStrategy",
245:       "org.sat4j.minisat.orders.PhaseInLastLearnedClauseSelectionStrategy",
246:       "org.sat4j.minisat.learning.LimitedLearning",
247:       "org.sat4j.minisat.learning.ActiveLearning",
248:       "org.sat4j.minisat.learning.AbstractLearning",
249:       "org.sat4j.minisat.learning.NoLearningButHeuristics",
250:       "org.sat4j.minisat.learning.MiniSATLearning",
251:       "org.sat4j.minisat.constraints.AbstractDataStructureFactory",
252:       "org.sat4j.minisat.constraints.AbstractCardinalityDataStructure",
253:       "org.sat4j.minisat.constraints.CardinalityDataStructureYanMax",
254:       "org.sat4j.core.Vec",
255:       "org.sat4j.minisat.constraints.cnf.Lits",
256:       "org.sat4j.core.ASolverFactory",
257:       "org.sat4j.AbstractLauncher",
258:       "org.sat4j.BasicLauncher",
259:       "org.sat4j.AbstractLauncher$1",
260:       "org.sat4j.DecisionMode",
261:       "org.sat4j.ExitCode",
262:       "org.sat4j.OptimizationMode",
263:       "org.sat4j.ILauncherMode",
264:       "org.sat4j.minisat.restarts.NoRestarts",
265:       "org.sat4j.minisat.core.Solver$1",
266:       "org.sat4j.minisat.core.Solver",
267:       "org.sat4j.minisat.core.SearchParams",
268:       "org.sat4j.specs.ILogAble$1",
269:       "org.sat4j.specs.ILogAble",
270:       "org.sat4j.core.EmptyVecInt",
271:       "org.sat4j.core.VecInt",
272:       "org.sat4j.minisat.core.ActivityComparator",
273:       "org.sat4j.minisat.core.SolverStats",
274:       "org.sat4j.specs.SearchListenerAdapter",
275:       "org.sat4j.minisat.core.VoidTracing",
276:       "org.sat4j.specs.UnitClauseProvider$1",
277:       "org.sat4j.specs.UnitClauseProvider",
278:       "org.sat4j.minisat.core.Solver$2",
279:       "org.sat4j.minisat.core.Solver$3",
280:       "org.sat4j.minisat.core.Solver$4",
281:       "org.sat4j.minisat.core.Pair",
282:       "org.sat4j.minisat.core.ConflictTimerAdapter",
283:       "org.sat4j.minisat.core.MemoryBasedConflictTimer",
284:       "org.sat4j.minisat.core.ActivityLCDS",
285:       "org.sat4j.minisat.core.LBDConflictTimer",
286:       "org.sat4j.minisat.core.GlucoseLCDS",
287:       "org.sat4j.minisat.core.Glucose2LCDS",
288:       "org.sat4j.minisat.core.AgeLCDS",
289:       "org.sat4j.minisat.core.SizeComparator",
290:       "org.sat4j.minisat.core.SizeLCDS",
291:       "org.sat4j.minisat.core.Solver$8",
292:       "org.sat4j.minisat.learning.NoLearningNoHeuristics",
293:       "org.sat4j.minisat.orders.RSATPhaseSelectionStrategy",
294:       "org.sat4j.minisat.restarts.ArminRestarts",
295:       "org.sat4j.minisat.constraints.CardinalityDataStructure",
296:       "org.sat4j.minisat.learning.ClauseOnlyLearning",
297:       "org.sat4j.minisat.orders.SubsetVarOrder",
298:       "org.sat4j.minisat.orders.TabuListDecorator",
299:       "org.sat4j.tools.ManyCore",
300:       "org.sat4j.minisat.learning.FixedLengthLearning",
301:       "org.sat4j.minisat.orders.PureOrder",
302:       "org.sat4j.MUSLauncher",
303:       "org.sat4j.core.ReadOnlyVecInt",
304:       "org.sat4j.tools.SolverDecorator",
305:       "org.sat4j.tools.ModelIterator",
306:       "org.sat4j.tools.SubModelIterator",
307:       "org.sat4j.core.VecInt$1",
308:       "org.sat4j.tools.AbstractMinimalModel",
309:       "org.sat4j.minisat.core.Solver$9",
310:       "org.sat4j.core.LiteralsUtils",
311:       "org.sat4j.minisat.constraints.cnf.WLClause",
312:       "org.sat4j.minisat.constraints.cnf.LearntWLClause",
313:       "org.sat4j.minisat.orders.UserFixedPhaseSelectionStrategy",
314:       "org.sat4j.tools.AbstractClauseSelectorSolver",
315:       "org.sat4j.tools.FullClauseSelectorSolver",
316:       "org.sat4j.tools.AbstractClauseSelectorSolver$1",
317:       "org.sat4j.tools.AbstractClauseSelectorSolver$2",
318:       "org.sat4j.tools.NegationDecorator",
319:       "org.sat4j.minisat.orders.NaturalStaticOrder",
320:       "org.sat4j.minisat.orders.NegativeLiteralSelectionStrategy",
321:       "org.sat4j.minisat.restarts.LubyRestarts",
322:       "org.sat4j.tools.AbstractOutputSolver",
323:       "org.sat4j.tools.DimacsStringSolver",
324:       "org.sat4j.opt.AbstractSelectorVariablesDecorator",
325:       "org.sat4j.opt.MaxSatDecorator",
326:       "org.sat4j.tools.CheckMUSSolutionListener",
327:       "org.sat4j.tools.OptToSatAdapter",
328:       "org.sat4j.tools.GroupClauseSelectorSolver",
329:       "org.sat4j.tools.StatisticsSolver",
330:       "org.sat4j.minisat.orders.RSATLastLearnedClausesPhaseSelectionStrategy",
331:       "org.sat4j.minisat.restarts.FixedPeriodRestarts",
332:       "org.sat4j.minisat.learning.PercentLengthLearning",
333:       "org.sat4j.minisat.restarts.MiniSATRestarts",
334:       "org.sat4j.tools.SolutionFoundListener$1",
335:       "org.sat4j.tools.SolutionFoundListener",
336:       "org.sat4j.tools.LexicoDecorator",
337:       "org.sat4j.opt.MinOneDecorator",
338:       "org.sat4j.minisat.orders.RandomWalkDecorator",
339:       "org.sat4j.minisat.restarts.EMARestarts",
340:       "org.sat4j.minisat.constraints.MixedDataStructureDanielWLConciseBinary",
341:       "org.sat4j.tools.DimacsOutputSolver",
342:       "org.sat4j.minisat.orders.PositiveLiteralSelectionStrategy",
343:       "org.sat4j.tools.DotSearchTracing",
344:       "org.sat4j.specs.Lbool",
345:       "org.sat4j.minisat.core.Counter",
346:       "org.sat4j.minisat.restarts.Glucose21Restarts",
347:       "org.sat4j.minisat.core.CircularBuffer",
348:       "org.sat4j.specs.ContradictionException",
349:       "org.sat4j.minisat.core.WatcherBasedPrimeImplicantStrategy",
350:       "org.sat4j.tools.ModelIteratorToSATAdapter",
351:       "org.sat4j.minisat.constraints.MixedDataStructureDanielHT",
352:       "org.sat4j.minisat.constraints.card.AtLeast",
353:       "org.sat4j.tools.Minimal4InclusionModel",
354:       "org.sat4j.LightFactory",
355:       "org.sat4j.minisat.constraints.MixedDataStructureDanielWL",
356:       "org.sat4j.minisat.constraints.cnf.UnitClauses",
357:       "org.sat4j.minisat.core.Solver$10",
358:       "org.sat4j.minisat.core.Heap",
359:       "org.sat4j.minisat.orders.ActivityBasedVariableComparator",
360:       "org.sat4j.minisat.constraints.cnf.HTClause",
361:       "org.sat4j.minisat.constraints.cnf.LearntHTClause",
362:       "org.sat4j.minisat.orders.PhaseCachingAutoEraseStrategy",
363:       "org.sat4j.minisat.core.ConflictTimerContainer",
364:       "org.sat4j.minisat.core.Solver$6",
365:       "org.sat4j.minisat.orders.RandomLiteralSelectionStrategy",
366:       "org.sat4j.tools.Minimal4CardinalityModel",
367:       "org.sat4j.core.EmptyVecInt$1",
368:       "org.sat4j.minisat.constraints.CardinalityDataStructureYanMin",
369:       "org.sat4j.minisat.constraints.card.MinWatchCard",
370:       "org.sat4j.core.ReadOnlyVec",
371:       "org.sat4j.minisat.orders.LevelAndActivityVariableComparator",
372:       "org.sat4j.minisat.constraints.cnf.BinaryClause",
373:       "org.sat4j.minisat.constraints.cnf.LearntBinaryClause",
374:       "org.sat4j.minisat.constraints.ClausalDataStructureWL",
375:       "org.sat4j.minisat.constraints.cnf.OriginalBinaryClause",
376:       "org.sat4j.core.Vec$1",
377:       "org.sat4j.minisat.constraints.cnf.Clauses",
378:       "org.sat4j.specs.FakeConstr",
379:       "org.sat4j.minisat.constraints.cnf.CBClause",
380:       "org.sat4j.specs.TimeoutException"
381:     );
382:   }
383: }

[MASTER] 01:02:49.022 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
VecInt vecInt0 = new VecInt(1346, 1346);
ActiveLearning<CardinalityDataStructureYanMax> activeLearning0 = new ActiveLearning<CardinalityDataStructureYanMax>();
CardinalityDataStructureYanMax cardinalityDataStructureYanMax0 = new CardinalityDataStructureYanMax();
PureOrder pureOrder0 = new PureOrder(1346);
ArminRestarts arminRestarts0 = new ArminRestarts();
Solver<CardinalityDataStructureYanMax> solver0 = new Solver<CardinalityDataStructureYanMax>(activeLearning0, cardinalityDataStructureYanMax0, pureOrder0, arminRestarts0);
UnitClauses unitClauses0 = (UnitClauses)solver0.addAtLeast(vecInt0, 1346);
RSATLastLearnedClausesPhaseSelectionStrategy rSATLastLearnedClausesPhaseSelectionStrategy0 = new RSATLastLearnedClausesPhaseSelectionStrategy();
VecInt vecInt1 = new VecInt();
pureOrder0.init();
String string0 = "";
DotSearchTracing<Object> dotSearchTracing0 = new DotSearchTracing<Object>("");
CardinalityDataStructure cardinalityDataStructure0 = new CardinalityDataStructure();
Lits lits0 = (Lits)cardinalityDataStructure0.getVocabulary();
MaxWatchCard maxWatchCard0 = new MaxWatchCard(lits0, vecInt1, true, 1346);
((MaxWatchCard) unitClauses0).normalize();

[MASTER] 01:03:45.903 [logback-2] ERROR ClientNodeImpl - Error when generating tests for: org.sat4j.minisat.constraints.card.MaxWatchCard with seed 1550447889640. Configuration id : null
java.rmi.MarshalException: error marshalling arguments; nested exception is: 
	java.net.SocketException: Broken pipe
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:158) ~[na:1.8.0_91]
	at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:227) ~[na:1.8.0_91]
	at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:179) ~[na:1.8.0_91]
	at com.sun.proxy.$Proxy7.evosuite_collectTestGenerationResult(Unknown Source) ~[na:na]
	at org.evosuite.rmi.service.ClientNodeImpl$1.run(ClientNodeImpl.java:164) ~[evosuite-master-1.0.7-SNAPSHOT.jar:1.0.7-SNAPSHOT]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_91]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_91]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_91]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_91]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_91]
Caused by: java.net.SocketException: Broken pipe
	at java.net.SocketOutputStream.socketWrite0(Native Method) ~[na:1.8.0_91]
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:109) ~[na:1.8.0_91]
	at java.net.SocketOutputStream.write(SocketOutputStream.java:153) ~[na:1.8.0_91]
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82) ~[na:1.8.0_91]
	at java.io.BufferedOutputStream.write(BufferedOutputStream.java:126) ~[na:1.8.0_91]
	at java.io.ObjectOutputStream$BlockDataOutputStream.drain(ObjectOutputStream.java:1877) ~[na:1.8.0_91]
	at java.io.ObjectOutputStream$BlockDataOutputStream.setBlockDataMode(ObjectOutputStream.java:1786) ~[na:1.8.0_91]
	at java.io.ObjectOutputStream.writeNonProxyDesc(ObjectOutputStream.java:1286) ~[na:1.8.0_91]
	at java.io.ObjectOutputStream.writeClassDesc(ObjectOutputStream.java:1231) ~[na:1.8.0_91]
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1427) ~[na:1.8.0_91]
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178) ~[na:1.8.0_91]
	at java.io.ObjectOutputStream.writeFatalException(ObjectOutputStream.java:1577) ~[na:1.8.0_91]
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:351) ~[na:1.8.0_91]
	at sun.rmi.server.UnicastRef.marshalValue(UnicastRef.java:294) ~[na:1.8.0_91]
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:153) ~[na:1.8.0_91]
	... 9 common frames omitted
