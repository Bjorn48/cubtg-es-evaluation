[MASTER] 07:04:50.253 [logback-2] ERROR TestCluster - Failed to check cache for org.sat4j.tools.ClausalCardinalitiesDecorator<T> : Type points to itself
[MASTER] 07:04:50.253 [logback-2] ERROR TestCluster - Failed to check cache for org.sat4j.tools.FullClauseSelectorSolver<T> : Type points to itself
[MASTER] 07:04:50.253 [logback-2] ERROR TestCluster - Failed to check cache for org.sat4j.tools.GroupClauseSelectorSolver<T> : Type points to itself
[MASTER] 07:04:50.254 [logback-2] ERROR TestCluster - Failed to check cache for org.sat4j.tools.LexicoDecorator<T> : Type points to itself
[MASTER] 07:04:50.254 [logback-2] ERROR TestCluster - Failed to check cache for org.sat4j.tools.ManyCore<S> : Type points to itself
[MASTER] 07:04:50.254 [logback-2] ERROR TestCluster - Failed to check cache for org.sat4j.tools.NegationDecorator<T> : Type points to itself
[MASTER] 07:04:50.254 [logback-2] ERROR TestCluster - Failed to check cache for org.sat4j.BasicLauncher<T> : Type points to itself
[MASTER] 07:04:50.255 [logback-2] ERROR TestCluster - Failed to check cache for org.sat4j.minisat.core.Solver<D> : Type points to itself
[MASTER] 07:06:23.447 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_16_1550383583401/org/sat4j/AbstractLauncher_16_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_16_1550383583401/org/sat4j/AbstractLauncher_16_tmp__ESTest_scaffolding.java]]
[MASTER] 07:06:23.447 [logback-2] ERROR JUnitAnalyzer - Classpath: bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 07:06:23.447 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 07:06:23.451 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: org.sat4j.core.ASolverFactory<org.sat4j.tools.SingleSolutionDetector> cannot be converted to org.sat4j.core.ASolverFactory<org.sat4j.tools.GroupClauseSelectorSolver<org.sat4j.tools.NegationDecorator>>: 30
[MASTER] 07:06:23.451 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_16_1550383583401/org/sat4j/AbstractLauncher_16_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 07:06:23.451 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 07:06:23.476 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_16_1550383583401/org/sat4j/AbstractLauncher_16_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Sun Feb 17 06:06:23 GMT 2019
4:  */
5: 
6: package org.sat4j;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.evosuite.runtime.ViolatedAssumptionAnswer;
14: import org.junit.runner.RunWith;
15: import org.sat4j.MUSLauncher;
16: import org.sat4j.core.ASolverFactory;
17: import org.sat4j.tools.GroupClauseSelectorSolver;
18: import org.sat4j.tools.NegationDecorator;
19: import org.sat4j.tools.SingleSolutionDetector;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class AbstractLauncher_16_tmp__ESTest extends AbstractLauncher_16_tmp__ESTest_scaffolding {
23: 
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       MUSLauncher mUSLauncher0 = new MUSLauncher();
27:       String[] stringArray0 = new String[9];
28:       ASolverFactory<SingleSolutionDetector> aSolverFactory0 = (ASolverFactory<SingleSolutionDetector>) mock(ASolverFactory.class, new ViolatedAssumptionAnswer());
29:       doReturn(stringArray0).when(aSolverFactory0).solverNames();
30:       mUSLauncher0.showAvailableSolvers((ASolverFactory<GroupClauseSelectorSolver<NegationDecorator>>) aSolverFactory0, "c ");
31:       assertFalse(mUSLauncher0.isSilent());
32:   }
33: }
RegularFileObject[/tmp/EvoSuite_16_1550383583401/org/sat4j/AbstractLauncher_16_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Sun Feb 17 06:06:23 GMT 2019
5:  */
6: 
7: package org.sat4j;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class AbstractLauncher_16_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.sat4j.AbstractLauncher"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AbstractLauncher_16_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.sat4j.minisat.core.ConflictTimerAdapter",
84:       "org.sat4j.tools.SolutionCounter",
85:       "org.sat4j.specs.UnitPropagationListener",
86:       "org.sat4j.minisat.core.SizeComparator",
87:       "org.sat4j.tools.FullClauseSelectorSolver",
88:       "org.sat4j.reader.LecteurDimacs",
89:       "org.sat4j.tools.AbstractClauseSelectorSolver$1",
90:       "org.sat4j.tools.SolverDecorator",
91:       "org.sat4j.reader.AIGReader",
92:       "org.sat4j.ILauncherMode",
93:       "org.sat4j.core.EmptyVecInt",
94:       "org.sat4j.minisat.core.Pair",
95:       "org.sat4j.ExitCode",
96:       "org.sat4j.specs.IVec",
97:       "org.sat4j.minisat.orders.AbstractPhaserecordingSelectionStrategy",
98:       "org.sat4j.minisat.constraints.AbstractDataStructureFactory",
99:       "org.sat4j.AbstractLauncher$2",
100:       "org.sat4j.AbstractLauncher$1",
101:       "org.sat4j.specs.IOptimizationProblem",
102:       "org.sat4j.specs.SearchListener",
103:       "org.sat4j.reader.AAGReader",
104:       "org.sat4j.tools.Minimal4CardinalityModel",
105:       "org.sat4j.minisat.learning.MiniSATLearning",
106:       "org.sat4j.tools.AbstractClauseSelectorSolver$2",
107:       "org.sat4j.minisat.core.SearchParams",
108:       "org.sat4j.tools.AbstractMinimalModel",
109:       "org.sat4j.specs.ILogAble$1",
110:       "org.sat4j.specs.TimeoutException",
111:       "org.sat4j.specs.Constr",
112:       "org.sat4j.specs.ISolverService",
113:       "org.sat4j.minisat.orders.RSATPhaseSelectionStrategy",
114:       "org.sat4j.minisat.core.LearningStrategy",
115:       "org.sat4j.specs.IGroupSolver",
116:       "org.sat4j.opt.MaxSatDecorator",
117:       "org.sat4j.DecisionMode",
118:       "org.sat4j.minisat.orders.PhaseInLastLearnedClauseSelectionStrategy",
119:       "org.sat4j.specs.IteratorInt",
120:       "org.sat4j.specs.ISolver",
121:       "org.sat4j.specs.UnitClauseProvider$1",
122:       "org.sat4j.minisat.core.CircularBuffer",
123:       "org.sat4j.minisat.learning.LimitedLearning",
124:       "org.sat4j.minisat.core.VoidTracing",
125:       "org.sat4j.minisat.core.ActivityListener",
126:       "org.sat4j.minisat.restarts.Glucose21Restarts",
127:       "org.sat4j.minisat.core.GlucoseLCDS",
128:       "org.sat4j.tools.AbstractClauseSelectorSolver$SelectorState",
129:       "org.sat4j.BasicLauncher",
130:       "org.sat4j.minisat.core.ILits",
131:       "org.sat4j.tools.OptToSatAdapter",
132:       "org.sat4j.specs.ILogAble",
133:       "org.sat4j.specs.ContradictionException",
134:       "org.sat4j.opt.AbstractSelectorVariablesDecorator",
135:       "org.sat4j.reader.GroupedCNFReader",
136:       "org.sat4j.minisat.learning.PercentLengthLearning",
137:       "org.sat4j.specs.IConstr",
138:       "org.sat4j.specs.IVecInt",
139:       "org.sat4j.tools.SolutionFoundListener",
140:       "org.sat4j.tools.xplain.MinimizationStrategy",
141:       "org.sat4j.minisat.core.PrimeImplicantStrategy",
142:       "org.sat4j.OptimizationMode",
143:       "org.sat4j.minisat.core.Learner",
144:       "org.sat4j.minisat.core.ActivityComparator",
145:       "org.sat4j.specs.IProblem",
146:       "org.sat4j.minisat.restarts.MiniSATRestarts",
147:       "org.sat4j.tools.xplain.DeletionStrategy",
148:       "org.sat4j.core.VecInt",
149:       "org.sat4j.minisat.core.Solver",
150:       "org.sat4j.tools.xplain.HighLevelXplain",
151:       "org.sat4j.minisat.constraints.cnf.Lits",
152:       "org.sat4j.minisat.core.Solver$2",
153:       "org.sat4j.minisat.core.Solver$1",
154:       "org.sat4j.specs.UnitClauseProvider",
155:       "org.sat4j.AbstractLauncher",
156:       "org.sat4j.minisat.learning.AbstractLearning",
157:       "org.sat4j.minisat.core.Solver$4",
158:       "org.sat4j.minisat.core.Solver$3",
159:       "org.sat4j.core.VecInt$1",
160:       "org.sat4j.core.ASolverFactory",
161:       "org.sat4j.core.Vec$1",
162:       "org.sat4j.reader.DimacsReader",
163:       "org.sat4j.minisat.core.DataStructureFactory",
164:       "org.sat4j.core.Vec",
165:       "org.sat4j.minisat.core.Glucose2LCDS",
166:       "org.sat4j.minisat.core.Solver$6",
167:       "org.sat4j.minisat.core.SolverStats",
168:       "org.sat4j.minisat.core.Solver$8",
169:       "org.sat4j.minisat.core.ConstrActivityListener",
170:       "org.sat4j.minisat.core.IPhaseSelectionStrategy",
171:       "org.sat4j.tools.GroupClauseSelectorSolver",
172:       "org.sat4j.specs.SearchListenerAdapter",
173:       "org.sat4j.tools.xplain.Xplain",
174:       "org.sat4j.reader.ParseFormatException",
175:       "org.sat4j.tools.AbstractClauseSelectorSolver",
176:       "org.sat4j.tools.StatisticsSolver",
177:       "org.sat4j.tools.SearchEnumeratorListener",
178:       "org.sat4j.minisat.constraints.MixedDataStructureDanielWL",
179:       "org.sat4j.minisat.core.ActivityLCDS",
180:       "org.sat4j.MUSLauncher",
181:       "org.sat4j.tools.SingleSolutionDetector",
182:       "org.sat4j.minisat.orders.VarOrderHeap",
183:       "org.sat4j.tools.NegationDecorator",
184:       "org.sat4j.minisat.core.ISimplifier",
185:       "org.sat4j.reader.InstanceReader",
186:       "org.sat4j.minisat.core.ConflictTimer",
187:       "org.sat4j.minisat.core.VarActivityListener",
188:       "org.sat4j.specs.RandomAccessModel",
189:       "org.sat4j.minisat.SolverFactory",
190:       "org.sat4j.minisat.core.LBDConflictTimer",
191:       "org.sat4j.tools.SearchMinOneListener",
192:       "org.sat4j.minisat.core.SizeLCDS",
193:       "org.sat4j.minisat.core.RestartStrategy",
194:       "org.sat4j.minisat.core.AgeLCDS",
195:       "org.sat4j.tools.xplain.Explainer",
196:       "org.sat4j.reader.Reader",
197:       "org.sat4j.minisat.core.IOrder",
198:       "org.sat4j.minisat.orders.VariableComparator",
199:       "org.sat4j.minisat.core.ICDCL",
200:       "org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy",
201:       "org.sat4j.minisat.core.MemoryBasedConflictTimer"
202:     );
203:   } 
204:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
205:     mock(Class.forName("org.sat4j.core.ASolverFactory", false, AbstractLauncher_16_tmp__ESTest_scaffolding.class.getClassLoader()));
206:   }
207: 
208:   private static void resetClasses() {
209:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AbstractLauncher_16_tmp__ESTest_scaffolding.class.getClassLoader()); 
210: 
211:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
212:       "org.sat4j.AbstractLauncher",
213:       "org.sat4j.AbstractLauncher$1",
214:       "org.sat4j.AbstractLauncher$2",
215:       "org.sat4j.specs.ILogAble$1",
216:       "org.sat4j.specs.ILogAble",
217:       "org.sat4j.DecisionMode",
218:       "org.sat4j.ExitCode",
219:       "org.sat4j.OptimizationMode",
220:       "org.sat4j.ILauncherMode",
221:       "org.sat4j.MUSLauncher",
222:       "org.sat4j.tools.SolverDecorator",
223:       "org.sat4j.tools.AbstractClauseSelectorSolver",
224:       "org.sat4j.tools.FullClauseSelectorSolver",
225:       "org.sat4j.tools.xplain.Xplain",
226:       "org.sat4j.minisat.SolverFactory",
227:       "org.sat4j.minisat.constraints.AbstractDataStructureFactory",
228:       "org.sat4j.minisat.constraints.MixedDataStructureDanielWL",
229:       "org.sat4j.core.Vec",
230:       "org.sat4j.minisat.constraints.cnf.Lits",
231:       "org.sat4j.minisat.orders.VarOrderHeap",
232:       "org.sat4j.minisat.orders.AbstractPhaserecordingSelectionStrategy",
233:       "org.sat4j.minisat.orders.PhaseInLastLearnedClauseSelectionStrategy",
234:       "org.sat4j.minisat.learning.AbstractLearning",
235:       "org.sat4j.minisat.learning.MiniSATLearning",
236:       "org.sat4j.minisat.restarts.MiniSATRestarts",
237:       "org.sat4j.minisat.core.SearchParams",
238:       "org.sat4j.core.EmptyVecInt",
239:       "org.sat4j.core.VecInt",
240:       "org.sat4j.minisat.core.ActivityComparator",
241:       "org.sat4j.minisat.core.SolverStats",
242:       "org.sat4j.specs.SearchListenerAdapter",
243:       "org.sat4j.minisat.core.VoidTracing",
244:       "org.sat4j.specs.UnitClauseProvider$1",
245:       "org.sat4j.specs.UnitClauseProvider",
246:       "org.sat4j.minisat.core.Solver$2",
247:       "org.sat4j.minisat.core.Solver$3",
248:       "org.sat4j.minisat.core.Solver$4",
249:       "org.sat4j.minisat.core.Pair",
250:       "org.sat4j.minisat.core.ConflictTimerAdapter",
251:       "org.sat4j.minisat.core.MemoryBasedConflictTimer",
252:       "org.sat4j.minisat.core.ActivityLCDS",
253:       "org.sat4j.minisat.core.LBDConflictTimer",
254:       "org.sat4j.minisat.core.GlucoseLCDS",
255:       "org.sat4j.minisat.core.Glucose2LCDS",
256:       "org.sat4j.minisat.core.AgeLCDS",
257:       "org.sat4j.minisat.core.SizeComparator",
258:       "org.sat4j.minisat.core.SizeLCDS",
259:       "org.sat4j.minisat.core.Solver$8",
260:       "org.sat4j.minisat.orders.RSATPhaseSelectionStrategy",
261:       "org.sat4j.minisat.restarts.Glucose21Restarts",
262:       "org.sat4j.minisat.core.CircularBuffer",
263:       "org.sat4j.tools.AbstractClauseSelectorSolver$1",
264:       "org.sat4j.tools.AbstractClauseSelectorSolver$2",
265:       "org.sat4j.tools.xplain.DeletionStrategy",
266:       "org.sat4j.reader.LecteurDimacs",
267:       "org.sat4j.BasicLauncher",
268:       "org.sat4j.reader.InstanceReader",
269:       "org.sat4j.tools.AbstractOutputSolver",
270:       "org.sat4j.tools.DimacsOutputSolver",
271:       "org.sat4j.minisat.learning.NoLearningNoHeuristics",
272:       "org.sat4j.minisat.constraints.MixedDataStructureSingleWL",
273:       "org.sat4j.minisat.orders.RandomLiteralSelectionStrategy",
274:       "org.sat4j.minisat.restarts.LubyRestarts",
275:       "org.sat4j.opt.MinOneDecorator",
276:       "org.sat4j.core.Vec$1",
277:       "org.sat4j.tools.AbstractMinimalModel",
278:       "org.sat4j.tools.SolutionFoundListener$1",
279:       "org.sat4j.tools.SolutionFoundListener",
280:       "org.sat4j.core.VecInt$1",
281:       "org.sat4j.core.ConstrGroup",
282:       "org.sat4j.tools.SolutionCounter",
283:       "org.sat4j.reader.JSONReader",
284:       "org.sat4j.reader.ParseFormatException",
285:       "org.sat4j.minisat.learning.NoLearningButHeuristics",
286:       "org.sat4j.minisat.orders.NegativeLiteralSelectionStrategy",
287:       "org.sat4j.minisat.restarts.FixedPeriodRestarts",
288:       "org.sat4j.reader.DimacsReader",
289:       "org.sat4j.reader.GroupedCNFReader",
290:       "org.sat4j.opt.AbstractSelectorVariablesDecorator",
291:       "org.sat4j.opt.MaxSatDecorator",
292:       "org.sat4j.tools.ManyCore",
293:       "org.sat4j.minisat.core.Counter",
294:       "org.sat4j.tools.RunnableSolver",
295:       "org.sat4j.LightFactory",
296:       "org.sat4j.minisat.restarts.ArminRestarts",
297:       "org.sat4j.tools.OptToSatAdapter",
298:       "org.sat4j.tools.ClausalCardinalitiesDecorator",
299:       "org.sat4j.tools.encoding.EncodingStrategyAdapter",
300:       "org.sat4j.tools.encoding.Sequential",
301:       "org.sat4j.tools.encoding.Binary",
302:       "org.sat4j.tools.encoding.Product",
303:       "org.sat4j.tools.encoding.Commander",
304:       "org.sat4j.tools.encoding.Binomial",
305:       "org.sat4j.tools.encoding.Ladder",
306:       "org.sat4j.tools.encoding.Policy",
307:       "org.sat4j.minisat.learning.LimitedLearning",
308:       "org.sat4j.minisat.learning.FixedLengthLearning",
309:       "org.sat4j.minisat.orders.PureOrder",
310:       "org.sat4j.minisat.restarts.NoRestarts",
311:       "org.sat4j.tools.StatisticsSolver",
312:       "org.sat4j.tools.DimacsStringSolver",
313:       "org.sat4j.tools.Minimal4CardinalityModel",
314:       "org.sat4j.minisat.learning.ActiveLearning",
315:       "org.sat4j.tools.GateTranslator",
316:       "org.sat4j.tools.GroupClauseSelectorSolver",
317:       "org.sat4j.minisat.orders.LevelBasedVarOrderHeap",
318:       "org.sat4j.specs.TimeoutException",
319:       "org.sat4j.tools.LexicoDecorator",
320:       "org.sat4j.tools.Minimal4InclusionModel",
321:       "org.sat4j.tools.CheckMUSSolutionListener",
322:       "org.sat4j.tools.ModelIterator",
323:       "org.sat4j.tools.ModelIteratorToSATAdapter",
324:       "org.sat4j.reader.EfficientScanner",
325:       "org.sat4j.core.ASolverFactory",
326:       "org.sat4j.minisat.core.Solver$1",
327:       "org.sat4j.minisat.core.Solver",
328:       "org.sat4j.tools.SearchEnumeratorListener",
329:       "org.sat4j.tools.SearchMinOneListener",
330:       "org.sat4j.reader.Reader"
331:     );
332:   }
333: }

[MASTER] 07:06:23.477 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
MUSLauncher mUSLauncher0 = new MUSLauncher();
String[] stringArray0 = new String[9];
ASolverFactory<SingleSolutionDetector> aSolverFactory0 = (ASolverFactory<SingleSolutionDetector>) mock(ASolverFactory.class, new ViolatedAssumptionAnswer());
doReturn(stringArray0).when(aSolverFactory0).solverNames();
mUSLauncher0.showAvailableSolvers((ASolverFactory<GroupClauseSelectorSolver<NegationDecorator>>) aSolverFactory0, "c ");
assertFalse(mUSLauncher0.isSilent());


