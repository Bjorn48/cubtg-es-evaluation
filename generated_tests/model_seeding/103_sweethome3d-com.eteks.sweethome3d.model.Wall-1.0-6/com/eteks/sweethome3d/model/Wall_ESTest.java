/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 25 21:55:12 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.Level;
import com.eteks.sweethome3d.model.TextureImage;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.model.Wall;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Wall_ESTest extends Wall_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Wall wall0 = new Wall((-856.8032F), (-856.8032F), (-856.8032F), 29.269F, 1.0F, 0.0F);
      Wall wall1 = new Wall((-392.53473F), 2098.0F, (-715.643F), (-1331.8821F), 0.0F, (-715.643F));
      wall0.setYStart((-1331.8821F));
      wall0.setRightSideShininess(78.210594F);
      wall0.intersectsRectangle(0.0F, (-1331.8821F), (-337.99112F), 78.210594F);
      Wall wall2 = wall1.clone();
      wall2.getHeight();
      wall1.setXStart(0.0F);
      Integer.valueOf(0);
      Integer.valueOf((-2573));
      Integer.valueOf(1665);
      Integer integer0 = Integer.valueOf((-3606));
      wall2.setLeftSideColor(integer0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Wall wall0 = new Wall(40.9468F, 40.9468F, 40.9468F, 595.77F, (-0.01754386F));
      wall0.setWallAtStart((Wall) null);
      wall0.containsPoint((-0.01754386F), 244.227F, 244.227F);
      wall0.getWallAtStart();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Wall wall0 = new Wall((-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F));
      CatalogTexture catalogTexture0 = new CatalogTexture("com.eteks.sweethome3d.model.BackgroundImage", (Content) null, (-970.7F), (-970.7F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      wall0.setRightSideTexture(homeTexture0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      wall0.containsWallEndAt((-1394.81F), (-1030.94F), (-2399.17F));
      wall0.getLength();
      wall0.getRightSideTexture();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Wall wall0 = new Wall(3761.1423F, 3761.1423F, 3761.1423F, 3761.1423F, 0.1F);
      Float float0 = new Float((-1.7353541F));
      Float.max(1.0F, 0.1F);
      wall0.setArcExtent(float0);
      Object object0 = new Object();
      wall0.getYArcCircleCenter();
      wall0.getXArcCircleCenter();
      wall0.isTrapezoidal();
      Float.floatToIntBits(2323.0F);
      wall0.setHeight((Float) 2323.0F);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer0 = new Integer((-788));
      Object object1 = new Object();
      integer0.equals(object1);
      wall0.setRightSideColor(integer0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      float float1 = new Float(2323.0F);
      Wall wall1 = wall0.clone();
      wall1.getRightSideColor();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Wall.Property.values();
      Wall wall0 = new Wall((-1.0F), 0.0F, 0.0F, 0.0F, 0.0F, (-1331.8821F));
      wall0.setYStart((-2467.7927F));
      wall0.setRightSideShininess(1475.684F);
      wall0.intersectsRectangle(0.0F, (-337.99112F), 0.0F, (-1331.8821F));
      wall0.clone();
      wall0.getHeight();
      wall0.setXStart((-2467.7927F));
      Integer.valueOf(0);
      Integer.valueOf(1665);
      Integer integer0 = Integer.valueOf(0);
      wall0.setLeftSideColor(integer0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Wall wall0 = new Wall(58.06781F, 58.06781F, 58.06781F, 58.06781F, 58.06781F);
      Float float0 = new Float(58.06781F);
      wall0.setArcExtent(float0);
      wall0.setArcExtent(float0);
      wall0.isTrapezoidal();
      wall0.getLength();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Wall wall0 = new Wall((-856.8032F), (-856.8032F), (-856.8032F), 29.269F, 1.0F, 0.0F);
      Wall wall1 = new Wall((-856.8032F), (-856.8032F), (-856.8032F), 29.269F, 1.0F, 0.0F);
      Float float0 = wall1.getHeight();
      wall1.setHeight(float0);
      wall0.setWallAtStart(wall1);
      Wall wall2 = new Wall((-392.53473F), 2098.0F, (-715.643F), (-1331.8821F), 0.0F, (-715.643F));
      wall0.setYStart((-1331.8821F));
      wall0.setRightSideShininess(78.210594F);
      wall0.intersectsRectangle(0.0F, (-1331.8821F), (-337.99112F), 78.210594F);
      Wall wall3 = wall2.clone();
      wall3.getHeight();
      wall2.setXStart(0.0F);
      Integer.valueOf(0);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("d'C3", "d'C3", resourceURLContent0, (-1.0F), (-1.0F), "li%XII", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeTexture0.getName();
      wall2.setPattern(homeTexture0);
      Integer.valueOf((-2573));
      Integer.valueOf(1665);
      Integer integer0 = Integer.valueOf((-3606));
      wall3.setLeftSideColor(integer0);
      wall0.getXArcCircleCenter();
      wall1.getThickness();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Wall wall0 = new Wall((-877.2446F), (-877.2446F), (-877.2446F), (-877.2446F), (-877.2446F), (-877.2446F));
      CatalogTexture catalogTexture0 = new CatalogTexture("7GlqR^S6pQmPfKX%3]", (Content) null, (-877.2446F), (-877.2446F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeTexture0.equals(catalogTexture0);
      wall0.setLeftSideTexture(homeTexture0);
      wall0.setLeftSideTexture(homeTexture0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Wall wall0 = new Wall((-1.0F), (-1.0F), (-3606.2495F), (-3606.2495F), (-3606.2495F), 1058.3F);
      CatalogTexture catalogTexture0 = new CatalogTexture("X_START", "com.eteks.sweethome3d.model.BackgroundImage", (Content) null, (-2399.166F), 2673.0F, "com.eteks.sweethome3d.model.BackgroundImage");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeTexture0.equals("com.eteks.sweethome3d.model.BackgroundImage");
      wall0.setRightSideTexture(homeTexture0);
      Wall wall1 = wall0.clone();
      wall1.setXEnd((-3606.2495F));
      wall0.clone();
      wall1.setXStart(1058.3F);
      wall0.containsPoint(0.01F, 1.6683908F, 2202.2F);
      wall0.setRightSideTexture(homeTexture0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Wall wall0 = new Wall(2235.3F, 2235.3F, 0.0F, 3604.8655F, 0.0F, (-500.7562F));
      CatalogTexture catalogTexture0 = new CatalogTexture("X_START", "com.eteks.sweethome3d.model.BackgroundImage", (Content) null, (-2399.166F), 2673.0F, "com.eteks.sweethome3d.model.BackgroundImage");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeTexture0.equals("com.eteks.sweethome3d.model.BackgroundImage");
      wall0.setLeftSideTexture(homeTexture0);
      wall0.move((-644.81F), 2235.3F);
      Float.floatToIntBits(1042.511F);
      wall0.setArcExtent((Float) 1042.511F);
      wall0.setXEnd((-1272.0093F));
      wall0.getArcExtent();
      wall0.getXStart();
      wall0.getXEnd();
      wall0.setXStart((-715.643F));
      wall0.setYStart((-1272.0093F));
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      List<Wall> list0 = Wall.clone((List<Wall>) linkedList0);
      Wall.clone(list0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Wall wall0 = new Wall((-856.8032F), (-856.8032F), (-856.8032F), (-856.8032F), (-856.8032F));
      wall0.getLength();
      wall0.setWallAtStart(wall0);
      wall0.setLeftSideShininess(0.01F);
      wall0.containsPoint((-875.0F), 0.01F, (-875.0F));
      wall0.getStartPointToEndPointDistance();
      CatalogTexture catalogTexture0 = new CatalogTexture("X_START", "com.eteks.sweethome3d.model.BackgroundImage", (Content) null, (-2399.166F), 2673.0F, "com.eteks.sweethome3d.model.BackgroundImage");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeTexture0.equals("com.eteks.sweethome3d.model.BackgroundImage");
      wall0.setRightSideTexture(homeTexture0);
      wall0.getWallAtStart();
      wall0.clone();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Wall wall0 = new Wall(74.47F, 74.47F, 74.47F, 74.47F, 0.0F);
      Float.valueOf(0.0F);
      wall0.intersectsRectangle(0.0F, 0.0F, 0.0F, 0.0F);
      Float float0 = Float.valueOf(0.0F);
      wall0.setHeight(float0);
      wall0.intersectsRectangle(1979.0984F, 0.0F, 0.0F, (-870.6327F));
      wall0.setLeftSideShininess(5.3341F);
      Float.floatToIntBits(531.42F);
      Float.floatToIntBits(531.42F);
      wall0.setHeight((Float) 531.42F);
      wall0.setThickness(5.3341F);
      wall0.clone();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Wall wall0 = new Wall((-14.72334F), (-14.72334F), 775.71204F, 775.71204F, (-876.2F), 775.71204F);
      Float.compare(1445.717F, 1445.717F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.shouldAllThrowIOExceptions();
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("q(L_ehk}%,:oV", propertyChangeListener0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "q(L_ehk}%,:oV");
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      Float.compare(0.0F, 0.0F);
      wall0.setHeightAtEnd((Float) 0.0F);
      wall0.isTrapezoidal();
      Float float0 = new Float(528.77);
      Float.min(775.71204F, 0.0F);
      float0.floatValue();
      wall0.setHeightAtEnd((Float) 528.77F);
      Float float1 = new Float(380.0223667645);
      float1.floatValue();
      float1.floatValue();
      float1.floatValue();
      wall0.setHeightAtEnd((Float) 380.02237F);
      wall0.getRightSideColor();
      Wall.Property.values();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Wall wall0 = new Wall((-856.8032F), (-856.8032F), (-856.8032F), 29.269F, 29.269F, 29.269F);
      Float float0 = new Float((-856.8032F));
      Float.min(0.01F, 967.55585F);
      wall0.setHeight(float0);
      Wall wall1 = wall0.clone();
      wall1.getLength();
      wall0.setWallAtStart(wall1);
      wall1.setLeftSideShininess(0.0F);
      Wall wall2 = wall0.clone();
      wall0.getPoints();
      wall1.getThickness();
      wall2.getRightSideShininess();
      // Undeclared exception!
      try { 
        Wall.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Wall wall0 = new Wall(229.748F, 1.0F, 229.748F, 79.210594F, 229.748F, 79.210594F);
      wall0.move(4174.278F, (-1.0F));
      wall0.getXArcCircleCenter();
      wall0.setRightSideShininess(0.0F);
      wall0.getPoints();
      wall0.getHeight();
      wall0.isAtLevel((Level) null);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      float float0 = 0.0F;
      Wall wall0 = new Wall(0.0F, 0.0F, 610.03864F, 0.0F, 610.03864F, 0.0F);
      Integer.valueOf(2724);
      Integer integer0 = Integer.valueOf(2724);
      wall0.setRightSideShininess(2724);
      Float.floatToIntBits(1407.9F);
      Float float1 = Float.valueOf((-912.9F));
      wall0.setHeight(float1);
      wall0.setYEnd(1407.9F);
      wall0.setHeight((Float) 1407.9F);
      wall0.setRightSideColor(integer0);
      wall0.getPattern();
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      wall0.containsWallStartAt(0.0F, 0.0F, 2.0F);
      // Undeclared exception!
      try { 
        linkedList0.remove();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Wall.Property.values();
      Wall wall0 = new Wall(0.01F, (-470.0F), (-2887.6F), (-2887.6F), (-470.0F), (-470.0F));
      wall0.getRightSideTexture();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Wall wall0 = new Wall((-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F));
      wall0.containsWallStartAt((-970.7F), (-970.7F), (-970.7F));
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Wall wall0 = new Wall((-8.044552F), (-8.044552F), (-8.044552F), (-8.044552F), (-8.044552F));
      wall0.containsPoint((-8.044552F), (-8.044552F), (-8.044552F));
      wall0.clone();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Wall wall0 = new Wall(74.47F, 74.47F, 74.47F, 74.47F, 0.0F);
      wall0.intersectsRectangle(0.0F, (-0.50278425F), 0.0F, 0.0F);
      Float float0 = Float.valueOf(0.0F);
      wall0.setHeight(float0);
      Float float1 = new Float(0.0F);
      Float.isFinite(0.0F);
      wall0.setHeight(float1);
      wall0.setHeight((Float) null);
      wall0.setXStart(0.0F);
      wall0.setRightSideShininess((-2466.4404F));
      wall0.setThickness(0.0F);
      wall0.setLeftSideTexture((HomeTexture) null);
      wall0.getYStart();
      wall0.getRightSideTexture();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          Wall wall0 = new Wall(2.0F, (-852.31055F), 2.0F, 2.0F, (-852.31055F), 2.0F);
          Float float0 = new Float((-2496.11F));
          wall0.setArcExtent(float0);
          wall0.containsPoint((-852.31055F), (-852.31055F), 2.0F);
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Wall wall0 = new Wall(3761.1423F, 3761.1423F, 3761.1423F, 3761.1423F, 0.1F);
      Float float0 = new Float(3761.1423F);
      wall0.setArcExtent(float0);
      wall0.setHeightAtEnd(float0);
      Object object0 = new Object();
      wall0.getXArcCircleCenter();
      wall0.isTrapezoidal();
      wall0.setHeight((Float) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      wall0.getYEnd();
      wall0.getHeightAtEnd();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Wall wall0 = new Wall(3761.1423F, (-11.39914F), (-11.39914F), (-11.39914F), 3761.1423F, (-11.39914F));
      Float float0 = new Float(3761.1423F);
      Object object0 = new Object();
      wall0.getYArcCircleCenter();
      wall0.setXStart((-11.39914F));
      wall0.setWallAtEnd(wall0);
      wall0.getPoints();
      wall0.getThickness();
      wall0.setWallAtEnd(wall0);
      wall0.setWallAtStart((Wall) null);
      Integer integer0 = Integer.valueOf(795);
      wall0.setRightSideColor(integer0);
      wall0.getWallAtEnd();
      Random.setNextRandom(795);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Wall wall0 = new Wall((-14.356718F), (-14.356718F), 775.71204F, 775.71204F, (-876.2F), 775.71204F);
      Float.compare(1445.717F, 1445.717F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.shouldAllThrowIOExceptions();
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("q(L_ehk}%,:oV", propertyChangeListener0);
      wall0.isTrapezoidal();
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      Float.compare(0, 0);
      wall0.setHeightAtEnd((Float) (-14.356718F));
      wall0.isTrapezoidal();
      wall0.setRightSideColor((Integer) null);
      wall0.setRightSideColor((Integer) null);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Wall wall0 = new Wall((-852.31055F), 2.0F, (-2496.11F), (-852.31055F), (-2496.11F));
      Float float0 = new Float((-2496.11F));
      wall0.setLeftSideColor((Integer) null);
      wall0.isTrapezoidal();
      Wall wall1 = wall0.clone();
      wall1.getHeightAtEnd();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Wall wall0 = new Wall((-759.3817F), 2347.5593F, (-2664.784F), (-1267.615F), 2347.5593F);
      wall0.containsPoint((-1.0F), (-2664.784F), 3850.0F);
      wall0.setRightSideTexture((HomeTexture) null);
      Wall wall1 = new Wall((-856.8032F), (-856.8032F), (-856.8032F), 29.269F, 1.0F, 0.0F);
      Float float0 = wall1.getHeight();
      Float.max((-2664.784F), (-2664.784F));
      wall1.setHeight(float0);
      wall0.setWallAtEnd(wall1);
      wall0.setXEnd((-1105.3563F));
      Wall wall2 = wall0.clone();
      wall0.containsPoint(2347.5593F, 1.0F, 2.0F);
      wall2.getLeftSideColor();
      wall1.setRightSideTexture((HomeTexture) null);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Wall wall0 = new Wall((-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F));
      CatalogTexture catalogTexture0 = new CatalogTexture("B-/})saf", (Content) null, (-970.7F), (-970.7F));
      TexturesCategory texturesCategory0 = new TexturesCategory("f$#L2XJ/[V{R b");
      CatalogTexture catalogTexture1 = mock(CatalogTexture.class, new ViolatedAssumptionAnswer());
      texturesCategory0.add(catalogTexture1);
      CatalogTexture catalogTexture2 = mock(CatalogTexture.class, new ViolatedAssumptionAnswer());
      texturesCategory0.getIndexOfTexture(catalogTexture2);
      catalogTexture0.setCategory(texturesCategory0);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      wall0.setRightSideTexture(homeTexture0);
      wall0.getPoints();
      Float float0 = new Float((-2399.17F));
      wall0.setRightSideTexture(homeTexture0);
      Float float1 = new Float((-2944.0));
      float1.floatValue();
      float1.floatValue();
      wall0.setHeightAtEnd((Float) (-2944.0F));
      wall0.getHeightAtEnd();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Wall wall0 = new Wall(38.13671F, 38.13671F, 38.13671F, 38.13671F, 38.13671F, 38.13671F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      wall0.getWallAtStart();
      wall0.getRightSideShininess();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Wall wall0 = new Wall((-852.31055F), (-852.31055F), (-852.31055F), (-852.31055F), (-852.31055F));
      CatalogTexture catalogTexture0 = new CatalogTexture("7GljR^S6pQmPfKX%3]", "7GljR^S6pQmPfKX%3]", (Content) null, 0.0F, 0.0F, "7GljR^S6pQmPfKX%3]");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeTexture0.equals(catalogTexture0);
      wall0.setLeftSideTexture(homeTexture0);
      wall0.setLeftSideTexture(homeTexture0);
      wall0.isTrapezoidal();
      wall0.getLeftSideTexture();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Wall wall0 = new Wall((-2113.528F), 0.0F, 0.27292702F, 1.0F, 283.0F, (-1.3621672F));
      Float float0 = wall0.getHeight();
      wall0.setArcExtent(float0);
      wall0.setXStart(1076.2316F);
      wall0.setRightSideShininess(1.0F);
      Float.floatToIntBits(1.0F);
      wall0.setHeightAtEnd((Float) null);
      wall0.containsWallEndAt(1731.4565F, 0.016666668F, (-2113.528F));
      wall0.getXEnd();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Wall wall0 = new Wall((-1.0F), (-1.0F), (-3606.2495F), (-3606.2495F), (-3606.2495F), 1058.3F);
      CatalogTexture catalogTexture0 = new CatalogTexture("X_START", "com.eteks.sweethome3d.model.BackgroundImage", (Content) null, (-2399.166F), 2673.0F, "com.eteks.sweethome3d.model.BackgroundImage");
      Wall wall1 = new Wall((-856.8032F), (-856.8032F), (-856.8032F), 29.269F, 1.0F, 0.0F);
      Float float0 = wall1.getHeight();
      wall1.setHeight(float0);
      wall1.setLeftSideShininess((-2153.783F));
      Integer integer0 = new Integer(1217);
      Integer.getInteger("com.eteks.sweethome3d.model.BackgroundImage", (Integer) null);
      Object object0 = new Object();
      integer0.equals(object0);
      wall1.setRightSideColor(integer0);
      wall0.getLeftSideColor();
      wall1.getLeftSideShininess();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Wall wall0 = new Wall(2235.3F, 2235.3F, 0.0F, 3604.8655F, 0.0F, 0.0F);
      CatalogTexture catalogTexture0 = new CatalogTexture("X_START", "com.eteks.sweethome3d.model.BackgroundImage", (Content) null, (-2399.166F), 2673.0F, "com.eteks.sweethome3d.model.BackgroundImage");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeTexture0.equals("com.eteks.sweethome3d.model.BackgroundImage");
      wall0.setLeftSideTexture(homeTexture0);
      wall0.move((-644.81F), 2235.3F);
      Float.floatToIntBits(1042.511F);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      wall0.setArcExtent((Float) 1042.511F);
      wall0.setXEnd((-1272.0093F));
      Wall wall1 = wall0.clone();
      wall1.setXStart((-1876.881F));
      wall1.containsPoint((-2058.669F), 3604.8655F, (-2399.166F));
      wall0.setRightSideTexture(homeTexture0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Wall wall0 = new Wall(2347.3054F, (-1267.615F), (-1267.615F), (-2664.784F), (-759.3817F), (-2664.784F));
      wall0.containsPoint((-1.0F), (-2664.784F), 3850.0F);
      wall0.setRightSideTexture((HomeTexture) null);
      Wall wall1 = new Wall((-856.8032F), (-856.8032F), (-856.8032F), 29.269F, 1.0F, 0.0F);
      Float float0 = wall1.getHeight();
      Float.max((-2664.784F), (-2664.784F));
      wall1.setHeight(float0);
      wall0.setWallAtEnd(wall1);
      wall0.setYEnd((-759.3817F));
      wall0.isTrapezoidal();
      wall0.setHeight((Float) null);
      wall1.setThickness((-1267.615F));
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Wall wall0 = new Wall((-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F));
      CatalogTexture catalogTexture0 = new CatalogTexture("com.eteks.sweethome3d.model.BackgroundImage", "com.eteks.sweethome3d.model.BackgroundImage", (Content) null, (-970.7F), (-2399.166F), "com.eteks.sweethome3d.model.BackgroundImage");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      wall0.setRightSideTexture(homeTexture0);
      wall0.setLeftSideTexture(homeTexture0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Wall wall0 = new Wall(0.27292702F, 0.27292702F, (-1997.6F), (-1997.6F), 1882.174F, 0.27292702F);
      Object object0 = new Object();
      wall0.isTrapezoidal();
      wall0.setXEnd((-1997.6F));
      wall0.setRightSideColor((Integer) null);
      wall0.getLeftSideColor();
      wall0.getArcExtent();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Wall wall0 = new Wall(74.47F, 74.47F, 74.47F, 74.47F, 0.0F);
      Float.valueOf(0.0F);
      wall0.intersectsRectangle(0.0F, 0.0F, 0.0F, 0.0F);
      Float float0 = Float.valueOf(0.0F);
      wall0.setHeight(float0);
      Float.valueOf((-2056.58F));
      Float.valueOf(0.0F);
      wall0.setHeight((Float) null);
      wall0.move((-484.0F), 1013.9F);
      wall0.setHeight(float0);
      wall0.setXStart(0.0F);
      wall0.setRightSideShininess(0.1F);
      Float float1 = new Float(1857.0F);
      float1.floatValue();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.tools.URLContent", propertyChangeListener0);
      wall0.removePropertyChangeListener(propertyChangeListenerProxy0);
      wall0.setHeightAtEnd((Float) 1857.0F);
      wall0.containsWallEndAt((-644.81F), (-2056.58F), (-3606.2495F));
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Wall wall0 = new Wall(40.9468F, 40.9468F, 40.9468F, 40.9468F, 40.9468F);
      Float float0 = new Float(40.9468F);
      wall0.setArcExtent(float0);
      wall0.containsPoint(2405.6F, 40.9468F, 40.9468F);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Wall wall0 = new Wall((-852.31055F), 2.0F, (-2496.11F), (-852.31055F), (-2496.11F));
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      linkedList0.add(wall0);
      Wall.clone((List<Wall>) linkedList0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      wall0.containsWallEndAt((-852.31055F), 2.0F, (-2496.11F));
      wall0.getLength();
      CatalogTexture catalogTexture0 = new CatalogTexture("X_START", "com.eteks.sweethome3d.model.BackgroundImage", (Content) null, (-2399.166F), 2673.0F, "com.eteks.sweethome3d.model.BackgroundImage");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeTexture0.equals("com.eteks.sweethome3d.model.BackgroundImage");
      wall0.setLeftSideTexture(homeTexture0);
      wall0.setLeftSideTexture(homeTexture0);
      wall0.getWallAtEnd();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 40.9468F, (-1.0F), 40.9468F);
      Float float0 = new Float(0.0F);
      wall0.setArcExtent(float0);
      wall0.containsPoint(1.0F, 0.0F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Wall wall0 = new Wall(0.1F, 0.1F, (-1997.6F), (-1997.6F), 1882.174F, 0.1F);
      Object object0 = new Object();
      wall0.isTrapezoidal();
      wall0.setRightSideColor((Integer) null);
      wall0.getLeftSideColor();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Wall wall0 = new Wall(3759.8367F, 3759.8367F, 3759.8367F, 3759.8367F, 0.1F);
      Float float0 = new Float(3759.8367F);
      wall0.setArcExtent(float0);
      Float float1 = new Float(3759.8367F);
      wall0.setXStart(0.1F);
      wall0.setWallAtEnd(wall0);
      Wall wall1 = new Wall(0.1F, 3759.8367F, 3759.8367F, 3759.8367F, 3759.8367F);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Wall wall0 = new Wall(3766.78F, 3766.78F, 3766.78F, 759.72F, 759.72F);
      Wall wall1 = wall0.clone();
      wall1.removePropertyChangeListener((PropertyChangeListener) null);
      wall0.clone();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      String string0 = "^F\\u(y@Y\\tjY}/4^#AY";
      Level level0 = new Level(string0, 1611.3942F, (-1.0F), 1611.3942F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("LEFT_SIDE_TEXTURE", propertyChangeListener0);
      level0.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall0.isAtLevel(level0);
      wall0.containsPoint(0.0F, 1873.815F, (-1105.3563F));
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Wall wall0 = new Wall((-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F));
      String string0 = "^F\\u(y@Y\\tjY}/4^#AY";
      Level level0 = new Level(string0, 1600.6892F, (-970.7F), 1600.6892F);
      wall0.isAtLevel(level0);
      wall0.setThickness((-970.7F));
      Integer.valueOf(17);
      wall0.setLevel((Level) null);
      wall0.getLength();
      wall0.setThickness(0.0F);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Wall wall0 = new Wall((-1.0F), (-1.0F), 0.0F, 0.0F, 0.0F, 1058.3F);
      CatalogTexture catalogTexture0 = new CatalogTexture("X_START", "com.eteks.sweethome3d.model.BackgroundImage", (Content) null, (-2399.166F), 2673.0F, "com.eteks.sweethome3d.model.BackgroundImage");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeTexture0.equals("com.eteks.sweethome3d.model.BackgroundImage");
      wall0.setRightSideTexture(homeTexture0);
      Wall wall1 = new Wall((-856.8032F), (-856.8032F), (-856.8032F), 29.269F, 1.0F, 0.0F);
      Float float0 = wall1.getHeight();
      wall1.setHeight(float0);
      wall1.intersectsRectangle((-2000.145F), 41.6036F, 1.0F, 0.0F);
      wall0.isTrapezoidal();
      wall0.getYStart();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Wall wall0 = new Wall((-856.8032F), (-856.8032F), (-856.8032F), 29.269F, 1.0F, 0.0F);
      Wall wall1 = new Wall((-856.8032F), (-856.8032F), (-856.8032F), 0.0F, 1.0F, (-0.6200773F));
      Float float0 = wall1.getHeight();
      wall1.setHeight(float0);
      wall0.setWallAtStart(wall1);
      Wall wall2 = new Wall((-392.53473F), 2098.0F, (-715.643F), (-1331.8821F), 0.0F, (-715.643F));
      wall0.setYStart((-1331.8821F));
      wall0.setRightSideShininess(78.210594F);
      wall0.intersectsRectangle(0.0F, (-1331.8821F), (-337.99112F), 78.210594F);
      Wall wall3 = wall2.clone();
      wall3.getHeight();
      Integer.valueOf(0);
      Integer.valueOf((-2573));
      Integer.valueOf(1665);
      Integer integer0 = Integer.valueOf((-3606));
      wall3.setLeftSideColor(integer0);
      wall1.getThickness();
      wall2.getRightSideColor();
      String string0 = "^F\\u(y@Y\\tjY}/4^#AY";
      Level level0 = new Level(string0, 1611.3942F, (-1.0F), 1611.3942F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("LEFT_SIDE_TEXTURE", propertyChangeListener0);
      level0.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall1.setLevel(level0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Wall wall0 = new Wall(3761.1423F, 3761.1423F, 3761.1423F, 3761.1423F, 40.9468F);
      wall0.move(40.9468F, 567.4022F);
      Level level0 = new Level("1lSV", 40.9468F, 40.9468F, 0.0F);
      wall0.isAtLevel(level0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Wall wall0 = new Wall(0.1F, 0.1F, (-1997.6F), (-1997.6F), 1882.174F, 0.1F);
      Integer integer0 = new Integer(4);
      Object object0 = new Object();
      integer0.equals(object0);
      wall0.setLeftSideColor(integer0);
      wall0.getYArcCircleCenter();
      wall0.getXArcCircleCenter();
      // Undeclared exception!
      try { 
        Wall.Property.valueOf("$M-`zb*cT`");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.$M-`zb*cT`
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Wall wall0 = new Wall((-856.8032F), (-856.8032F), (-856.8032F), 29.269F, 1.0F, 0.0F);
      Float float0 = wall0.getHeight();
      wall0.setHeight(float0);
      wall0.getArcExtent();
      wall0.getXStart();
      wall0.getXEnd();
      wall0.setXStart((-856.8032F));
      wall0.setYStart((-1873.7388F));
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Wall.clone((List<Wall>) linkedList0);
      Wall.clone((List<Wall>) linkedList0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Wall wall0 = new Wall(3761.1423F, 3761.1423F, 3761.1423F, 3761.1423F, (-11.399138F));
      Float float0 = new Float(3761.1423F);
      wall0.setArcExtent(float0);
      Object object0 = new Object();
      wall0.getYArcCircleCenter();
      wall0.setXStart(2887.354F);
      wall0.setWallAtEnd(wall0);
      wall0.containsPoint(203.949F, 0.0F, 3761.1423F);
      Float float1 = new Float(0.0F);
      wall0.getStartPointToEndPointDistance();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Wall wall0 = new Wall((-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F));
      wall0.setXEnd((-1383.49F));
      Wall wall1 = wall0.clone();
      wall0.containsPoint((-970.7F), (-1.0F), (-970.7F));
      wall0.getYEnd();
      wall1.clone();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Wall wall0 = new Wall(3761.1423F, 3761.1423F, 3761.1423F, 3761.1423F, 0.1F);
      Float float0 = new Float(3761.1423F);
      wall0.setArcExtent(float0);
      Object object0 = new Object();
      wall0.getYArcCircleCenter();
      wall0.setLeftSideTexture((HomeTexture) null);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Wall wall0 = new Wall(3761.1423F, 3761.1423F, 3761.1423F, (-495.6304F), 3761.1423F);
      Float float0 = new Float(3761.1423F);
      wall0.setArcExtent(float0);
      wall0.containsPoint(0.0F, 1264.4685F, (-495.6304F));
      wall0.getLength();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Wall wall0 = new Wall((-856.8032F), (-856.8032F), (-856.8032F), 29.269F, 1.0F, 0.0F);
      Wall wall1 = new Wall((-856.8032F), (-856.8032F), (-856.8032F), 29.269F, 1.0F, (-0.6200773F));
      Float float0 = wall1.getHeight();
      wall1.setHeight(float0);
      wall0.setWallAtStart(wall1);
      Wall wall2 = new Wall((-392.53473F), 2098.0F, (-715.643F), (-1331.8821F), 0.0F, (-715.643F));
      wall0.setYStart((-1331.8821F));
      wall0.setRightSideShininess(78.210594F);
      wall0.intersectsRectangle(0.0F, (-1331.8821F), (-337.99112F), 78.210594F);
      Wall wall3 = wall2.clone();
      wall3.getHeight();
      Integer.valueOf(0);
      Integer.valueOf((-2573));
      Integer.valueOf(1665);
      Integer integer0 = Integer.valueOf((-3606));
      wall3.setLeftSideColor(integer0);
      wall0.getXArcCircleCenter();
      wall1.getThickness();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Wall wall0 = new Wall((-2214.0F), (-2214.0F), (-33.56684F), 821.916F, 821.916F);
      wall0.intersectsRectangle((-33.56684F), (-2214.0F), (-33.56684F), 0.0F);
      wall0.getLeftSideShininess();
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Wall.clone((List<Wall>) linkedList0);
      wall0.setWallAtStart((Wall) null);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Wall wall0 = new Wall((-856.8032F), (-856.8032F), (-856.8032F), 29.269F, 1.0F, 0.0F);
      Float float0 = wall0.getHeight();
      wall0.setHeight(float0);
      Wall wall1 = wall0.clone();
      wall1.containsPoint((-856.8032F), 1.0F, 499.68933F);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Wall wall0 = new Wall(247.2F, (-1.0F), (-1.0F), 0.0F, (-115.7409F));
      wall0.getHeightAtEnd();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 1.0F, 0.0F);
      Object object0 = new Object();
      wall0.setLeftSideShininess((-1.0F));
      wall0.getLeftSideColor();
      wall0.setYStart((-1.0F));
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Wall wall0 = new Wall(3761.1423F, 3761.1423F, 3761.1423F, 3761.1423F, 0.1F);
      Float float0 = new Float(3761.1423F);
      wall0.setArcExtent(float0);
      Object object0 = new Object();
      wall0.getXArcCircleCenter();
      wall0.isTrapezoidal();
      FileSystemHandling.shouldAllThrowIOExceptions();
      wall0.clone();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Wall wall0 = new Wall(0.1F, 619.0F, 3647.8372F, 3647.8372F, 0.1F);
      wall0.setArcExtent((Float) null);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Wall wall0 = new Wall((-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F));
      wall0.getRightSideShininess();
      wall0.setRightSideTexture((HomeTexture) null);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      String string0 = "^F\\u(y@Y\\tjY}/4^#AY";
      Level level0 = new Level(string0, 1611.3942F, (-1.0F), 1611.3942F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("LEFT_SIDE_TEXTURE", propertyChangeListener0);
      level0.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall0.containsWallEndAt(0.0F, 1611.3942F, 0.0F);
      Float.floatToIntBits((-522.71F));
      Float.floatToIntBits(1.0F);
      Float float0 = new Float(0.0);
      Object object0 = new Object();
      float0.equals(object0);
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      List<Wall> list0 = Wall.clone((List<Wall>) linkedList0);
      List<Wall> list1 = Wall.clone(list0);
      Wall.clone(list1);
      wall0.setHeight(float0);
      wall0.setThickness(0.01F);
      wall0.setLeftSideTexture((HomeTexture) null);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Wall wall0 = new Wall((-852.31055F), 2.0F, (-2496.11F), (-852.31055F), (-2496.11F));
      Float float0 = new Float(2.0F);
      wall0.setArcExtent(float0);
      wall0.intersectsRectangle((-1.0F), (-1.0F), (-852.31055F), (-852.31055F));
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Wall wall0 = new Wall((-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F));
      wall0.setYEnd(442.0106F);
      wall0.setThickness((-970.7F));
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      wall0.getHeight();
      wall0.getLevel();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Wall wall0 = new Wall((-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F));
      wall0.setXStart((-970.7F));
      wall0.getLeftSideColor();
      wall0.getWallAtStart();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Wall wall0 = new Wall(74.47F, 74.47F, 74.47F, 74.47F, 0.0F);
      Float.valueOf(0.0F);
      wall0.intersectsRectangle(0.0F, 0.0F, 0.0F, 0.0F);
      Float float0 = Float.valueOf(0.0F);
      wall0.setHeight(float0);
      wall0.intersectsRectangle(1979.0984F, 0.0F, 0.0F, (-870.6327F));
      wall0.setLeftSideShininess((-1800.0F));
      Float.min(1590.49F, 1.0F);
      Float.floatToIntBits((-3148.9F));
      Float.floatToIntBits(754.26855F);
      wall0.setHeight(float0);
      wall0.setThickness(1341.987F);
      wall0.clone();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Wall wall0 = new Wall((-807.94183F), (-807.94183F), (-807.94183F), (-807.94183F), (-807.94183F));
      wall0.setXStart(2813.8347F);
      wall0.setWallAtStart(wall0);
      wall0.containsPoint((-807.94183F), (-807.94183F), (-807.94183F));
      wall0.clone();
      wall0.getStartPointToEndPointDistance();
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Wall wall0 = new Wall((-856.8032F), (-856.8032F), (-856.8032F), 29.269F, 1.0F, 0.0F);
      Wall wall1 = new Wall((-392.53473F), 2098.0F, (-715.643F), (-1331.8821F), 0.0F, (-715.643F));
      wall0.setYStart((-1331.8821F));
      wall0.setRightSideShininess(78.210594F);
      wall0.intersectsRectangle(0.0F, (-1331.8821F), (-337.99112F), 78.210594F);
      Wall wall2 = wall1.clone();
      wall2.getHeight();
      wall1.setXStart(0.0F);
      Integer.valueOf(0);
      Integer.valueOf((-2573));
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("v;|u$GHK%Ph", propertyChangeListener0);
      wall2.removePropertyChangeListener(propertyChangeListenerProxy0);
      Integer.valueOf(1665);
      Integer integer0 = Integer.valueOf((-3606));
      Integer.compare((-2573), 1665);
      wall2.setLeftSideColor(integer0);
      wall0.getRightSideColor();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Wall wall0 = new Wall((-2130.582F), (-3327.0703F), (-2130.582F), (-1562.4912F), (-3327.0703F), (-1562.4912F));
      wall0.containsWallEndAt((-2130.582F), (-2130.582F), (-3327.0703F));
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Wall wall0 = new Wall((-403.74942F), (-403.74942F), (-403.74942F), (-403.74942F), (-403.74942F));
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      linkedList0.add(wall0);
      Wall.clone((List<Wall>) linkedList0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      wall0.containsWallEndAt((-403.74942F), 584, 584);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Wall wall0 = new Wall((-853.2F), (-853.2F), (-853.2F), (-853.2F), (-853.2F), (-853.2F));
      Float float0 = new Float(2789.758695);
      wall0.setWallAtEnd((Wall) null);
      float0.floatValue();
      wall0.setHeightAtEnd((Float) 2789.7588F);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Wall wall0 = new Wall((-856.8032F), (-856.8032F), (-856.8032F), 29.269F, 1.0F, 0.0F);
      Float float0 = wall0.getHeight();
      Float.max(1.0F, 766.32F);
      Float.sum(1.0F, 523.5077F);
      Float.isFinite(1.0F);
      Float.sum(0.0F, 4427.898F);
      wall0.setHeight(float0);
      Wall wall1 = wall0.clone();
      wall1.getArcExtent();
      wall1.move(0.0F, 0.0F);
      Float.isFinite(4427.898F);
      Float.sum(1914.176F, 29.269F);
      Float.min(0.0F, 4427.898F);
      wall1.setArcExtent((Float) null);
      wall1.getLeftSideTexture();
      wall1.getWallAtEnd();
      wall1.intersectsRectangle(4427.898F, (-5052.41F), 1787.4F, 29.269F);
      wall0.getPoints();
      wall0.setYEnd(4427.898F);
      wall1.containsPoint(0.0F, 1.0F, (-1406.6055F));
      wall0.getHeightAtEnd();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Wall wall0 = new Wall((-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F));
      wall0.clone();
      wall0.intersectsRectangle(4614.0F, (-970.7F), (-970.7F), (-970.7F));
      wall0.containsPoint(953.1585F, 1979.0F, (-1351.3452F));
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Wall wall0 = new Wall((-853.24286F), (-853.24286F), (-853.24286F), (-853.24286F), (-853.24286F), (-853.24286F));
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      Object object0 = new Object();
      Integer integer0 = new Integer(1217);
      Object object1 = new Object();
      integer0.equals(object1);
      integer0.equals(object0);
      wall0.setLeftSideColor(integer0);
      wall0.getYArcCircleCenter();
      wall0.getXArcCircleCenter();
      wall0.isTrapezoidal();
      Float float0 = new Float(1.0001);
      float0.floatValue();
      float0.floatValue();
      wall0.setHeight((Float) 1.0001F);
      Wall wall1 = new Wall((-856.8032F), (-856.8032F), (-856.8032F), 29.269F, 1.0F, 0.0F);
      Float float1 = wall1.getHeight();
      wall1.setHeight(float1);
      wall1.setThickness((-967.26F));
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Wall wall0 = new Wall(3761.1423F, 3761.1423F, 3761.1423F, 3761.1423F, (-11.4F));
      Float float0 = new Float(3761.1423F);
      wall0.setArcExtent(float0);
      Object object0 = new Object();
      wall0.getYArcCircleCenter();
      wall0.setXStart(2887.354F);
      wall0.setWallAtEnd(wall0);
      wall0.setWallAtEnd((Wall) null);
      wall0.getPoints();
      wall0.clone();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 1.0F, 0.0F);
      Integer integer0 = new Integer(8192);
      Object object0 = new Object();
      integer0.equals(object0);
      wall0.setYStart(0.0F);
      wall0.setLeftSideShininess(1.4548774F);
      wall0.setRightSideColor(integer0);
      Integer integer1 = new Integer(8192);
      wall0.setYStart(1.4548774F);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Wall wall0 = new Wall((-852.31055F), (-852.31055F), (-852.31055F), (-852.31055F), (-852.31055F), (-852.31055F));
      wall0.getLeftSideTexture();
      Wall.Property.valueOf("Y_END");
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Wall wall0 = new Wall((-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F));
      Level level0 = new Level("1lSV", (-970.7F), (-970.7F), (-970.7F));
      wall0.getThickness();
      wall0.isTrapezoidal();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Wall wall0 = new Wall(3759.8367F, 3759.8367F, 3759.8367F, 3759.8367F, 0.1F);
      Float float0 = new Float(3759.8367F);
      wall0.setArcExtent(float0);
      Object object0 = new Object();
      Float float1 = new Float(3759.8367F);
      wall0.setXStart(2887.354F);
      wall0.setWallAtEnd(wall0);
      wall0.containsPoint(3759.8367F, 2887.354F, 2887.354F);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Wall wall0 = new Wall(74.47F, 74.47F, 74.47F, 74.47F, 0.0F);
      Float.valueOf(0.0F);
      wall0.intersectsRectangle(0.0F, 0.0F, 0.0F, 0.0F);
      Float float0 = Float.valueOf(0.0F);
      wall0.setHeight(float0);
      Wall wall1 = new Wall(1979.0984F, 0.0F, 0.0F, 0.0F, (-147.23782F), 74.47F);
      wall1.getHeight();
      Float.max(0.0F, 0.0F);
      Float float1 = Float.valueOf((-1.0F));
      wall0.setHeight(float1);
      wall0.setWallAtEnd(wall1);
      wall0.setYEnd(0.0F);
      wall1.isTrapezoidal();
      Float float2 = new Float(2789.758695);
      float2.floatValue();
      wall1.setHeight((Float) 2789.7588F);
      wall0.setThickness(0.0F);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Wall wall0 = new Wall((-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F));
      Integer integer0 = Integer.valueOf(3290);
      wall0.setLeftSideColor(integer0);
      wall0.setLeftSideColor(integer0);
      wall0.isTrapezoidal();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      LinkedList<Wall> linkedList0 = new LinkedList<Wall>();
      Wall.clone((List<Wall>) linkedList0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Wall wall0 = new Wall(0.1F, 0.1F, (-1997.6F), (-1997.6F), 1882.174F, 0.1F);
      Integer integer0 = new Integer(4);
      Float float0 = Float.valueOf((-912.9F));
      wall0.setArcExtent(float0);
      Object object0 = new Object();
      wall0.getXArcCircleCenter();
      wall0.isTrapezoidal();
      Float float1 = new Float((-2.1747537F));
      float1.floatValue();
      wall0.isTrapezoidal();
      wall0.setLevel((Level) null);
      wall0.getLength();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      Integer integer0 = new Integer(8192);
      wall0.setLeftSideShininess((-1.0F));
      wall0.setRightSideColor(integer0);
      wall0.getLeftSideColor();
      wall0.getThickness();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Float float0 = new Float((-2496.11F));
      // Undeclared exception!
      try { 
        Wall.clone((List<Wall>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.Wall", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Wall wall0 = new Wall((-967.26F), 1630.368F, (-967.26F), (-967.26F), (-967.26F), 1630.368F);
      wall0.getRightSideTexture();
      Integer.valueOf(3);
      Integer.valueOf(3);
      wall0.setLeftSideColor((Integer) null);
      Integer.valueOf(3);
      Integer integer0 = new Integer(3);
      Integer.compare(2146, 5);
      wall0.setLeftSideColor(integer0);
      wall0.getRightSideColor();
      wall0.setLeftSideTexture((HomeTexture) null);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Wall wall0 = new Wall((-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F));
      String string0 = "^F\\u(y@Y\\tjY}/4^#AY";
      Level level0 = new Level(string0, 1600.6892F, (-970.7F), 1600.6892F);
      wall0.isAtLevel(level0);
      wall0.setThickness((-970.7F));
      Integer.valueOf(17);
      wall0.setLevel(level0);
      wall0.setThickness(2415.093F);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Wall wall0 = new Wall((-852.31055F), (-852.31055F), (-852.31055F), (-852.31055F), (-852.31055F), (-852.31055F));
      Integer integer0 = new Integer(840);
      integer0.equals((Object) null);
      wall0.setRightSideColor(integer0);
      wall0.setRightSideColor(integer0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Wall wall0 = new Wall(3761.1423F, 3761.1423F, 3761.1423F, 3761.1423F, 0.1F);
      Integer integer0 = new Integer(0);
      Object object0 = new Object();
      wall0.getYArcCircleCenter();
      wall0.getXArcCircleCenter();
      wall0.isTrapezoidal();
      wall0.setHeight((Float) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      wall0.setLevel((Level) null);
      wall0.setThickness(3761.1423F);
      wall0.getStartPointToEndPointDistance();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Wall wall0 = new Wall((-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F));
      Integer integer0 = Integer.valueOf(783);
      wall0.setLeftSideColor(integer0);
      wall0.containsPoint(783, (-970.7F), (-970.7F));
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Wall wall0 = new Wall((-1331.8821F), (-1331.8821F), (-1331.8821F), (-1331.8821F), (-1331.8821F));
      wall0.setRightSideShininess((-702.717F));
      wall0.setLeftSideTexture((HomeTexture) null);
      // Undeclared exception!
      try { 
        Wall.Property.valueOf("com.eteks.sweethome3d.tools.OperatingSystem$3");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.com.eteks.sweethome3d.tools.OperatingSystem$3
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Wall wall0 = new Wall((-1997.6F), (-1997.6F), (-1997.6F), (-1997.6F), 0.1F);
      Float float0 = new Float(0.0F);
      Integer integer0 = new Integer(0);
      float0.equals(integer0);
      wall0.setArcExtent(float0);
      Object object0 = new Object();
      wall0.getYArcCircleCenter();
      wall0.getXArcCircleCenter();
      wall0.isTrapezoidal();
      wall0.setHeight((Float) null);
      wall0.isTrapezoidal();
      wall0.setLevel((Level) null);
      wall0.getLength();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Wall wall0 = new Wall((-856.8032F), (-856.8032F), (-856.8032F), 29.269F, 29.269F, 29.269F);
      Float float0 = new Float((-856.8032F));
      Float.min(0.01F, 967.55585F);
      wall0.setHeight(float0);
      Float.floatToIntBits(0.01F);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      wall0.setArcExtent(float0);
      wall0.setXStart(0.1F);
      wall0.setXStart((-794.77F));
      wall0.setRightSideShininess(0.0F);
      Float float1 = new Float((-1.0F));
      float1.floatValue();
      ((Float)(-1.0F)).floatValue();
      wall0.setHeightAtEnd(float0);
      wall0.containsWallEndAt(29.269F, (-3428.5F), 0.01F);
      wall0.getArcExtent();
      wall0.getXEnd();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Wall wall0 = new Wall((-1.0F), (-1.0F), 0.0F, 0.0F, (-1.0F), 0.0F);
      wall0.getRightSideTexture();
      Integer integer0 = Integer.valueOf((-1782));
      Integer.valueOf(2435);
      wall0.setPattern((TextureImage) null);
      Integer integer1 = Integer.valueOf(12);
      Integer.sum((-1782), 12);
      wall0.setLeftSideColor(integer1);
      wall0.setLeftSideColor(integer0);
      wall0.getXEnd();
      Float.valueOf(1828.0F);
      Float.valueOf(1828.0F);
      Float.valueOf(1828.0F);
      Float.valueOf(1828.0F);
      Float.valueOf((-1553.9486F));
      Float float0 = Float.valueOf(1828.0F);
      wall0.setArcExtent(float0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 1.0F, 0.0F, 1.0F, 1.0F);
      Wall wall1 = new Wall((-857.07513F), (-857.07513F), (-857.07513F), 0.0F, 1.0F, (-0.6F));
      Float float0 = wall1.getHeight();
      wall1.setHeight(float0);
      wall0.setWallAtStart(wall1);
      Wall wall2 = new Wall((-392.53473F), 2098.0F, (-715.643F), (-1331.8821F), 0.0F, (-715.643F));
      wall0.setYStart((-1331.8821F));
      wall0.setRightSideShininess(78.210594F);
      wall2.setThickness(78.210594F);
      wall0.intersectsRectangle(0.0F, (-1331.8821F), (-337.99112F), 78.210594F);
      Wall wall3 = wall2.clone();
      wall3.getPoints();
      wall3.getHeight();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      wall2.setArcExtent(float0);
      wall0.setXEnd(0.0F);
      Wall wall4 = wall1.clone();
      wall4.containsPoint(0.0F, 2.0F, (-857.07513F));
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      Float.isFinite(0.0F);
      Float.sum((-1561.3442F), 1.0F);
      Float.compare(2687.7F, 2687.7F);
      wall0.setHeight((Float) 2687.7F);
      Wall wall1 = wall0.clone();
      wall1.getArcExtent();
      wall1.move((-759.3817F), (-676.8678F));
      wall1.setHeight((Float) null);
      Float.isFinite((-676.8678F));
      Float.sum(573.7417F, 0);
      Float.min((-153.9965F), (-1560.3442F));
      wall0.setArcExtent((Float) null);
      wall1.getLeftSideTexture();
      wall0.getWallAtEnd();
      wall1.intersectsRectangle(0.0F, 1914.176F, (-197.0222F), (-1202.8F));
      wall1.getPoints();
      wall0.setYEnd((-870.6327F));
      wall0.containsPoint((-870.6327F), 0.0F, 573.7417F);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Wall wall0 = new Wall((-852.31055F), (-852.31055F), (-852.31055F), (-852.31055F), (-852.31055F), (-852.31055F));
      wall0.setRightSideColor((Integer) null);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Wall wall0 = new Wall(2235.3F, 2235.3F, 0.0F, 3604.8655F, 0.0F, 0.0F);
      CatalogTexture catalogTexture0 = new CatalogTexture("com.eteks.sweethome3d.model.BackgroundImage", "", (Content) null, (-2399.166F), 3604.8655F, "com.eteks.sweethome3d.model.BackgroundImage");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeTexture0.equals(catalogTexture0);
      wall0.setLeftSideTexture(homeTexture0);
      wall0.move(5.3341F, 5.3341F);
      Float.floatToIntBits(2.0F);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Float float0 = new Float(0.0F);
      float0.floatValue();
      wall0.setArcExtent((Float) 0.0F);
      wall0.setXEnd((-644.81F));
      wall0.clone();
      wall0.setXStart((-1272.0093F));
      wall0.containsPoint((-1105.3563F), (-714.5F), (-1939.5402F));
      wall0.setRightSideTexture(homeTexture0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Wall wall0 = new Wall(74.47F, 74.47F, 74.47F, 74.47F, 0.0F);
      Float.valueOf(0.0F);
      wall0.intersectsRectangle(0.0F, 0.0F, 0.0F, 0.0F);
      Float float0 = Float.valueOf(0.0F);
      wall0.setHeight(float0);
      Float float1 = new Float(0.0F);
      Float.max(1058.3F, 0.0F);
      Float.isFinite(0.0F);
      wall0.setHeight(float1);
      wall0.setHeight((Float) null);
      wall0.setXStart(0.0F);
      wall0.setRightSideShininess((-2466.4404F));
      wall0.setThickness(0.0F);
      wall0.getYEnd();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 536.6196F, (-330.484F), 0.0F, 2924.588F, 536.6196F);
      wall0.containsWallStartAt((-592.45703F), (-592.45703F), 0.0F);
      wall0.setXStart(536.6196F);
      Float.valueOf((-104.9912F));
      Float.valueOf(1424.048F);
      Float.valueOf((-104.9912F));
      wall0.intersectsRectangle((-104.9912F), 886.4F, 2.0F, 3184.593F);
      wall0.setLeftSideShininess(0.0F);
      Integer.valueOf((-1093));
      Integer.valueOf(5140);
      Integer.valueOf(1309);
      Integer integer0 = Integer.valueOf(5140);
      wall0.setRightSideColor(integer0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      wall0.setYEnd(0.0F);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("d'C3", "d'C3", resourceURLContent0, (-1.0F), (-1.0F), "li%XII", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeTexture0.getName();
      wall0.setPattern(homeTexture0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall0.getWallAtStart();
      wall0.setThickness((-2800.069F));
      Wall.Property.values();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "N,\"4");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Wall wall0 = new Wall(1465.25F, 1465.25F, 1465.25F, 1465.25F, 1465.25F);
      Integer integer0 = new Integer(0);
      Object object0 = new Object();
      Integer.remainderUnsigned(0, 2622);
      integer0.equals(object0);
      wall0.setRightSideColor(integer0);
      wall0.setRightSideShininess(793.5382F);
      wall0.getPoints();
      Float.compare(0.1F, 0.0F);
      wall0.setHeightAtEnd((Float) 0.0F);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Integer integer1 = new Integer(2);
      Integer.sum(282, 0);
      Object object1 = new Object();
      integer1.equals(object1);
      wall0.setLeftSideColor(integer1);
      wall0.getRightSideColor();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Wall wall0 = new Wall((-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F));
      wall0.getLevel();
      wall0.isAtLevel((Level) null);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Wall wall0 = new Wall(38.13671F, 38.13671F, 38.13671F, 38.13671F, (-50.657F));
      wall0.setThickness((-3651.3713F));
      Float float0 = new Float(0.01F);
      wall0.setArcExtent(float0);
      Object object0 = new Object();
      float float1 = new Float(0.01F);
      wall0.getXArcCircleCenter();
      wall0.isTrapezoidal();
      wall0.setHeight(float0);
      wall0.containsWallStartAt((-50.657F), (-50.657F), 38.13671F);
      wall0.setLevel((Level) null);
      wall0.getLength();
      wall0.setThickness(38.13671F);
      wall0.clone();
      wall0.getWallAtStart();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Wall wall0 = new Wall((-1331.8821F), (-1331.8821F), (-1331.8821F), (-1331.8821F), (-1331.8821F));
      Object object0 = new Object();
      float float0 = new Float((-1331.8821F));
      wall0.getXArcCircleCenter();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Wall wall0 = new Wall(74.47F, 74.47F, 74.47F, 74.47F, 0.0F);
      Float.valueOf(0.0F);
      wall0.intersectsRectangle((-7.6542673F), 0.0F, 0.0F, 0.0F);
      Float float0 = Float.valueOf(0.0F);
      wall0.setHeight(float0);
      Float float1 = new Float((-7.6542673F));
      wall0.setHeight(float1);
      wall0.setHeight((Float) null);
      wall0.setXStart(0.0F);
      wall0.setRightSideShininess((-2466.44F));
      wall0.clone();
      wall0.containsPoint(74.47F, (-2466.44F), (-176.85F));
      wall0.getXArcCircleCenter();
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Wall wall0 = new Wall(2235.3F, 2235.3F, 2235.3F, 3604.8655F, 2235.3F, 2235.3F);
      CatalogTexture catalogTexture0 = new CatalogTexture("X_START", "com.eteks.sweethome3d.model.BackgroundImage", (Content) null, (-2399.166F), 2673.0F, "com.eteks.sweethome3d.model.BackgroundImage");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeTexture0.equals("com.eteks.sweethome3d.model.BackgroundImage");
      wall0.setLeftSideTexture(homeTexture0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)70;
      byteArray0[2] = (byte) (-45);
      byteArray0[3] = (byte) (-127);
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)107;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      wall0.move((-644.81F), 2235.3F);
      Float.floatToIntBits(1042.511F);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      wall0.setArcExtent((Float) 1042.511F);
      wall0.setXEnd((-1272.0093F));
      Wall wall1 = wall0.clone();
      wall1.setXStart((-1876.881F));
      wall1.containsPoint((-2058.669F), 3604.8655F, (-2399.166F));
      wall0.setRightSideTexture(homeTexture0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Wall wall0 = new Wall(74.47F, 74.47F, 74.47F, 74.47F, 0.0F);
      Float.valueOf(0.0F);
      wall0.intersectsRectangle(0.0F, 0.0F, 0.0F, 0.0F);
      Float float0 = Float.valueOf(0.0F);
      wall0.setHeight(float0);
      wall0.intersectsRectangle(1979.0984F, 0.0F, 0.0F, (-870.6327F));
      wall0.setLeftSideShininess(5.3341F);
      Integer integer0 = Integer.valueOf((-1093));
      wall0.setRightSideColor(integer0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Wall wall0 = new Wall(3761.1423F, 3761.1423F, 3761.1423F, 3761.1423F, 0.1F);
      Float float0 = new Float((-1.7353541F));
      wall0.setArcExtent(float0);
      wall0.getYArcCircleCenter();
      wall0.getXArcCircleCenter();
      wall0.setHeight((Float) null);
      Integer integer0 = Integer.valueOf((-1093));
      Integer.getInteger("Q5\".P3o:");
      wall0.setLeftSideColor(integer0);
      wall0.getRightSideColor();
      wall0.getLeftSideColor();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Wall wall0 = new Wall((-856.8032F), (-856.8032F), (-856.8032F), 29.269F, 1.0F, 0.0F);
      Float float0 = wall0.getHeight();
      Float.max(1.0F, 766.32F);
      Float.sum(1.0F, 523.5077F);
      Float.isFinite(1.0F);
      Float.sum(0.0F, 4427.898F);
      wall0.setHeight(float0);
      Wall wall1 = wall0.clone();
      wall1.getArcExtent();
      wall1.move(0.0F, 0.0F);
      Float.isFinite(4427.898F);
      Float.sum(1914.176F, 29.269F);
      Float.min(0.0F, 4427.898F);
      wall1.setArcExtent((Float) null);
      wall1.getLeftSideTexture();
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(float0, (String) null, (Object) null, (Object) null);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeEvent0.getPropertyName();
      propertyChangeEvent0.toString();
      propertyChangeEvent0.getPropertyName();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      wall0.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall1.getStartPointToEndPointDistance();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Wall wall0 = new Wall((-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F));
      wall0.setXStart((-970.7F));
      Wall wall1 = new Wall((-856.8032F), (-856.8032F), (-856.8032F), 29.269F, 1.0F, 0.0F);
      Float float0 = wall1.getHeight();
      wall1.setHeight(float0);
      wall0.setWallAtEnd(wall1);
      wall0.getPoints();
      wall0.getThickness();
      Wall wall2 = new Wall((-856.8032F), (-856.8032F), (-856.8032F), 29.269F, 1.0F, 0.0F);
      Float float1 = wall2.getHeight();
      wall2.setHeight(float1);
      wall2.intersectsRectangle(1304.4F, 29.269F, 3682.5F, 1.0F);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Wall wall0 = new Wall((-1267.615F), (-1267.615F), (-1267.615F), (-1267.615F), (-1267.615F));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Integer integer0 = Integer.valueOf(795);
      Integer.remainderUnsigned(1, 795);
      wall0.setLeftSideColor(integer0);
      Integer.toUnsignedString((-1));
      wall0.getStartPointToEndPointDistance();
      wall0.containsWallEndAt(2.0F, (-50.657F), (-1267.615F));
      wall0.setLeftSideColor(integer0);
      wall0.getRightSideColor();
      wall0.getLeftSideColor();
      Float float0 = Float.valueOf((-406.8958F));
      wall0.setHeight(float0);
      // Undeclared exception!
      try { 
        Wall.Property.valueOf("4294967295");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.4294967295
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Wall wall0 = new Wall((-851.8099F), (-851.8099F), (-851.8099F), (-851.8099F), (-851.8099F));
      wall0.setWallAtStart(wall0);
      wall0.setLeftSideShininess((-851.8099F));
      wall0.containsPoint((-851.8099F), (-851.8099F), (-851.8099F));
      wall0.clone();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Wall wall0 = new Wall((-330.484F), 536.6196F, 536.6196F, 2924.588F, (-2467.7927F), 2924.588F);
      Integer integer0 = new Integer(4);
      Object object0 = new Object();
      Integer integer1 = Integer.valueOf((-2098));
      Object object1 = new Object();
      integer1.equals(object1);
      Integer integer2 = Integer.valueOf((-385));
      wall0.setLeftSideColor(integer2);
      wall0.getYArcCircleCenter();
      wall0.getXArcCircleCenter();
      // Undeclared exception!
      try { 
        Wall.Property.valueOf("$M-`zb*cT`");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.$M-`zb*cT`
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, (-68.17557F), (-68.17557F));
      wall0.setYEnd(0.0F);
      wall0.setHeightAtEnd((Float) null);
      wall0.getLevel();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 0.0F);
      String string0 = "^F\\u(y@Y\\tjY}/4^#AY";
      Level level0 = new Level(string0, 1611.3942F, (-1.0F), 1611.3942F);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("LEFT_SIDE_TEXTURE", propertyChangeListener0);
      level0.addPropertyChangeListener(propertyChangeListenerProxy0);
      wall0.isAtLevel(level0);
      wall0.containsPoint(0.0F, 1873.815F, (-1105.3563F));
      wall0.setLeftSideShininess((-1.0F));
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Wall wall0 = new Wall((-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F));
      CatalogTexture catalogTexture0 = new CatalogTexture("com.eteks.sweethome3d.model.BackgroundImage", "com.eteks.sweethome3d.model.BackgroundImage", (Content) null, (-970.7F), (-2399.166F), "com.eteks.sweethome3d.model.BackgroundImage");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      wall0.setRightSideTexture(homeTexture0);
      wall0.getPoints();
      Float float0 = new Float((-970.7F));
      wall0.setRightSideTexture(homeTexture0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Wall wall0 = new Wall(3761.1423F, 3761.1423F, 3761.1423F, 3761.1423F, 0.1F);
      Float float0 = new Float(0.0F);
      Integer integer0 = new Integer(0);
      float0.equals(integer0);
      wall0.setArcExtent(float0);
      Object object0 = new Object();
      wall0.getYArcCircleCenter();
      wall0.getXArcCircleCenter();
      wall0.isTrapezoidal();
      wall0.setHeight((Float) null);
      wall0.isTrapezoidal();
      wall0.setLevel((Level) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("X_START", "com.eteks.sweethome3d.model.BackgroundImage", (Content) null, (-2399.166F), 2673.0F, "com.eteks.sweethome3d.model.BackgroundImage");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeTexture0.equals("com.eteks.sweethome3d.model.BackgroundImage");
      wall0.setLeftSideTexture(homeTexture0);
      wall0.getLeftSideTexture();
      wall0.getPattern();
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Wall wall0 = new Wall((-856.8032F), (-856.8032F), (-856.8032F), (-856.8032F), (-856.8032F));
      wall0.getLength();
      wall0.setWallAtStart(wall0);
      wall0.setLeftSideShininess(0.01F);
      wall0.containsPoint((-875.0F), 0.01F, (-875.0F));
      wall0.getStartPointToEndPointDistance();
      CatalogTexture catalogTexture0 = new CatalogTexture("X_START", "com.eteks.sweethome3d.model.BackgroundImage", (Content) null, (-2399.166F), 2673.0F, "com.eteks.sweethome3d.model.BackgroundImage");
      TexturesCategory texturesCategory0 = new TexturesCategory("g30qTIPY5%pI[hA]9V");
      CatalogTexture catalogTexture1 = mock(CatalogTexture.class, new ViolatedAssumptionAnswer());
      texturesCategory0.add(catalogTexture1);
      CatalogTexture catalogTexture2 = mock(CatalogTexture.class, new ViolatedAssumptionAnswer());
      texturesCategory0.getIndexOfTexture(catalogTexture2);
      catalogTexture0.setCategory(texturesCategory0);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeTexture0.equals("com.eteks.sweethome3d.model.BackgroundImage");
      wall0.setRightSideTexture(homeTexture0);
      wall0.setArcExtent((Float) null);
      wall0.getRightSideTexture();
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Wall wall0 = new Wall(3761.1423F, 3761.1423F, 3761.1423F, 3761.1423F, 0.1F);
      Float float0 = new Float((-1.7353541F));
      Integer integer0 = new Integer(0);
      float0.equals(integer0);
      wall0.setArcExtent(float0);
      Object object0 = new Object();
      wall0.getYArcCircleCenter();
      wall0.getXArcCircleCenter();
      wall0.isTrapezoidal();
      wall0.setHeight((Float) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      wall0.setLevel((Level) null);
      Float float1 = new Float(1857.0F);
      float1.floatValue();
      wall0.containsWallEndAt((-1323.6858F), 1956.0F, 3761.1423F);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Wall wall0 = new Wall((-856.8032F), 0.0F, 0.0F, 0.0F, 29.269F);
      wall0.getHeight();
      Float.max(1.0F, 766.32F);
      Float.sum(1.0F, 523.5077F);
      Float.isFinite(1.0F);
      Float.sum(0.0F, 4427.898F);
      wall0.setHeight((Float) null);
      Wall wall1 = wall0.clone();
      wall1.getArcExtent();
      wall1.move(0.0F, 0.0F);
      Float.isFinite(4427.898F);
      Float.sum(1914.176F, 29.269F);
      Float.min(0.0F, 4427.898F);
      wall1.setArcExtent((Float) null);
      wall1.getLeftSideTexture();
      wall1.intersectsRectangle(4427.898F, (-5052.41F), 1787.4F, 29.269F);
      wall0.getPoints();
      wall0.setYEnd(4427.898F);
      wall1.containsPoint(0.0F, 1.0F, 1787.4F);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Wall wall0 = new Wall((-852.31055F), (-852.31055F), (-852.31055F), (-852.31055F), (-852.31055F), (-852.31055F));
      Integer integer0 = Integer.valueOf(1976);
      wall0.setRightSideColor(integer0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Wall wall0 = new Wall((-2616.3655F), (-2616.3655F), (-2616.3655F), (-2616.3655F), (-2616.3655F));
      Float float0 = new Float((-2616.3655F));
      Integer integer0 = new Integer(8192);
      Object object0 = new Object();
      integer0.equals(object0);
      wall0.setRightSideColor(integer0);
      wall0.getLevel();
      Integer.valueOf(3);
      Integer.valueOf(3);
      Integer.valueOf(3);
      int int0 = Float.floatToIntBits(531.42F);
      Float.floatToIntBits(531.42F);
      wall0.setArcExtent((Float) 531.42F);
      wall0.setXEnd(1141168865);
      wall0.clone();
      float float1 = 1780.6289F;
      float float2 = (-2399.166F);
      // Undeclared exception!
      wall0.containsPoint(int0, float1, float2);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Wall wall0 = new Wall(2235.3F, 2235.3F, 0.0F, 3604.8655F, 0.0F, 0.0F);
      CatalogTexture catalogTexture0 = new CatalogTexture("X_START", "com.eteks.sweethome3d.model.BackgroundImage", (Content) null, (-2399.166F), 2673.0F, "com.eteks.sweethome3d.model.BackgroundImage");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeTexture0.equals("com.eteks.sweethome3d.model.BackgroundImage");
      wall0.setLeftSideTexture(homeTexture0);
      wall0.move((-644.81F), 2235.3F);
      Float.floatToIntBits(1042.511F);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      wall0.setArcExtent((Float) 1042.511F);
      wall0.setXEnd((-1272.0093F));
      Wall wall1 = wall0.clone();
      wall1.containsPoint((-2058.669F), 3604.8655F, (-2399.166F));
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Wall wall0 = new Wall((-759.3817F), 2347.5593F, (-2664.784F), (-1267.615F), 2347.5593F);
      wall0.containsPoint((-1.0F), (-2664.784F), 3850.0F);
      wall0.setRightSideTexture((HomeTexture) null);
      Wall wall1 = new Wall((-856.8032F), (-856.8032F), (-856.8032F), 29.269F, 1.0F, 0.0F);
      Float float0 = wall1.getHeight();
      Float.max((-2664.784F), (-2664.784F));
      wall1.setHeight(float0);
      wall0.setWallAtEnd(wall1);
      wall0.setYEnd((-759.3817F));
      wall0.isTrapezoidal();
      Integer integer0 = Integer.valueOf((-1093));
      wall0.setRightSideColor(integer0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Wall wall0 = new Wall((-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F));
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("d'C3", "d'C3", resourceURLContent0, (-1.0F), (-1.0F), "li%XII", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeTexture0.getName();
      wall0.setPattern(homeTexture0);
      Level level0 = new Level("1lSV", (-970.7F), (-970.7F), (-970.7F));
      wall0.isAtLevel(level0);
      wall0.getLength();
      wall0.setRightSideTexture(homeTexture0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Wall wall0 = new Wall(3761.1423F, 3761.1423F, 3761.1423F, 3761.1423F, (-11.399138F));
      Float float0 = new Float(3761.1423F);
      wall0.setArcExtent(float0);
      Object object0 = new Object();
      wall0.getYArcCircleCenter();
      wall0.setXStart(2887.354F);
      wall0.setWallAtEnd(wall0);
      wall0.getPoints();
      wall0.getThickness();
      wall0.intersectsRectangle((-11.399138F), (-2271.401F), 0.0F, (-1894.0942F));
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Wall wall0 = new Wall(3761.1423F, 3761.1423F, 3761.1423F, 3761.1423F, (-11.399138F));
      Float float0 = new Float(3761.1423F);
      Object object0 = new Object();
      wall0.getYArcCircleCenter();
      wall0.setXStart(2887.354F);
      wall0.setWallAtEnd(wall0);
      wall0.getPoints();
      wall0.getThickness();
      wall0.setWallAtEnd((Wall) null);
      wall0.setWallAtStart((Wall) null);
      Integer integer0 = Integer.valueOf(795);
      wall0.setRightSideColor(integer0);
      wall0.getWallAtEnd();
      Random.setNextRandom(795);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Wall wall0 = new Wall((-1331.8821F), (-1331.8821F), (-1331.8821F), (-1331.8821F), (-1331.8821F));
      wall0.setLeftSideTexture((HomeTexture) null);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Wall wall0 = new Wall((-807.94183F), (-807.94183F), (-807.94183F), (-807.94183F), (-807.94183F));
      wall0.setWallAtStart(wall0);
      wall0.containsPoint((-807.94183F), (-807.94183F), (-807.94183F));
      wall0.getWallAtStart();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Wall wall0 = new Wall(0.1F, 0.1F, (-1997.6F), (-1997.6F), 1882.174F, 0.1F);
      Integer integer0 = new Integer(4);
      Object object0 = new Object();
      integer0.equals(object0);
      wall0.setLeftSideColor(integer0);
      wall0.getYArcCircleCenter();
      Integer.valueOf(8192);
      Integer integer1 = Integer.valueOf(8192);
      Integer.max(4, 1440);
      wall0.setRightSideColor(integer1);
      wall0.getLeftSideColor();
      Random.setNextRandom(1440);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 1.0F, 0.0F);
      Integer integer0 = new Integer(8192);
      Integer.divideUnsigned(8192, 1);
      Object object0 = new Object();
      integer0.equals(object0);
      Float.compare(29.73F, 1.0F);
      wall0.setHeight((Float) 1.0F);
      wall0.setHeight((Float) (-437.0F));
      wall0.setXStart(29.73F);
      wall0.setRightSideShininess(8192);
      Float float0 = Float.valueOf((-1.0F));
      wall0.setHeightAtEnd(float0);
      wall0.containsWallEndAt((-306.43F), 1.0F, 8192);
      wall0.clone();
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Wall wall0 = new Wall((-1.0F), (-1.0F), (-3606.2495F), (-3606.2495F), (-3606.2495F), 1058.3F);
      CatalogTexture catalogTexture0 = new CatalogTexture("X_START", "com.eteks.sweethome3d.model.BackgroundImage", (Content) null, (-2399.166F), 2673.0F, "com.eteks.sweethome3d.model.BackgroundImage");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeTexture0.equals("com.eteks.sweethome3d.model.BackgroundImage");
      wall0.setRightSideTexture(homeTexture0);
      Wall wall1 = wall0.clone();
      wall1.getPoints();
      wall0.getThickness();
      wall1.getRightSideShininess();
      // Undeclared exception!
      try { 
        Wall.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.Wall.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Wall wall0 = new Wall((-856.8032F), (-856.8032F), (-856.8032F), 29.269F, 1.0F, 0.0F);
      wall0.getHeight();
      wall0.setArcExtent((Float) null);
      wall0.setXStart(0.0F);
      Wall wall1 = new Wall(0.0F, 1.0F, 1.0F, 0.0F, 0.0F, 5201.5796F);
      wall0.getHeight();
      wall1.setWallAtEnd(wall0);
      wall1.clone();
      wall1.containsPoint((-856.8032F), 0.0F, 29.269F);
      Wall wall2 = wall1.getWallAtEnd();
      wall2.getLevel();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, (-68.17557F), (-68.17557F), (-68.17557F), 0.0F);
      wall0.getHeight();
      wall0.setHeight((Float) null);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.1F, 3802.7F, 3802.7F);
      wall0.getPattern();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Wall wall0 = new Wall((-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F));
      Level level0 = new Level("1lSV", (-970.7F), (-970.7F), (-970.7F));
      wall0.isAtLevel(level0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Wall wall0 = new Wall(38.13671F, 38.13671F, 38.13671F, 38.13671F, 38.13671F);
      wall0.isTrapezoidal();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Wall wall0 = new Wall((-856.8F), (-856.8F), (-856.8F), 29.269F, 1.0F, 29.269F);
      Wall wall1 = new Wall((-856.8032F), (-856.8032F), (-856.8032F), 29.269F, 9.292883F, 0.0F);
      wall0.setWallAtEnd(wall1);
      wall0.containsPoint((-856.8F), 1.0F, 499.68933F);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Wall wall0 = new Wall((-852.31055F), (-852.31055F), (-852.31055F), (-852.31055F), (-852.31055F), (-852.31055F));
      wall0.getRightSideColor();
      wall0.setRightSideColor((Integer) null);
      wall0.setRightSideColor((Integer) null);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Wall wall0 = new Wall((-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F));
      wall0.setThickness((-970.7F));
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, (-68.17557F), (-68.17557F));
      wall0.setXStart((-852.31055F));
      wall0.setRightSideShininess(0.0F);
      Float float0 = wall0.getHeight();
      wall0.setHeight(float0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Wall wall0 = new Wall((-852.31055F), 2.0F, (-2496.11F), (-852.31055F), (-2496.11F));
      Float float0 = new Float((-2496.11F));
      wall0.setArcExtent(float0);
      wall0.containsPoint((-852.31055F), (-852.31055F), 2.0F);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Wall wall0 = new Wall((-1997.6F), (-1997.6F), (-1997.6F), (-1997.6F), (-1997.6F));
      wall0.getArcExtent();
      wall0.getLevel();
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 536.6196F, (-330.484F), 0.0F, 2924.588F, 536.6196F);
      wall0.containsWallStartAt((-596.5F), (-596.5F), 0.0F);
      wall0.setXStart(536.6196F);
      Float.valueOf((-104.9912F));
      Float.valueOf(1424.048F);
      Float.valueOf((-104.9912F));
      Float.valueOf(886.4F);
      Float float0 = Float.valueOf(0.0F);
      wall0.setHeight(float0);
      wall0.move(2924.588F, 1323.0F);
      wall0.setHeight((Float) null);
      wall0.setXStart(0.0F);
      wall0.setRightSideShininess(536.6196F);
      wall0.setHeightAtEnd((Float) null);
      wall0.containsWallEndAt(1323.0F, 0.0F, 2924.588F);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Wall wall0 = new Wall((-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F));
      Float.compare(3604.0F, 3604.0F);
      Float.compare(847.9F, (-970.7F));
      Float.compare(1, 1636.68F);
      Float.compare((-1.0F), 0.0F);
      Float float0 = Float.valueOf(3761.1423F);
      wall0.setArcExtent(float0);
      wall0.setXEnd(931.534F);
      Wall wall1 = wall0.clone();
      wall1.containsPoint(1636.68F, 1.0F, 108.1F);
      wall1.getYEnd();
      Wall wall2 = wall1.clone();
      wall2.setArcExtent(float0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Wall wall0 = new Wall(55.0F, 55.0F, 55.0F, 3328.7969F, 55.0F, 3328.7969F);
      Float.compare(0.0F, 0.0F);
      wall0.setHeightAtEnd((Float) 0.0F);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Wall wall0 = new Wall((-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F));
      wall0.setThickness((-1.0F));
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Wall wall0 = new Wall((-851.8099F), (-851.8099F), (-851.8099F), (-851.8099F), (-851.8099F));
      wall0.setWallAtStart(wall0);
      wall0.containsPoint((-851.8099F), (-851.8099F), (-851.8099F));
      wall0.clone();
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Wall wall0 = new Wall((-852.31055F), (-852.31055F), (-852.31055F), (-852.31055F), (-852.31055F), (-852.31055F));
      wall0.getLevel();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Wall wall0 = new Wall((-970.7F), (-970.7F), (-970.7F), 0.0F, (-970.7F));
      String string0 = "^F\\u(y@Y\\tjY}/4^#AY";
      Level level0 = new Level(string0, 1600.6892F, (-1.0F), 1600.6892F);
      wall0.isAtLevel(level0);
      Float.compare(3604.0F, 0.0F);
      Float.compare(0.0F, (-2296.084F));
      Float.compare(1, 1);
      Float.compare(0, 1.0F);
      wall0.setArcExtent((Float) 1.0F);
      wall0.setXEnd(2751.89F);
      wall0.clone();
      wall0.containsPoint((-2058.669F), (-1), 0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Wall wall0 = new Wall(38.13671F, 38.13671F, 38.13671F, 38.13671F, 38.13671F, 38.13671F);
      wall0.intersectsRectangle(38.13671F, 38.13671F, 38.13671F, 38.13671F);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Wall wall0 = new Wall((-777.665F), 1.0F, 0.0F, (-2890.84F), 0.0F);
      Integer integer0 = new Integer((-1));
      Integer.toUnsignedLong((-1));
      integer0.equals("?2dA9Z");
      wall0.setLeftSideColor(integer0);
      wall0.addPropertyChangeListener((PropertyChangeListener) null);
      wall0.containsWallEndAt((-3156.5F), (-3822.5F), 1.0F);
      wall0.setXStart(0.0F);
      wall0.getXArcCircleCenter();
      wall0.containsWallEndAt((-3156.5F), 0.0F, 1219.4329F);
      wall0.addPropertyChangeListener((PropertyChangeListener) null);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Wall wall0 = new Wall((-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F));
      wall0.setXStart((-970.7F));
      wall0.setHeightAtEnd((Float) null);
      wall0.getLevel();
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, 1317.646F);
      wall0.setRightSideShininess(2.0F);
      wall0.containsPoint(1317.646F, 0.0F, 0.0F);
      wall0.getRightSideShininess();
      wall0.getLevel();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy(",|}6!9xA$3$", propertyChangeListener0);
      Wall wall1 = new Wall(0.0F, (-2663.4473F), (-2663.4473F), (-2663.4473F), (-2663.4473F), (-2663.4473F));
      wall1.getWallAtStart();
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = null;
      try {
        propertyChangeEvent0 = new PropertyChangeEvent((Object) null, (String) null, (Object) null, object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Wall wall0 = new Wall(0.0F, 0.0F, 0.0F, 0.0F, (-1.0F));
      Float.compare(3604.0F, 0.0F);
      Float.compare(0.0F, (-2296.084F));
      Float.compare(1, 1);
      Integer.valueOf(0);
      Integer.valueOf(0);
      Integer.valueOf(0);
      Integer.valueOf(0);
      Integer.valueOf(0);
      Integer.valueOf(0);
      Integer integer0 = Integer.valueOf(0);
      wall0.setRightSideColor(integer0);
      Float.compare(0, 1.0F);
      wall0.setArcExtent((Float) 1.0F);
      wall0.setRightSideShininess((-1.0F));
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Wall wall0 = new Wall((-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F));
      wall0.setXStart((-391.984F));
      wall0.setWallAtStart(wall0);
      wall0.move((-970.7F), (-1351.3452F));
      wall0.getPoints();
      wall0.getThickness();
      wall0.intersectsRectangle((-2755.0F), 743.5653F, 675.021F, (-771.0F));
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Wall wall0 = new Wall((-1064.444F), (-3955.67F), (-1.1288998F), 0.0F, (-1.1288998F), 0.01F);
      Float.compare(0.0F, (-837.49F));
      Float.compare((-1064.444F), 3604.0F);
      Float.compare(108.1F, (-1512.3489F));
      Float.compare((-1188.6572F), 0.0F);
      Float float0 = Float.valueOf((-1.0F));
      wall0.setArcExtent(float0);
      wall0.setXEnd((-1.0F));
      wall0.containsPoint((-1.0F), 1.0F, 0.01F);
      wall0.getYEnd();
      wall0.clone();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Wall wall0 = new Wall(40.9468F, 40.9468F, 40.9468F, 40.9468F, 40.9468F);
      Float float0 = new Float(40.9468F);
      wall0.setArcExtent(float0);
      wall0.setHeight(float0);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Wall wall0 = new Wall((-970.7F), (-970.7F), (-970.7F), (-970.7F), (-970.7F));
      wall0.getLeftSideColor();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Wall wall0 = new Wall(2235.3F, 2235.3F, 2235.3F, 3604.8655F, 2235.3F, 2235.3F);
      CatalogTexture catalogTexture0 = new CatalogTexture("com.eteks.sweethome3d.model.BackgroundImage", "com.eteks.sweethome3d.model.BackgroundImage", (Content) null, (-2399.166F), 3604.8655F, "com.eteks.sweethome3d.model.BackgroundImage");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeTexture0.equals(catalogTexture0);
      wall0.move(5.3341F, 5.3341F);
      Float.floatToIntBits(2.0F);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Float float0 = new Float(0.0F);
      float float1 = new Float((-2399.166F));
      wall0.setArcExtent((Float) (-2399.166F));
      wall0.setXEnd((-644.81F));
      wall0.clone();
      wall0.setXStart((-1272.0093F));
      wall0.containsPoint((-1105.3563F), (-714.5F), (-1939.5402F));
      wall0.setRightSideTexture(homeTexture0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Wall wall0 = new Wall((-856.8032F), (-856.8032F), (-856.8032F), 29.269F, 1.0F, 0.0F);
      Float float0 = wall0.getHeight();
      Float.min(0.01F, 999.0F);
      wall0.setHeight(float0);
      Wall wall1 = wall0.clone();
      wall1.getLength();
      wall0.setWallAtStart(wall1);
      wall1.setXStart(2754.47F);
      Wall.Property.values();
      wall1.setYEnd(1921.19F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("!M&Q)w", propertyChangeListener0);
      Wall wall2 = new Wall(0.0F, (-2663.4473F), (-2663.4473F), (-2663.4473F), (-2663.4473F), (-2663.4473F));
      wall2.getWallAtStart();
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = null;
      try {
        propertyChangeEvent0 = new PropertyChangeEvent((Object) null, (String) null, (Object) null, object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Wall wall0 = new Wall(2235.3F, 2235.3F, 0.0F, 3604.8655F, 0.0F, 0.0F);
      wall0.move((-644.81F), 2235.3F);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Float.floatToIntBits(1042.511F);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      wall0.setArcExtent((Float) 1042.511F);
      wall0.setXStart((-644.81F));
      wall0.setRightSideShininess((-3428.5F));
      Float.floatToIntBits((-437.0F));
      wall0.setHeightAtEnd((Float) (-437.0F));
      wall0.containsWallEndAt(568.3276F, 1149390938, (-846.0F));
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      float float0 = 29.269F;
      Wall wall0 = new Wall(29.269F, (-856.8032F), (-856.8032F), (-856.8032F), 29.269F);
      Float float1 = new Float((-856.8032F));
      float float2 = 0.01F;
      Float.min(0.01F, 967.55585F);
      wall0.setHeight(float1);
      Float.floatToIntBits(0.01F);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      wall0.setArcExtent(float1);
      wall0.setXStart(0.1F);
      wall0.setXStart((-794.77F));
      float float3 = (-3428.5F);
      wall0.setRightSideShininess(0.0F);
      Float float4 = new Float((-1.0F));
      wall0.setYStart(1008981770);
      float4.floatValue();
      ((Float)(-1.0F)).floatValue();
      wall0.setHeightAtEnd(float1);
      // Undeclared exception!
      wall0.containsWallEndAt(float0, float3, float2);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Wall wall0 = new Wall((-875.6398F), (-875.6398F), (-875.6398F), (-875.6398F), (-875.6398F));
      wall0.getStartPointToEndPointDistance();
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Wall wall0 = new Wall((-856.8032F), (-856.8032F), (-856.8032F), 29.269F, 1.0F, 0.0F);
      Float float0 = wall0.getHeight();
      wall0.setHeight(float0);
      Wall wall1 = wall0.clone();
      wall1.setXStart(1.0F);
      wall0.containsWallEndAt(914.11255F, 0.0F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Wall wall0 = new Wall((-852.31055F), (-852.31055F), (-852.31055F), (-852.31055F), (-852.31055F), (-852.31055F));
      wall0.containsPoint(2.0F, (-43.0F), 0.0F);
  }
}
