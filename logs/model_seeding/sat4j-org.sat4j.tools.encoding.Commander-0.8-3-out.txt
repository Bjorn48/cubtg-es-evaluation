* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.sat4j.tools.encoding.Commander
* Starting Client-0
* Connecting to master process on port 14625
* Analyzing classpath: 
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
* Finished analyzing classpath
* Generating tests for class org.sat4j.tools.encoding.Commander
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 234
* Using seed 1550363580729
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 61 / 234
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.40816326530612246
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3181818181818182
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.3464566929133858
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.16666666666666666
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 200
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
[MASTER] 01:33:26.541 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.specs.IVecInt
[MASTER] 01:33:27.925 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.specs.IConstr
[MASTER] 01:33:30.951 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.sat4j.minisat.constraints.cnf.LearntHTClause due to org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.specs.IVecInt
[MASTER] 01:33:33.027 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.sat4j.minisat.constraints.cnf.OriginalWLClause due to org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.specs.IVecInt
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 259
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.40816326530612246
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3181818181818182
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.3464566929133858
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.16666666666666666
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
[MASTER] 01:33:33.884 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for org.sat4j.tools.FullClauseSelectorSolver<org.sat4j.tools.GateTranslator> canUseFunctionalMocks=false, canBeMocked: true
[MASTER] 01:33:43.694 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class org.sat4j.minisat.constraints.cnf.BinaryClauses canUseFunctionalMocks=false, canBeMocked: true
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 336
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.46938775510204084
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4090909090909091
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.47244094488188976
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
[MASTER] 01:33:44.335 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class org.sat4j.minisat.constraints.ClausalDataStructureWL canUseFunctionalMocks=false, canBeMocked: true
[MASTER] 01:33:44.573 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Found no variables of type class org.sat4j.opt.MaxSatDecorator
[MASTER] 01:33:44.805 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.sat4j.minisat.core.Solver due to org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.minisat.core.IOrder
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 405
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.46938775510204084
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4090909090909091
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.47244094488188976
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 440
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.46938775510204084
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4090909090909091
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.47244094488188976
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.46938775510204084
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4090909090909091
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.47244094488188976
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
* Search finished after 121s and 4 generations, 4089 statements, best individual has fitness: 127.0
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.46938775510204084
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4090909090909091
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.47244094488188976
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
* Minimizing test suite
[MASTER] 01:36:23.607 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 47%
* Total number of goals: 49
* Number of covered goals: 23
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 41%
* Total number of goals: 22
* Number of covered goals: 9
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 47%
* Total number of goals: 127
* Number of covered goals: 60
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 6
* Number of covered goals: 3
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 18%
* Total number of goals: 22
* Number of covered goals: 4
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.46938775510204084
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4090909090909091
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.47244094488188976
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
* Generated 13 tests with total length 221
* Resulting test suite's coverage: 63% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 12%
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.46938775510204084
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4090909090909091
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.47244094488188976
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
* Compiling and checking tests
[MASTER] 01:37:42.535 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 01:37:42.538 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Commander commander0 = new Commander();
GateTranslator gateTranslator0 = mock(GateTranslator.class, new ViolatedAssumptionAnswer());
doReturn((IConstr) null).when(gateTranslator0).discardCurrentModel();
doReturn((ISolver) null).when(gateTranslator0).getSolvingEngine();
doReturn(false).when(gateTranslator0).isSatisfiable(any(org.sat4j.specs.IVecInt.class));
doReturn((Object) null, (Object) null).when(gateTranslator0).modelWithInternalVariables();
doReturn(0).when(gateTranslator0).nConstraints();
FullClauseSelectorSolver<GateTranslator> fullClauseSelectorSolver0 = new FullClauseSelectorSolver<GateTranslator>(gateTranslator0, true);
ModelIterator modelIterator0 = new ModelIterator(fullClauseSelectorSolver0, (-3593L));
modelIterator0.model();
fullClauseSelectorSolver0.model();
fullClauseSelectorSolver0.nConstraints();
fullClauseSelectorSolver0.isSatisfiable();
ISolver iSolver0 = fullClauseSelectorSolver0.getSolvingEngine();
IVecInt iVecInt0 = VecInt.EMPTY;
commander0.addAtMostOne(iSolver0, iVecInt0);

[MASTER] 01:37:48.728 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 01:37:48.731 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Commander commander0 = new Commander();
GateTranslator gateTranslator0 = mock(GateTranslator.class, new ViolatedAssumptionAnswer());
doReturn((IConstr) null).when(gateTranslator0).addAtLeast(any(org.sat4j.specs.IVecInt.class) , anyInt());
doReturn((IConstr) null, (IConstr) null, (IConstr) null).when(gateTranslator0).addAtMost(any(org.sat4j.specs.IVecInt.class) , anyInt());
doReturn((IConstr) null).when(gateTranslator0).addClause(any(org.sat4j.specs.IVecInt.class));
doReturn((IConstr) null).when(gateTranslator0).addParity(any(org.sat4j.specs.IVecInt.class) , anyBoolean());
doReturn((int[]) null).when(gateTranslator0).findModel();
doReturn(false).when(gateTranslator0).isSatisfiable();
doReturn(0).when(gateTranslator0).nVars();
LexicoDecorator<GateTranslator> lexicoDecorator0 = new LexicoDecorator<GateTranslator>(gateTranslator0);
IVecInt iVecInt0 = VecInt.EMPTY;
commander0.addAtLeast(lexicoDecorator0, iVecInt0, 0);
lexicoDecorator0.nVars();
lexicoDecorator0.addParity(iVecInt0, true);
commander0.toString();
lexicoDecorator0.isSatisfiable();
lexicoDecorator0.addClause(iVecInt0);
int int0 = 0;
lexicoDecorator0.addAtLeast(iVecInt0, 0);
commander0.addExactly(lexicoDecorator0, iVecInt0, 0);
lexicoDecorator0.findModel();
commander0.addAtMostOne(lexicoDecorator0, iVecInt0);
int int1 = 0;
commander0.addExactly(lexicoDecorator0, iVecInt0, int1);
commander0.addExactlyOne(lexicoDecorator0, iVecInt0);
commander0.addExactlyOne(lexicoDecorator0, iVecInt0);
int int2 = 45;
commander0.addExactly(lexicoDecorator0, iVecInt0, int2);
ISolver iSolver0 = null;
IVecInt iVecInt1 = AbstractMinimalModel.negativeLiterals(iSolver0);
SolutionFoundListener solutionFoundListener0 = mock(SolutionFoundListener.class, new ViolatedAssumptionAnswer());
AbstractMinimalModel abstractMinimalModel0 = new AbstractMinimalModel(iSolver0, iVecInt1, solutionFoundListener0);
SolutionFoundListener solutionFoundListener1 = mock(SolutionFoundListener.class, new ViolatedAssumptionAnswer());
Minimal4CardinalityModel minimal4CardinalityModel0 = new Minimal4CardinalityModel(abstractMinimalModel0, iVecInt1, solutionFoundListener1);
boolean boolean0 = false;
MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(minimal4CardinalityModel0, boolean0);
SolutionFoundListener solutionFoundListener2 = mock(SolutionFoundListener.class, new ViolatedAssumptionAnswer());
OptToSatAdapter optToSatAdapter0 = new OptToSatAdapter(maxSatDecorator0, solutionFoundListener2);
ISolver iSolver1 = optToSatAdapter0.getSolvingEngine();
commander0.addExactly(iSolver1, iVecInt1, int0);

[MASTER] 01:37:53.105 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 01:37:53.107 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Commander commander0 = new Commander();
GateTranslator gateTranslator0 = mock(GateTranslator.class, new ViolatedAssumptionAnswer());
doReturn((IConstr) null).when(gateTranslator0).addAtLeast(any(org.sat4j.specs.IVecInt.class) , anyInt());
doReturn((IConstr) null, (IConstr) null).when(gateTranslator0).addClause(any(org.sat4j.specs.IVecInt.class));
doReturn((IConstr) null).when(gateTranslator0).addParity(any(org.sat4j.specs.IVecInt.class) , anyBoolean());
doReturn(false).when(gateTranslator0).isSatisfiable();
LexicoDecorator<GateTranslator> lexicoDecorator0 = new LexicoDecorator<GateTranslator>(gateTranslator0);
IVecInt iVecInt0 = VecInt.EMPTY;
lexicoDecorator0.addParity(iVecInt0, true);
lexicoDecorator0.isSatisfiable();
lexicoDecorator0.addClause(iVecInt0);
lexicoDecorator0.addAtLeast(iVecInt0, 0);
commander0.addExactlyOne(lexicoDecorator0, iVecInt0);

[MASTER] 01:37:56.955 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 01:37:56.957 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Commander commander0 = new Commander();
GateTranslator gateTranslator0 = mock(GateTranslator.class, new ViolatedAssumptionAnswer());
doReturn((IConstr) null, (IConstr) null).when(gateTranslator0).addAtMost(any(org.sat4j.specs.IVecInt.class) , anyInt());
doReturn((IConstr) null).when(gateTranslator0).addClause(any(org.sat4j.specs.IVecInt.class));
doReturn((IConstr) null).when(gateTranslator0).addParity(any(org.sat4j.specs.IVecInt.class) , anyBoolean());
doReturn(false).when(gateTranslator0).isSatisfiable();
LexicoDecorator<GateTranslator> lexicoDecorator0 = new LexicoDecorator<GateTranslator>(gateTranslator0);
IVecInt iVecInt0 = VecInt.EMPTY;
lexicoDecorator0.addParity(iVecInt0, true);
lexicoDecorator0.isSatisfiable();
lexicoDecorator0.addClause(iVecInt0);
int int0 = 0;
commander0.addExactly(lexicoDecorator0, iVecInt0, 0);
commander0.addAtMostOne(lexicoDecorator0, iVecInt0);
commander0.addExactly(lexicoDecorator0, iVecInt0, int0);

[MASTER] 01:38:01.159 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 01:38:01.162 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Commander commander0 = new Commander();
GateTranslator[] gateTranslatorArray0 = new GateTranslator[3];
GateTranslator gateTranslator0 = mock(GateTranslator.class, new ViolatedAssumptionAnswer());
doReturn((IConstr) null, (IConstr) null, (IConstr) null, (IConstr) null, (IConstr) null).when(gateTranslator0).addAtMost(any(org.sat4j.specs.IVecInt.class) , anyInt());
doReturn((IConstr) null).when(gateTranslator0).addClause(any(org.sat4j.specs.IVecInt.class));
gateTranslatorArray0[0] = gateTranslator0;
gateTranslatorArray0[1] = gateTranslator0;
gateTranslatorArray0[2] = gateTranslator0;
ManyCore<GateTranslator> manyCore0 = new ManyCore<GateTranslator>(false, gateTranslatorArray0);
GateTranslator[] gateTranslatorArray1 = new GateTranslator[6];
gateTranslatorArray1[0] = gateTranslator0;
gateTranslatorArray1[1] = gateTranslator0;
gateTranslatorArray1[2] = gateTranslator0;
gateTranslatorArray1[3] = gateTranslator0;
gateTranslatorArray1[4] = gateTranslator0;
gateTranslatorArray1[5] = gateTranslator0;
VecInt vecInt0 = new VecInt();
VecInt vecInt1 = new VecInt();
IVecInt iVecInt0 = vecInt1.push((-564));
commander0.addExactlyOne(gateTranslator0, iVecInt0);
commander0.addExactly(manyCore0, vecInt0, (-564));
commander0.addAtMostOne(gateTranslatorArray1[1], vecInt0);
Commander commander1 = new Commander();
commander1.addAtMostOne(gateTranslatorArray1[3], iVecInt0);
commander0.addExactlyOne(gateTranslatorArray1[4], iVecInt0);
int int0 = 1853;
commander1.addExactly(gateTranslatorArray0[2], vecInt0, int0);
commander0.addExactlyOne(manyCore0, vecInt0);
commander1.addAtMostOne(gateTranslatorArray1[3], vecInt1);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing tests to file
* Writing JUnit test case 'Commander_ESTest' to evosuite-tests
* Done!

* Computation finished
