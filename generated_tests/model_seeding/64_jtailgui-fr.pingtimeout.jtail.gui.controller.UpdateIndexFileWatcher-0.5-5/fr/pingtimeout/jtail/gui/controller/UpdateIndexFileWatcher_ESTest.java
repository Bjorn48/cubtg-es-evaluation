/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 13:16:33 GMT 2019
 */

package fr.pingtimeout.jtail.gui.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import fr.pingtimeout.jtail.gui.controller.UpdateIndexFileWatcher;
import fr.pingtimeout.jtail.io.FileIndexer;
import fr.pingtimeout.jtail.io.index.FileIndex;
import fr.pingtimeout.jtail.io.index.RomFileIndex;
import java.io.File;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UpdateIndexFileWatcher_ESTest extends UpdateIndexFileWatcher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockFile mockFile0 = new MockFile("fS$]]RgC;?m62Y&Hty", "fS$]]RgC;?m62Y&Hty");
      RomFileIndex romFileIndex0 = new RomFileIndex(mockFile0);
      FileIndexer fileIndexer0 = mock(FileIndexer.class, new ViolatedAssumptionAnswer());
      doReturn(mockFile0).when(fileIndexer0).getFile();
      doReturn((-4181L), 8L).when(fileIndexer0).getFileLength();
      doReturn((FileIndex) null).when(fileIndexer0).getIndex();
      UpdateIndexFileWatcher updateIndexFileWatcher0 = new UpdateIndexFileWatcher(fileIndexer0);
      // Undeclared exception!
      try { 
        updateIndexFileWatcher0.fileChanged();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("fr.pingtimeout.jtail.gui.controller.UpdateIndexFileWatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "");
      FileIndexer fileIndexer0 = mock(FileIndexer.class, new ViolatedAssumptionAnswer());
      doReturn(mockFile0).when(fileIndexer0).getFile();
      doReturn(0L).when(fileIndexer0).getFileLength();
      UpdateIndexFileWatcher updateIndexFileWatcher0 = new UpdateIndexFileWatcher(fileIndexer0);
      updateIndexFileWatcher0.processIndexation((-2413));
      assertEquals(0L, updateIndexFileWatcher0.scheduledExecutionTime());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockFile mockFile0 = new MockFile("fS$]]RgC;?m62Y&Hty");
      RomFileIndex romFileIndex0 = new RomFileIndex(mockFile0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileIndexer fileIndexer0 = mock(FileIndexer.class, new ViolatedAssumptionAnswer());
      doReturn(mockFile0).when(fileIndexer0).getFile();
      doReturn((-4181L), 8L).when(fileIndexer0).getFileLength();
      doReturn((FileIndex) null).when(fileIndexer0).getIndex();
      UpdateIndexFileWatcher updateIndexFileWatcher0 = new UpdateIndexFileWatcher(fileIndexer0);
      // Undeclared exception!
      try { 
        updateIndexFileWatcher0.fileChanged();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("fr.pingtimeout.jtail.gui.controller.UpdateIndexFileWatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      UpdateIndexFileWatcher updateIndexFileWatcher0 = null;
      try {
        updateIndexFileWatcher0 = new UpdateIndexFileWatcher((FileIndexer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("fr.pingtimeout.jtail.gui.controller.UpdateIndexFileWatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FileIndexer fileIndexer0 = mock(FileIndexer.class, new ViolatedAssumptionAnswer());
      doReturn((File) null).when(fileIndexer0).getFile();
      doReturn(0L, (-3411L)).when(fileIndexer0).getFileLength();
      UpdateIndexFileWatcher updateIndexFileWatcher0 = new UpdateIndexFileWatcher(fileIndexer0);
      updateIndexFileWatcher0.fileChanged();
      assertEquals(0L, updateIndexFileWatcher0.scheduledExecutionTime());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      FileIndexer fileIndexer0 = mock(FileIndexer.class, new ViolatedAssumptionAnswer());
      doReturn((File) null).when(fileIndexer0).getFile();
      doReturn(0L, 1L).when(fileIndexer0).getFileLength();
      doReturn((FileIndex) null).when(fileIndexer0).getIndex();
      UpdateIndexFileWatcher updateIndexFileWatcher0 = new UpdateIndexFileWatcher(fileIndexer0);
      // Undeclared exception!
      try { 
        updateIndexFileWatcher0.fileChanged();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("fr.pingtimeout.jtail.gui.controller.UpdateIndexFileWatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FileIndexer fileIndexer0 = mock(FileIndexer.class, new ViolatedAssumptionAnswer());
      doReturn((File) null).when(fileIndexer0).getFile();
      doReturn(0L, 0L).when(fileIndexer0).getFileLength();
      UpdateIndexFileWatcher updateIndexFileWatcher0 = new UpdateIndexFileWatcher(fileIndexer0);
      updateIndexFileWatcher0.fileChanged();
      assertEquals(0L, updateIndexFileWatcher0.scheduledExecutionTime());
  }
}
