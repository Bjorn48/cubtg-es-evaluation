/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 26 00:38:05 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jahuwaldt.plot.LinearAxisScale;
import jahuwaldt.plot.PlotAxis;
import jahuwaldt.plot.PlotRunList;
import jahuwaldt.plot.PlotSymbol;
import jahuwaldt.plot.PlotYAxis;
import jahuwaldt.plot.RTriangle2Symbol;
import jahuwaldt.plot.RTriangle4Symbol;
import jahuwaldt.plot.SimplePlotXY;
import jahuwaldt.plot.Triangle4Symbol;
import java.awt.Component;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.DebugGraphics;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimplePlotXY_ESTest extends SimplePlotXY_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat();
      double[] doubleArray0 = new double[8];
      double[] doubleArray1 = new double[8];
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray1, "QY", "APBS exitValue: ", "", decimalFormat0, decimalFormat0);
      assertEquals("QY", simplePlotXY0.getTitle());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      String string0 = simplePlotXY0.getTitle();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      Locale locale0 = new Locale("ion", "ion");
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance(locale0);
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "SX F0f;n'a*o-z", "qa:~AzTY)jX]=^kZ\"h5", "qa:~AzTY)jX]=^kZ\"h5", numberFormat0, numberFormat0);
      String string0 = simplePlotXY0.getTitle();
      assertEquals("SX F0f;n'a*o-z", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      Locale locale0 = new Locale("ion", "ion");
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance(locale0);
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, (String) null, (String) null, (String) null, numberFormat0, numberFormat0, (PlotSymbol) null);
      PlotRunList plotRunList0 = simplePlotXY0.getRuns();
      assertEquals(1, plotRunList0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance();
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "", "", "", numberFormat0, numberFormat0);
      PlotAxis plotAxis0 = simplePlotXY0.getHorizontalAxis();
      assertEquals(2, plotAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      // Undeclared exception!
      try { 
        simplePlotXY0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      DecimalFormat decimalFormat0 = new DecimalFormat();
      RTriangle2Symbol rTriangle2Symbol0 = new RTriangle2Symbol();
      double[] doubleArray1 = new double[0];
      SimplePlotXY simplePlotXY0 = null;
      try {
        simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray1, "&", "!cBp\"T#x+ N", "&", decimalFormat0, decimalFormat0, rTriangle2Symbol0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Inconsistant array sizes.
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getInstance();
      SimplePlotXY simplePlotXY0 = null;
      try {
        simplePlotXY0 = new SimplePlotXY((double[]) null, (double[]) null, "Redraw", "Redraw", ">*g&2", numberFormat0, numberFormat0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      DecimalFormat decimalFormat0 = new DecimalFormat();
      RTriangle2Symbol rTriangle2Symbol0 = new RTriangle2Symbol();
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "LXl?::HE36wFD@<", "LXl?::HE36wFD@<", "LXl?::HE36wFD@<", decimalFormat0, decimalFormat0, rTriangle2Symbol0);
      Rectangle rectangle0 = new Rectangle();
      simplePlotXY0.setTitle((String) null);
      // Undeclared exception!
      try { 
        simplePlotXY0.draw((Graphics) null, (Component) null, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      DecimalFormat decimalFormat0 = new DecimalFormat();
      double[] doubleArray1 = new double[0];
      SimplePlotXY simplePlotXY0 = null;
      try {
        simplePlotXY0 = new SimplePlotXY(doubleArray1, doubleArray0, "C^vr", "4,927.083", "4,927.083", decimalFormat0, decimalFormat0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Inconsistant array sizes.
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY((PlotRunList) null, "pavm_&*ol~JS&hGSX", "pavm_&*ol~JS&hGSX", "pavm_&*ol~JS&hGSX", (NumberFormat) null, (NumberFormat) null);
      PlotAxis plotAxis0 = simplePlotXY0.getVerticalAxis();
      assertEquals(2, plotAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      simplePlotXY0.setHorizontalAxis((PlotAxis) null);
      assertNull(simplePlotXY0.getTitle());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      PlotAxis plotAxis0 = simplePlotXY0.getHorizontalAxis();
      assertNull(plotAxis0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      PlotAxis plotAxis0 = simplePlotXY0.getVerticalAxis();
      assertNull(plotAxis0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      DecimalFormat decimalFormat0 = new DecimalFormat();
      RTriangle4Symbol rTriangle4Symbol0 = new RTriangle4Symbol();
      Font font0 = new Font("|H\"Zp(zbLd#JXr<", 2570, 2570);
      Graphics graphics0 = mock(Graphics.class, new ViolatedAssumptionAnswer());
      doReturn(font0).when(graphics0).getFont();
      doReturn((FontMetrics) null).when(graphics0).getFontMetrics();
      DebugGraphics debugGraphics0 = new DebugGraphics(graphics0);
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "p:SS|Jw < )[Z9Avj*", "p:SS|Jw < )[Z9Avj*", "?,39^BJ?Gg?@I", decimalFormat0, decimalFormat0, rTriangle4Symbol0);
      Rectangle rectangle0 = new Rectangle();
      // Undeclared exception!
      try { 
        simplePlotXY0.draw(debugGraphics0, (Component) null, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      PlotRunList plotRunList0 = simplePlotXY0.getRuns();
      assertEquals(0, plotRunList0.size());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat();
      double[] doubleArray0 = new double[8];
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "QY", "APBS exitValue: ", "", decimalFormat0, decimalFormat0);
      SimplePlotXY simplePlotXY1 = (SimplePlotXY)simplePlotXY0.clone();
      assertEquals("QY", simplePlotXY1.getTitle());
      assertNotSame(simplePlotXY1, simplePlotXY0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[] doubleArray0 = new double[8];
      Locale locale0 = Locale.GERMAN;
      NumberFormat numberFormat0 = NumberFormat.getInstance(locale0);
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "", "", "", numberFormat0, numberFormat0);
      String string0 = simplePlotXY0.getTitle();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimplePlotXY simplePlotXY0 = new SimplePlotXY();
      simplePlotXY0.setRuns((PlotRunList) null);
      PlotRunList plotRunList0 = simplePlotXY0.getRuns();
      assertNull(plotRunList0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getPercentInstance();
      Triangle4Symbol triangle4Symbol0 = new Triangle4Symbol();
      SimplePlotXY simplePlotXY0 = null;
      try {
        simplePlotXY0 = new SimplePlotXY((double[]) null, (double[]) null, "Inconsistant array sizes.", "Inconsistant array sizes.", "Inconsistant array sizes.", numberFormat0, numberFormat0, triangle4Symbol0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.SimplePlotXY", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance();
      SimplePlotXY simplePlotXY0 = new SimplePlotXY(doubleArray0, doubleArray0, "0y=lR6UtK,k'l(fh,", "0y=lR6UtK,k'l(fh,", "0y=lR6UtK,k'l(fh,", (NumberFormat) null, numberFormat0);
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      PlotYAxis plotYAxis0 = new PlotYAxis("jahuwaldt.plot.SimplePlotXY", linearAxisScale0, numberFormat0, 29);
      simplePlotXY0.setVerticalAxis(plotYAxis0);
      assertEquals(0, PlotAxis.kNoGrid);
  }
}
