/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 26 01:45:43 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jahuwaldt.plot.SquareSymbol;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.SystemColor;
import javax.swing.DebugGraphics;
import javax.swing.JTable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SquareSymbol_ESTest extends SquareSymbol_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SquareSymbol squareSymbol0 = new SquareSymbol();
      SystemColor systemColor0 = SystemColor.window;
      Graphics graphics0 = mock(Graphics.class, new ViolatedAssumptionAnswer());
      doReturn(systemColor0).when(graphics0).getColor();
      DebugGraphics debugGraphics0 = new DebugGraphics(graphics0);
      squareSymbol0.setFillColor(systemColor0);
      squareSymbol0.draw(debugGraphics0, 200, 255);
      assertEquals(8, squareSymbol0.getSize());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SquareSymbol squareSymbol0 = new SquareSymbol();
      Graphics graphics0 = mock(Graphics.class, new ViolatedAssumptionAnswer());
      doReturn((Color) null).when(graphics0).getColor();
      DebugGraphics debugGraphics0 = new DebugGraphics(graphics0);
      SystemColor systemColor0 = SystemColor.windowBorder;
      Object[][] objectArray0 = new Object[9][6];
      Object[] objectArray1 = new Object[8];
      objectArray1[0] = (Object) systemColor0;
      objectArray1[1] = (Object) systemColor0;
      objectArray1[2] = objectArray1[0];
      objectArray1[3] = objectArray1[2];
      objectArray1[4] = (Object) systemColor0;
      objectArray1[5] = (Object) systemColor0;
      objectArray1[6] = (Object) systemColor0;
      objectArray1[7] = (Object) systemColor0;
      objectArray0[0] = objectArray1;
      objectArray0[2] = objectArray0[0];
      JTable jTable0 = new JTable(objectArray0, objectArray0[2]);
      Color color0 = jTable0.getSelectionForeground();
      squareSymbol0.setFillColor(color0);
      squareSymbol0.draw(debugGraphics0, (-1), (-1));
      assertEquals(8, squareSymbol0.getSize());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SquareSymbol squareSymbol0 = new SquareSymbol();
      // Undeclared exception!
      try { 
        squareSymbol0.draw((Graphics) null, 0, 2125);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.SquareSymbol", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SquareSymbol squareSymbol0 = new SquareSymbol();
      squareSymbol0.setBorderColor((Color) null);
      Graphics graphics0 = mock(Graphics.class, new ViolatedAssumptionAnswer());
      doReturn((Color) null).when(graphics0).getColor();
      DebugGraphics debugGraphics0 = new DebugGraphics(graphics0);
      squareSymbol0.draw(debugGraphics0, (-14), (-14));
      assertEquals(8, squareSymbol0.getSize());
  }
}
