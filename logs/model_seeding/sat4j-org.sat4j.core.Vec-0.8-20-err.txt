[MASTER] 05:37:20.145 [logback-2] ERROR TestCluster - Failed to check cache for org.sat4j.core.ReadOnlyVec<T> : Type points to itself
[MASTER] 05:37:20.146 [logback-2] ERROR TestCluster - Failed to check cache for org.sat4j.core.Vec<T> : Type points to itself
[MASTER] 05:37:55.917 [logback-2] ERROR AbstractStatement - Error assigning value of type Comparable[] defined at statement Comparable<Integer>[] comparableArray0 = (Comparable<Integer>[]) Array.newInstance(Comparable.class, 2), assignment statement: comparableArray0[0] = (Comparable<Integer>) comparableArray0; SUT=org.sat4j.core.Vec
[MASTER] 05:37:56.818 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 05:37:59.186 [logback-2] ERROR AbstractStatement - Error assigning value of type Comparable[] defined at statement Comparable<Integer>[] comparableArray0 = (Comparable<Integer>[]) Array.newInstance(Comparable.class, 2), assignment statement: comparableArray0[0] = (Comparable<Integer>) comparableArray0; SUT=org.sat4j.core.Vec
[MASTER] 05:38:05.596 [logback-2] ERROR AbstractStatement - Error assigning value of type Comparable[] defined at statement Comparable<Integer>[] comparableArray0 = (Comparable<Integer>[]) Array.newInstance(Comparable.class, 2), assignment statement: comparableArray0[0] = (Comparable<Integer>) comparableArray0; SUT=org.sat4j.core.Vec
[MASTER] 05:38:06.139 [logback-2] ERROR AbstractStatement - Error assigning value of type Comparable[] defined at statement Comparable<Integer>[] comparableArray0 = (Comparable<Integer>[]) Array.newInstance(Comparable.class, 2), assignment statement: comparableArray0[0] = (Comparable<Integer>) comparableArray0; SUT=org.sat4j.core.Vec
[MASTER] 05:38:06.484 [logback-2] ERROR AbstractStatement - Error assigning value of type Comparable[] defined at statement Comparable<Integer>[] comparableArray0 = (Comparable<Integer>[]) Array.newInstance(Comparable.class, 2), assignment statement: comparableArray0[0] = (Comparable<Integer>) comparableArray0; SUT=org.sat4j.core.Vec
[MASTER] 05:38:21.970 [logback-2] ERROR AbstractStatement - Error assigning value of type Comparable[] defined at statement Comparable<Integer>[] comparableArray0 = (Comparable<Integer>[]) Array.newInstance(Comparable.class, 2), assignment statement: comparableArray0[0] = (Comparable<Integer>) comparableArray0; SUT=org.sat4j.core.Vec
[MASTER] 05:39:20.060 [logback-2] ERROR AbstractStatement - Error assigning value of type Comparable[] defined at statement Comparable<Integer>[] comparableArray0 = (Comparable<Integer>[]) Array.newInstance(Comparable.class, 2), assignment statement: comparableArray0[0] = (Comparable<Integer>) comparableArray0; SUT=org.sat4j.core.Vec
[MASTER] 05:39:33.548 [logback-2] ERROR AbstractStatement - Error assigning value of type Comparable[] defined at statement Comparable<Integer>[] comparableArray0 = (Comparable<Integer>[]) Array.newInstance(Comparable.class, 2), assignment statement: comparableArray0[0] = (Comparable<Integer>) comparableArray0; SUT=org.sat4j.core.Vec
[MASTER] 05:39:45.831 [logback-2] ERROR AbstractStatement - Error assigning value of type Comparable[] defined at statement Comparable<Integer>[] comparableArray0 = (Comparable<Integer>[]) Array.newInstance(Comparable.class, 2), assignment statement: comparableArray0[0] = (Comparable<Integer>) comparableArray0; SUT=org.sat4j.core.Vec
[MASTER] 05:41:34.962 [logback-2] ERROR AbstractStatement - Error assigning value of type Comparable[] defined at statement Comparable<Integer>[] comparableArray0 = (Comparable<Integer>[]) Array.newInstance(Comparable.class, 2), assignment statement: comparableArray0[0] = (Comparable<Integer>) comparableArray0; SUT=org.sat4j.core.Vec
[MASTER] 05:42:00.183 [logback-2] ERROR AbstractStatement - Error assigning value of type Comparable[] defined at statement Comparable<Integer>[] comparableArray0 = (Comparable<Integer>[]) Array.newInstance(Comparable.class, 2), assignment statement: comparableArray0[0] = (Comparable<Integer>) comparableArray0; SUT=org.sat4j.core.Vec
[MASTER] 05:42:00.285 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_49_1550551320169/org/sat4j/core/Vec_49_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_49_1550551320169/org/sat4j/core/Vec_49_tmp__ESTest_scaffolding.java]]
[MASTER] 05:42:00.285 [logback-2] ERROR JUnitAnalyzer - Classpath: bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 05:42:00.285 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 05:42:00.290 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.lang.Comparable<java.lang.Integer>[] cannot be converted to java.lang.Comparable<java.lang.Integer>: 84
[MASTER] 05:42:00.307 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_49_1550551320169/org/sat4j/core/Vec_49_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 05:42:00.307 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 05:42:00.308 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_49_1550551320169/org/sat4j/core/Vec_49_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Feb 19 04:42:00 GMT 2019
4:  */
5: 
6: package org.sat4j.core;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import static org.evosuite.runtime.EvoAssertions.*;
12: import java.lang.reflect.Array;
13: import java.util.Comparator;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.ViolatedAssumptionAnswer;
17: import org.junit.runner.RunWith;
18: import org.sat4j.core.ReadOnlyVec;
19: import org.sat4j.core.Vec;
20: import org.sat4j.specs.IVec;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class Vec_49_tmp__ESTest extends Vec_49_tmp__ESTest_scaffolding {
24: 
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       Vec<Vec<String>> vec0 = new Vec<Vec<String>>();
28:       assertNotNull(vec0);
29:       assertTrue(vec0.isEmpty());
30:       assertEquals(0, vec0.size());
31:       
32:       IVec<Vec<String>> iVec0 = vec0.clone();
33:       assertNotNull(iVec0);
34:       assertTrue(vec0.isEmpty());
35:       assertEquals(0, vec0.size());
36:       assertTrue(iVec0.isEmpty());
37:       assertEquals(0, iVec0.size());
38:       
39:       ReadOnlyVec<Integer>[] readOnlyVecArray0 = (ReadOnlyVec<Integer>[]) Array.newInstance(ReadOnlyVec.class, 1);
40:       Vec<Integer> vec1 = new Vec<Integer>();
41:       assertNotNull(vec1);
42:       assertTrue(vec1.isEmpty());
43:       assertEquals(0, vec1.size());
44:       
45:       String[] stringArray0 = new String[5];
46:       stringArray0[0] = "";
47:       stringArray0[1] = "";
48:       stringArray0[2] = "^BVdz";
49:       stringArray0[3] = "";
50:       stringArray0[4] = ",";
51:       Vec<String> vec2 = new Vec<String>(stringArray0);
52:       assertNotNull(vec2);
53:       assertFalse(vec2.isEmpty());
54:       assertEquals(5, vec2.size());
55:       assertEquals(5, stringArray0.length);
56:       
57:       vec0.insertFirstWithShifting(vec2);
58:       assertFalse(vec0.isEmpty());
59:       assertEquals(1, vec0.size());
60:       assertFalse(vec2.isEmpty());
61:       assertEquals(5, vec2.size());
62:       assertEquals(5, stringArray0.length);
63:       
64:       ReadOnlyVec<Integer> readOnlyVec0 = new ReadOnlyVec<Integer>(vec1);
65:       assertNotNull(readOnlyVec0);
66:       assertTrue(vec1.isEmpty());
67:       assertEquals(0, vec1.size());
68:       assertTrue(readOnlyVec0.isEmpty());
69:       assertEquals(0, readOnlyVec0.size());
70:       
71:       readOnlyVecArray0[0] = readOnlyVec0;
72:       Vec<ReadOnlyVec<Integer>> vec3 = new Vec<ReadOnlyVec<Integer>>(readOnlyVecArray0);
73:       assertNotNull(vec3);
74:       assertFalse(vec3.isEmpty());
75:       assertEquals(1, vec3.size());
76:       assertEquals(1, readOnlyVecArray0.length);
77:       
78:       vec3.clear();
79:       assertTrue(vec3.isEmpty());
80:       assertEquals(0, vec3.size());
81:       assertEquals(1, readOnlyVecArray0.length);
82:       
83:       Comparable<Integer>[] comparableArray0 = (Comparable<Integer>[]) Array.newInstance(Comparable.class, 2);
84:       comparableArray0[0] = (Comparable<Integer>) comparableArray0;
85:   }
86: }
RegularFileObject[/tmp/EvoSuite_49_1550551320169/org/sat4j/core/Vec_49_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Feb 19 04:42:00 GMT 2019
5:  */
6: 
7: package org.sat4j.core;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class Vec_49_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "org.sat4j.core.Vec"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Vec_49_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "org.sat4j.core.Vec$1",
82:       "org.sat4j.core.Vec",
83:       "org.sat4j.specs.IVec",
84:       "org.sat4j.core.ReadOnlyVec"
85:     );
86:   } 
87: 
88:   private static void resetClasses() {
89:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Vec_49_tmp__ESTest_scaffolding.class.getClassLoader()); 
90: 
91:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
92:       "org.sat4j.core.Vec",
93:       "org.sat4j.core.Vec$1",
94:       "org.sat4j.core.ReadOnlyVec"
95:     );
96:   }
97: }

[MASTER] 05:42:00.310 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Vec<Vec<String>> vec0 = new Vec<Vec<String>>();
assertNotNull(vec0);
assertTrue(vec0.isEmpty());
assertEquals(0, vec0.size());

IVec<Vec<String>> iVec0 = vec0.clone();
assertNotNull(iVec0);
assertTrue(vec0.isEmpty());
assertEquals(0, vec0.size());
assertTrue(iVec0.isEmpty());
assertEquals(0, iVec0.size());

ReadOnlyVec<Integer>[] readOnlyVecArray0 = (ReadOnlyVec<Integer>[]) Array.newInstance(ReadOnlyVec.class, 1);
Vec<Integer> vec1 = new Vec<Integer>();
assertNotNull(vec1);
assertTrue(vec1.isEmpty());
assertEquals(0, vec1.size());

String[] stringArray0 = new String[5];
stringArray0[0] = "";
stringArray0[1] = "";
stringArray0[2] = "^BVdz";
stringArray0[3] = "";
stringArray0[4] = ",";
Vec<String> vec2 = new Vec<String>(stringArray0);
assertNotNull(vec2);
assertFalse(vec2.isEmpty());
assertEquals(5, vec2.size());
assertEquals(5, stringArray0.length);

vec0.insertFirstWithShifting(vec2);
assertFalse(vec0.isEmpty());
assertEquals(1, vec0.size());
assertFalse(vec2.isEmpty());
assertEquals(5, vec2.size());
assertEquals(5, stringArray0.length);

ReadOnlyVec<Integer> readOnlyVec0 = new ReadOnlyVec<Integer>(vec1);
assertNotNull(readOnlyVec0);
assertTrue(vec1.isEmpty());
assertEquals(0, vec1.size());
assertTrue(readOnlyVec0.isEmpty());
assertEquals(0, readOnlyVec0.size());

readOnlyVecArray0[0] = readOnlyVec0;
Vec<ReadOnlyVec<Integer>> vec3 = new Vec<ReadOnlyVec<Integer>>(readOnlyVecArray0);
assertNotNull(vec3);
assertFalse(vec3.isEmpty());
assertEquals(1, vec3.size());
assertEquals(1, readOnlyVecArray0.length);

vec3.clear();
assertTrue(vec3.isEmpty());
assertEquals(0, vec3.size());
assertEquals(1, readOnlyVecArray0.length);

Comparable<Integer>[] comparableArray0 = (Comparable<Integer>[]) Array.newInstance(Comparable.class, 2);
comparableArray0[0] = (Comparable<Integer>) comparableArray0;

[MASTER] 05:42:43.151 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
