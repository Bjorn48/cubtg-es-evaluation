/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 25 21:05:10 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jahuwaldt.plot.LinearAxisScale;
import jahuwaldt.plot.PlotAxisScale;
import jahuwaldt.plot.PlotRunList;
import jahuwaldt.plot.PlotXAxis;
import jahuwaldt.plot.PlotYAxis;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.text.DateFormatSymbols;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.NumberFormat;
import java.util.Locale;
import java.util.Vector;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.JTableHeader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlotAxis_ESTest extends PlotAxis_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.manualTickStepSize(true);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.setUpperBounds(1.7976931348623157E308);
      plotXAxis0.setAxisTickLimits();
      assertEquals(Double.NaN, plotXAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      
      plotYAxis0.setAxisBounds((PlotRunList) null);
      assertEquals(1, plotYAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JTableHeader jTableHeader0 = new JTableHeader(defaultTableColumnModel0);
      Rectangle rectangle0 = jTableHeader0.getHeaderRect(3);
      plotXAxis0.setSize(rectangle0);
      plotXAxis0.scaleCoord(4843.439261277559);
      assertEquals(Double.NEGATIVE_INFINITY, plotXAxis0.getTickStepSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DateFormatSymbols dateFormatSymbols0 = DateFormatSymbols.getInstance(locale0);
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("", dateFormatSymbols0);
      NumberFormat numberFormat0 = mockSimpleDateFormat0.getNumberFormat();
      PlotXAxis plotXAxis0 = new PlotXAxis("", linearAxisScale0, numberFormat0, 5);
      int int0 = plotXAxis0.scaleCoord((-2413.639377282012));
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals((-2412), int0);
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(5, plotXAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      
      PlotRunList plotRunList0 = new PlotRunList();
      plotYAxis0.setAxisBounds(plotRunList0);
      double double0 = plotYAxis0.getUpperBounds();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      
      plotYAxis0.quantum = 1.0;
      double double0 = plotYAxis0.getTickStepSize();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.setAxisTickLimits();
      double double0 = plotYAxis0.getTickStepSize();
      assertEquals(Double.NaN, plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.scale = null;
      plotXAxis0.getScale();
      assertEquals(1, plotXAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DateFormatSymbols dateFormatSymbols0 = DateFormatSymbols.getInstance(locale0);
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("", dateFormatSymbols0);
      NumberFormat numberFormat0 = mockSimpleDateFormat0.getNumberFormat();
      PlotXAxis plotXAxis0 = new PlotXAxis("", linearAxisScale0, numberFormat0, 5);
      NumberFormat numberFormat1 = plotXAxis0.getNumberFormat();
      assertEquals(5, plotXAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals(0, numberFormat1.getMaximumFractionDigits());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance();
      PlotXAxis plotXAxis0 = new PlotXAxis("jahuwaldt.plot.TabDSymbol", linearAxisScale0, numberFormat0, (-545));
      DecimalFormat decimalFormat0 = (DecimalFormat)plotXAxis0.getNumberFormat();
      assertEquals((-545), plotXAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals("\u00A4", decimalFormat0.getPositivePrefix());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      DecimalFormatSymbols decimalFormatSymbols0 = DecimalFormatSymbols.getInstance();
      DecimalFormat decimalFormat0 = new DecimalFormat("Isosurface contour", decimalFormatSymbols0);
      PlotXAxis plotXAxis0 = new PlotXAxis((String) null, linearAxisScale0, decimalFormat0, (-1));
      NumberFormat numberFormat0 = plotXAxis0.getNumberFormat();
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals((-1), plotXAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(0, numberFormat0.getMaximumFractionDigits());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.aLB = (-20.0);
      plotXAxis0.setAxisTickLimits();
      double double0 = plotXAxis0.getLowerBounds();
      assertEquals(Double.NEGATIVE_INFINITY, plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(-0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      
      plotXAxis0.setAxisBounds((PlotRunList) null);
      double double0 = plotXAxis0.getLowerBounds();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      DateFormatSymbols dateFormatSymbols0 = DateFormatSymbols.getInstance(locale0);
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("", dateFormatSymbols0);
      NumberFormat numberFormat0 = mockSimpleDateFormat0.getNumberFormat();
      PlotXAxis plotXAxis0 = new PlotXAxis("'B", linearAxisScale0, numberFormat0, (-3199));
      String string0 = plotXAxis0.getLabel();
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertNotNull(string0);
      assertEquals((-3199), plotXAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.setLabel("");
      String string0 = plotYAxis0.getLabel();
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertNotNull(string0);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      NumberFormat numberFormat0 = NumberFormat.getIntegerInstance(locale0);
      PlotXAxis plotXAxis0 = new PlotXAxis("", (PlotAxisScale) null, numberFormat0, 0);
      int int0 = plotXAxis0.getGridStyle();
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(0, int0);
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.setGridStyle((-2147483647));
      int int0 = plotYAxis0.getGridStyle();
      assertEquals((-2147483647), int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.scale = null;
      // Undeclared exception!
      try { 
        plotXAxis0.setAxisTickLimits();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      Vector<DecimalFormat> vector0 = new Vector<DecimalFormat>();
      PlotRunList plotRunList0 = new PlotRunList(vector0);
      plotRunList0.add((Object) null);
      // Undeclared exception!
      try { 
        plotXAxis0.setAxisBounds(plotRunList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotXAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      PlotXAxis plotXAxis0 = new PlotXAxis("", linearAxisScale0, (NumberFormat) null, 0);
      plotXAxis0.nf = null;
      // Undeclared exception!
      try { 
        plotXAxis0.lowerBoundsAsString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      // Undeclared exception!
      try { 
        plotXAxis0.draw((Graphics) null, (Component) null, (Rectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotXAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.manualUpperBounds(true);
      plotXAxis0.setAxisTickLimits();
      assertEquals(Double.NaN, plotXAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.setAxisTickLimits();
      plotXAxis0.setAxisTickLimits();
      assertEquals(Double.NaN, plotXAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.manualQuant = true;
      plotXAxis0.setAxisTickLimits();
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotXAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.setNumberFormat((NumberFormat) null);
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals(1, plotXAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      NumberFormat numberFormat0 = NumberFormat.getInstance();
      plotXAxis0.setNumberFormat(numberFormat0);
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals(1, plotXAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.setScale((PlotAxisScale) null);
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotXAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      plotYAxis0.setScale(linearAxisScale0);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.setTickStepSize(228.7638);
      assertEquals(228.7638, plotXAxis0.getTickStepSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      String string0 = plotXAxis0.lowerBoundsAsString();
      assertEquals(1, plotXAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals("\u221E", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      double double0 = plotXAxis0.getUpperBounds();
      assertEquals((-1.7976931348623157E308), double0, 0.01);
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals(1, plotXAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      int int0 = plotXAxis0.scaleCoord(4843.439261277559);
      assertEquals(1.7976931348623157E308, plotXAxis0.getLowerBounds(), 0.01);
      assertEquals(1, plotXAxis0.getGridStyle());
      assertEquals(4844, int0);
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      double double0 = plotYAxis0.getTickStepSize();
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.setLowerBounds((-2558.684679));
      assertEquals((-2558.684679), plotXAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.setUpperBounds(1.0);
      plotXAxis0.setAxisTickLimits();
      double double0 = plotXAxis0.getUpperBounds();
      assertEquals((-4.999999999999999E307), plotXAxis0.getTickStepSize(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.getScale();
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      PlotXAxis plotXAxis1 = (PlotXAxis)plotXAxis0.clone();
      assertNotSame(plotXAxis1, plotXAxis0);
      assertEquals(1, plotXAxis1.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotXAxis1.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotXAxis1.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      double double0 = plotXAxis0.getLowerBounds();
      assertEquals(1, plotXAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotXAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.manualLowerBounds(true);
      plotXAxis0.setAxisTickLimits();
      assertEquals(Double.NaN, plotXAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.getLabel();
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      String string0 = plotYAxis0.upperBoundsAsString();
      assertEquals("-\u221E", string0);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      int int0 = plotYAxis0.getGridStyle();
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      // Undeclared exception!
      try { 
        plotXAxis0.setSize((Rectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotXAxis", e);
      }
  }
}
