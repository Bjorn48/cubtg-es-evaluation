[MASTER] 18:19:09.527 [logback-2] ERROR TestCluster - Failed to check cache for org.sat4j.core.ReadOnlyVec<T> : Type points to itself
[MASTER] 18:19:09.530 [logback-2] ERROR TestCluster - Failed to check cache for org.sat4j.core.Vec<T> : Type points to itself
[MASTER] 18:19:45.323 [logback-2] ERROR AbstractStatement - Error assigning value of type Comparable[] defined at statement Comparable<Object>[] comparableArray0 = (Comparable<Object>[]) Array.newInstance(Comparable.class, 2), assignment statement: comparableArray0[0] = (Comparable<Object>) comparableArray0; SUT=org.sat4j.core.Vec
[MASTER] 18:19:46.103 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 18:19:49.493 [logback-2] ERROR AbstractStatement - Error assigning value of type Comparable[] defined at statement Comparable<Object>[] comparableArray0 = (Comparable<Object>[]) Array.newInstance(Comparable.class, 6), assignment statement: comparableArray0[0] = (Comparable<Object>) comparableArray0; SUT=org.sat4j.core.Vec
[MASTER] 18:19:50.351 [logback-2] ERROR AbstractStatement - Error assigning value of type Comparable[] defined at statement Comparable<Object>[] comparableArray0 = (Comparable<Object>[]) Array.newInstance(Comparable.class, 7), assignment statement: comparableArray0[0] = (Comparable<Object>) comparableArray0; SUT=org.sat4j.core.Vec
[MASTER] 18:19:53.581 [logback-2] ERROR AbstractStatement - Error assigning value of type Comparable[] defined at statement Comparable<Object>[] comparableArray0 = (Comparable<Object>[]) Array.newInstance(Comparable.class, 2), assignment statement: comparableArray0[0] = (Comparable<Object>) comparableArray0; SUT=org.sat4j.core.Vec
[MASTER] 18:19:59.293 [logback-2] ERROR AbstractStatement - Error assigning value of type Comparable[] defined at statement Comparable<Object>[] comparableArray0 = (Comparable<Object>[]) Array.newInstance(Comparable.class, 6), assignment statement: comparableArray0[0] = (Comparable<Object>) comparableArray0; SUT=org.sat4j.core.Vec
[MASTER] 18:19:59.709 [logback-2] ERROR AbstractStatement - Error assigning value of type Comparable[] defined at statement Comparable<Object>[] comparableArray0 = (Comparable<Object>[]) Array.newInstance(Comparable.class, 7), assignment statement: comparableArray0[0] = (Comparable<Object>) comparableArray0; SUT=org.sat4j.core.Vec
[MASTER] 18:20:24.894 [logback-2] ERROR AbstractStatement - Error assigning value of type Comparable[] defined at statement Comparable<Object>[] comparableArray0 = (Comparable<Object>[]) Array.newInstance(Comparable.class, 2), assignment statement: comparableArray0[0] = (Comparable<Object>) comparableArray0; SUT=org.sat4j.core.Vec
[MASTER] 18:21:17.168 [logback-2] ERROR AbstractStatement - Error assigning value of type Comparable[] defined at statement Comparable<Object>[] comparableArray0 = (Comparable<Object>[]) Array.newInstance(Comparable.class, 2), assignment statement: comparableArray0[0] = (Comparable<Object>) comparableArray0; SUT=org.sat4j.core.Vec
[MASTER] 18:21:30.847 [logback-2] ERROR AbstractStatement - Error assigning value of type Comparable[] defined at statement Comparable<Object>[] comparableArray0 = (Comparable<Object>[]) Array.newInstance(Comparable.class, 2), assignment statement: comparableArray0[0] = (Comparable<Object>) comparableArray0; SUT=org.sat4j.core.Vec
[MASTER] 18:23:21.250 [logback-2] ERROR AbstractStatement - Error assigning value of type Comparable[] defined at statement Comparable<Object>[] comparableArray0 = (Comparable<Object>[]) Array.newInstance(Comparable.class, 2), assignment statement: comparableArray0[0] = (Comparable<Object>) comparableArray0; SUT=org.sat4j.core.Vec
[MASTER] 18:23:51.812 [logback-2] ERROR AbstractStatement - Error assigning value of type Comparable[] defined at statement Comparable<Object>[] comparableArray0 = (Comparable<Object>[]) Array.newInstance(Comparable.class, 2), assignment statement: comparableArray0[0] = (Comparable<Object>) comparableArray0; SUT=org.sat4j.core.Vec
[MASTER] 18:23:51.926 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_58_1550597031809/org/sat4j/core/Vec_58_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_58_1550597031809/org/sat4j/core/Vec_58_tmp__ESTest_scaffolding.java]]
[MASTER] 18:23:51.926 [logback-2] ERROR JUnitAnalyzer - Classpath: bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 18:23:51.926 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 18:23:51.939 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.lang.Comparable<java.lang.Object>[] cannot be converted to java.lang.Comparable<java.lang.Object>: 63
[MASTER] 18:23:51.940 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_58_1550597031809/org/sat4j/core/Vec_58_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 18:23:51.940 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 18:23:51.940 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_58_1550597031809/org/sat4j/core/Vec_58_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Feb 19 17:23:51 GMT 2019
4:  */
5: 
6: package org.sat4j.core;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import static org.evosuite.runtime.EvoAssertions.*;
12: import java.lang.reflect.Array;
13: import java.util.Comparator;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.evosuite.runtime.ViolatedAssumptionAnswer;
17: import org.junit.runner.RunWith;
18: import org.sat4j.core.ReadOnlyVec;
19: import org.sat4j.core.Vec;
20: 
21: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
22: public class Vec_58_tmp__ESTest extends Vec_58_tmp__ESTest_scaffolding {
23: 
24:   @Test(timeout = 4000)
25:   public void test0()  throws Throwable  {
26:       int int0 = 5;
27:       Vec<ReadOnlyVec<Object>> vec0 = new Vec<ReadOnlyVec<Object>>(5);
28:       assertTrue(vec0.isEmpty());
29:       assertEquals(0, vec0.size());
30:       assertNotNull(vec0);
31:       
32:       Vec<Object> vec1 = new Vec<Object>();
33:       assertEquals(0, vec1.size());
34:       assertTrue(vec1.isEmpty());
35:       assertNotNull(vec1);
36:       
37:       ReadOnlyVec<Object> readOnlyVec0 = new ReadOnlyVec<Object>(vec1);
38:       assertEquals(0, vec1.size());
39:       assertTrue(vec1.isEmpty());
40:       assertEquals(0, readOnlyVec0.size());
41:       assertTrue(readOnlyVec0.isEmpty());
42:       assertNotNull(readOnlyVec0);
43:       
44:       Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
45:       vec1.sortUnique(comparator0);
46:       assertEquals(0, vec1.size());
47:       assertTrue(vec1.isEmpty());
48:       
49:       vec0.insertFirstWithShifting(readOnlyVec0);
50:       assertEquals(1, vec0.size());
51:       assertFalse(vec0.isEmpty());
52:       assertEquals(0, vec1.size());
53:       assertTrue(vec1.isEmpty());
54:       assertEquals(0, readOnlyVec0.size());
55:       assertTrue(readOnlyVec0.isEmpty());
56:       
57:       Comparable<Object>[] comparableArray0 = (Comparable<Object>[]) Array.newInstance(Comparable.class, 2);
58:       Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
59:       vec1.sort(5, 5, comparator1);
60:       assertEquals(0, vec1.size());
61:       assertTrue(vec1.isEmpty());
62:       
63:       comparableArray0[0] = (Comparable<Object>) comparableArray0;
64:   }
65: }
RegularFileObject[/tmp/EvoSuite_58_1550597031809/org/sat4j/core/Vec_58_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Feb 19 17:23:51 GMT 2019
5:  */
6: 
7: package org.sat4j.core;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class Vec_58_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.sat4j.core.Vec"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Vec_58_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.sat4j.core.Vec$1",
84:       "org.sat4j.core.Vec",
85:       "org.sat4j.specs.IVec",
86:       "org.sat4j.core.ReadOnlyVec"
87:     );
88:   } 
89:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
90:     mock(Class.forName("java.util.Comparator", false, Vec_58_tmp__ESTest_scaffolding.class.getClassLoader()));
91:   }
92: 
93:   private static void resetClasses() {
94:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Vec_58_tmp__ESTest_scaffolding.class.getClassLoader()); 
95: 
96:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
97:       "org.sat4j.core.Vec",
98:       "org.sat4j.core.Vec$1",
99:       "org.sat4j.core.ReadOnlyVec"
100:     );
101:   }
102: }

[MASTER] 18:23:51.941 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
int int0 = 5;
Vec<ReadOnlyVec<Object>> vec0 = new Vec<ReadOnlyVec<Object>>(5);
assertTrue(vec0.isEmpty());
assertEquals(0, vec0.size());
assertNotNull(vec0);

Vec<Object> vec1 = new Vec<Object>();
assertEquals(0, vec1.size());
assertTrue(vec1.isEmpty());
assertNotNull(vec1);

ReadOnlyVec<Object> readOnlyVec0 = new ReadOnlyVec<Object>(vec1);
assertEquals(0, vec1.size());
assertTrue(vec1.isEmpty());
assertEquals(0, readOnlyVec0.size());
assertTrue(readOnlyVec0.isEmpty());
assertNotNull(readOnlyVec0);

Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
vec1.sortUnique(comparator0);
assertEquals(0, vec1.size());
assertTrue(vec1.isEmpty());

vec0.insertFirstWithShifting(readOnlyVec0);
assertEquals(1, vec0.size());
assertFalse(vec0.isEmpty());
assertEquals(0, vec1.size());
assertTrue(vec1.isEmpty());
assertEquals(0, readOnlyVec0.size());
assertTrue(readOnlyVec0.isEmpty());

Comparable<Object>[] comparableArray0 = (Comparable<Object>[]) Array.newInstance(Comparable.class, 2);
Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
vec1.sort(5, 5, comparator1);
assertEquals(0, vec1.size());
assertTrue(vec1.isEmpty());

comparableArray0[0] = (Comparable<Object>) comparableArray0;

[MASTER] 18:24:28.923 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
