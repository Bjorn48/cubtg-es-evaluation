* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.sat4j.minisat.core.Heap
* Starting Client-0
* Connecting to master process on port 21042
* Analyzing classpath: 
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
* Finished analyzing classpath
* Generating tests for class org.sat4j.minisat.core.Heap
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 548
* Using seed 1550360371571
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 203 / 548
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.46875
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4406779661016949
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.41379310344827586
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.2631578947368421
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9285714285714286
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.4406779661016949
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 200
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 292
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.484375
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4576271186440678
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.4263322884012539
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.2631578947368421
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9285714285714286
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.4576271186440678
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 387
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.484375
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4576271186440678
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.42946708463949845
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.2631578947368421
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9285714285714286
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.4576271186440678
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 486
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 584
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.609375
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5423728813559322
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.5454545454545454
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.3157894736842105
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9285714285714286
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.7142857142857143
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.5423728813559322
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 684
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.609375
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5423728813559322
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.5454545454545454
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.3157894736842105
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9285714285714286
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.7142857142857143
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.5423728813559322
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 784
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.609375
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5423728813559322
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.5454545454545454
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.3157894736842105
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9285714285714286
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.7142857142857143
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.5423728813559322
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 886
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.609375
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5423728813559322
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.5454545454545454
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.3157894736842105
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9285714285714286
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.7142857142857143
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.5423728813559322
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 985
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.609375
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5423728813559322
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.5454545454545454
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.3157894736842105
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9285714285714286
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.7142857142857143
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.5423728813559322
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 1006
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.609375
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5423728813559322
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.5454545454545454
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.3157894736842105
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9285714285714286
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.7142857142857143
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.5423728813559322
* Search finished after 123s and 9 generations, 8341 statements, best individual has fitness: 242.0
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.609375
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5423728813559322
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.5454545454545454
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.3157894736842105
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9285714285714286
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.7142857142857143
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.5423728813559322
* Minimizing test suite
[MASTER] 00:42:45.182 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 64%
* Total number of goals: 64
* Number of covered goals: 41
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 54%
* Total number of goals: 59
* Number of covered goals: 32
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 58%
* Total number of goals: 319
* Number of covered goals: 186
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 32%
* Total number of goals: 19
* Number of covered goals: 6
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 79%
* Total number of goals: 14
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 54%
* Total number of goals: 59
* Number of covered goals: 32
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.609375
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5423728813559322
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.5454545454545454
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.3157894736842105
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9285714285714286
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.7142857142857143
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.5423728813559322
* Generated 44 tests with total length 470
* Resulting test suite's coverage: 65% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 00:43:36.578 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.85245% of time used, but only 12/44 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 18%
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.609375
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5423728813559322
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.5454545454545454
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.3157894736842105
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9285714285714286
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.7142857142857143
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.5423728813559322
* Compiling and checking tests
[MASTER] 00:43:55.095 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 00:43:55.100 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Heap heap0 = new Heap((VariableComparator) null);
int int0 = 0;
heap0.heapProperty(int0);
int int1 = 2686;
heap0.ok(int1);
int int2 = 1745;
heap0.ok(int2);
heap0.setBounds(int1);
heap0.percolateUp(int1);

[MASTER] 00:43:55.281 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 00:43:55.283 [logback-1] WARN  JUnitAnalyzer - Failing test:
 double[] doubleArray0 = new double[2];
doubleArray0[0] = (-49.59069351);
doubleArray0[1] = (-2350.28);
int[] intArray0 = new int[2];
int int0 = (-2307);
int int1 = (-2108);
intArray0[1] = (-2108);
LevelAndActivityVariableComparator levelAndActivityVariableComparator0 = new LevelAndActivityVariableComparator(doubleArray0, intArray0);
assertEquals("Level and activity based variable heuristic", levelAndActivityVariableComparator0.toString());
assertNotNull(levelAndActivityVariableComparator0);
assertArrayEquals(new double[] {(-49.59069351), (-2350.28)}, doubleArray0, 0.01);
assertArrayEquals(new int[] {0, (-2108)}, intArray0);
assertEquals(2, doubleArray0.length);
assertEquals(2, intArray0.length);

Heap heap0 = new Heap(levelAndActivityVariableComparator0);
assertEquals("Level and activity based variable heuristic", levelAndActivityVariableComparator0.toString());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertEquals(0, heap0.size());
assertNotNull(heap0);
assertArrayEquals(new double[] {(-49.59069351), (-2350.28)}, doubleArray0, 0.01);
assertArrayEquals(new int[] {0, (-2108)}, intArray0);
assertEquals(2, doubleArray0.length);
assertEquals(2, intArray0.length);

heap0.setBounds(1);
assertEquals("Level and activity based variable heuristic", levelAndActivityVariableComparator0.toString());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertEquals(0, heap0.size());
assertArrayEquals(new double[] {(-49.59069351), (-2350.28)}, doubleArray0, 0.01);
assertArrayEquals(new int[] {0, (-2108)}, intArray0);
assertEquals(2, doubleArray0.length);
assertEquals(2, intArray0.length);

boolean boolean0 = heap0.heapProperty(1);
assertEquals("Level and activity based variable heuristic", levelAndActivityVariableComparator0.toString());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertEquals(0, heap0.size());
assertArrayEquals(new double[] {(-49.59069351), (-2350.28)}, doubleArray0, 0.01);
assertArrayEquals(new int[] {0, (-2108)}, intArray0);
assertTrue(boolean0);
assertEquals(2, doubleArray0.length);
assertEquals(2, intArray0.length);

int int2 = (-1313);
heap0.insert(0);
assertEquals("Level and activity based variable heuristic", levelAndActivityVariableComparator0.toString());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertEquals(0, heap0.size());
assertArrayEquals(new double[] {(-49.59069351), (-2350.28)}, doubleArray0, 0.01);
assertArrayEquals(new int[] {0, (-2108)}, intArray0);
assertEquals(2, doubleArray0.length);
assertEquals(2, intArray0.length);

heap0.insert(1);

[MASTER] 00:43:59.423 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 00:43:59.425 [logback-1] WARN  JUnitAnalyzer - Failing test:
 double[] doubleArray0 = new double[1];
doubleArray0[0] = 0.0;
int[] intArray0 = new int[3];
intArray0[0] = 0;
intArray0[1] = 0;
intArray0[2] = (-1);
LevelAndActivityVariableComparator levelAndActivityVariableComparator0 = new LevelAndActivityVariableComparator(doubleArray0, intArray0);
assertEquals("Level and activity based variable heuristic", levelAndActivityVariableComparator0.toString());
assertNotNull(levelAndActivityVariableComparator0);
assertArrayEquals(new double[] {0.0}, doubleArray0, 0.01);
assertArrayEquals(new int[] {0, 0, (-1)}, intArray0);
assertEquals(1, doubleArray0.length);
assertEquals(3, intArray0.length);

boolean boolean0 = levelAndActivityVariableComparator0.preferredTo(0, 0);
assertEquals("Level and activity based variable heuristic", levelAndActivityVariableComparator0.toString());
assertArrayEquals(new double[] {0.0}, doubleArray0, 0.01);
assertArrayEquals(new int[] {0, 0, (-1)}, intArray0);
assertFalse(boolean0);
assertEquals(1, doubleArray0.length);
assertEquals(3, intArray0.length);

boolean boolean1 = levelAndActivityVariableComparator0.preferredTo(0, 0);
assertEquals("Level and activity based variable heuristic", levelAndActivityVariableComparator0.toString());
assertArrayEquals(new double[] {0.0}, doubleArray0, 0.01);
assertArrayEquals(new int[] {0, 0, (-1)}, intArray0);
assertTrue(boolean1 == boolean0);
assertFalse(boolean1);
assertEquals(1, doubleArray0.length);
assertEquals(3, intArray0.length);

Heap heap0 = new Heap(levelAndActivityVariableComparator0);
assertEquals("Level and activity based variable heuristic", levelAndActivityVariableComparator0.toString());
assertTrue(heap0.heapProperty());
assertTrue(heap0.empty());
assertEquals(0, heap0.size());
assertNotNull(heap0);
assertArrayEquals(new double[] {0.0}, doubleArray0, 0.01);
assertArrayEquals(new int[] {0, 0, (-1)}, intArray0);
assertEquals(1, doubleArray0.length);
assertEquals(3, intArray0.length);

int int0 = 0;
heap0.heapProperty(int0);
heap0.getmin();
heap0.heapProperty();
heap0.getmin();

* Writing tests to file
* Writing JUnit test case 'Heap_ESTest' to evosuite-tests
* Done!

* Computation finished
