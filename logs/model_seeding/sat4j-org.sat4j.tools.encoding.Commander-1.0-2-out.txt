* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.sat4j.tools.encoding.Commander
* Starting Client-0
* Connecting to master process on port 7574
* Analyzing classpath: 
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
* Finished analyzing classpath
* Generating tests for class org.sat4j.tools.encoding.Commander
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 234
* Using seed 1550360878282
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 61 / 234
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.22448979591836735
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.18181818181818182
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.10236220472440945
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.0
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.75
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.25
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.13636363636363635
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 200
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
[MASTER] 00:48:18.034 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.specs.IConstr
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 279
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.3673469387755102
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3181818181818182
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.3228346456692913
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.0
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.25
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 363
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 447
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 528
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.40816326530612246
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3181818181818182
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.3464566929133858
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.16666666666666666
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 561
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.40816326530612246
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3181818181818182
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.3464566929133858
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.16666666666666666
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.40816326530612246
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3181818181818182
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.3464566929133858
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.16666666666666666
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
* Search finished after 123s and 5 generations, 5686 statements, best individual has fitness: 152.0
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.40816326530612246
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3181818181818182
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.3464566929133858
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.16666666666666666
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
* Minimizing test suite
[MASTER] 00:51:20.806 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 41%
* Total number of goals: 49
* Number of covered goals: 20
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 32%
* Total number of goals: 22
* Number of covered goals: 7
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 35%
* Total number of goals: 127
* Number of covered goals: 44
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 17%
* Total number of goals: 6
* Number of covered goals: 1
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 18%
* Total number of goals: 22
* Number of covered goals: 4
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.40816326530612246
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3181818181818182
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.3464566929133858
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.16666666666666666
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
* Generated 13 tests with total length 214
* Resulting test suite's coverage: 49% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 00:52:22.987 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 13%
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.40816326530612246
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.3181818181818182
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.3464566929133858
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.16666666666666666
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.18181818181818182
* Compiling and checking tests
[MASTER] 00:52:42.609 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 00:52:42.611 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Commander commander0 = new Commander();
GateTranslator gateTranslator0 = mock(GateTranslator.class, new ViolatedAssumptionAnswer());
doReturn((IConstr) null).when(gateTranslator0).addClause(any(org.sat4j.specs.IVecInt.class));
doReturn("org.sat4j.tools.encoding.Commander", (String) null).when(gateTranslator0).getLogPrefix();
doReturn(false).when(gateTranslator0).isVerbose();
doReturn((-595)).when(gateTranslator0).nVars();
GroupClauseSelectorSolver<GateTranslator> groupClauseSelectorSolver0 = new GroupClauseSelectorSolver<GateTranslator>(gateTranslator0);
ModelIterator modelIterator0 = new ModelIterator(groupClauseSelectorSolver0, 704L);
IVecInt iVecInt0 = VecInt.EMPTY;
SolutionFoundListener solutionFoundListener0 = mock(SolutionFoundListener.class, new ViolatedAssumptionAnswer());
AbstractMinimalModel abstractMinimalModel0 = new AbstractMinimalModel(groupClauseSelectorSolver0, iVecInt0, solutionFoundListener0);
modelIterator0.nVars();
abstractMinimalModel0.getLogPrefix();
modelIterator0.isVerbose();
modelIterator0.getLogPrefix();
commander0.addExactlyOne(abstractMinimalModel0, iVecInt0);

[MASTER] 00:52:47.619 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 00:52:47.624 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Commander commander0 = new Commander();
GateTranslator gateTranslator0 = mock(GateTranslator.class, new ViolatedAssumptionAnswer());
doReturn("org.sat4j.tools.encoding.Commander", (String) null).when(gateTranslator0).getLogPrefix();
doReturn(false).when(gateTranslator0).isVerbose();
doReturn(1).when(gateTranslator0).nVars();
GroupClauseSelectorSolver<GateTranslator> groupClauseSelectorSolver0 = new GroupClauseSelectorSolver<GateTranslator>(gateTranslator0);
ModelIterator modelIterator0 = new ModelIterator(groupClauseSelectorSolver0, 704L);
IVecInt iVecInt0 = VecInt.EMPTY;
SolutionFoundListener solutionFoundListener0 = mock(SolutionFoundListener.class, new ViolatedAssumptionAnswer());
AbstractMinimalModel abstractMinimalModel0 = new AbstractMinimalModel(groupClauseSelectorSolver0, iVecInt0, solutionFoundListener0);
int int0 = modelIterator0.nVars();
abstractMinimalModel0.getLogPrefix();
modelIterator0.isVerbose();
modelIterator0.getLogPrefix();
String[] stringArray0 = new String[6];
stringArray0[0] = null;
stringArray0[1] = "%L$9@ZAM>tD~&NZV";
stringArray0[2] = "org.sat4j.tools.encoding.Commander";
stringArray0[3] = "org.sat4j.tools.encoding.Commander";
stringArray0[4] = "-lBD?<&2*5L";
commander0.addAtMostOne(abstractMinimalModel0, iVecInt0);
commander0.addExactly(modelIterator0, iVecInt0, int0);
String string0 = "G`NG'3W'fIr";
stringArray0[5] = string0;
int int1 = (-491);
commander0.addExactly(modelIterator0, iVecInt0, int1);

[MASTER] 00:52:51.593 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 00:52:51.595 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Commander commander0 = new Commander();
GateTranslator gateTranslator0 = mock(GateTranslator.class, new ViolatedAssumptionAnswer());
doReturn((IConstr) null).when(gateTranslator0).addClause(any(org.sat4j.specs.IVecInt.class));
doReturn("org.sat4j.tools.encoding.Commander", (String) null).when(gateTranslator0).getLogPrefix();
doReturn(false).when(gateTranslator0).isVerbose();
doReturn((-595)).when(gateTranslator0).nVars();
GroupClauseSelectorSolver<GateTranslator> groupClauseSelectorSolver0 = new GroupClauseSelectorSolver<GateTranslator>(gateTranslator0);
ModelIterator modelIterator0 = new ModelIterator(groupClauseSelectorSolver0, 704L);
IVecInt iVecInt0 = VecInt.EMPTY;
SolutionFoundListener solutionFoundListener0 = mock(SolutionFoundListener.class, new ViolatedAssumptionAnswer());
AbstractMinimalModel abstractMinimalModel0 = new AbstractMinimalModel(groupClauseSelectorSolver0, iVecInt0, solutionFoundListener0);
modelIterator0.nVars();
abstractMinimalModel0.getLogPrefix();
modelIterator0.isVerbose();
modelIterator0.getLogPrefix();
String[] stringArray0 = new String[6];
stringArray0[0] = "org.sat4j.tools.encoding.Commander";
stringArray0[1] = "%L$9@ZAM>tD~&NZV";
stringArray0[2] = "org.sat4j.tools.encoding.Commander";
stringArray0[3] = "org.sat4j.tools.encoding.Commander";
stringArray0[4] = "-lBD?<&2*5L";
commander0.addExactlyOne(modelIterator0, iVecInt0);

* Writing tests to file
* Writing JUnit test case 'Commander_ESTest' to evosuite-tests
* Done!

* Computation finished
