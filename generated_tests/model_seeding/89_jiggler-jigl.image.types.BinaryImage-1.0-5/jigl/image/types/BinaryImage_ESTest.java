/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 25 20:32:14 GMT 2019
 */

package jigl.image.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.swing.JLayeredPane;
import jigl.image.InterpolationMethod;
import jigl.image.ROI;
import jigl.image.types.BinaryImage;
import jigl.image.types.GrayImage;
import jigl.image.types.InterpolatedGrayImage;
import jigl.image.types.InterpolatedRealColorImage;
import jigl.image.types.MagnitudeImage;
import jigl.image.types.PowerImage;
import jigl.image.types.RealGrayImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BinaryImage_ESTest extends BinaryImage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((RealGrayImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((GrayImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-26);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-37);
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)8;
      byteArray0[6] = (byte)109;
      byteArray0[7] = (byte)10;
      byteArray0[8] = (byte) (-52);
      BinaryImage binaryImage0 = new BinaryImage(0, 0, byteArray0);
      binaryImage0.copy();
      binaryImage0.copy();
      binaryImage0.getJavaImage();
      InterpolatedRealColorImage interpolatedRealColorImage0 = new InterpolatedRealColorImage();
      InterpolatedRealColorImage interpolatedRealColorImage1 = new InterpolatedRealColorImage(interpolatedRealColorImage0);
      // Undeclared exception!
      try { 
        interpolatedRealColorImage1.plane((-1435));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1435
         //
         verifyException("jigl.image.types.RealColorImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(8, 8);
      // Undeclared exception!
      try { 
        binaryImage0.getData();
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.getJavaImage();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(25, 25);
      BinaryImage binaryImage1 = new BinaryImage(14, 14);
      // Undeclared exception!
      try { 
        binaryImage0.union(binaryImage1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 0);
      binaryImage0.getData();
      int[] intArray0 = new int[4];
      intArray0[0] = 860;
      intArray0[1] = 860;
      intArray0[2] = 860;
      intArray0[3] = 860;
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage(860, 860, intArray0);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      ROI rOI0 = new ROI(0, 8, 16, 0);
      Integer integer0 = new Integer(0);
      rOI0.Y();
      rOI0.uy();
      Integer integer1 = new Integer(0);
      Integer integer2 = new Integer((int) integer1);
      rOI0.Y();
      rOI0.X();
      rOI0.uy();
      rOI0.setROI(123, 17, 9, 0);
      Integer integer3 = new Integer(17);
      rOI0.Y();
      Integer integer4 = new Integer(9);
      rOI0.Y();
      binaryImage0.max();
      binaryImage0.getData();
      rOI0.setROI(0, 1559, 18, (-1233));
      binaryImage0.getData();
      binaryImage0.max();
      binaryImage0.max();
      binaryImage0.getData();
      binaryImage0.X();
      Byte byte0 = new Byte((byte)0);
      Byte.compare((byte)22, (byte)0);
      byte0.byteValue();
      // Undeclared exception!
      try { 
        binaryImage0.set(0, 2184, (Byte) (byte)0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 0);
      binaryImage0.getData();
      Byte.valueOf((byte)87);
      Byte.toUnsignedLong((byte)87);
      Byte byte0 = binaryImage0.max();
      binaryImage0.X();
      byte0.byteValue();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(8, 8);
      binaryImage0.difference(binaryImage0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.min();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[][] byteArray0 = new byte[7][1];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-128);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[4];
      byteArray2[0] = (byte) (-128);
      byteArray2[1] = (byte) (-128);
      byteArray2[2] = (byte) (-128);
      byteArray2[3] = (byte) (-128);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[0];
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[8];
      byteArray4[0] = (byte) (-128);
      byteArray4[1] = (byte) (-128);
      byteArray4[2] = (byte) (-128);
      byteArray4[3] = (byte) (-128);
      byteArray4[4] = (byte) (-128);
      byteArray4[5] = (byte) (-128);
      byteArray4[6] = (byte) (-128);
      byteArray4[7] = (byte) (-128);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[8];
      byteArray5[0] = (byte) (-128);
      byteArray5[1] = (byte) (-128);
      byteArray5[2] = (byte) (-128);
      byteArray5[3] = (byte) (-128);
      byteArray5[4] = (byte) (-128);
      byteArray5[5] = (byte) (-128);
      byteArray5[6] = (byte) (-128);
      byteArray5[7] = (byte) (-128);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[8];
      byteArray6[0] = (byte) (-128);
      byteArray6[1] = (byte) (-128);
      byteArray6[2] = (byte) (-128);
      byteArray6[3] = (byte) (-128);
      byteArray6[4] = (byte) (-128);
      byteArray6[5] = (byte)0;
      byteArray6[6] = (byte) (-128);
      byteArray6[7] = (byte) (-128);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[7];
      byteArray7[0] = (byte) (-128);
      byteArray7[1] = (byte)0;
      byteArray7[2] = (byte) (-128);
      byteArray7[3] = (byte)0;
      byteArray7[4] = (byte) (-128);
      byteArray7[5] = (byte) (-128);
      byteArray7[6] = (byte) (-128);
      byteArray0[6] = byteArray7;
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = new BinaryImage();
      Byte byte0 = Byte.valueOf((byte)50);
      // Undeclared exception!
      try { 
        binaryImage0.clear(byte0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[][] byteArray0 = new byte[0][8];
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      binaryImage0.getData();
      BinaryImage binaryImage1 = new BinaryImage();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = 0;
      int int1 = 916;
      BinaryImage binaryImage0 = new BinaryImage(0, 916);
      Byte byte0 = new Byte((byte)67);
      byte0.byteValue();
      Byte.toUnsignedInt((byte)67);
      // Undeclared exception!
      try { 
        binaryImage0.clear((Byte) (byte)67);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(499, 1927);
      // Undeclared exception!
      binaryImage0.shift(1927, 1927);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(8, 8);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      byte[][] byteArray0 = new byte[0][7];
      BinaryImage binaryImage1 = new BinaryImage(byteArray0);
      // Undeclared exception!
      try { 
        binaryImage0.intersection(binaryImage1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = null;
      try {
        binaryImage1 = new BinaryImage((-5), (-5));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(8, 720);
      // Undeclared exception!
      try { 
        binaryImage0.union((BinaryImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      ROI rOI0 = new ROI(0, 8, 16, 0);
      rOI0.X();
      rOI0.Y();
      rOI0.uy();
      rOI0.X();
      rOI0.Y();
      rOI0.Y();
      rOI0.X();
      rOI0.Y();
      rOI0.setROI(0, 9, 9, (-3020));
      rOI0.uy();
      rOI0.ly();
      // Undeclared exception!
      try { 
        binaryImage0.copy(rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(8, 8);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      ROI rOI0 = new ROI();
      rOI0.ux();
      rOI0.ux();
      binaryImage1.difference(binaryImage0);
      PowerImage powerImage0 = new PowerImage(483, 0);
      powerImage0.divide((-1.0F));
      RealGrayImage realGrayImage0 = powerImage0.divide(193.22F);
      BinaryImage binaryImage2 = new BinaryImage(realGrayImage0);
      // Undeclared exception!
      try { 
        binaryImage2.copy(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(8, 8);
      BinaryImage binaryImage1 = binaryImage0.shift(8, (-5));
      binaryImage1.getJavaImage();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 0);
      binaryImage0.getData();
      binaryImage0.max();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)19;
      byteArray0[0] = (byte)19;
      byteArray0[6] = (byte) (-83);
      BinaryImage binaryImage1 = new BinaryImage(0, 0, byteArray0);
      Byte.valueOf((byte)0);
      Byte.valueOf((byte)50);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[0] = (byte)8;
      byteArray0[4] = (byte)8;
      byteArray0[5] = (byte)6;
      byteArray0[6] = (byte)6;
      Byte byte0 = Byte.valueOf((byte)69);
      byte0.byteValue();
      byte[][] byteArray1 = new byte[7][8];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      byteArray1[4] = byteArray0;
      byteArray1[5] = byteArray0;
      byteArray1[6] = byteArray0;
      BinaryImage binaryImage0 = new BinaryImage(byteArray1);
      BinaryImage binaryImage1 = new BinaryImage(2167, (byte)0);
      // Undeclared exception!
      try { 
        binaryImage0.intersection(binaryImage1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(25, 25);
      ROI rOI0 = new ROI(25, 25, 25, 25);
      rOI0.ux();
      BinaryImage binaryImage1 = binaryImage0.difference(binaryImage0);
      // Undeclared exception!
      try { 
        binaryImage1.copy(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 25
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[][] byteArray0 = new byte[5][5];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte) (-52);
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte)92;
      byteArray1[4] = (byte)67;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte)0;
      byteArray2[1] = (byte)92;
      byteArray2[2] = (byte)0;
      byteArray2[3] = (byte)67;
      byteArray2[4] = (byte)0;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[0];
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[2];
      byteArray4[0] = (byte)92;
      byteArray4[1] = (byte) (-52);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[0];
      byteArray0[4] = byteArray5;
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PowerImage powerImage0 = new PowerImage(1927, 2280);
      BinaryImage binaryImage0 = new BinaryImage(2280, 1927);
      BinaryImage binaryImage1 = new BinaryImage(2280, 2280);
      // Undeclared exception!
      binaryImage1.intersection(binaryImage0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 0);
      binaryImage0.getData();
      Byte.valueOf((byte)87);
      Byte.toUnsignedLong((byte)87);
      binaryImage0.max();
      binaryImage0.X();
      Byte byte0 = Byte.valueOf((byte) (-102));
      // Undeclared exception!
      try { 
        binaryImage0.set((int) (byte)87, 0, byte0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      ROI rOI0 = new ROI(0, 8, 16, 0);
      Integer integer0 = new Integer(0);
      rOI0.uy();
      rOI0.X();
      Integer integer1 = new Integer(0);
      rOI0.X();
      rOI0.Y();
      rOI0.setROI(16, Integer.MIN_VALUE, 17, 9);
      rOI0.ly();
      // Undeclared exception!
      try { 
        binaryImage0.copy(rOI0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.getData();
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ROI rOI0 = new ROI();
      rOI0.ux();
      rOI0.ux();
      rOI0.lx();
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((BinaryImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = 8;
      BinaryImage binaryImage0 = new BinaryImage(8, 8);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      // Undeclared exception!
      try { 
        binaryImage1.getData();
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      Byte byte0 = binaryImage0.max();
      binaryImage0.getData();
      int int0 = new Integer(16);
      // Undeclared exception!
      try { 
        binaryImage0.set(743, (-1233), byte0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      // Undeclared exception!
      try { 
        binaryImage0.clear((Byte) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(8, 8);
      binaryImage0.getJavaImage();
      byte[] byteArray0 = new byte[0];
      BinaryImage binaryImage1 = null;
      try {
        binaryImage1 = new BinaryImage(8, (-715), byteArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(8, 8);
      BinaryImage binaryImage1 = binaryImage0.shift(8, 8);
      binaryImage0.shift(8, (-716));
      binaryImage1.shift((-86), (-1074));
      binaryImage0.compliment();
      // Undeclared exception!
      try { 
        binaryImage1.difference((BinaryImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      // Undeclared exception!
      try { 
        binaryImage0.copy((ROI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)31;
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte)9;
      byteArray0[4] = (byte)34;
      byteArray0[5] = (byte)9;
      byte[][] byteArray1 = new byte[8][6];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      byteArray1[4] = byteArray0;
      byteArray1[5] = byteArray0;
      byteArray1[6] = byteArray0;
      byteArray1[7] = byteArray0;
      BinaryImage binaryImage0 = new BinaryImage(byteArray1);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage1.X();
      ((Byte)(byte)34).byteValue();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[][] byteArray0 = new byte[1][3];
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      binaryImage0.count();
      binaryImage0.getJavaImage();
      binaryImage0.shift(0, (byte)10);
      binaryImage0.compliment();
      // Undeclared exception!
      try { 
        binaryImage0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.getData();
      // Undeclared exception!
      try { 
        binaryImage0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(8, 8);
      BinaryImage binaryImage1 = binaryImage0.shift(8, 8);
      BinaryImage binaryImage2 = binaryImage1.difference(binaryImage0);
      binaryImage2.shift((-3552), (-1));
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)31;
      byteArray0[2] = (byte)8;
      BinaryImage binaryImage0 = new BinaryImage(5, 1548);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      int int0 = (-637);
      binaryImage0.shift(16, (-637));
      // Undeclared exception!
      try { 
        binaryImage1.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(8, 8);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      InterpolatedGrayImage interpolatedGrayImage0 = mock(InterpolatedGrayImage.class, new ViolatedAssumptionAnswer());
      doReturn(8).when(interpolatedGrayImage0).X();
      doReturn(0).when(interpolatedGrayImage0).Y();
      doReturn(interpolationMethod0).when(interpolatedGrayImage0).getInterpolationMethod();
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage(interpolatedGrayImage0);
      interpolatedGrayImage1.clip(9, 9);
      interpolatedGrayImage1.clip(0, 0);
      BinaryImage binaryImage1 = new BinaryImage(interpolatedGrayImage1);
      binaryImage0.difference(binaryImage1);
      Integer integer0 = new Integer(0);
      binaryImage1.Y();
      binaryImage1.union(binaryImage0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(5, 31);
      BinaryImage binaryImage1 = binaryImage0.shift((byte)0, 5);
      binaryImage1.shift(5, 31);
      BinaryImage binaryImage2 = binaryImage1.shift((-86), (-1074));
      BinaryImage binaryImage3 = binaryImage2.compliment();
      binaryImage0.difference(binaryImage3);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[][] byteArray0 = new byte[0][1];
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      binaryImage0.copy();
      int int0 = (-4816);
      byte byte0 = (byte)0;
      Byte byte1 = new Byte((byte)0);
      Byte.toUnsignedLong((byte) (-1));
      Byte.toUnsignedLong((byte)0);
      ROI rOI0 = new ROI();
      rOI0.ux();
      binaryImage0.toString();
      rOI0.ux();
      rOI0.lx();
      // Undeclared exception!
      try { 
        binaryImage0.set(0, (int) (byte)0, byte1, rOI0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(8, 8);
      InterpolationMethod interpolationMethod0 = InterpolationMethod.CUBIC;
      InterpolatedGrayImage interpolatedGrayImage0 = mock(InterpolatedGrayImage.class, new ViolatedAssumptionAnswer());
      doReturn(8).when(interpolatedGrayImage0).X();
      doReturn(0).when(interpolatedGrayImage0).Y();
      doReturn(interpolationMethod0).when(interpolatedGrayImage0).getInterpolationMethod();
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage(interpolatedGrayImage0);
      interpolatedGrayImage1.clip(0, 0);
      BinaryImage binaryImage1 = new BinaryImage(interpolatedGrayImage1);
      binaryImage0.difference(binaryImage1);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(8, 8);
      BinaryImage binaryImage1 = binaryImage0.shift(8, 8);
      binaryImage1.difference(binaryImage0);
      binaryImage1.X();
      Byte byte0 = Byte.valueOf((byte)69);
      // Undeclared exception!
      try { 
        binaryImage0.set((-1), (-1), byte0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((byte[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(8, 8);
      BinaryImage binaryImage1 = binaryImage0.intersection(binaryImage0);
      // Undeclared exception!
      try { 
        binaryImage1.get(Integer.MIN_VALUE, 14);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      int int0 = 0;
      BinaryImage binaryImage0 = new BinaryImage(0, 1566);
      binaryImage0.copy();
      Byte byte0 = Byte.valueOf((byte)50);
      // Undeclared exception!
      try { 
        binaryImage0.clear(byte0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ROI rOI0 = new ROI();
      rOI0.ux();
      rOI0.ux();
      rOI0.lx();
      RealGrayImage realGrayImage0 = null;
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((RealGrayImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(1927, 1927);
      // Undeclared exception!
      binaryImage0.compliment();
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(2805, 1700);
      ROI rOI0 = new ROI(0, 8, 16, 0);
      rOI0.X();
      rOI0.Y();
      rOI0.uy();
      rOI0.X();
      rOI0.Y();
      rOI0.Y();
      rOI0.X();
      rOI0.setROI(0, 10, 16, 9);
      rOI0.Y();
      rOI0.uy();
      rOI0.ly();
      binaryImage0.copy(rOI0);
      // Undeclared exception!
      binaryImage0.count();
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      int int0 = 8;
      binaryImage0.shift(2045, 8);
      binaryImage0.copy();
      binaryImage0.getJavaImage();
      binaryImage0.max();
      int int1 = 1;
      binaryImage0.getJavaImage();
      BinaryImage binaryImage1 = binaryImage0.shift(8, 1);
      binaryImage0.max();
      BinaryImage binaryImage2 = binaryImage0.intersection(binaryImage1);
      binaryImage2.getJavaImage();
      binaryImage0.union(binaryImage1);
      binaryImage1.difference(binaryImage2);
      MagnitudeImage magnitudeImage0 = null;
      try {
        magnitudeImage0 = new MagnitudeImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.AbstractArrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = mock(InterpolatedGrayImage.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(interpolatedGrayImage0).X();
      doReturn(0).when(interpolatedGrayImage0).Y();
      doReturn((InterpolationMethod) null).when(interpolatedGrayImage0).getInterpolationMethod();
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage(interpolatedGrayImage0);
      interpolatedGrayImage1.clip(9, 9);
      int int0 = 0;
      interpolatedGrayImage1.clip(0, 0);
      BinaryImage binaryImage0 = new BinaryImage(interpolatedGrayImage1);
      binaryImage0.toString();
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      BinaryImage binaryImage2 = binaryImage1.shift(0, 0);
      // Undeclared exception!
      try { 
        binaryImage2.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(8, 8);
      BinaryImage binaryImage1 = new BinaryImage();
      // Undeclared exception!
      try { 
        binaryImage0.intersection(binaryImage1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.copy();
      // Undeclared exception!
      try { 
        binaryImage0.get((-956), 6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(8, 8);
      BinaryImage binaryImage1 = binaryImage0.shift(8, 8);
      binaryImage1.toString();
      BinaryImage binaryImage2 = binaryImage0.union(binaryImage0);
      BinaryImage binaryImage3 = binaryImage1.difference(binaryImage2);
      binaryImage1.intersection(binaryImage0);
      binaryImage2.X();
      Byte byte0 = Byte.valueOf((byte) (-102));
      // Undeclared exception!
      try { 
        binaryImage3.set(448, 0, byte0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 448
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.copy();
      BinaryImage binaryImage1 = new BinaryImage(8, 605);
      binaryImage0.compliment();
      BinaryImage binaryImage2 = binaryImage1.difference(binaryImage0);
      // Undeclared exception!
      binaryImage2.difference(binaryImage1);
  }
}
