/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 25 10:59:56 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jahuwaldt.plot.RTriangle1Symbol;
import jahuwaldt.plot.RTriangle2Symbol;
import jahuwaldt.plot.RTriangle4Symbol;
import jahuwaldt.plot.TabUpSymbol;
import jahuwaldt.plot.Triangle3Symbol;
import jahuwaldt.plot.Triangle4Symbol;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.SystemColor;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.Element;
import javax.swing.text.LabelView;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlotSymbol_ESTest extends PlotSymbol_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Triangle3Symbol triangle3Symbol0 = new Triangle3Symbol();
      assertEquals(8, triangle3Symbol0.getSize());
      
      triangle3Symbol0.setSize(0);
      int int0 = triangle3Symbol0.getSize();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RTriangle1Symbol rTriangle1Symbol0 = new RTriangle1Symbol();
      int int0 = rTriangle1Symbol0.getSize();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RTriangle2Symbol rTriangle2Symbol0 = new RTriangle2Symbol();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      Element element0 = defaultStyledDocument0.getParagraphElement(2558);
      LabelView labelView0 = new LabelView(element0);
      Color color0 = labelView0.getForeground();
      rTriangle2Symbol0.setFillColor(color0);
      rTriangle2Symbol0.getFillColor();
      assertEquals(8, rTriangle2Symbol0.getSize());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RTriangle2Symbol rTriangle2Symbol0 = new RTriangle2Symbol();
      SystemColor systemColor0 = SystemColor.controlHighlight;
      rTriangle2Symbol0.setFillColor(systemColor0);
      rTriangle2Symbol0.getFillColor();
      assertEquals(8, rTriangle2Symbol0.getSize());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Triangle3Symbol triangle3Symbol0 = new Triangle3Symbol();
      triangle3Symbol0.setBorderColor((Color) null);
      triangle3Symbol0.getBorderColor();
      assertEquals(8, triangle3Symbol0.getSize());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RTriangle4Symbol rTriangle4Symbol0 = new RTriangle4Symbol();
      Color color0 = new Color((-1007));
      rTriangle4Symbol0.setBorderColor(color0);
      rTriangle4Symbol0.getBorderColor();
      assertEquals(8, rTriangle4Symbol0.getSize());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RTriangle2Symbol rTriangle2Symbol0 = new RTriangle2Symbol();
      rTriangle2Symbol0.getFillColor();
      assertEquals(8, rTriangle2Symbol0.getSize());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RTriangle4Symbol rTriangle4Symbol0 = new RTriangle4Symbol();
      rTriangle4Symbol0.getBorderColor();
      assertEquals(8, rTriangle4Symbol0.getSize());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RTriangle4Symbol rTriangle4Symbol0 = new RTriangle4Symbol();
      RTriangle4Symbol rTriangle4Symbol1 = (RTriangle4Symbol)rTriangle4Symbol0.clone();
      assertEquals(8, rTriangle4Symbol1.getSize());
      assertNotSame(rTriangle4Symbol1, rTriangle4Symbol0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Triangle4Symbol triangle4Symbol0 = new Triangle4Symbol();
      triangle4Symbol0.setSize((-705));
      int int0 = triangle4Symbol0.getSize();
      assertEquals((-705), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TabUpSymbol tabUpSymbol0 = new TabUpSymbol();
      // Undeclared exception!
      try { 
        tabUpSymbol0.draw((Graphics) null, 12, 12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PolygonSymbol", e);
      }
  }
}
