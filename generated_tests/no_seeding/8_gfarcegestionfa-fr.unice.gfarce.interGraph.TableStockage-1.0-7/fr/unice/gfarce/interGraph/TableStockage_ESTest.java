/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 20:33:44 GMT 2019
 */

package fr.unice.gfarce.interGraph;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import fr.unice.gfarce.interGraph.TableStockage;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import javax.swing.JLayeredPane;
import javax.swing.JPasswordField;
import javax.swing.plaf.synth.SynthSliderUI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TableStockage_ESTest extends TableStockage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      Boolean boolean0 = Boolean.valueOf("fr.unice.gfarce.interGraph.TableStockage");
      // Undeclared exception!
      try { 
        tableStockage0.remplirMatrice(boolean0, (-70), 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -71
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[6];
      Object[][] objectArray0 = new Object[10][7];
      TableStockage tableStockage0 = new TableStockage(stringArray0, objectArray0);
      Class<Boolean> class0 = Boolean.class;
      tableStockage0.setColumnClass(2, class0);
      assertEquals(10, tableStockage0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String[] stringArray0 = new String[5];
      Object[][] objectArray0 = new Object[7][4];
      objectArray0[0] = (Object[]) stringArray0;
      objectArray0[1] = (Object[]) stringArray0;
      objectArray0[2] = (Object[]) stringArray0;
      objectArray0[3] = (Object[]) stringArray0;
      objectArray0[4] = (Object[]) stringArray0;
      objectArray0[5] = (Object[]) stringArray0;
      objectArray0[6] = (Object[]) stringArray0;
      TableStockage tableStockage0 = new TableStockage(stringArray0, objectArray0);
      Class<String> class0 = String.class;
      tableStockage0.setColumnClass(0, class0);
      assertEquals(7, tableStockage0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(3310, 995);
      tableStockage0.setColumnName(24, "");
      assertEquals(3309, tableStockage0.getRowCount());
      assertEquals(995, tableStockage0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(2110, 2110);
      tableStockage0.remplirMatrice(tableStockage0, 1444, 2083);
      assertEquals(2109, tableStockage0.getRowCount());
      assertEquals(2110, tableStockage0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(3310, 995);
      tableStockage0.getValueAt(995, 0);
      assertEquals(995, tableStockage0.getColumnCount());
      assertEquals(3309, tableStockage0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      Object[][] objectArray0 = new Object[3][4];
      objectArray0[0] = (Object[]) stringArray0;
      objectArray0[1] = (Object[]) stringArray0;
      objectArray0[2] = (Object[]) stringArray0;
      TableStockage tableStockage0 = new TableStockage(stringArray0, objectArray0);
      Object object0 = tableStockage0.getValueAt(0, 0);
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      int int0 = tableStockage0.getRowCount();
      assertEquals(0, int0);
      assertEquals(0, tableStockage0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(4655, 4655);
      String[] stringArray0 = tableStockage0.getNomColonnes();
      assertEquals(4654, tableStockage0.getRowCount());
      assertEquals(4655, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "T ";
      Object[][] objectArray0 = new Object[6][1];
      objectArray0[0] = (Object[]) stringArray0;
      objectArray0[1] = (Object[]) stringArray0;
      objectArray0[2] = (Object[]) stringArray0;
      objectArray0[3] = (Object[]) stringArray0;
      objectArray0[4] = (Object[]) stringArray0;
      objectArray0[5] = (Object[]) stringArray0;
      TableStockage tableStockage0 = new TableStockage(stringArray0, objectArray0);
      String string0 = tableStockage0.getColumnName(0);
      assertEquals("T ", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[1] = "";
      Object[][] objectArray0 = new Object[2][5];
      TableStockage tableStockage0 = new TableStockage(stringArray0, objectArray0);
      String string0 = tableStockage0.getColumnName(1);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      int int0 = tableStockage0.getColumnCount();
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        tableStockage0.setValueAt(object0, 995, 995);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      // Undeclared exception!
      try { 
        tableStockage0.setColumnClass((-6), (Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      // Undeclared exception!
      try { 
        tableStockage0.getColumnName((-1864));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1864
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      // Undeclared exception!
      try { 
        tableStockage0.getColumnClass((-536));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String[] stringArray0 = new String[0];
      TableStockage tableStockage0 = null;
      try {
        tableStockage0 = new TableStockage(stringArray0, (Object[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String[] stringArray0 = new String[18];
      Object[][] objectArray0 = new Object[1][9];
      TableStockage tableStockage0 = null;
      try {
        tableStockage0 = new TableStockage(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TableStockage tableStockage0 = null;
      try {
        tableStockage0 = new TableStockage(0, (-62));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(3310, 995);
      Object object0 = new Object();
      tableStockage0.setValueAt(object0, 995, 921);
      assertEquals(3309, tableStockage0.getRowCount());
      assertEquals(995, tableStockage0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      // Undeclared exception!
      try { 
        tableStockage0.getValueAt(2083, 997);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2083
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(2965, 2965);
      int int0 = tableStockage0.getRowCount();
      assertEquals(2965, tableStockage0.getColumnCount());
      assertEquals(2964, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(2110, 2110);
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      // Undeclared exception!
      try { 
        tableStockage0.remplirMatrice(integer0, 0, 2110);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to java.lang.String
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(596, 596);
      Class<Boolean> class0 = Boolean.class;
      // Undeclared exception!
      try { 
        tableStockage0.setColumnClass(596, class0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          TableStockage tableStockage0 = new TableStockage(2965, 2965);
          Class<Integer> class0 = Integer.class;
          tableStockage0.setColumnClass(2003, class0);
          Class<JPasswordField> class1 = JPasswordField.class;
          tableStockage0.setColumnClass(0, class1);
          tableStockage0.setColumnClass(762, class1);
          Class<SynthSliderUI> class2 = SynthSliderUI.class;
          // Undeclared exception!
          tableStockage0.setColumnClass(2964, class2);
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      boolean boolean0 = tableStockage0.isCellEditable(565, 565);
      assertEquals(0, tableStockage0.getRowCount());
      assertTrue(boolean0);
      assertEquals(0, tableStockage0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(2965, 2965);
      int int0 = tableStockage0.getColumnCount();
      assertEquals(2964, tableStockage0.getRowCount());
      assertEquals(2965, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Object[][] objectArray0 = new Object[0][9];
      TableStockage tableStockage0 = new TableStockage(stringArray0, objectArray0);
      String[] stringArray1 = tableStockage0.getNomColonnes();
      assertSame(stringArray1, stringArray0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      // Undeclared exception!
      try { 
        tableStockage0.setColumnName(1, "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(1, 2);
      tableStockage0.getColumnName(0);
      assertEquals(2, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(555, 1);
      tableStockage0.getColumnClass(0);
      assertEquals(554, tableStockage0.getRowCount());
      assertEquals(1, tableStockage0.getColumnCount());
  }
}
