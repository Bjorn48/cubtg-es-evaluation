/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 09:36:30 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import jahuwaldt.plot.PlotDatum;
import jahuwaldt.plot.PlotSymbol;
import jahuwaldt.plot.RTriangle2Symbol;
import jahuwaldt.plot.TabDSymbol;
import jahuwaldt.plot.Triangle3Symbol;
import java.awt.Color;
import java.awt.SystemColor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlotDatum_ESTest extends PlotDatum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(38.1537557, 100.0, true);
      plotDatum0.setX((-2971.42576139));
      assertEquals((-2971.42576139), plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1.0, 0.0, false, (PlotSymbol) null);
      plotDatum0.setYError((-1.0));
      boolean boolean0 = plotDatum0.hasErrorBar();
      assertEquals((-1.0), plotDatum0.getYError(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1.0, 0.0, false, (PlotSymbol) null);
      plotDatum0.setYError((-1.0));
      double double0 = plotDatum0.getYError();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-2754.035642), 100.0, false);
      assertEquals(100.0, plotDatum0.y, 0.01);
      
      plotDatum0.setY(0.0);
      double double0 = plotDatum0.getY();
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-536.721789709), (-536.721789709), false);
      double double0 = plotDatum0.getY();
      assertEquals((-536.721789709), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(plotDatum0.connected());
      assertEquals((-536.721789709), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Triangle3Symbol triangle3Symbol0 = new Triangle3Symbol();
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, false, triangle3Symbol0);
      plotDatum0.x = 992.774;
      double double0 = plotDatum0.getX();
      assertEquals(992.774, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-1976.207711189678), 1743.127665, false);
      double double0 = plotDatum0.getX();
      assertEquals((-1976.207711189678), double0, 0.01);
      assertFalse(plotDatum0.connected());
      assertEquals(1743.127665, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TabDSymbol tabDSymbol0 = new TabDSymbol();
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, false, tabDSymbol0);
      plotDatum0.getPlotSymbol();
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1304.2283740874, 610.316, false);
      RTriangle2Symbol rTriangle2Symbol0 = new RTriangle2Symbol();
      rTriangle2Symbol0.setSize((-1845));
      plotDatum0.setPlotSymbol(rTriangle2Symbol0);
      plotDatum0.getPlotSymbol();
      assertFalse(plotDatum0.connected());
      assertEquals(1304.2283740874, plotDatum0.x, 0.01);
      assertEquals(610.316, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-2754.035642), 100.0, false);
      SystemColor systemColor0 = SystemColor.textHighlightText;
      plotDatum0.setLineColor(systemColor0);
      plotDatum0.getLineColor();
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-2754.035642), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.connected());
      assertEquals(100.0, plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-2606.5304595121333), (-2606.5304595121333), false);
      boolean boolean0 = plotDatum0.connected();
      assertFalse(boolean0);
      assertEquals((-2606.5304595121333), plotDatum0.y, 0.01);
      assertEquals((-2606.5304595121333), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1304.2283740874, 610.316, false);
      RTriangle2Symbol rTriangle2Symbol0 = new RTriangle2Symbol();
      plotDatum0.setPlotSymbol(rTriangle2Symbol0);
      PlotDatum plotDatum1 = (PlotDatum)plotDatum0.clone();
      assertEquals(1304.2283740874, plotDatum1.x, 0.01);
      assertNotSame(plotDatum1, plotDatum0);
      assertFalse(plotDatum1.connected());
      assertFalse(plotDatum1.hasErrorBar());
      assertEquals(610.316, plotDatum1.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 1039.59423, true);
      PlotDatum plotDatum1 = (PlotDatum)plotDatum0.clone();
      assertEquals(0.0, plotDatum1.x, 0.01);
      assertEquals(1039.59423, plotDatum1.y, 0.01);
      assertTrue(plotDatum1.connected());
      assertNotSame(plotDatum1, plotDatum0);
      assertFalse(plotDatum1.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 1039.59423, true);
      Color color0 = new Color(1940);
      plotDatum0.setLineColor(color0);
      Color color1 = plotDatum0.getLineColor();
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertEquals(1039.59423, plotDatum0.y, 0.01);
      assertTrue(plotDatum0.connected());
      assertEquals(148, color1.getBlue());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(2214.83, 2214.83, false);
      plotDatum0.setLineColor((Color) null);
      assertEquals(2214.83, plotDatum0.x, 0.01);
      assertEquals(2214.83, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, false);
      plotDatum0.setYError(0.0);
      assertFalse(plotDatum0.connected());
      assertEquals(0.0, plotDatum0.getYError(), 0.01);
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 1039.59423, true);
      plotDatum0.setYError(1039.59423);
      double double0 = plotDatum0.getYError();
      assertTrue(plotDatum0.hasErrorBar());
      assertEquals(1039.59423, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 1039.59423, true);
      double double0 = plotDatum0.getYError();
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(1039.59423, plotDatum0.y, 0.01);
      assertTrue(plotDatum0.connected());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 1039.59423, true);
      boolean boolean0 = plotDatum0.connected();
      assertTrue(boolean0);
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(1039.59423, plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1011.28, 1011.28, false);
      boolean boolean0 = plotDatum0.hasErrorBar();
      assertFalse(boolean0);
      assertEquals(1011.28, plotDatum0.x, 0.01);
      assertEquals(1011.28, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 1039.59423, true);
      plotDatum0.setConnected(true);
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertTrue(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(1039.59423, plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 1039.59423, true);
      plotDatum0.getPlotSymbol();
      assertTrue(plotDatum0.connected());
      assertEquals(1039.59423, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(0.0, plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 1039.59423, true);
      double double0 = plotDatum0.getY();
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(1039.59423, double0, 0.01);
      assertTrue(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 1039.59423, true);
      plotDatum0.getLineColor();
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(1039.59423, plotDatum0.y, 0.01);
      assertTrue(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 1039.59423, true);
      double double0 = plotDatum0.getX();
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(0.0, double0, 0.01);
      assertEquals(1039.59423, plotDatum0.y, 0.01);
      assertTrue(plotDatum0.connected());
  }
}
