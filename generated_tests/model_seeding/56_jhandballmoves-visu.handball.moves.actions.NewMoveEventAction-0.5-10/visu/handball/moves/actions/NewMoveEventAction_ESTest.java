/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 18:28:24 GMT 2019
 */

package visu.handball.moves.actions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.event.ActionEvent;
import javax.swing.JSpinner;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.MoveEvent;
import visu.handball.moves.model.player.Defender;
import visu.handball.moves.model.player.Offender;
import visu.handball.moves.model.player.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NewMoveEventAction_ESTest extends NewMoveEventAction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Offender offender0 = new Offender(0, 0);
      HandballModel handballModel0 = mock(HandballModel.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(handballModel0).addListener(any(visu.handball.moves.model.HandballModelListener.class));
      doReturn((-2249), 0).when(handballModel0).getAcutalSequenceNr();
      doReturn(offender0, offender0).when(handballModel0).getMarkedPlayer();
      NewMoveEventAction newMoveEventAction0 = new NewMoveEventAction(handballModel0);
      newMoveEventAction0.actionPerformed((ActionEvent) null);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NewMoveEventAction newMoveEventAction0 = null;
      try {
        newMoveEventAction0 = new NewMoveEventAction((HandballModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("visu.handball.moves.actions.NewMoveEventAction", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      NewMoveEventAction newMoveEventAction0 = new NewMoveEventAction(handballModel0);
      newMoveEventAction0.modelChanged();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Offender offender0 = new Offender(0, 0);
      HandballModel.State handballModel_State0 = HandballModel.State.EDIT;
      HandballModel handballModel0 = mock(HandballModel.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(handballModel0).addListener(any(visu.handball.moves.model.HandballModelListener.class));
      doReturn((Player) null, (Player) null).when(handballModel0).getMarkedPlayer();
      doReturn(handballModel_State0, handballModel_State0).when(handballModel0).getState();
      NewMoveEventAction newMoveEventAction0 = new NewMoveEventAction(handballModel0);
      newMoveEventAction0.modelChanged();
      newMoveEventAction0.modelChanged();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Offender offender0 = new Offender(0, 0);
      HandballModel.State handballModel_State0 = HandballModel.State.EDIT;
      HandballModel handballModel0 = mock(HandballModel.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(handballModel0).addListener(any(visu.handball.moves.model.HandballModelListener.class));
      doReturn(offender0, offender0).when(handballModel0).getMarkedPlayer();
      doReturn(handballModel_State0, handballModel_State0).when(handballModel0).getState();
      doReturn(false).when(handballModel0).isGoalPassSet();
      doReturn(true, false).when(handballModel0).isMarkedPlayerAddable();
      doReturn(false).when(handballModel0).passEventDefined();
      NewMoveEventAction newMoveEventAction0 = new NewMoveEventAction(handballModel0);
      newMoveEventAction0.modelChanged();
      newMoveEventAction0.modelChanged();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HandballModel.State handballModel_State0 = HandballModel.State.EDIT;
      HandballModel handballModel0 = mock(HandballModel.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(handballModel0).addListener(any(visu.handball.moves.model.HandballModelListener.class));
      doReturn((Player) null).when(handballModel0).getMarkedPlayer();
      doReturn(handballModel_State0).when(handballModel0).getState();
      NewMoveEventAction newMoveEventAction0 = new NewMoveEventAction(handballModel0);
      newMoveEventAction0.modelChanged();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      Defender defender0 = new Defender(174, 174);
      MoveEvent moveEvent0 = mock(MoveEvent.class, new ViolatedAssumptionAnswer());
      doReturn(defender0).when(moveEvent0).getPlayer();
      doReturn(0, 0).when(moveEvent0).getSequenceNr();
      doReturn(false).when(moveEvent0).isDestinationPointSet();
      handballModel0.setActualMoveEvent(moveEvent0);
      NewMoveEventAction newMoveEventAction0 = new NewMoveEventAction(handballModel0);
      ActionEvent actionEvent0 = new ActionEvent(newMoveEventAction0, (-2514), "", 1103);
      newMoveEventAction0.actionPerformed(actionEvent0);
      assertEquals(1103, actionEvent0.getModifiers());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      NewMoveEventAction newMoveEventAction0 = new NewMoveEventAction(handballModel0);
      JSpinner jSpinner0 = new JSpinner();
      JSpinner.DefaultEditor jSpinner_DefaultEditor0 = new JSpinner.DefaultEditor(jSpinner0);
      ActionEvent actionEvent0 = new ActionEvent(jSpinner_DefaultEditor0, (-3032), "visu.handball.moves.actions.NewMoveEventAction");
      newMoveEventAction0.actionPerformed(actionEvent0);
      assertEquals((-3032), actionEvent0.getID());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Offender offender0 = new Offender(0, 0);
      HandballModel handballModel0 = mock(HandballModel.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(handballModel0).addListener(any(visu.handball.moves.model.HandballModelListener.class));
      doReturn(1, 0).when(handballModel0).getAcutalSequenceNr();
      doReturn(offender0, offender0).when(handballModel0).getMarkedPlayer();
      NewMoveEventAction newMoveEventAction0 = new NewMoveEventAction(handballModel0);
      newMoveEventAction0.actionPerformed((ActionEvent) null);
  }
}
