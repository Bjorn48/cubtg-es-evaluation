/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 19 06:38:33 GMT 2019
 */

package org.sat4j.minisat.constraints.cnf;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.sat4j.core.ReadOnlyVecInt;
import org.sat4j.core.VecInt;
import org.sat4j.minisat.constraints.CardinalityDataStructure;
import org.sat4j.minisat.constraints.cnf.LearntWLClause;
import org.sat4j.minisat.constraints.cnf.Lits;
import org.sat4j.minisat.core.ILits;
import org.sat4j.minisat.core.WatcherBasedPrimeImplicantStrategy;
import org.sat4j.specs.IVecInt;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LearntWLClause_ESTest extends LearntWLClause_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VecInt vecInt0 = new VecInt(112, 112);
      CardinalityDataStructure cardinalityDataStructure0 = new CardinalityDataStructure();
      IVecInt iVecInt0 = vecInt0.push((-406));
      ILits iLits0 = cardinalityDataStructure0.getVocabulary();
      LearntWLClause learntWLClause0 = new LearntWLClause(iVecInt0, iLits0);
      // Undeclared exception!
      try { 
        learntWLClause0.register();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Lits lits0 = new Lits();
      VecInt vecInt0 = new VecInt(153, 153);
      WatcherBasedPrimeImplicantStrategy watcherBasedPrimeImplicantStrategy0 = new WatcherBasedPrimeImplicantStrategy();
      LearntWLClause learntWLClause0 = new LearntWLClause(vecInt0, lits0);
      // Undeclared exception!
      try { 
        learntWLClause0.propagatePI(watcherBasedPrimeImplicantStrategy0, 153);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.constraints.cnf.Lits", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Lits lits0 = new Lits();
      IVecInt iVecInt0 = VecInt.EMPTY;
      ReadOnlyVecInt readOnlyVecInt0 = new ReadOnlyVecInt(iVecInt0);
      LearntWLClause learntWLClause0 = null;
      try {
        learntWLClause0 = new LearntWLClause(readOnlyVecInt0, lits0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.core.ReadOnlyVecInt", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Lits lits0 = new Lits();
      LearntWLClause learntWLClause0 = null;
      try {
        learntWLClause0 = new LearntWLClause((IVecInt) null, lits0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.constraints.cnf.WLClause", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Lits lits0 = new Lits();
      VecInt vecInt0 = new VecInt(153);
      IVecInt iVecInt0 = vecInt0.pop();
      LearntWLClause learntWLClause0 = null;
      try {
        learntWLClause0 = new LearntWLClause(iVecInt0, lits0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.constraints.cnf.WLClause", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Lits lits0 = new Lits();
      VecInt vecInt0 = new VecInt();
      vecInt0.shrinkTo(46);
      LearntWLClause learntWLClause0 = null;
      try {
        learntWLClause0 = new LearntWLClause(vecInt0, lits0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Lits lits0 = new Lits();
      VecInt vecInt0 = new VecInt(1, 1);
      LearntWLClause learntWLClause0 = new LearntWLClause(vecInt0, lits0);
      // Undeclared exception!
      try { 
        learntWLClause0.register();
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Lits lits0 = new Lits();
      VecInt vecInt0 = new VecInt();
      LearntWLClause learntWLClause0 = new LearntWLClause(vecInt0, lits0);
      learntWLClause0.register();
      assertFalse(learntWLClause0.simplify());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VecInt vecInt0 = new VecInt(125, 125);
      Lits lits0 = new Lits();
      LearntWLClause learntWLClause0 = new LearntWLClause(vecInt0, lits0);
      // Undeclared exception!
      try { 
        learntWLClause0.register();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.constraints.cnf.Lits", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IVecInt iVecInt0 = VecInt.EMPTY;
      Lits lits0 = new Lits();
      LearntWLClause learntWLClause0 = new LearntWLClause(iVecInt0, lits0);
      learntWLClause0.forwardActivity((-846.12250879));
      assertFalse(learntWLClause0.simplify());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VecInt vecInt0 = new VecInt(125, 125);
      Lits lits0 = new Lits();
      LearntWLClause learntWLClause0 = new LearntWLClause(vecInt0, lits0);
      learntWLClause0.incActivity(1000);
      assertEquals(1000.0, learntWLClause0.getActivity(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Lits lits0 = new Lits();
      VecInt vecInt0 = new VecInt();
      WatcherBasedPrimeImplicantStrategy watcherBasedPrimeImplicantStrategy0 = new WatcherBasedPrimeImplicantStrategy();
      LearntWLClause learntWLClause0 = new LearntWLClause(vecInt0, lits0);
      // Undeclared exception!
      try { 
        learntWLClause0.propagatePI(watcherBasedPrimeImplicantStrategy0, 1210);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1210
         //
         verifyException("org.sat4j.minisat.constraints.cnf.Lits", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Lits lits0 = new Lits();
      IVecInt iVecInt0 = VecInt.EMPTY;
      LearntWLClause learntWLClause0 = new LearntWLClause(iVecInt0, lits0);
      boolean boolean0 = learntWLClause0.learnt();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Lits lits0 = new Lits();
      VecInt vecInt0 = new VecInt();
      LearntWLClause learntWLClause0 = new LearntWLClause(vecInt0, lits0);
      learntWLClause0.setLearnt();
      assertFalse(learntWLClause0.isSatisfied());
  }
}
