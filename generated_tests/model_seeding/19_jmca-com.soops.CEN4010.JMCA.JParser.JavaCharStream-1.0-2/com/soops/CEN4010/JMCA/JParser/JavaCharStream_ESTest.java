/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 25 16:16:14 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.net.URISyntaxException;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("PlloZDZRKL).~1h}!x");
      stringReader0.read();
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 80, (-265));
      File file0 = MockFile.createTempFile("?]peM6G@kPsA'mvz", "");
      file0.isDirectory();
      file0.getName();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      pushbackInputStream0.mark(80);
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream0, 150, 2324);
      JavaCharStream.hexval('0');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      JavaCharStream.hexval('7');
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.close();
      int int0 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      javaCharStream0.prevCharIsCR = false;
      int[] intArray0 = new int[0];
      javaCharStream0.bufline = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      JavaCharStream.hexval('b');
      PipedInputStream pipedInputStream0 = new PipedInputStream(11);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3*BdlO}nZ1H 5FH");
      stringReader0.read();
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.prevCharIsCR = false;
      javaCharStream0.adjustBeginLineColumn(53, 2469);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">5mf-V'[fFw(");
      stringReader0.read();
      stringReader0.close();
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.AdjustBuffSize();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)83;
      byteArray0[2] = (byte)97;
      byteArray0[3] = (byte) (-119);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, (byte)83);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)14, 13);
      javaCharStream0.getBeginLine();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.UpdateLineColumn('S');
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3*BdlO}njZ1H 5FH");
      stringReader0.read();
      stringReader0.close();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      javaCharStream0.GetSuffix(563);
      javaCharStream0.GetSuffix(3048);
      JavaCharStream javaCharStream1 = new JavaCharStream(mockFileInputStream0, 3048, 563);
      javaCharStream1.backup(3048);
      javaCharStream1.BeginToken();
      stringReader0.close();
      javaCharStream1.GetSuffix(563);
      javaCharStream0.backup(563);
      javaCharStream0.readChar();
      javaCharStream0.Done();
      javaCharStream1.getLine();
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)83;
      byteArray0[1] = (byte)83;
      byteArray0[2] = (byte)97;
      byteArray0[3] = (byte) (-119);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, (byte)83);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, (byte)97);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.getBeginLine();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      char[] charArray0 = new char[7];
      charArray0[0] = 'S';
      javaCharStream0.bufsize = (-545);
      charArray0[1] = 'S';
      charArray0[2] = '~';
      charArray0[3] = 'S';
      charArray0[4] = 'S';
      charArray0[5] = 'a';
      charArray0[6] = 'a';
      // Undeclared exception!
      try { 
        stringReader0.read(charArray0, 1672, (-496));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".");
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, (-1), (-984));
      JavaCharStream.hexval('D');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      javaCharStream0.getBeginColumn();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      JavaCharStream.hexval('6');
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 6, 6);
      javaCharStream0.inputStream = null;
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)14;
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      int int0 = (-48);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-48), (-48));
      int int1 = (-1);
      javaCharStream0.line = (-1);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      JavaCharStream.hexval('3');
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.getBeginColumn();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Reader reader0 = mock(Reader.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":gIvR6;q&KYh:iw)");
      JavaCharStream javaCharStream0 = new JavaCharStream(reader0, 4090, 4090);
      javaCharStream0.bufsize = (-2703);
      javaCharStream0.adjustBeginLineColumn(2479, 70);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)14;
      byteArray0[2] = (byte)97;
      byteArray0[3] = (byte)97;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, (byte)83);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)14, 13);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.backup(1);
      javaCharStream0.GetImage();
      javaCharStream0.getBeginLine();
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)83;
      byteArray0[2] = (byte)97;
      byteArray0[3] = (byte) (-119);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, (byte)83);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)14, 13);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.getBeginLine();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.UpdateLineColumn('S');
      javaCharStream0.getLine();
      javaCharStream0.getBeginLine();
      javaCharStream0.inBuf = (-1);
      javaCharStream0.getBeginColumn();
      try { 
        JavaCharStream.hexval('h');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3*BdlO}njZ1H 5FH");
      stringReader0.read();
      stringReader0.close();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      javaCharStream0.GetSuffix(563);
      javaCharStream0.GetSuffix(3048);
      JavaCharStream javaCharStream1 = new JavaCharStream(mockFileInputStream0, 3048, 563);
      javaCharStream1.backup(3048);
      javaCharStream1.BeginToken();
      javaCharStream0.backup((-116));
      StringReader stringReader1 = new StringReader("3*BdlO}njZ1H 5FH");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1);
      javaCharStream2.BeginToken();
      javaCharStream1.backup(26);
      javaCharStream1.GetImage();
      javaCharStream2.getBeginLine();
      javaCharStream1.getBeginColumn();
      javaCharStream1.getEndLine();
      javaCharStream1.getEndColumn();
      javaCharStream2.readChar();
      javaCharStream0.getEndLine();
      javaCharStream2.getEndColumn();
      javaCharStream2.ReInit((Reader) stringReader0, 0, 722, 59);
      // Undeclared exception!
      try { 
        javaCharStream2.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      JavaCharStream.hexval('a');
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)96;
      byteArray0[2] = (byte) (-127);
      byteArray0[3] = (byte) (-103);
      byteArray0[4] = (byte) (-92);
      byteArray0[5] = (byte)15;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-476), (byte)96);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 4091, (byte) (-103), 0);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      JavaCharStream.hexval('A');
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)83;
      byteArray0[2] = (byte)97;
      byteArray0[3] = (byte)97;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, (byte)83);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, (byte)97);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.getBeginLine();
      javaCharStream0.ReadByte();
      javaCharStream0.tokenBegin = 66;
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -67
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3*BdlO}njZ1H 5FH");
      stringReader0.read();
      stringReader0.close();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      javaCharStream0.GetSuffix(563);
      javaCharStream0.GetSuffix(3048);
      JavaCharStream javaCharStream1 = new JavaCharStream(mockFileInputStream0, 3048, 563);
      javaCharStream1.backup(3048);
      javaCharStream1.BeginToken();
      javaCharStream0.backup((-116));
      Reader reader0 = mock(Reader.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(reader0).read(any(char[].class) , anyInt() , anyInt());
      JavaCharStream javaCharStream2 = new JavaCharStream(reader0);
      javaCharStream2.BeginToken();
      javaCharStream1.backup(26);
      javaCharStream1.GetImage();
      javaCharStream2.getBeginLine();
      javaCharStream1.getBeginColumn();
      javaCharStream1.getEndLine();
      javaCharStream1.getEndColumn();
      javaCharStream2.readChar();
      javaCharStream0.getEndLine();
      javaCharStream2.getEndColumn();
      javaCharStream2.ReInit((Reader) stringReader0, 0, 722, 59);
      // Undeclared exception!
      try { 
        javaCharStream2.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '-';
      charArray0[1] = '{';
      charArray0[2] = 'j';
      charArray0[3] = 'c';
      charArray0[4] = 'N';
      charArray0[5] = '5';
      charArray0[6] = 'R';
      charArray0[7] = 'T';
      try { 
        JavaCharStream.hexval('-');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-96);
      byteArray0[5] = (byte) (-39);
      byteArray0[6] = (byte)61;
      byteArray0[7] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 0, (byte)0);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      JavaCharStream.hexval('e');
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      javaCharStream0.GetSuffix(563);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetSuffix(3048);
      JavaCharStream javaCharStream1 = new JavaCharStream(mockFileInputStream0, 3048, 563);
      javaCharStream1.backup(3048);
      javaCharStream1.BeginToken();
      javaCharStream0.backup((-130));
      Reader reader0 = mock(Reader.class, new ViolatedAssumptionAnswer());
      doReturn(61).when(reader0).read(any(char[].class) , anyInt() , anyInt());
      JavaCharStream javaCharStream2 = new JavaCharStream(reader0);
      javaCharStream2.BeginToken();
      javaCharStream1.backup(0);
      javaCharStream1.GetImage();
      javaCharStream2.getBeginLine();
      javaCharStream2.ExpandBuff(true);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3*BdlO}njZ1H 5FH");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream.hexval('5');
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      JavaCharStream.hexval('c');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3*BdlO}njZ1H 5FH");
      stringReader0.read();
      stringReader0.close();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      javaCharStream0.GetSuffix(563);
      javaCharStream0.GetSuffix(3048);
      JavaCharStream javaCharStream1 = new JavaCharStream(mockFileInputStream0, 3048, 563);
      javaCharStream1.backup(3048);
      javaCharStream1.BeginToken();
      stringReader0.markSupported();
      javaCharStream0.adjustBeginLineColumn(563, 1048);
      stringReader0.close();
      javaCharStream1.GetSuffix(563);
      javaCharStream0.backup(563);
      javaCharStream0.readChar();
      javaCharStream0.Done();
      javaCharStream1.getLine();
      javaCharStream1.getColumn();
      javaCharStream0.getBeginLine();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.mark(762);
      stringReader0.read();
      stringReader0.close();
      JavaCharStream.hexval('4');
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)83;
      byteArray0[2] = (byte)97;
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      JavaCharStream.hexval('E');
      JavaCharStream.hexval('E');
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      javaCharStream0.GetSuffix(563);
      javaCharStream0.GetSuffix(3048);
      JavaCharStream javaCharStream1 = new JavaCharStream(mockFileInputStream0, 3048, 563);
      javaCharStream1.backup(3048);
      javaCharStream1.BeginToken();
      javaCharStream0.backup((-116));
      Reader reader0 = mock(Reader.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(reader0).read(any(char[].class) , anyInt() , anyInt());
      JavaCharStream javaCharStream2 = new JavaCharStream(reader0);
      javaCharStream2.BeginToken();
      javaCharStream1.backup(0);
      javaCharStream1.GetImage();
      javaCharStream2.getBeginLine();
      javaCharStream1.getBeginColumn();
      javaCharStream1.getEndLine();
      javaCharStream1.getEndColumn();
      javaCharStream2.readChar();
      javaCharStream0.getEndLine();
      javaCharStream2.getEndColumn();
      javaCharStream2.readChar();
      javaCharStream2.getEndLine();
      javaCharStream1.Done();
      // Undeclared exception!
      try { 
        javaCharStream1.GetImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)83;
      byteArray0[2] = (byte)97;
      byteArray0[3] = (byte) (-119);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, (byte)83);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)14, 13);
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 3928, 3928);
      javaCharStream0.getBeginColumn();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      JavaCharStream.hexval('9');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      char char0 = '=';
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      char[] charArray0 = javaCharStream0.GetSuffix(563);
      javaCharStream0.GetSuffix(3048);
      JavaCharStream javaCharStream1 = new JavaCharStream(mockFileInputStream0, 3048, 563);
      javaCharStream1.backup(3048);
      javaCharStream1.BeginToken();
      javaCharStream0.backup((-116));
      Reader reader0 = mock(Reader.class, new ViolatedAssumptionAnswer());
      doReturn((-116), 563).when(reader0).read(any(char[].class) , anyInt() , anyInt());
      JavaCharStream javaCharStream2 = new JavaCharStream(reader0);
      javaCharStream2.BeginToken();
      javaCharStream1.backup(0);
      javaCharStream1.GetImage();
      javaCharStream2.getBeginLine();
      javaCharStream1.getBeginColumn();
      javaCharStream2.nextCharBuf = charArray0;
      javaCharStream1.getEndLine();
      javaCharStream1.getEndColumn();
      javaCharStream2.readChar();
      javaCharStream0.getEndLine();
      javaCharStream2.getEndColumn();
      javaCharStream2.readChar();
      javaCharStream2.getEndLine();
      javaCharStream1.Done();
      // Undeclared exception!
      try { 
        javaCharStream1.GetImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetSuffix(0);
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)59;
      byteArray0[2] = (byte)97;
      byteArray0[3] = (byte) (-119);
      JavaCharStream.hexval('f');
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int int0 = 0;
      javaCharStream0.bufpos = 183;
      javaCharStream0.adjustBeginLineColumn(0, 0);
      String string0 = "";
      try { 
        MockURI.URI("", "", "", "M8,TEz{V</GVs^Jhf", "com.soops.CEN4010.JMCA.JParser.JavaCharStream");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://?M8,TEz%7BV%3C/GVs%5EJhf#com.soops.CEN4010.JMCA.JParser.JavaCharStream
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.read();
      stringReader0.ready();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-265));
      javaCharStream0.getBeginColumn();
      javaCharStream0.available = 332;
      javaCharStream0.maxNextCharInd = 0;
      javaCharStream0.GetSuffix(2601);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      javaCharStream0.GetSuffix(579);
      javaCharStream0.GetSuffix(3048);
      JavaCharStream javaCharStream1 = new JavaCharStream(mockFileInputStream0, 3048, 579);
      javaCharStream1.backup(3048);
      javaCharStream1.BeginToken();
      javaCharStream0.backup(0);
      Reader reader0 = mock(Reader.class, new ViolatedAssumptionAnswer());
      JavaCharStream javaCharStream2 = new JavaCharStream(reader0);
      try { 
        JavaCharStream.hexval('\u0000');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      javaCharStream0.GetSuffix(563);
      mockFileInputStream0.release();
      javaCharStream0.GetSuffix(3048);
      JavaCharStream javaCharStream1 = new JavaCharStream(mockFileInputStream0, 3048, 563);
      javaCharStream1.backup(3048);
      javaCharStream1.BeginToken();
      javaCharStream0.backup((-116));
      Reader reader0 = mock(Reader.class, new ViolatedAssumptionAnswer());
      doReturn(3387).when(reader0).read(any(char[].class) , anyInt() , anyInt());
      JavaCharStream javaCharStream2 = new JavaCharStream(reader0);
      javaCharStream2.BeginToken();
      javaCharStream1.backup(0);
      javaCharStream1.GetImage();
      javaCharStream2.getBeginLine();
      javaCharStream1.getBeginColumn();
      javaCharStream1.getEndLine();
      javaCharStream1.getEndColumn();
      javaCharStream2.readChar();
      javaCharStream0.getEndLine();
      javaCharStream2.getEndColumn();
      javaCharStream2.GetSuffix(2);
      javaCharStream0.AdjustBuffSize();
      javaCharStream1.getBeginColumn();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream.hexval('B');
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)62;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)100;
      byteArray0[3] = (byte)81;
      byteArray0[4] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      byteArrayInputStream0.mark(2464);
      javaCharStream0.backup(445);
      javaCharStream0.Done();
      PipedInputStream pipedInputStream0 = new PipedInputStream(1);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.close();
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, (int) (byte)81, 0, (-2033));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3*BdlO}njZ1H 5FH");
      stringReader0.read();
      stringReader0.close();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      javaCharStream0.GetSuffix(563);
      javaCharStream0.GetSuffix(3048);
      JavaCharStream javaCharStream1 = new JavaCharStream(mockFileInputStream0, 3048, 563);
      javaCharStream1.backup(3048);
      javaCharStream1.BeginToken();
      javaCharStream0.adjustBeginLineColumn(563, 1048);
      stringReader0.close();
      javaCharStream1.GetSuffix(563);
      javaCharStream0.backup(563);
      javaCharStream0.readChar();
      javaCharStream0.Done();
      javaCharStream1.getLine();
      javaCharStream1.getColumn();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".");
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[2];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      javaCharStream0.bufcolumn = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-265));
      javaCharStream0.getBeginColumn();
      javaCharStream0.available = (-1);
      javaCharStream0.maxNextCharInd = 0;
      javaCharStream0.GetSuffix(2601);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      char char0 = 'd';
      JavaCharStream.hexval('d');
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream.hexval('2');
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      Reader reader0 = mock(Reader.class, new ViolatedAssumptionAnswer());
      doReturn(563).when(reader0).read(any(char[].class) , anyInt() , anyInt());
      JavaCharStream javaCharStream0 = new JavaCharStream(reader0);
      javaCharStream0.ReadByte();
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      JavaCharStream.hexval('7');
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('7');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)66;
      byteArray0[2] = (byte) (-71);
      byteArray0[3] = (byte)19;
      byteArray0[4] = (byte)74;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 2658, 968, (byte)19);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (-1), 968);
      byteArrayInputStream0.markSupported();
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      JavaCharStream.hexval('D');
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-78);
      byteArray0[1] = (byte) (-78);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      byteArrayInputStream0.skip(0L);
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.close();
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 1, 365, (-1));
      javaCharStream0.ReInit((Reader) stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader("PlloZDZRKL).~1h}!x");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 80, (-254));
      int int0 = 4092;
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, (-783), 4092, (-254));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("PlloZDZRKL).~1h}!x");
      stringReader0.read();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 80, 14);
      javaCharStream0.backup(94);
      javaCharStream0.BeginToken();
      Reader reader0 = mock(Reader.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(reader0).read(any(char[].class) , anyInt() , anyInt());
      JavaCharStream javaCharStream1 = new JavaCharStream(reader0, 4090, 4090);
      javaCharStream1.FillBuff();
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("PlloZDZRKL).~1h}!x");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      File file0 = MockFile.createTempFile("?]peM6G@kPsA'mvz", "");
      file0.isDirectory();
      file0.getName();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 1761);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, 0, 432, 1761);
      javaCharStream0.getBeginLine();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((Reader) null, (-355), 2179, (-355));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      JavaCharStream.hexval('F');
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      try { 
        JavaCharStream.hexval('v');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 101, 101, (-1));
      javaCharStream0.adjustBeginLineColumn(55, (-1));
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream.hexval('F');
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.read();
      stringReader0.ready();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-265));
      javaCharStream0.getBeginColumn();
      javaCharStream0.column = 4093;
      javaCharStream0.available = 332;
      javaCharStream0.maxNextCharInd = 0;
      javaCharStream0.GetSuffix(2601);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      javaCharStream0.backup(4069);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-1));
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)83;
      byteArray0[2] = (byte)97;
      byteArray0[3] = (byte) (-119);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, (byte)83);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, (byte)97);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.getBeginLine();
      javaCharStream0.BeginToken();
      byteArrayInputStream0.read();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getLine();
      javaCharStream0.getBeginLine();
      javaCharStream0.ExpandBuff(false);
      PipedInputStream pipedInputStream0 = new PipedInputStream((byte)97);
      javaCharStream0.getColumn();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.bufpos = 183;
      javaCharStream0.adjustBeginLineColumn(0, 0);
      stringReader0.close();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      PipedOutputStream pipedOutputStream0 = null;
      try {
        pipedOutputStream0 = new PipedOutputStream((PipedInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      stringReader0.read();
      stringReader0.close();
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-265));
      javaCharStream0.getBeginColumn();
      stringReader0.close();
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3*BdlO}njZ1H 5FH");
      stringReader0.read();
      stringReader0.close();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      javaCharStream0.GetSuffix(563);
      javaCharStream0.GetSuffix(563);
      JavaCharStream javaCharStream1 = new JavaCharStream(mockFileInputStream0, 51, 563);
      javaCharStream1.backup(51);
      javaCharStream1.BeginToken();
      javaCharStream0.adjustBeginLineColumn(563, 4045);
      stringReader0.close();
      javaCharStream1.GetSuffix(563);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.backup(563);
      javaCharStream0.readChar();
      javaCharStream0.Done();
      javaCharStream1.getLine();
      javaCharStream1.AdjustBuffSize();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      JavaCharStream.hexval('E');
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.bufpos = 0;
      javaCharStream0.adjustBeginLineColumn(0, 0);
      stringReader0.close();
      javaCharStream0.GetSuffix(1163);
      javaCharStream0.backup(1163);
      javaCharStream0.readChar();
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      JavaCharStream.hexval('C');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      mockFileInputStream0.skip(1259);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 55, 12, 1259);
      javaCharStream0.getBeginColumn();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      JavaCharStream.hexval('A');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-44);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      byteArrayInputStream0.mark((-1268));
      char[] charArray0 = new char[2];
      javaCharStream0.tokenBegin = 676;
      charArray0[0] = '\"';
      charArray0[1] = 'w';
      javaCharStream0.GetSuffix(83);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginColumn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.mark(9);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.nextCharInd = (-707);
      javaCharStream0.GetImage();
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0);
      javaCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int int0 = 0;
      javaCharStream0.adjustBeginLineColumn(0, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.mark(9);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.nextCharInd = (-707);
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(431, 0);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(9);
      javaCharStream0.getBeginLine();
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)83;
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0);
      javaCharStream0.backup((-3908));
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte) (-11);
      byteArray0[0] = (byte) (-11);
      byteArray0[1] = (byte)52;
      byteArray0[2] = (byte) (-57);
      byte byte1 = (byte)1;
      byteArray0[3] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)52, (-577));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-57), (byte)1, (byte)52);
      byteArrayInputStream0.reset();
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      javaCharStream0.GetSuffix(563);
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.mark(9);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.nextCharInd = (-707);
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(431, 0);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(9);
      javaCharStream0.getBeginLine();
      javaCharStream0.adjustBeginLineColumn(3535, 0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)83;
      byteArray0[2] = (byte)97;
      byteArray0[3] = (byte) (-119);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, (byte)83);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, (byte)97);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.getBeginLine();
      javaCharStream0.BeginToken();
      javaCharStream0.available = (-2307);
      javaCharStream0.tokenBegin = 66;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getLine();
      javaCharStream0.getBeginLine();
      javaCharStream0.ExpandBuff(false);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-78);
      byteArray0[1] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      byteArrayInputStream0.skip(0L);
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.close();
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte)0, (int) (byte)0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 1, 365, (-1));
      javaCharStream0.ReInit((Reader) stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      JavaCharStream.hexval('8');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-265));
      javaCharStream0.getBeginColumn();
      javaCharStream0.available = (-1);
      javaCharStream0.maxNextCharInd = 0;
      javaCharStream0.GetSuffix(2601);
      javaCharStream0.backup(2601);
      javaCharStream0.readChar();
      javaCharStream0.getEndLine();
      javaCharStream0.Done();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 14);
      javaCharStream0.ReInit((InputStream) pipedInputStream0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-28);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      byteArrayInputStream0.mark((-1286));
      char[] charArray0 = new char[2];
      charArray0[0] = '+';
      charArray0[1] = 'w';
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.backup((byte)0);
      javaCharStream0.Done();
      byteArrayInputStream0.markSupported();
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (int) (byte)0, (int) (byte)0, (int) (byte) (-28));
      javaCharStream0.Done();
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (-2251), 0);
      byteArrayInputStream0.mark(0);
      javaCharStream0.GetSuffix(555);
      byteArrayInputStream0.skip((byte) (-28));
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      javaCharStream0.GetSuffix(555);
      javaCharStream0.readChar();
      javaCharStream0.getEndLine();
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('+');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)59;
      byteArray0[2] = (byte)97;
      byteArray0[3] = (byte) (-119);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, (byte)59);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, (byte)97);
      boolean boolean0 = javaCharStream0.prevCharIsCR;
      javaCharStream0.available = 1;
      javaCharStream0.BeginToken();
      javaCharStream0.tokenBegin = (int) (byte)59;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getLine();
      javaCharStream0.getBeginLine();
      javaCharStream0.getEndColumn();
      javaCharStream0.ReInit((Reader) null, 77, 27, 0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.close();
      stringReader0.close();
      StringReader stringReader1 = new StringReader("");
      stringReader1.read();
      stringReader1.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaCharStream.hexval('5');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream.hexval('d');
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StringReader stringReader0 = new StringReader("PlloZDZRKL).~1h}!x");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 80, (-254));
      javaCharStream0.backup(94);
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 4002, 4002);
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.getBeginLine();
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream.hexval('D');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream1);
      PipedInputStream pipedInputStream2 = null;
      try {
        pipedInputStream2 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      JavaCharStream.hexval('6');
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, (-1));
      javaCharStream0.getBeginLine();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      pushbackInputStream0.mark(6);
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream0, (-637), 2324);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream1.available = (-1529);
      javaCharStream1.bufline = null;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-97);
      byteArray0[1] = (byte)97;
      byteArray0[2] = (byte) (-19);
      byteArray0[3] = (byte) (-24);
      byteArray0[4] = (byte)0;
      pushbackInputStream0.skip((-637));
      byteArray0[5] = (byte) (-29);
      try { 
        pushbackInputStream0.read(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      char[] charArray0 = new char[0];
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.close();
      int int0 = 708;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 19, (-1), 708);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      JavaCharStream.hexval('E');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)83;
      byteArray0[2] = (byte)97;
      byteArray0[3] = (byte) (-119);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, (byte)83);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, (byte)97);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.getBeginLine();
      javaCharStream0.available = 1;
      javaCharStream0.BeginToken();
      javaCharStream0.tokenBegin = 66;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getLine();
      javaCharStream0.getBeginLine();
      javaCharStream0.getEndColumn();
      javaCharStream0.ReInit((Reader) null, 77, 15, 0);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      char char0 = '1';
      JavaCharStream.hexval('1');
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.close();
      int int0 = 1;
      try { 
        stringReader0.skip(1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-265));
      javaCharStream0.getBeginColumn();
      javaCharStream0.available = (-1);
      javaCharStream0.maxNextCharInd = 0;
      javaCharStream0.GetSuffix(2601);
      javaCharStream0.backup(2601);
      javaCharStream0.readChar();
      javaCharStream0.getEndLine();
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-5843), (-5843));
      javaCharStream0.AdjustBuffSize();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 4420, 4420);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      JavaCharStream.hexval('2');
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      JavaCharStream.hexval('7');
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      char[] charArray0 = new char[5];
      charArray0[0] = '7';
      charArray0[1] = '7';
      charArray0[2] = '7';
      charArray0[3] = '7';
      charArray0[4] = '7';
      stringReader0.read(charArray0);
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-79);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-98);
      byteArray0[3] = (byte) (-79);
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-41);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 8, (byte) (-41));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-41), 0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      int int0 = 4920;
      int int1 = 2065;
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 4920, 2065, 4920);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      JavaCharStream.hexval('4');
      PipedInputStream pipedInputStream0 = new PipedInputStream(4);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-65);
      byteArray0[1] = (byte)11;
      // Undeclared exception!
      try { 
        pipedInputStream0.read(byteArray0, (int) (byte)11, 15);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      JavaCharStream.hexval('f');
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.bufpos = 0;
      javaCharStream0.adjustBeginLineColumn(0, 0);
      stringReader0.close();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      PipedOutputStream pipedOutputStream0 = null;
      try {
        pipedOutputStream0 = new PipedOutputStream((PipedInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)14;
      char char0 = 'X';
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      JavaCharStream.hexval('d');
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      javaCharStream0.GetSuffix(563);
      javaCharStream0.GetSuffix(3048);
      JavaCharStream javaCharStream1 = new JavaCharStream(mockFileInputStream0, 3048, 563);
      javaCharStream1.backup(3048);
      javaCharStream1.BeginToken();
      javaCharStream0.backup((-116));
      Reader reader0 = mock(Reader.class, new ViolatedAssumptionAnswer());
      doReturn(3048).when(reader0).read(any(char[].class) , anyInt() , anyInt());
      JavaCharStream javaCharStream2 = new JavaCharStream(reader0);
      javaCharStream2.BeginToken();
      javaCharStream1.backup(0);
      javaCharStream1.GetImage();
      javaCharStream2.getBeginLine();
      javaCharStream1.getBeginColumn();
      javaCharStream1.getEndLine();
      javaCharStream1.getEndColumn();
      javaCharStream2.readChar();
      javaCharStream0.getEndLine();
      javaCharStream2.getEndColumn();
      javaCharStream2.readChar();
      javaCharStream2.getEndLine();
      javaCharStream1.GetSuffix(0);
      javaCharStream1.Done();
      // Undeclared exception!
      try { 
        javaCharStream1.GetImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)83;
      byteArray0[2] = (byte)97;
      byteArray0[3] = (byte) (-119);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, (byte)83);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)14, 13);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.getBeginLine();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.UpdateLineColumn('S');
      javaCharStream0.getLine();
      javaCharStream0.getBeginLine();
      javaCharStream0.inBuf = (-1);
      javaCharStream0.ExpandBuff(false);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      stringReader0.read();
      stringReader0.close();
      JavaCharStream.hexval('e');
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-265));
      javaCharStream0.getBeginColumn();
      javaCharStream0.available = (-1);
      javaCharStream0.maxNextCharInd = (-265);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      JavaCharStream.hexval('a');
      JavaCharStream.hexval('a');
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      JavaCharStream.hexval('8');
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[0] = (byte) (-28);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      byteArrayInputStream0.mark((-1286));
      char[] charArray0 = new char[2];
      charArray0[0] = '+';
      charArray0[1] = 'w';
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.backup((byte) (-28));
      javaCharStream0.Done();
      byteArrayInputStream0.markSupported();
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (int) (byte) (-28), (int) (byte)0, (int) (byte)0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (-2251), 0);
      byteArrayInputStream0.mark(0);
      javaCharStream0.GetSuffix(555);
      byteArrayInputStream0.skip((byte) (-28));
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      javaCharStream0.GetSuffix(555);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('+');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".");
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ReInit((Reader) stringReader0, (-1), 2307, 10);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-1456));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      javaCharStream0.GetSuffix(563);
      mockFileInputStream0.release();
      javaCharStream0.GetSuffix(3048);
      JavaCharStream javaCharStream1 = new JavaCharStream(mockFileInputStream0, 3048, 563);
      javaCharStream1.backup(3048);
      javaCharStream1.BeginToken();
      javaCharStream0.backup((-116));
      Reader reader0 = mock(Reader.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(reader0).read(any(char[].class) , anyInt() , anyInt());
      JavaCharStream javaCharStream2 = new JavaCharStream(reader0);
      javaCharStream2.BeginToken();
      javaCharStream1.backup(0);
      javaCharStream1.GetImage();
      javaCharStream2.getBeginLine();
      javaCharStream1.getBeginColumn();
      javaCharStream1.getEndLine();
      javaCharStream1.getEndColumn();
      javaCharStream2.readChar();
      javaCharStream0.getEndLine();
      javaCharStream2.getEndColumn();
      javaCharStream2.GetSuffix(2);
      javaCharStream0.AdjustBuffSize();
      javaCharStream1.getBeginColumn();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip(0L);
      stringReader0.read();
      stringReader0.close();
      int int0 = (-2264);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-2264), (-2264));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 791, 791, 85);
      javaCharStream0.getBeginLine();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.read();
      stringReader0.ready();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-265));
      javaCharStream0.getBeginColumn();
      javaCharStream0.available = 332;
      StringReader stringReader1 = new StringReader("");
      stringReader1.read();
      stringReader1.close();
      stringReader1.close();
      stringReader0.markSupported();
      javaCharStream0.ReInit((Reader) stringReader1, (-1460), (-1));
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.read();
      stringReader0.ready();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-265));
      javaCharStream0.getBeginColumn();
      javaCharStream0.available = 332;
      javaCharStream0.maxNextCharInd = 0;
      javaCharStream0.GetSuffix(2601);
      javaCharStream0.AdjustBuffSize();
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("dL,kf)ooj");
      stringReader1.read();
      JavaCharStream.hexval('B');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream.hexval('E');
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.mark(9);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.nextCharInd = (-707);
      javaCharStream0.GetImage();
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, (-147), 2555, 102);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -706
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      javaCharStream0.ReInit((Reader) stringReader0, (-1), 2307, 10);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 58, 73);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.bufpos = (-1);
      javaCharStream0.adjustBeginLineColumn(0, 0);
      stringReader0.close();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      stringReader0.close();
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }
}
