[MASTER] 09:03:04.315 [logback-2] ERROR TestCluster - Failed to check cache for org.sat4j.minisat.core.Solver<D> : Type points to itself
[MASTER] 09:05:45.380 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_66_1550390745297/org/sat4j/minisat/constraints/card/AtLeast_66_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_66_1550390745297/org/sat4j/minisat/constraints/card/AtLeast_66_tmp__ESTest_scaffolding.java]]
[MASTER] 09:05:45.380 [logback-2] ERROR JUnitAnalyzer - Classpath: bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 09:05:45.380 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 09:05:45.386 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: org.sat4j.minisat.constraints.cnf.UnitClauses cannot be converted to org.sat4j.minisat.constraints.card.AtLeast: 43
[MASTER] 09:05:45.397 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_66_1550390745297/org/sat4j/minisat/constraints/card/AtLeast_66_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Sun Feb 17 08:05:45 GMT 2019
4:  */
5: 
6: package org.sat4j.minisat.constraints.card;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import static org.evosuite.runtime.EvoAssertions.*;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.evosuite.runtime.ViolatedAssumptionAnswer;
15: import org.junit.runner.RunWith;
16: import org.sat4j.core.VecInt;
17: import org.sat4j.minisat.constraints.card.AtLeast;
18: import org.sat4j.minisat.constraints.cnf.UnitClauses;
19: import org.sat4j.minisat.core.ILits;
20: import org.sat4j.specs.UnitPropagationListener;
21: 
22: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
23: public class AtLeast_66_tmp__ESTest extends AtLeast_66_tmp__ESTest_scaffolding {
24: 
25:   @Test(timeout = 4000)
26:   public void test0()  throws Throwable  {
27:       ILits iLits0 = mock(ILits.class, new ViolatedAssumptionAnswer());
28:       VecInt vecInt0 = new VecInt(0);
29:       assertNotNull(vecInt0);
30:       assertEquals(0, vecInt0.size());
31:       assertTrue(vecInt0.isEmpty());
32:       
33:       UnitClauses unitClauses0 = (UnitClauses)AtLeast.atLeastNew((UnitPropagationListener) null, iLits0, vecInt0, 0);
34:       assertNotNull(unitClauses0);
35:       assertEquals(0, vecInt0.size());
36:       assertTrue(vecInt0.isEmpty());
37:       assertTrue(unitClauses0.isSatisfied());
38:       assertFalse(unitClauses0.canBePropagatedMultipleTimes());
39:       assertFalse(unitClauses0.simplify());
40:       
41:       // Undeclared exception!
42:       try { 
43:         ((AtLeast) unitClauses0).toString();
44:         fail("Expecting exception: IllegalArgumentException");
45:       
46:       } catch(IllegalArgumentException e) {
47:       }
48:   }
49: }
RegularFileObject[/tmp/EvoSuite_66_1550390745297/org/sat4j/minisat/constraints/card/AtLeast_66_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Sun Feb 17 08:05:45 GMT 2019
5:  */
6: 
7: package org.sat4j.minisat.constraints.card;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class AtLeast_66_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.sat4j.minisat.constraints.card.AtLeast"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AtLeast_66_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.sat4j.minisat.constraints.cnf.WLClause",
84:       "org.sat4j.specs.UnitClauseProvider",
85:       "org.sat4j.specs.IteratorInt",
86:       "org.sat4j.core.VecInt$1",
87:       "org.sat4j.specs.ISolver",
88:       "org.sat4j.minisat.core.DataStructureFactory",
89:       "org.sat4j.specs.Constr$1",
90:       "org.sat4j.core.Vec",
91:       "org.sat4j.specs.UnitPropagationListener",
92:       "org.sat4j.tools.SolutionCounter",
93:       "org.sat4j.specs.VarMapper",
94:       "org.sat4j.specs.RandomAccessModel",
95:       "org.sat4j.tools.FullClauseSelectorSolver",
96:       "org.sat4j.tools.AbstractClauseSelectorSolver$1",
97:       "org.sat4j.tools.SolverDecorator",
98:       "org.sat4j.specs.Propagatable",
99:       "org.sat4j.minisat.core.Undoable",
100:       "org.sat4j.tools.AbstractClauseSelectorSolver$SelectorState",
101:       "org.sat4j.core.EmptyVecInt",
102:       "org.sat4j.minisat.constraints.AbstractCardinalityDataStructure",
103:       "org.sat4j.specs.IVec",
104:       "org.sat4j.core.ReadOnlyVec",
105:       "org.sat4j.minisat.core.ILits",
106:       "org.sat4j.minisat.constraints.card.AtLeast",
107:       "org.sat4j.tools.DotSearchTracing",
108:       "org.sat4j.specs.Lbool",
109:       "org.sat4j.specs.ContradictionException",
110:       "org.sat4j.minisat.constraints.AbstractDataStructureFactory",
111:       "org.sat4j.specs.SearchListener",
112:       "org.sat4j.minisat.constraints.cnf.UnitClauses",
113:       "org.sat4j.specs.SearchListenerAdapter",
114:       "org.sat4j.core.LiteralsUtils",
115:       "org.sat4j.specs.IConstr",
116:       "org.sat4j.specs.IVecInt",
117:       "org.sat4j.tools.AbstractClauseSelectorSolver",
118:       "org.sat4j.tools.AbstractClauseSelectorSolver$2",
119:       "org.sat4j.minisat.constraints.MixedDataStructureDanielWL",
120:       "org.sat4j.minisat.core.Learner",
121:       "org.sat4j.specs.MandatoryLiteralListener",
122:       "org.sat4j.specs.IProblem",
123:       "org.sat4j.minisat.constraints.cnf.OriginalWLClause",
124:       "org.sat4j.core.VecInt",
125:       "org.sat4j.specs.Constr",
126:       "org.sat4j.specs.TimeoutException",
127:       "org.sat4j.minisat.constraints.CardinalityDataStructure",
128:       "org.sat4j.specs.ISolverService",
129:       "org.sat4j.minisat.constraints.cnf.Lits"
130:     );
131:   } 
132:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
133:     mock(Class.forName("org.sat4j.minisat.core.ILits", false, AtLeast_66_tmp__ESTest_scaffolding.class.getClassLoader()));
134:   }
135: 
136:   private static void resetClasses() {
137:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AtLeast_66_tmp__ESTest_scaffolding.class.getClassLoader()); 
138: 
139:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
140:       "org.sat4j.minisat.constraints.card.AtLeast",
141:       "org.sat4j.specs.Constr$1",
142:       "org.sat4j.specs.Constr",
143:       "org.sat4j.minisat.constraints.AbstractDataStructureFactory",
144:       "org.sat4j.minisat.constraints.AbstractCardinalityDataStructure",
145:       "org.sat4j.minisat.constraints.CardinalityDataStructure",
146:       "org.sat4j.core.Vec",
147:       "org.sat4j.minisat.constraints.cnf.Lits",
148:       "org.sat4j.tools.SolverDecorator",
149:       "org.sat4j.tools.SolutionCounter",
150:       "org.sat4j.tools.AbstractClauseSelectorSolver",
151:       "org.sat4j.tools.GroupClauseSelectorSolver",
152:       "org.sat4j.tools.AbstractClauseSelectorSolver$1",
153:       "org.sat4j.tools.AbstractClauseSelectorSolver$2",
154:       "org.sat4j.specs.SearchListenerAdapter",
155:       "org.sat4j.tools.ManyCore",
156:       "org.sat4j.core.EmptyVecInt",
157:       "org.sat4j.core.VecInt",
158:       "org.sat4j.minisat.core.Counter",
159:       "org.sat4j.core.ReadOnlyVecInt",
160:       "org.sat4j.tools.AbstractMinimalModel",
161:       "org.sat4j.tools.Minimal4CardinalityModel",
162:       "org.sat4j.tools.SolutionFoundListener$1",
163:       "org.sat4j.tools.SolutionFoundListener",
164:       "org.sat4j.core.ASolverFactory",
165:       "org.sat4j.tools.FullClauseSelectorSolver",
166:       "org.sat4j.minisat.learning.LimitedLearning",
167:       "org.sat4j.minisat.learning.PercentLengthLearning",
168:       "org.sat4j.minisat.learning.AbstractLearning",
169:       "org.sat4j.minisat.learning.NoLearningButHeuristics",
170:       "org.sat4j.minisat.learning.MiniSATLearning",
171:       "org.sat4j.minisat.core.SearchParams",
172:       "org.sat4j.minisat.orders.VarOrderHeap",
173:       "org.sat4j.minisat.orders.AbstractPhaserecordingSelectionStrategy",
174:       "org.sat4j.minisat.orders.PhaseInLastLearnedClauseSelectionStrategy",
175:       "org.sat4j.minisat.orders.TabuListDecorator",
176:       "org.sat4j.minisat.restarts.ArminRestarts",
177:       "org.sat4j.minisat.core.Solver$1",
178:       "org.sat4j.minisat.core.Solver",
179:       "org.sat4j.specs.ILogAble$1",
180:       "org.sat4j.specs.ILogAble",
181:       "org.sat4j.minisat.core.ActivityComparator",
182:       "org.sat4j.minisat.core.SolverStats",
183:       "org.sat4j.minisat.core.VoidTracing",
184:       "org.sat4j.specs.UnitClauseProvider$1",
185:       "org.sat4j.specs.UnitClauseProvider",
186:       "org.sat4j.minisat.core.Solver$2",
187:       "org.sat4j.minisat.core.Solver$3",
188:       "org.sat4j.minisat.core.Solver$4",
189:       "org.sat4j.minisat.core.Pair",
190:       "org.sat4j.minisat.core.ConflictTimerAdapter",
191:       "org.sat4j.minisat.core.MemoryBasedConflictTimer",
192:       "org.sat4j.minisat.core.ActivityLCDS",
193:       "org.sat4j.minisat.core.LBDConflictTimer",
194:       "org.sat4j.minisat.core.GlucoseLCDS",
195:       "org.sat4j.minisat.core.Glucose2LCDS",
196:       "org.sat4j.minisat.core.AgeLCDS",
197:       "org.sat4j.minisat.core.SizeComparator",
198:       "org.sat4j.minisat.core.SizeLCDS",
199:       "org.sat4j.minisat.core.Solver$8",
200:       "org.sat4j.minisat.core.WatcherBasedPrimeImplicantStrategy",
201:       "org.sat4j.core.LiteralsUtils",
202:       "org.sat4j.tools.AbstractOutputSolver",
203:       "org.sat4j.tools.DimacsOutputSolver",
204:       "org.sat4j.tools.OptToSatAdapter",
205:       "org.sat4j.tools.StatisticsSolver",
206:       "org.sat4j.minisat.constraints.MixedDataStructureDanielWL",
207:       "org.sat4j.minisat.learning.FixedLengthLearning",
208:       "org.sat4j.minisat.orders.SubsetVarOrder",
209:       "org.sat4j.AbstractLauncher",
210:       "org.sat4j.BasicLauncher",
211:       "org.sat4j.AbstractLauncher$1",
212:       "org.sat4j.DecisionMode",
213:       "org.sat4j.ExitCode",
214:       "org.sat4j.OptimizationMode",
215:       "org.sat4j.ILauncherMode",
216:       "org.sat4j.tools.DotSearchTracing",
217:       "org.sat4j.minisat.orders.PureOrder",
218:       "org.sat4j.minisat.restarts.NoRestarts",
219:       "org.sat4j.minisat.constraints.cnf.UnitClauses",
220:       "org.sat4j.minisat.orders.LevelBasedVarOrderHeap",
221:       "org.sat4j.specs.ContradictionException",
222:       "org.sat4j.minisat.learning.NoLearningNoHeuristics",
223:       "org.sat4j.minisat.orders.NaturalStaticOrder",
224:       "org.sat4j.minisat.orders.NegativeLiteralSelectionStrategy",
225:       "org.sat4j.tools.DimacsStringSolver",
226:       "org.sat4j.tools.ModelIterator",
227:       "org.sat4j.specs.TimeoutException",
228:       "org.sat4j.minisat.constraints.cnf.WLClause",
229:       "org.sat4j.minisat.constraints.cnf.OriginalWLClause",
230:       "org.sat4j.minisat.constraints.cnf.CBClause",
231:       "org.sat4j.minisat.constraints.cnf.Clauses",
232:       "org.sat4j.core.VecInt$1",
233:       "org.sat4j.tools.IVisualizationTool",
234:       "org.sat4j.minisat.constraints.cnf.LearntWLClause",
235:       "org.sat4j.minisat.restarts.Glucose21Restarts",
236:       "org.sat4j.minisat.core.CircularBuffer",
237:       "org.sat4j.minisat.constraints.cnf.UnitClause",
238:       "org.sat4j.minisat.constraints.xor.Xor",
239:       "org.sat4j.minisat.orders.PositiveLiteralSelectionStrategy",
240:       "org.sat4j.minisat.restarts.LubyRestarts",
241:       "org.sat4j.minisat.constraints.ClausalDataStructureWL",
242:       "org.sat4j.core.Vec$1",
243:       "org.sat4j.core.ConstrGroup",
244:       "org.sat4j.LightFactory",
245:       "org.sat4j.minisat.orders.RSATPhaseSelectionStrategy",
246:       "org.sat4j.specs.Lbool",
247:       "org.sat4j.core.EmptyVecInt$1",
248:       "org.sat4j.minisat.core.Heap",
249:       "org.sat4j.minisat.orders.ActivityBasedVariableComparator",
250:       "org.sat4j.minisat.core.ConflictTimerContainer",
251:       "org.sat4j.minisat.core.Solver$6",
252:       "org.sat4j.minisat.constraints.MixedDataStructureDanielWLConciseBinary",
253:       "org.sat4j.core.ReadOnlyVec",
254:       "org.sat4j.minisat.constraints.MixedDataStructureDanielHT",
255:       "org.sat4j.minisat.constraints.cnf.BinaryClause",
256:       "org.sat4j.minisat.constraints.cnf.OriginalBinaryClause",
257:       "org.sat4j.minisat.constraints.card.MaxWatchCard",
258:       "org.sat4j.minisat.constraints.MixedDataStructureSingleWL",
259:       "org.sat4j.tools.encoding.EncodingStrategyAdapter",
260:       "org.sat4j.tools.encoding.Ladder",
261:       "org.sat4j.opt.AbstractSelectorVariablesDecorator",
262:       "org.sat4j.opt.MaxSatDecorator",
263:       "org.sat4j.minisat.constraints.CardinalityDataStructureYanMin",
264:       "org.sat4j.minisat.learning.ActiveLearning",
265:       "org.sat4j.minisat.restarts.FixedPeriodRestarts"
266:     );
267:   }
268: }

[MASTER] 09:05:45.398 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
ILits iLits0 = mock(ILits.class, new ViolatedAssumptionAnswer());
VecInt vecInt0 = new VecInt(0);
assertNotNull(vecInt0);
assertEquals(0, vecInt0.size());
assertTrue(vecInt0.isEmpty());

UnitClauses unitClauses0 = (UnitClauses)AtLeast.atLeastNew((UnitPropagationListener) null, iLits0, vecInt0, 0);
assertNotNull(unitClauses0);
assertEquals(0, vecInt0.size());
assertTrue(vecInt0.isEmpty());
assertTrue(unitClauses0.isSatisfied());
assertFalse(unitClauses0.canBePropagatedMultipleTimes());
assertFalse(unitClauses0.simplify());

((AtLeast) unitClauses0).toString();

