/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 15:06:37 GMT 2019
 */

package de.progra.charting.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.progra.charting.event.ChartDataModelListener;
import de.progra.charting.model.DataSet;
import de.progra.charting.model.DefaultChartDataModel;
import de.progra.charting.model.EditableChartDataModel;
import de.progra.charting.model.EditableDataSet;
import de.progra.charting.model.ObjectChartDataModel;
import java.math.BigInteger;
import java.util.ArrayList;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractChartDataModel_ESTest extends AbstractChartDataModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      arrayList0.add(integer0);
      editableChartDataModel0.data = arrayList0;
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      boolean boolean0 = editableChartDataModel0.equals(objectChartDataModel0);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      objectChartDataModel0.maxvalue = (Number) 0.0;
      Number number0 = objectChartDataModel0.getManualMaximumValue();
      assertNotNull(number0);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      defaultChartDataModel0.setMinimumColumnValue((-1432));
      assertEquals((-1432.0), defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EditableDataSet[] editableDataSetArray0 = new EditableDataSet[1];
      EditableDataSet editableDataSet0 = new EditableDataSet();
      editableDataSetArray0[0] = editableDataSet0;
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(editableDataSetArray0);
      assertFalse(editableChartDataModel0.isManualScale());
      
      editableChartDataModel0.setManualScale(true);
      assertTrue(editableChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertFalse(objectChartDataModel0.isManualScale());
      
      objectChartDataModel0.manualscale = true;
      boolean boolean0 = objectChartDataModel0.isAutoScale();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertFalse(objectChartDataModel0.isManualScale());
      
      objectChartDataModel0.manualscale = true;
      boolean boolean0 = objectChartDataModel0.isManualScale();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      editableChartDataModel0.isColumnNumeric();
      assertFalse(editableChartDataModel0.isAutoScale());
      assertFalse(editableChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      BigInteger bigInteger0 = BigInteger.ZERO;
      editableChartDataModel0.minvalue = (Number) bigInteger0;
      Number number0 = editableChartDataModel0.getManualMinimumValue();
      assertNotNull(number0);
      assertFalse(editableChartDataModel0.isManualScale());
      assertFalse(editableChartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      editableChartDataModel0.mincolumn = 1.0;
      double double0 = editableChartDataModel0.getManualMinimumColumnValue();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[][] doubleArray0 = new double[1][4];
      double[] doubleArray1 = new double[9];
      String[] stringArray0 = new String[5];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(doubleArray0, doubleArray1, stringArray0);
      editableChartDataModel0.maxcolumn = 2301.897799;
      double double0 = editableChartDataModel0.getManualMaximumColumnValue();
      assertEquals(2301.897799, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      editableChartDataModel0.maxcolumn = (-1300.1);
      double double0 = editableChartDataModel0.getManualMaximumColumnValue();
      assertEquals((-1300.1), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Number[][] numberArray0 = new Number[2][2];
      Number[] numberArray1 = new Number[1];
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      numberArray1[0] = (Number) integer0;
      numberArray0[0] = numberArray1;
      numberArray0[1] = numberArray1;
      double[] doubleArray0 = new double[9];
      String[] stringArray0 = new String[3];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(numberArray0, doubleArray0, stringArray0);
      editableChartDataModel0.getDataSetName(0);
      assertFalse(editableChartDataModel0.isAutoScale());
      assertFalse(editableChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[][] intArray0 = new int[1][5];
      double[] doubleArray0 = new double[2];
      String[] stringArray0 = new String[1];
      stringArray0[0] = "de.progra.charting.model.AbstractChartDataModel";
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(intArray0, doubleArray0, stringArray0);
      editableChartDataModel0.getDataSetName(0);
      assertFalse(editableChartDataModel0.isAutoScale());
      assertFalse(editableChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EditableDataSet[] editableDataSetArray0 = new EditableDataSet[2];
      EditableDataSet editableDataSet0 = new EditableDataSet();
      editableDataSetArray0[0] = editableDataSet0;
      editableDataSetArray0[1] = editableDataSet0;
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(editableDataSetArray0);
      editableChartDataModel0.getDataSetName(0);
      assertFalse(editableChartDataModel0.isAutoScale());
      assertFalse(editableChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Number[][] numberArray0 = new Number[3][8];
      Number[] numberArray1 = new Number[1];
      Short short0 = new Short((short) (-3527));
      numberArray1[0] = (Number) short0;
      numberArray0[0] = numberArray1;
      numberArray0[1] = numberArray0[0];
      numberArray0[2] = numberArray0[0];
      double[] doubleArray0 = new double[0];
      String[] stringArray0 = new String[3];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(numberArray0, doubleArray0, stringArray0);
      editableChartDataModel0.getAxisBinding(2);
      assertFalse(editableChartDataModel0.isAutoScale());
      assertFalse(editableChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EditableDataSet[] editableDataSetArray0 = new EditableDataSet[2];
      EditableDataSet editableDataSet0 = new EditableDataSet();
      editableDataSetArray0[0] = editableDataSet0;
      editableDataSetArray0[1] = editableDataSet0;
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(editableDataSetArray0);
      editableChartDataModel0.data = null;
      // Undeclared exception!
      try { 
        editableChartDataModel0.getDataSetName((-521));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.model.DefaultChartDataModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      // Undeclared exception!
      try { 
        editableChartDataModel0.getDataSetName(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      // Undeclared exception!
      try { 
        editableChartDataModel0.getDataSetName((-1802));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1802
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      // Undeclared exception!
      try { 
        editableChartDataModel0.getAxisBinding(2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      arrayList0.add(integer0);
      editableChartDataModel0.data = arrayList0;
      // Undeclared exception!
      try { 
        editableChartDataModel0.getAxisBinding(0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to de.progra.charting.model.DataSet
         //
         verifyException("de.progra.charting.model.DefaultChartDataModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      // Undeclared exception!
      try { 
        objectChartDataModel0.getAxisBinding(352);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 352
         //
         verifyException("de.progra.charting.model.ObjectChartDataModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EditableDataSet[] editableDataSetArray0 = new EditableDataSet[2];
      EditableDataSet editableDataSet0 = new EditableDataSet();
      editableDataSetArray0[0] = editableDataSet0;
      editableDataSetArray0[1] = editableDataSet0;
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(editableDataSetArray0);
      editableChartDataModel0.listener = null;
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      // Undeclared exception!
      try { 
        editableChartDataModel0.fireChartDataModelChangedEvent(integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.model.AbstractChartDataModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      // Undeclared exception!
      try { 
        objectChartDataModel0.fireChartDataModelChangedEvent((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EditableDataSet[] editableDataSetArray0 = new EditableDataSet[2];
      EditableDataSet editableDataSet0 = new EditableDataSet();
      editableDataSetArray0[0] = editableDataSet0;
      editableDataSetArray0[1] = editableDataSet0;
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(editableDataSetArray0);
      Number[][] numberArray0 = new Number[2][2];
      Number[] numberArray1 = new Number[1];
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      numberArray1[0] = (Number) integer0;
      numberArray0[0] = numberArray1;
      numberArray0[1] = numberArray1;
      double[] doubleArray0 = new double[9];
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      EditableChartDataModel editableChartDataModel1 = new EditableChartDataModel(numberArray0, doubleArray0, stringArray0);
      boolean boolean0 = editableChartDataModel1.equals(editableChartDataModel0);
      assertFalse(boolean0);
      assertFalse(editableChartDataModel1.isAutoScale());
      assertFalse(editableChartDataModel0.equals((Object)editableChartDataModel1));
      assertFalse(editableChartDataModel1.isManualScale());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EditableDataSet[] editableDataSetArray0 = new EditableDataSet[2];
      EditableDataSet editableDataSet0 = new EditableDataSet();
      editableDataSetArray0[0] = editableDataSet0;
      editableDataSetArray0[1] = editableDataSet0;
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(editableDataSetArray0);
      Number[][] numberArray0 = new Number[2][2];
      Number[] numberArray1 = new Number[1];
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      numberArray1[0] = (Number) integer0;
      numberArray0[0] = numberArray1;
      numberArray0[1] = numberArray1;
      double[] doubleArray0 = new double[9];
      String[] stringArray0 = new String[3];
      stringArray0[0] = "s";
      EditableChartDataModel editableChartDataModel1 = new EditableChartDataModel(numberArray0, doubleArray0, stringArray0);
      boolean boolean0 = editableChartDataModel1.equals(editableChartDataModel0);
      assertFalse(editableChartDataModel1.isAutoScale());
      assertFalse(editableChartDataModel0.equals((Object)editableChartDataModel1));
      assertFalse(editableChartDataModel1.isManualScale());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EditableDataSet[] editableDataSetArray0 = new EditableDataSet[2];
      EditableDataSet editableDataSet0 = new EditableDataSet();
      editableDataSetArray0[0] = editableDataSet0;
      editableDataSetArray0[1] = editableDataSet0;
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(editableDataSetArray0);
      boolean boolean0 = editableChartDataModel0.equals(editableChartDataModel0);
      assertFalse(editableChartDataModel0.isAutoScale());
      assertFalse(editableChartDataModel0.isManualScale());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      DataSet[] dataSetArray0 = new DataSet[1];
      objectChartDataModel0.data = dataSetArray0;
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      boolean boolean0 = editableChartDataModel0.equals(objectChartDataModel0);
      assertFalse(boolean0);
      assertFalse(editableChartDataModel0.isAutoScale());
      assertFalse(editableChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      boolean boolean0 = objectChartDataModel0.equals((Object) null);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(boolean0);
      assertFalse(objectChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      EditableDataSet[] editableDataSetArray0 = new EditableDataSet[0];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(editableDataSetArray0);
      objectChartDataModel0.fireChartDataModelChangedEvent(editableChartDataModel0);
      assertFalse(editableChartDataModel0.isAutoScale());
      assertFalse(editableChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      double double0 = objectChartDataModel0.getManualMinimumColumnValue();
      assertEquals(0.0, double0, 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      objectChartDataModel0.setMaximumValue(integer0);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      editableChartDataModel0.setMaximumColumnValue((-2207.22635861401));
      assertEquals((-2207.22635861401), editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      boolean boolean0 = objectChartDataModel0.isColumnNumeric();
      assertFalse(boolean0);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      boolean boolean0 = objectChartDataModel0.isManualScale();
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      objectChartDataModel0.getColumnClass();
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      double[][] doubleArray0 = new double[1][4];
      double[] doubleArray1 = new double[9];
      String[] stringArray0 = new String[5];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(doubleArray0, doubleArray1, stringArray0);
      assertFalse(editableChartDataModel0.isAutoScale());
      
      editableChartDataModel0.setAutoScale(true);
      assertTrue(editableChartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      objectChartDataModel0.setValueAt(0, (-2), "GsC5|ZJ");
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      objectChartDataModel0.getManualMinimumValue();
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      double[][] doubleArray0 = new double[1][8];
      String[] stringArray0 = new String[3];
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel(doubleArray0, doubleArray0, stringArray0);
      objectChartDataModel0.setAxisBinding(0, (-1658));
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      double double0 = editableChartDataModel0.getManualMaximumColumnValue();
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(0.0, double0, 0.01);
      assertFalse(editableChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      Byte byte0 = new Byte((byte) (-13));
      editableChartDataModel0.setMinimumValue(byte0);
      assertFalse(editableChartDataModel0.isAutoScale());
      assertFalse(editableChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      objectChartDataModel0.getManualMaximumValue();
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      EditableDataSet[] editableDataSetArray0 = new EditableDataSet[0];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(editableDataSetArray0);
      editableChartDataModel0.addChartDataModelListener((ChartDataModelListener) null);
      assertFalse(editableChartDataModel0.isAutoScale());
      assertFalse(editableChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      editableChartDataModel0.removeChartDataModelListener((ChartDataModelListener) null);
      assertFalse(editableChartDataModel0.isManualScale());
      assertFalse(editableChartDataModel0.isAutoScale());
  }
}
