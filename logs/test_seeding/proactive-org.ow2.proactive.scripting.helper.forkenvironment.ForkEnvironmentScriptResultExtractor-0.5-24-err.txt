[MASTER] 15:06:38.314 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_4_1550498798046/org/ow2/proactive/scripting/helper/forkenvironment/ForkEnvironmentScriptResultExtractor_4_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_4_1550498798046/org/ow2/proactive/scripting/helper/forkenvironment/ForkEnvironmentScriptResultExtractor_4_tmp__ESTest_scaffolding.java]]
[MASTER] 15:06:38.326 [logback-2] ERROR JUnitAnalyzer - Classpath: bins/proactive/common-api-8.5.0-SNAPSHOT-tests.jar:bins/proactive/common-api-all-8.5.0-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/proactive/common-api-8.5.0-SNAPSHOT-tests.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/proactive/common-api-all-8.5.0-SNAPSHOT.jar
[MASTER] 15:06:38.326 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/proactive/common-api-8.5.0-SNAPSHOT-tests.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/proactive/common-api-all-8.5.0-SNAPSHOT.jar
[MASTER] 15:06:38.339 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: java.util.HashMap cannot be converted to org.ow2.proactive.scripting.helper.forkenvironment.ForkEnvironmentScriptResultExtractor: 28
[MASTER] 15:06:38.366 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_4_1550498798046/org/ow2/proactive/scripting/helper/forkenvironment/ForkEnvironmentScriptResultExtractor_4_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Feb 18 14:06:38 GMT 2019
4:  */
5: 
6: package org.ow2.proactive.scripting.helper.forkenvironment;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.HashMap;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import org.ow2.proactive.scripting.helper.forkenvironment.ForkEnvironmentScriptResultExtractor;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class ForkEnvironmentScriptResultExtractor_4_tmp__ESTest extends ForkEnvironmentScriptResultExtractor_4_tmp__ESTest_scaffolding {
19: 
20:   @Test(timeout = 4000)
21:   public void test0()  throws Throwable  {
22:       HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
23:       Integer integer0 = new Integer(4041);
24:       hashMap0.put("preJavaHomeCmd", hashMap0);
25:       HashMap hashMap1 = (HashMap)hashMap0.put("preJavaHomeCmd", integer0);
26:       // Undeclared exception!
27:       try { 
28:         ((ForkEnvironmentScriptResultExtractor) hashMap1).getJavaPrefixCommand(hashMap0);
29:         fail("Expecting exception: IllegalArgumentException");
30:       
31:       } catch(IllegalArgumentException e) {
32:       }
33:   }
34: }
RegularFileObject[/tmp/EvoSuite_4_1550498798046/org/ow2/proactive/scripting/helper/forkenvironment/ForkEnvironmentScriptResultExtractor_4_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Feb 18 14:06:38 GMT 2019
5:  */
6: 
7: package org.ow2.proactive.scripting.helper.forkenvironment;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class ForkEnvironmentScriptResultExtractor_4_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "org.ow2.proactive.scripting.helper.forkenvironment.ForkEnvironmentScriptResultExtractor"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ForkEnvironmentScriptResultExtractor_4_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "org.ow2.proactive.scripting.helper.forkenvironment.ForkEnvironmentScriptResultExtractor"
82:     );
83:   } 
84: 
85:   private static void resetClasses() {
86:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ForkEnvironmentScriptResultExtractor_4_tmp__ESTest_scaffolding.class.getClassLoader()); 
87: 
88:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
89:       "org.ow2.proactive.scripting.helper.forkenvironment.ForkEnvironmentScriptResultExtractor"
90:     );
91:   }
92: }

[MASTER] 15:06:38.367 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
Integer integer0 = new Integer(4041);
hashMap0.put("preJavaHomeCmd", hashMap0);
HashMap hashMap1 = (HashMap)hashMap0.put("preJavaHomeCmd", integer0);
((ForkEnvironmentScriptResultExtractor) hashMap1).getJavaPrefixCommand(hashMap0);

