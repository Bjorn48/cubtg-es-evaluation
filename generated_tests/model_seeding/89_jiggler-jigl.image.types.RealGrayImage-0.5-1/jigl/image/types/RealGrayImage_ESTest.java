/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 09:05:13 GMT 2019
 */

package jigl.image.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.image.ImageProducer;
import java.awt.image.MemoryImageSource;
import java.net.URL;
import java.util.Hashtable;
import javax.swing.JApplet;
import jigl.image.ROI;
import jigl.image.types.RealGrayImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RealGrayImage_ESTest extends RealGrayImage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      realGrayImage0.median(799);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2553);
      Float float0 = new Float((-1179.88));
      ROI rOI0 = new ROI(0, 0, 0, 0);
      // Undeclared exception!
      try { 
        realGrayImage0.set(0, 0, float0, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      realGrayImage0.subtract(0.0F);
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(760, 0, 1747, 3169, 2470.5593F);
      ROI rOI0 = new ROI();
      rOI0.X();
      rOI0.Y();
      ROI rOI1 = new ROI(1, 2247, (-1), 760);
      ROI rOI2 = new ROI(1, 1, 1, 3169);
      rOI2.X();
      rOI2.Y();
      rOI0.uy();
      rOI0.ly();
      // Undeclared exception!
      try { 
        realGrayImage1.divide((-2877), 1, 580.8113F, (ROI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2500);
      realGrayImage0.addbuffer(0, 2500, (float) 8);
      realGrayImage0.clip(2312, 128);
      realGrayImage0.sqrSum();
      RealGrayImage realGrayImage1 = realGrayImage0.subtract((float) 2500);
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        realGrayImage1.multiply((-495), 0, (-1388.4528F), rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -495
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2500);
      realGrayImage0.median(2);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2553);
      RealGrayImage realGrayImage1 = realGrayImage0.copy();
      Float float0 = new Float((-1179.88));
      realGrayImage0.copy();
      realGrayImage0.median(2553);
      RealGrayImage realGrayImage2 = realGrayImage0.clear(float0);
      ROI rOI0 = new ROI();
      rOI0.X();
      rOI0.Y();
      ROI rOI1 = new ROI((-1483), 2247, 1, 8);
      rOI1.X();
      rOI0.Y();
      rOI0.uy();
      rOI0.ly();
      // Undeclared exception!
      try { 
        realGrayImage1.multiply(realGrayImage2, rOI1, rOI1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1483
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(0, 0, 0, 0, (float) 0);
      RealGrayImage realGrayImage2 = realGrayImage1.addbuffer(0, 0, (float) 0);
      realGrayImage0.subtract((float) 0);
      realGrayImage1.multiply(realGrayImage0);
      realGrayImage0.addbuffer(0, 0, 0, 0, (float) 0);
      realGrayImage2.median((-907));
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2500);
      realGrayImage0.getJavaImage();
      realGrayImage0.median(0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2553);
      Float float0 = new Float((-1179.88));
      realGrayImage0.max();
      realGrayImage0.sqrSum();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(22, 2500);
      int int0 = (-12);
      Float float0 = new Float((float) 2500);
      Float.valueOf((-173.0F));
      Float.valueOf((float) 3019);
      Float float1 = new Float((double) 22);
      // Undeclared exception!
      realGrayImage0.clear(float1);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2553);
      realGrayImage0.addbuffer(1, 1, (float) 2553);
      // Undeclared exception!
      try { 
        realGrayImage0.divide(1, (-16777216), (-3492.1162F));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -16777216
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 799);
      realGrayImage0.addbuffer(0, 799, 770.5068F);
      ROI rOI0 = new ROI();
      rOI0.X();
      rOI0.Y();
      ROI rOI1 = new ROI(1, 2247, 1, 8);
      rOI1.X();
      rOI0.Y();
      rOI0.uy();
      rOI0.ly();
      // Undeclared exception!
      try { 
        realGrayImage0.copy(rOI1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2553);
      RealGrayImage realGrayImage1 = new RealGrayImage(1, 255);
      realGrayImage0.clip((-1359), (-1359));
      // Undeclared exception!
      try { 
        realGrayImage1.min();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(image0).getHeight(any(java.awt.image.ImageObserver.class));
      doReturn((ImageProducer) null).when(image0).getSource();
      doReturn(0, 0).when(image0).getWidth(any(java.awt.image.ImageObserver.class));
      RealGrayImage realGrayImage0 = null;
      try {
        realGrayImage0 = new RealGrayImage(image0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.PixelGrabber", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(22, 2500);
      // Undeclared exception!
      try { 
        realGrayImage0.getJavaImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      RealGrayImage realGrayImage0 = null;
      try {
        realGrayImage0 = new RealGrayImage(0, (-3139));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      assertNotNull(realGrayImage0);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals(0, realGrayImage0.Y());
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(0, 0, (-508), 57, 0.0F);
      assertFalse(realGrayImage1.equals((Object)realGrayImage0));
      assertNotNull(realGrayImage1);
      assertNotSame(realGrayImage0, realGrayImage1);
      assertNotSame(realGrayImage1, realGrayImage0);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals(0, realGrayImage0.Y());
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals(0, realGrayImage1.Y());
      assertEquals(0.0F, realGrayImage1.absSum(), 0.01F);
      assertEquals(0.0F, realGrayImage1.addSum(), 0.01F);
      assertEquals(0, realGrayImage1.X());
      assertEquals(32767.0F, realGrayImage1.min(), 0.01F);
      assertEquals((-32768.0F), realGrayImage1.max(), 0.01F);
      assertEquals(0.0, realGrayImage1.sqrSum(), 0.01);
      
      String string0 = realGrayImage1.toString();
      assertFalse(realGrayImage0.equals((Object)realGrayImage1));
      assertFalse(realGrayImage1.equals((Object)realGrayImage0));
      assertNotNull(string0);
      assertNotSame(realGrayImage0, realGrayImage1);
      assertNotSame(realGrayImage1, realGrayImage0);
      assertEquals("0:0\n", string0);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals(0, realGrayImage0.Y());
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals(0, realGrayImage1.Y());
      assertEquals(0.0F, realGrayImage1.absSum(), 0.01F);
      assertEquals(0.0F, realGrayImage1.addSum(), 0.01F);
      assertEquals(0, realGrayImage1.X());
      assertEquals(32767.0F, realGrayImage1.min(), 0.01F);
      assertEquals((-32768.0F), realGrayImage1.max(), 0.01F);
      assertEquals(0.0, realGrayImage1.sqrSum(), 0.01);
      
      String string1 = realGrayImage0.toString();
      assertFalse(realGrayImage0.equals((Object)realGrayImage1));
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertNotSame(realGrayImage0, realGrayImage1);
      assertEquals("0:0\n", string1);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals(0, realGrayImage0.Y());
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      
      ROI rOI0 = new ROI(1350, (-508), (-508), 0);
      assertNotNull(rOI0);
      assertEquals(1859, rOI0.X());
      assertEquals(0, rOI0.ly());
      assertEquals(1350, rOI0.lx());
      assertEquals((-508), rOI0.uy());
      assertEquals(509, rOI0.Y());
      assertEquals((-508), rOI0.ux());
      
      realGrayImage0.clip(570, 57);
      assertFalse(realGrayImage0.equals((Object)realGrayImage1));
      assertNotSame(realGrayImage0, realGrayImage1);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals(0, realGrayImage0.Y());
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      
      Float float0 = realGrayImage0.min();
      assertFalse(realGrayImage0.equals((Object)realGrayImage1));
      assertNotNull(float0);
      assertNotSame(realGrayImage0, realGrayImage1);
      assertEquals(32767.0F, (float)float0, 0.01F);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals(0, realGrayImage0.Y());
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(22, 2500);
      // Undeclared exception!
      try { 
        realGrayImage0.median(2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(2477, 1327);
      // Undeclared exception!
      try { 
        realGrayImage0.max();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 799);
      realGrayImage0.addbuffer(0, 799, 770.5068F);
      ROI rOI0 = new ROI(0, 0, 1, 128);
      rOI0.setROI(0, (-2075), (-43), (-43));
      realGrayImage0.copy();
      ROI rOI1 = new ROI();
      // Undeclared exception!
      try { 
        realGrayImage0.byteSize(rOI1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      float[][] floatArray0 = new float[5][5];
      float[] floatArray1 = new float[4];
      floatArray1[0] = (-2372.6812F);
      floatArray1[1] = 2385.6199F;
      floatArray1[2] = (-1.0F);
      floatArray1[3] = 3452.843F;
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[7];
      floatArray2[0] = 2385.6199F;
      floatArray2[1] = (-1.0F);
      floatArray2[2] = 2385.6199F;
      floatArray2[3] = (-2372.6812F);
      floatArray2[4] = (-2372.6812F);
      floatArray2[5] = 2385.6199F;
      floatArray2[6] = (-2372.6812F);
      floatArray0[1] = floatArray2;
      float[] floatArray3 = new float[7];
      floatArray3[0] = (-1.0F);
      floatArray3[1] = (-1.0F);
      floatArray3[2] = (-1.0F);
      floatArray3[3] = (-1.0F);
      floatArray3[4] = (-1.0F);
      floatArray3[5] = 2385.6199F;
      floatArray3[6] = (-2372.6812F);
      floatArray0[2] = floatArray3;
      float[] floatArray4 = new float[4];
      floatArray4[0] = 3452.843F;
      floatArray4[1] = 2385.6199F;
      floatArray4[2] = (-1.0F);
      floatArray4[3] = (-791.54736F);
      floatArray0[3] = floatArray4;
      float[] floatArray5 = new float[1];
      floatArray5[0] = (-1.0F);
      floatArray0[4] = floatArray5;
      RealGrayImage realGrayImage0 = null;
      try {
        realGrayImage0 = new RealGrayImage(floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 799);
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(799, 0, 0, 0, (float) 0);
      RealGrayImage realGrayImage2 = realGrayImage1.addbuffer(0, 799, 770.5068F);
      realGrayImage2.addbuffer(2548, 0, (float) 0);
      realGrayImage0.subtract((-51.82495F));
      RealGrayImage realGrayImage3 = realGrayImage1.addbuffer(14, 42, 0, (-1), (float) 0);
      ROI rOI0 = new ROI();
      rOI0.X();
      rOI0.Y();
      ROI rOI1 = new ROI((-1483), 2247, 1, 8);
      rOI1.X();
      rOI0.Y();
      rOI0.uy();
      rOI0.ly();
      // Undeclared exception!
      try { 
        realGrayImage3.divide(0, (-52), 1132.5414F, rOI1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -44
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2553);
      Float float0 = new Float((-1179.88));
      ROI rOI0 = new ROI(0, 0, 0, 0);
      RealGrayImage realGrayImage1 = new RealGrayImage(realGrayImage0);
      realGrayImage1.divide((float) 0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2553);
      Float float0 = new Float((double) 0);
      realGrayImage0.sqrSum();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2553);
      realGrayImage0.addbuffer(1, 1, (float) 2553);
      realGrayImage0.clip((-16777216), 0);
      ROI rOI0 = new ROI(0, 0, (-1437), 167);
      ROI rOI1 = new ROI((-1), 2549, 2549, 2516);
      rOI0.X();
      rOI1.Y();
      rOI1.uy();
      rOI1.ly();
      // Undeclared exception!
      try { 
        realGrayImage0.divide((-1), 2516, (float) (-1), rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1438
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(0, 0, 0, 0, (float) 0);
      realGrayImage1.addbuffer(0, 0, 770.5068F);
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        realGrayImage0.copy(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2553);
      realGrayImage0.getJavaImage();
      realGrayImage0.toString();
      realGrayImage0.toString();
      RealGrayImage realGrayImage1 = realGrayImage0.divide(realGrayImage0);
      realGrayImage0.copy();
      realGrayImage1.subtract(realGrayImage0);
      realGrayImage0.copy();
      realGrayImage0.max();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(22, 2500);
      // Undeclared exception!
      try { 
        realGrayImage0.clip((-1359), 2477);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 1);
      RealGrayImage realGrayImage1 = realGrayImage0.subtract((float) 1);
      realGrayImage0.addbuffer(8, 1, (-2077.1543F));
      realGrayImage1.max();
      realGrayImage0.getJavaImage();
      ROI rOI0 = new ROI();
      rOI0.X();
      rOI0.Y();
      ROI rOI1 = new ROI((-1483), 2247, 1, 8);
      rOI1.X();
      rOI0.Y();
      rOI0.uy();
      rOI0.ly();
      // Undeclared exception!
      try { 
        realGrayImage1.median(838, rOI1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      realGrayImage0.max();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      int int0 = (-508);
      realGrayImage0.addbuffer(0, 0, (-508), 57, 0.0F);
      int int1 = 1350;
      ROI rOI0 = new ROI();
      rOI0.X();
      rOI0.Y();
      ROI rOI1 = new ROI((-1483), 2247, 1, 8);
      rOI1.X();
      rOI0.Y();
      rOI0.uy();
      rOI0.ly();
      // Undeclared exception!
      try { 
        realGrayImage0.copy(rOI1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(0, 0, (-508), 1, 0.0F);
      realGrayImage1.toString();
      realGrayImage0.toString();
      ROI rOI0 = new ROI(1350, (-508), (-508), 0);
      Float float0 = new Float((-580.616F));
      Float.sum((-32768.0F), (-580.616F));
      Float float1 = new Float((float) (-12));
      realGrayImage0.clear(float1);
      ROI rOI1 = new ROI(1350, (-508), (-1), 1);
      ROI rOI2 = new ROI();
      // Undeclared exception!
      try { 
        realGrayImage0.add(realGrayImage1, rOI2, rOI2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      int int0 = 0;
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(1, 1, 0, (-670), (float) (-670));
      realGrayImage0.toString();
      realGrayImage1.toString();
      ROI rOI0 = new ROI();
      rOI0.setROI(1, (-12), (-12), 1);
      Float float0 = new Float((float) (-12));
      Float.valueOf((float) (-2130));
      Float.valueOf((-227.10869F));
      RealGrayImage realGrayImage2 = null;
      try {
        realGrayImage2 = new RealGrayImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.AbstractArrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(0, 0, (-508), 57, 0.0F);
      realGrayImage1.toString();
      realGrayImage0.toString();
      realGrayImage1.addbuffer(947, 0, (-32768.0F));
      realGrayImage1.clip(0, 0);
      // Undeclared exception!
      try { 
        realGrayImage0.divide(0, (-1979), 1.0F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1979
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Float float0 = new Float(0.0F);
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 176);
      RealGrayImage realGrayImage1 = realGrayImage0.clear(float0);
      realGrayImage1.toString();
      ROI rOI0 = new ROI(167, 167, 1031, (-827));
      realGrayImage0.clip((-630), (-630));
      realGrayImage1.min();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(0, 0, (-508), 1, 0.0F);
      realGrayImage1.toString();
      realGrayImage0.toString();
      ROI rOI0 = new ROI(1350, (-508), (-508), 0);
      rOI0.setROI((-12), (-2130), (-12), 10);
      Float float0 = new Float((float) 1);
      rOI0.setROI(249, 10, 1, (-508));
      realGrayImage1.copy();
      // Undeclared exception!
      try { 
        realGrayImage0.byteSize(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -508
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2500);
      ROI rOI0 = new ROI(8, 755, 8, 8);
      rOI0.X();
      ROI rOI1 = new ROI();
      // Undeclared exception!
      try { 
        realGrayImage0.toString(rOI1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(2553, 2553);
      realGrayImage0.addbuffer(1, 1, 752.0F);
      // Undeclared exception!
      try { 
        realGrayImage0.divide(255, 36, (float) 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 799);
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(799, 0, 0, 0, (float) 0);
      realGrayImage1.addbuffer(0, 799, 770.5068F);
      Float.valueOf((float) 0);
      Float float0 = Float.valueOf((-372.73593F));
      Float float1 = new Float((-3995.77981928));
      realGrayImage1.clear(float0);
      float[] floatArray0 = new float[6];
      floatArray0[0] = (float) 0;
      floatArray0[1] = (-32768.0F);
      floatArray0[2] = (float) 0;
      floatArray0[3] = (float) 799;
      floatArray0[4] = (float) 0;
      floatArray0[5] = (float) 0;
      RealGrayImage realGrayImage2 = new RealGrayImage(2548, 0, floatArray0);
      ROI rOI0 = new ROI(0, (-1253), 0, 0);
      // Undeclared exception!
      try { 
        realGrayImage2.subtract(770.5068F, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1253
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = 671;
      intArray0[1] = 3852;
      intArray0[2] = 3852;
      intArray0[3] = 3852;
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      Hashtable<String, Object> hashtable1 = new Hashtable<String, Object>(hashtable0);
      MemoryImageSource memoryImageSource0 = new MemoryImageSource(671, 3852, intArray0, 3852, 783, hashtable1);
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      doReturn(671, 671).when(image0).getHeight(any(java.awt.image.ImageObserver.class));
      doReturn(memoryImageSource0).when(image0).getSource();
      doReturn(3852, 0).when(image0).getWidth(any(java.awt.image.ImageObserver.class));
      RealGrayImage realGrayImage0 = new RealGrayImage(image0);
      // Undeclared exception!
      try { 
        realGrayImage0.copy();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2500);
      realGrayImage0.median(0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 799);
      realGrayImage0.addbuffer(0, 799, 770.5068F);
      ROI rOI0 = new ROI(0, 0, 799, 128);
      rOI0.setROI(799, (-2075), (-43), (-43));
      realGrayImage0.copy();
      ROI rOI1 = new ROI();
      // Undeclared exception!
      try { 
        realGrayImage0.byteSize(rOI1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RealGrayImage realGrayImage0 = null;
      try {
        realGrayImage0 = new RealGrayImage((float[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2553);
      Float.isFinite(0);
      Float float0 = Float.valueOf(1.0F);
      float0.floatValue();
      Float float1 = new Float((float) 0);
      RealGrayImage realGrayImage1 = realGrayImage0.clear(float1);
      RealGrayImage realGrayImage2 = realGrayImage0.divide((float) 2553);
      realGrayImage1.add((-1352.1874F));
      realGrayImage0.diff(realGrayImage2);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      int int0 = 3132;
      int int1 = 1;
      float[] floatArray0 = new float[8];
      floatArray0[0] = 1084.5977F;
      floatArray0[1] = 0.0F;
      floatArray0[2] = (float) 1;
      floatArray0[3] = (float) 3132;
      floatArray0[4] = (float) 3132;
      floatArray0[5] = (float) 3132;
      floatArray0[6] = (float) 3132;
      floatArray0[7] = (float) 3132;
      RealGrayImage realGrayImage0 = null;
      try {
        realGrayImage0 = new RealGrayImage(3132, 1, floatArray0);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2553);
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(1, 1, (float) 2553);
      realGrayImage0.clip((-16777216), 0);
      realGrayImage0.subtract(realGrayImage1);
      realGrayImage1.copy();
      int int0 = 1;
      ROI rOI0 = new ROI((-16777216), 1923, 0, 1);
      // Undeclared exception!
      try { 
        realGrayImage0.multiply(752.0F, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -16777216
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(0, 0, (-508), 57, 0.0F);
      int int0 = 0;
      realGrayImage1.toString();
      realGrayImage0.toString();
      ROI rOI0 = new ROI(1350, (-508), (-508), 0);
      realGrayImage1.addbuffer(947, 0, (-32768.0F));
      rOI0.setROI((-1), (-2130), (-1), (-1));
      // Undeclared exception!
      try { 
        realGrayImage1.min(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2130
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 799);
      int int0 = 0;
      int int1 = 128;
      int int2 = 649;
      int int3 = 16;
      int int4 = 349;
      realGrayImage0.addbuffer(int1, int2, int3, int4, (float) int4);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2500);
      Float float0 = new Float(0.0);
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        realGrayImage0.set(2543, 0, float0, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2543
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 799);
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(799, 0, 0, 0, (float) 0);
      RealGrayImage realGrayImage2 = realGrayImage1.addbuffer(0, 799, 770.5068F);
      realGrayImage2.addbuffer(2548, 0, (float) 0);
      realGrayImage0.subtract((-51.82495F));
      realGrayImage2.getJavaImage();
      // Undeclared exception!
      try { 
        realGrayImage2.min((ROI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(22, 2500);
      // Undeclared exception!
      try { 
        realGrayImage0.addbuffer(2500, (-35), (-60), 22, 2837.86F);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2553);
      Float float0 = new Float((-2056.8F));
      float0.floatValue();
      realGrayImage0.divide((float) 2553);
      realGrayImage0.add(0.0F);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2500);
      Float float0 = new Float(565.417813221691);
      ROI rOI0 = new ROI(0, 0, 0, 0);
      realGrayImage0.addbuffer(2500, 1, 1, 1105, (float) 0);
      realGrayImage0.min();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RealGrayImage realGrayImage0 = null;
      try {
        realGrayImage0 = new RealGrayImage((Image) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.AbstractImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(22, 2500);
      float float0 = (-3492.1162F);
      int int0 = (-2284);
      // Undeclared exception!
      try { 
        realGrayImage0.get(2500, 2500);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2500
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      int int0 = 2553;
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2553);
      Float.isFinite(0);
      Float float0 = Float.valueOf(1.0F);
      float0.floatValue();
      Float float1 = new Float((float) 0);
      RealGrayImage realGrayImage1 = realGrayImage0.clear(float1);
      RealGrayImage realGrayImage2 = new RealGrayImage(realGrayImage0);
      float float2 = (-1352.1874F);
      realGrayImage1.add((-1352.1874F));
      realGrayImage0.diff(realGrayImage2);
      realGrayImage1.min();
      int int1 = 2532;
      int int2 = 0;
      int int3 = 1;
      ROI rOI0 = new ROI(int1, int2, int0, int3);
      // Undeclared exception!
      try { 
        realGrayImage0.add(float2, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2532
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Float float0 = Float.valueOf(0.0F);
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 176);
      RealGrayImage realGrayImage1 = realGrayImage0.clear(float0);
      ROI rOI0 = new ROI(167, 167, 1031, (-827));
      // Undeclared exception!
      try { 
        realGrayImage1.subtract((float) 176, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -827
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 799);
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(799, 0, 0, 0, (float) 0);
      realGrayImage1.addbuffer(0, 799, 770.5068F);
      realGrayImage0.subtract((-51.91F));
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      float[][] floatArray0 = new float[1][5];
      float[] floatArray1 = new float[5];
      floatArray1[0] = 32767.0F;
      floatArray1[1] = 255.0F;
      floatArray1[2] = 0.0F;
      floatArray1[3] = 2710.7F;
      floatArray1[4] = 255.0F;
      floatArray0[0] = floatArray1;
      RealGrayImage realGrayImage0 = null;
      try {
        realGrayImage0 = new RealGrayImage(floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(22, 2500);
      // Undeclared exception!
      realGrayImage0.median(22);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      int int0 = (-7);
      float[] floatArray0 = new float[1];
      floatArray0[0] = (float) 0;
      RealGrayImage realGrayImage0 = null;
      try {
        realGrayImage0 = new RealGrayImage((-7), (-7), floatArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      RealGrayImage realGrayImage1 = realGrayImage0.subtract(0.0F);
      RealGrayImage realGrayImage2 = realGrayImage0.addbuffer(1, 1, (-2077.1543F));
      realGrayImage2.clip(1, (-4026));
      realGrayImage1.sqrSum();
      realGrayImage1.subtract((-2880.889F));
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        realGrayImage1.multiply(1, 760, 0.0F, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 760
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2553);
      realGrayImage0.addbuffer(1, 1, (float) 2553);
      realGrayImage0.clip((-16777216), 0);
      // Undeclared exception!
      try { 
        realGrayImage0.divide(1, (-16777216), (-3492.1162F));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -16777216
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(0, 0, (-508), 57, 0.0F);
      realGrayImage1.toString();
      realGrayImage0.toString();
      ROI rOI0 = new ROI(1350, (-508), (-508), 0);
      RealGrayImage realGrayImage2 = realGrayImage1.divide(realGrayImage0);
      RealGrayImage realGrayImage3 = realGrayImage2.copy();
      Float float0 = new Float((float) 1350);
      realGrayImage2.clear(float0);
      // Undeclared exception!
      try { 
        realGrayImage3.addbuffer((-5972), 947, 752, 0, (-3413.21F));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 799);
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(799, 0, 0, 0, (float) 0);
      RealGrayImage realGrayImage2 = realGrayImage1.addbuffer(0, 799, 770.5068F);
      realGrayImage2.addbuffer(2548, 0, (float) 0);
      realGrayImage0.subtract((-51.91F));
      ROI rOI0 = new ROI(1123, 1123, 1123, 2548);
      // Undeclared exception!
      try { 
        realGrayImage0.add(realGrayImage1, rOI0, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1123
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RealGrayImage realGrayImage0 = null;
      try {
        realGrayImage0 = new RealGrayImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      int int0 = 0;
      int int1 = 774;
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 774);
      realGrayImage0.addbuffer(0, 774, 770.5068F);
      ROI rOI0 = new ROI((-1319), 767, 0, (-1319));
      rOI0.setROI(774, 1, 774, 774);
      // Undeclared exception!
      try { 
        realGrayImage0.toString(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 774
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2500);
      Float float0 = new Float(565.417813221691);
      ROI rOI0 = new ROI(0, 0, 0, 0);
      // Undeclared exception!
      try { 
        realGrayImage0.set(2500, 2512, float0, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2512
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      float[][] floatArray0 = new float[1][1];
      float[] floatArray1 = new float[1];
      floatArray1[0] = (-1140.6F);
      floatArray0[0] = floatArray1;
      RealGrayImage realGrayImage0 = new RealGrayImage(floatArray0);
      ROI rOI0 = new ROI();
      int int0 = 0;
      // Undeclared exception!
      realGrayImage0.addbuffer(355, 355, 355, 0, (float) 355);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2553);
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(1, 1, (float) 2553);
      realGrayImage1.getJavaImage();
      realGrayImage0.clip((-16777216), 0);
      realGrayImage0.subtract(realGrayImage1);
      realGrayImage1.copy();
      realGrayImage0.median(2);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      float[] floatArray0 = new float[5];
      floatArray0[0] = (float) 3788;
      floatArray0[1] = (float) 3788;
      floatArray0[2] = (float) 3788;
      floatArray0[3] = (float) 3788;
      floatArray0[4] = (float) 3788;
      RealGrayImage realGrayImage0 = null;
      try {
        realGrayImage0 = new RealGrayImage(3788, 3788, floatArray0);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      realGrayImage0.addbuffer(0, 0, 0, 0, (float) 0);
      RealGrayImage realGrayImage1 = new RealGrayImage(33, 0);
      realGrayImage0.median(33);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2553);
      int int0 = 1;
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(1, 1, (float) 2553);
      realGrayImage1.toString();
      int int1 = (-16777216);
      realGrayImage0.clip((-16777216), 0);
      float float0 = (-3492.1162F);
      // Undeclared exception!
      try { 
        realGrayImage1.get((-2284), 387);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 387
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 799);
      RealGrayImage realGrayImage1 = new RealGrayImage(realGrayImage0);
      realGrayImage1.getJavaImage();
      Float float0 = Float.valueOf(213.91281F);
      RealGrayImage realGrayImage2 = realGrayImage0.clear(float0);
      realGrayImage2.toString();
      ROI rOI0 = new ROI(1031, 0, 167, 1031);
      // Undeclared exception!
      try { 
        realGrayImage1.subtract((float) 0, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 167
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      float[] floatArray0 = new float[1];
      floatArray0[0] = (float) 0;
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0, floatArray0);
      ROI rOI0 = new ROI();
      RealGrayImage realGrayImage1 = new RealGrayImage(realGrayImage0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2500);
      // Undeclared exception!
      realGrayImage0.addbuffer(2500, 2548, (float) 2500);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(1934, 2);
      float[][] floatArray0 = new float[0][4];
      RealGrayImage realGrayImage1 = new RealGrayImage(floatArray0);
      ROI rOI0 = new ROI();
      realGrayImage0.copy(rOI0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(0, 0, (-508), 57, 0.0F);
      realGrayImage1.getJavaImage();
      realGrayImage1.toString();
      realGrayImage0.toString();
      ROI rOI0 = new ROI(1350, (-508), (-508), 0);
      RealGrayImage realGrayImage2 = realGrayImage1.divide(realGrayImage0);
      realGrayImage2.copy();
      Float float0 = new Float((float) 1350);
      Float.sum(0.0F, 0.0F);
      realGrayImage2.clear(float0);
      ROI rOI1 = new ROI(1350, 57, (-109), 147);
      // Undeclared exception!
      try { 
        realGrayImage1.add(realGrayImage0, rOI0, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -508
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2553);
      int int0 = 1;
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(1, 0, (float) 2553);
      realGrayImage1.toString();
      ROI rOI0 = new ROI(0, 1608, 1, 786);
      ROI rOI1 = new ROI();
      // Undeclared exception!
      try { 
        realGrayImage0.add(realGrayImage1, rOI1, rOI1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      int int0 = 17;
      RealGrayImage realGrayImage0 = new RealGrayImage(17, 17);
      ROI rOI0 = new ROI();
      realGrayImage0.toString(rOI0);
      // Undeclared exception!
      try { 
        realGrayImage0.getJavaImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      float[] floatArray0 = new float[1];
      floatArray0[0] = (float) 0;
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0, floatArray0);
      realGrayImage0.clip(0, (-5831));
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2500);
      realGrayImage0.copy();
      Float float0 = new Float(565.417813221691);
      realGrayImage0.clip(2500, 2477);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(18, 18);
      // Undeclared exception!
      try { 
        realGrayImage0.subtract(2172.452F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      RealGrayImage realGrayImage1 = realGrayImage0.subtract(0.0F);
      ROI rOI0 = new ROI();
      rOI0.X();
      rOI0.Y();
      ROI rOI1 = new ROI((-1483), 2247, 1, 8);
      rOI1.X();
      rOI0.Y();
      rOI0.uy();
      rOI0.ly();
      // Undeclared exception!
      try { 
        realGrayImage1.divide(546.34F, rOI1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      RealGrayImage realGrayImage1 = realGrayImage0.subtract(0.0F);
      RealGrayImage realGrayImage2 = realGrayImage0.addbuffer(760, 0, 1747, 3169, 2470.5593F);
      ROI rOI0 = new ROI();
      int int0 = new Integer(760);
      rOI0.Y();
      RealGrayImage realGrayImage3 = realGrayImage0.subtract(realGrayImage1);
      realGrayImage2.copy();
      realGrayImage3.max();
      // Undeclared exception!
      try { 
        realGrayImage1.multiply(2247, 0, (float) 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(22, 2500);
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        realGrayImage0.multiply(1.0F, rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 799);
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(799, 0, 0, 0, (float) 0);
      RealGrayImage realGrayImage2 = realGrayImage1.addbuffer(0, 799, 770.5068F);
      realGrayImage2.addbuffer(2548, 0, (float) 0);
      realGrayImage0.subtract((-51.82495F));
      realGrayImage1.addbuffer(14, 42, 0, (-1), (float) 752);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2500);
      ROI rOI0 = new ROI(8, 755, 8, 8);
      rOI0.X();
      rOI0.Y();
      rOI0.uy();
      rOI0.ly();
      // Undeclared exception!
      try { 
        realGrayImage0.multiply((RealGrayImage) null, rOI0, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      int int0 = 0;
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2500);
      // Undeclared exception!
      realGrayImage0.addbuffer(2500, 2500, 2500, 0, 0.0F);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RealGrayImage realGrayImage0 = null;
      try {
        realGrayImage0 = new RealGrayImage((RealGrayImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      doReturn(3444, (-2882)).when(image0).getHeight(any(java.awt.image.ImageObserver.class));
      doReturn(2522, 3444).when(image0).getWidth(any(java.awt.image.ImageObserver.class));
      RealGrayImage realGrayImage0 = null;
      try {
        realGrayImage0 = new RealGrayImage(image0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      RealGrayImage realGrayImage1 = realGrayImage0.subtract(0.0F);
      realGrayImage0.addbuffer(1, 1, (float) 0);
      realGrayImage0.max();
      realGrayImage1.copy();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      int int0 = (-508);
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(0, 0, (-508), 1, 0.0F);
      realGrayImage1.toString();
      realGrayImage0.toString();
      ROI rOI0 = new ROI(1350, (-508), (-508), 0);
      realGrayImage1.addbuffer(947, 0, (-32768.0F));
      rOI0.setROI((-12), (-2130), (-12), (-1));
      realGrayImage1.max();
      Float.valueOf(379.29645F);
      Float float0 = Float.valueOf(379.29645F);
      realGrayImage1.clear(float0);
      // Undeclared exception!
      try { 
        realGrayImage1.subtract((float) (-2130), rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2130
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      realGrayImage0.subtract(0.0F);
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(1, 1, (-2077.1543F));
      realGrayImage0.max();
      realGrayImage1.getJavaImage();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      int int0 = 2553;
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2553);
      ROI rOI0 = null;
      // Undeclared exception!
      try { 
        realGrayImage0.toString((ROI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(0, 0, 0, 0, (float) 0);
      realGrayImage1.addbuffer(0, 0, (float) 0);
      realGrayImage0.subtract((float) 0);
      realGrayImage1.multiply(realGrayImage0);
      RealGrayImage realGrayImage2 = realGrayImage0.addbuffer(0, 0, 0, 0, (float) 0);
      ROI rOI0 = new ROI(255, 1167, 776, 1);
      // Undeclared exception!
      try { 
        realGrayImage2.add((-441), 1167, (-32768.0F), rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1168
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      int int0 = 1612;
      int int1 = 799;
      RealGrayImage realGrayImage0 = new RealGrayImage(1612, 799);
      RealGrayImage realGrayImage1 = new RealGrayImage(realGrayImage0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      int int0 = 0;
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2500);
      float[][] floatArray0 = new float[3][6];
      float[] floatArray1 = new float[3];
      floatArray1[0] = (float) 0;
      floatArray1[1] = (float) 0;
      floatArray1[2] = (float) 2500;
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[3];
      floatArray2[0] = (float) 0;
      floatArray2[1] = 1.0F;
      floatArray2[2] = (float) 0;
      floatArray0[1] = floatArray2;
      float[] floatArray3 = new float[0];
      floatArray0[2] = floatArray3;
      RealGrayImage realGrayImage1 = null;
      try {
        realGrayImage1 = new RealGrayImage(floatArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 799);
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(0, 799, 770.5068F);
      RealGrayImage realGrayImage2 = new RealGrayImage(realGrayImage0);
      realGrayImage2.getJavaImage();
      realGrayImage0.Y();
      realGrayImage1.max();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2553);
      realGrayImage0.getJavaImage();
      realGrayImage0.toString();
      realGrayImage0.toString();
      int int0 = (-2542);
      ROI rOI0 = new ROI(0, (-3352), (-2542), 0);
      RealGrayImage realGrayImage1 = new RealGrayImage(realGrayImage0);
      realGrayImage0.divide(realGrayImage1);
      RealGrayImage realGrayImage2 = realGrayImage1.copy();
      Float float0 = new Float((float) 2553);
      Float.sum(2553, 0.0F);
      Float float1 = new Float(0.0F);
      realGrayImage2.clear(float1);
      ROI rOI1 = new ROI(1, (-109), 147, 786);
      // Undeclared exception!
      try { 
        realGrayImage1.add(realGrayImage0, rOI1, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2542
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 16;
      intArray0[2] = 16;
      intArray0[3] = 0;
      intArray0[4] = 16;
      realGrayImage0.getJavaImage();
      intArray0[5] = 16;
      intArray0[6] = 0;
      intArray0[8] = (-1);
      realGrayImage0.median(0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      int int0 = 0;
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      int int1 = (-508);
      realGrayImage0.addbuffer(0, 0, (-508), 1, 0.0F);
      int int2 = 1350;
      int int3 = 67;
      int int4 = 1369;
      int int5 = 0;
      // Undeclared exception!
      realGrayImage0.addbuffer(int3, int4, int5, int1, (float) int2);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2553);
      Float.isFinite(0);
      Float float0 = Float.valueOf(1.0F);
      float0.floatValue();
      Float float1 = new Float((float) 0);
      RealGrayImage realGrayImage1 = realGrayImage0.clear(float1);
      RealGrayImage realGrayImage2 = new RealGrayImage(realGrayImage0);
      realGrayImage1.add((-1352.1874F));
      realGrayImage0.diff(realGrayImage2);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 799);
      RealGrayImage realGrayImage1 = new RealGrayImage(realGrayImage0);
      realGrayImage1.getJavaImage();
      realGrayImage0.max();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      int int0 = 1979;
      RealGrayImage realGrayImage0 = new RealGrayImage(1979, 1979);
      ROI rOI0 = new ROI();
      int int1 = 4182;
      int int2 = (-1684);
      rOI0.setROI(4182, 1979, (-1684), 1979);
      int int3 = 2843;
      RealGrayImage realGrayImage1 = new RealGrayImage(realGrayImage0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2553);
      assertNotNull(realGrayImage0);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals(2553, realGrayImage0.Y());
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals(0, realGrayImage0.X());
      
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(1, 1, (float) 2553);
      assertFalse(realGrayImage1.equals((Object)realGrayImage0));
      assertNotNull(realGrayImage1);
      assertNotSame(realGrayImage0, realGrayImage1);
      assertNotSame(realGrayImage1, realGrayImage0);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals(2553, realGrayImage0.Y());
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals(0, realGrayImage0.X());
      assertEquals(2553.0F, realGrayImage1.max(), 0.01F);
      assertEquals(6517809.0, realGrayImage1.sqrSum(), 0.01);
      assertEquals(2553.0F, realGrayImage1.min(), 0.01F);
      assertEquals(2553.0F, realGrayImage1.absSum(), 0.01F);
      assertEquals(1, realGrayImage1.Y());
      assertEquals(2553.0F, realGrayImage1.addSum(), 0.01F);
      assertEquals(1, realGrayImage1.X());
      
      realGrayImage0.clip((-16777216), 0);
      assertFalse(realGrayImage0.equals((Object)realGrayImage1));
      assertNotSame(realGrayImage0, realGrayImage1);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals(2553, realGrayImage0.Y());
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals(0, realGrayImage0.X());
      
      RealGrayImage realGrayImage2 = realGrayImage0.subtract(realGrayImage1);
      assertFalse(realGrayImage0.equals((Object)realGrayImage1));
      assertFalse(realGrayImage1.equals((Object)realGrayImage0));
      assertFalse(realGrayImage2.equals((Object)realGrayImage1));
      assertNotNull(realGrayImage2);
      assertNotSame(realGrayImage0, realGrayImage1);
      assertSame(realGrayImage0, realGrayImage2);
      assertNotSame(realGrayImage1, realGrayImage2);
      assertNotSame(realGrayImage1, realGrayImage0);
      assertSame(realGrayImage2, realGrayImage0);
      assertNotSame(realGrayImage2, realGrayImage1);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals(2553, realGrayImage0.Y());
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals(2553.0F, realGrayImage1.max(), 0.01F);
      assertEquals(6517809.0, realGrayImage1.sqrSum(), 0.01);
      assertEquals(2553.0F, realGrayImage1.min(), 0.01F);
      assertEquals(2553.0F, realGrayImage1.absSum(), 0.01F);
      assertEquals(1, realGrayImage1.Y());
      assertEquals(2553.0F, realGrayImage1.addSum(), 0.01F);
      assertEquals(1, realGrayImage1.X());
      assertEquals(0, realGrayImage2.X());
      assertEquals(0.0F, realGrayImage2.absSum(), 0.01F);
      assertEquals(0.0, realGrayImage2.sqrSum(), 0.01);
      assertEquals(0.0F, realGrayImage2.addSum(), 0.01F);
      assertEquals(2553, realGrayImage2.Y());
      assertEquals(32767.0F, realGrayImage2.min(), 0.01F);
      assertEquals((-32768.0F), realGrayImage2.max(), 0.01F);
      
      RealGrayImage realGrayImage3 = realGrayImage1.copy();
      assertFalse(realGrayImage0.equals((Object)realGrayImage1));
      assertFalse(realGrayImage1.equals((Object)realGrayImage2));
      assertFalse(realGrayImage1.equals((Object)realGrayImage0));
      assertFalse(realGrayImage3.equals((Object)realGrayImage0));
      assertFalse(realGrayImage3.equals((Object)realGrayImage1));
      assertFalse(realGrayImage3.equals((Object)realGrayImage2));
      assertNotNull(realGrayImage3);
      assertNotSame(realGrayImage0, realGrayImage1);
      assertNotSame(realGrayImage0, realGrayImage3);
      assertSame(realGrayImage0, realGrayImage2);
      assertNotSame(realGrayImage1, realGrayImage2);
      assertNotSame(realGrayImage1, realGrayImage3);
      assertNotSame(realGrayImage1, realGrayImage0);
      assertNotSame(realGrayImage3, realGrayImage0);
      assertNotSame(realGrayImage3, realGrayImage1);
      assertNotSame(realGrayImage3, realGrayImage2);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals(2553, realGrayImage0.Y());
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals(0, realGrayImage0.X());
      assertEquals(2553.0F, realGrayImage1.max(), 0.01F);
      assertEquals(6517809.0, realGrayImage1.sqrSum(), 0.01);
      assertEquals(2553.0F, realGrayImage1.min(), 0.01F);
      assertEquals(2553.0F, realGrayImage1.absSum(), 0.01F);
      assertEquals(1, realGrayImage1.Y());
      assertEquals(2553.0F, realGrayImage1.addSum(), 0.01F);
      assertEquals(1, realGrayImage1.X());
      assertEquals(2553.0F, realGrayImage3.absSum(), 0.01F);
      assertEquals(1, realGrayImage3.X());
      assertEquals(2553.0F, realGrayImage3.max(), 0.01F);
      assertEquals(2553.0F, realGrayImage3.addSum(), 0.01F);
      assertEquals(1, realGrayImage3.Y());
      assertEquals(2553.0F, realGrayImage3.min(), 0.01F);
      assertEquals(6517809.0, realGrayImage3.sqrSum(), 0.01);
      
      Float float0 = realGrayImage3.max();
      assertFalse(realGrayImage0.equals((Object)realGrayImage1));
      assertFalse(realGrayImage0.equals((Object)realGrayImage3));
      assertFalse(realGrayImage1.equals((Object)realGrayImage2));
      assertFalse(realGrayImage1.equals((Object)realGrayImage3));
      assertFalse(realGrayImage1.equals((Object)realGrayImage0));
      assertFalse(realGrayImage3.equals((Object)realGrayImage0));
      assertFalse(realGrayImage3.equals((Object)realGrayImage1));
      assertFalse(realGrayImage3.equals((Object)realGrayImage2));
      assertNotNull(float0);
      assertNotSame(realGrayImage0, realGrayImage1);
      assertNotSame(realGrayImage0, realGrayImage3);
      assertSame(realGrayImage0, realGrayImage2);
      assertNotSame(realGrayImage1, realGrayImage2);
      assertNotSame(realGrayImage1, realGrayImage3);
      assertNotSame(realGrayImage1, realGrayImage0);
      assertNotSame(realGrayImage3, realGrayImage0);
      assertNotSame(realGrayImage3, realGrayImage1);
      assertNotSame(realGrayImage3, realGrayImage2);
      assertEquals(2553.0F, (float)float0, 0.01F);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals(2553, realGrayImage0.Y());
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals(0, realGrayImage0.X());
      assertEquals(2553.0F, realGrayImage1.max(), 0.01F);
      assertEquals(6517809.0, realGrayImage1.sqrSum(), 0.01);
      assertEquals(2553.0F, realGrayImage1.min(), 0.01F);
      assertEquals(2553.0F, realGrayImage1.absSum(), 0.01F);
      assertEquals(1, realGrayImage1.Y());
      assertEquals(2553.0F, realGrayImage1.addSum(), 0.01F);
      assertEquals(1, realGrayImage1.X());
      assertEquals(2553.0F, realGrayImage3.absSum(), 0.01F);
      assertEquals(1, realGrayImage3.X());
      assertEquals(2553.0F, realGrayImage3.max(), 0.01F);
      assertEquals(2553.0F, realGrayImage3.addSum(), 0.01F);
      assertEquals(1, realGrayImage3.Y());
      assertEquals(2553.0F, realGrayImage3.min(), 0.01F);
      assertEquals(6517809.0, realGrayImage3.sqrSum(), 0.01);
      
      // Undeclared exception!
      try { 
        realGrayImage2.multiply(0, (-16777216), 1853.35F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -16777216
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = 671;
      intArray0[1] = 3852;
      intArray0[2] = 3852;
      intArray0[3] = 3852;
      intArray0[4] = 671;
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      Hashtable<String, Object> hashtable1 = new Hashtable<String, Object>(hashtable0);
      MemoryImageSource memoryImageSource0 = new MemoryImageSource(671, 3852, intArray0, 3852, 783, hashtable1);
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      doReturn(671, 671).when(image0).getHeight(any(java.awt.image.ImageObserver.class));
      doReturn(memoryImageSource0).when(image0).getSource();
      doReturn(3852, 671).when(image0).getWidth(any(java.awt.image.ImageObserver.class));
      RealGrayImage realGrayImage0 = new RealGrayImage(image0);
      ROI rOI0 = new ROI();
      rOI0.X();
      rOI0.Y();
      rOI0.uy();
      rOI0.ly();
      JApplet jApplet0 = null;
      try {
        jApplet0 = new JApplet();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.applet.Applet", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(4059, 0, (float[]) null);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2553);
      assertNotNull(realGrayImage0);
      assertEquals(2553, realGrayImage0.Y());
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(1, 1, (float) 2553);
      assertFalse(realGrayImage1.equals((Object)realGrayImage0));
      assertNotNull(realGrayImage1);
      assertNotSame(realGrayImage0, realGrayImage1);
      assertNotSame(realGrayImage1, realGrayImage0);
      assertEquals(2553, realGrayImage0.Y());
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(2553.0F, realGrayImage1.max(), 0.01F);
      assertEquals(6517809.0, realGrayImage1.sqrSum(), 0.01);
      assertEquals(2553.0F, realGrayImage1.min(), 0.01F);
      assertEquals(2553.0F, realGrayImage1.absSum(), 0.01F);
      assertEquals(1, realGrayImage1.Y());
      assertEquals(2553.0F, realGrayImage1.addSum(), 0.01F);
      assertEquals(1, realGrayImage1.X());
      
      realGrayImage0.median(799);
      assertFalse(realGrayImage0.equals((Object)realGrayImage1));
      assertNotSame(realGrayImage0, realGrayImage1);
      assertEquals(2553, realGrayImage0.Y());
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      float[] floatArray0 = new float[11];
      floatArray0[0] = (float) 0;
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0, floatArray0);
      assertNotNull(realGrayImage0);
      assertEquals(11, floatArray0.length);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals(0, realGrayImage0.Y());
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      
      realGrayImage0.clip(0, (-5855));
      assertEquals(11, floatArray0.length);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals(0, realGrayImage0.Y());
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      
      RealGrayImage realGrayImage1 = realGrayImage0.add((float) 0);
      assertNotNull(realGrayImage1);
      assertSame(realGrayImage0, realGrayImage1);
      assertSame(realGrayImage1, realGrayImage0);
      assertEquals(11, floatArray0.length);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals(0, realGrayImage0.Y());
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(0.0F, realGrayImage1.absSum(), 0.01F);
      assertEquals(0.0F, realGrayImage1.addSum(), 0.01F);
      assertEquals((-32768.0F), realGrayImage1.max(), 0.01F);
      assertEquals(32767.0F, realGrayImage1.min(), 0.01F);
      assertEquals(0.0, realGrayImage1.sqrSum(), 0.01);
      assertEquals(0, realGrayImage1.X());
      assertEquals(0, realGrayImage1.Y());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      assertNotNull(realGrayImage0);
      assertEquals(0, realGrayImage0.Y());
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(0, 0, 0, 0, (float) 0);
      assertFalse(realGrayImage1.equals((Object)realGrayImage0));
      assertNotNull(realGrayImage1);
      assertNotSame(realGrayImage0, realGrayImage1);
      assertNotSame(realGrayImage1, realGrayImage0);
      assertEquals(0, realGrayImage0.Y());
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals(0.0, realGrayImage1.sqrSum(), 0.01);
      assertEquals(0.0F, realGrayImage1.addSum(), 0.01F);
      assertEquals(0, realGrayImage1.X());
      assertEquals(0, realGrayImage1.Y());
      assertEquals(0.0F, realGrayImage1.absSum(), 0.01F);
      assertEquals((-32768.0F), realGrayImage1.max(), 0.01F);
      assertEquals(32767.0F, realGrayImage1.min(), 0.01F);
      
      RealGrayImage realGrayImage2 = realGrayImage1.addbuffer(0, 0, 770.5068F);
      assertFalse(realGrayImage0.equals((Object)realGrayImage1));
      assertFalse(realGrayImage1.equals((Object)realGrayImage0));
      assertFalse(realGrayImage2.equals((Object)realGrayImage1));
      assertFalse(realGrayImage2.equals((Object)realGrayImage0));
      assertNotNull(realGrayImage2);
      assertNotSame(realGrayImage0, realGrayImage1);
      assertNotSame(realGrayImage0, realGrayImage2);
      assertNotSame(realGrayImage1, realGrayImage2);
      assertNotSame(realGrayImage1, realGrayImage0);
      assertNotSame(realGrayImage2, realGrayImage1);
      assertNotSame(realGrayImage2, realGrayImage0);
      assertEquals(0, realGrayImage0.Y());
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals(0.0, realGrayImage1.sqrSum(), 0.01);
      assertEquals(0.0F, realGrayImage1.addSum(), 0.01F);
      assertEquals(0, realGrayImage1.X());
      assertEquals(0, realGrayImage1.Y());
      assertEquals(0.0F, realGrayImage1.absSum(), 0.01F);
      assertEquals((-32768.0F), realGrayImage1.max(), 0.01F);
      assertEquals(32767.0F, realGrayImage1.min(), 0.01F);
      assertEquals(0, realGrayImage2.Y());
      assertEquals(0.0F, realGrayImage2.absSum(), 0.01F);
      assertEquals((-32768.0F), realGrayImage2.max(), 0.01F);
      assertEquals(32767.0F, realGrayImage2.min(), 0.01F);
      assertEquals(0.0, realGrayImage2.sqrSum(), 0.01);
      assertEquals(0.0F, realGrayImage2.addSum(), 0.01F);
      assertEquals(0, realGrayImage2.X());
      
      RealGrayImage realGrayImage3 = realGrayImage0.subtract((float) 0);
      assertFalse(realGrayImage0.equals((Object)realGrayImage1));
      assertFalse(realGrayImage0.equals((Object)realGrayImage2));
      assertFalse(realGrayImage3.equals((Object)realGrayImage2));
      assertFalse(realGrayImage3.equals((Object)realGrayImage1));
      assertNotNull(realGrayImage3);
      assertNotSame(realGrayImage0, realGrayImage1);
      assertNotSame(realGrayImage0, realGrayImage2);
      assertSame(realGrayImage0, realGrayImage3);
      assertNotSame(realGrayImage3, realGrayImage2);
      assertNotSame(realGrayImage3, realGrayImage1);
      assertSame(realGrayImage3, realGrayImage0);
      assertEquals(0, realGrayImage0.Y());
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals(0.0, realGrayImage3.sqrSum(), 0.01);
      assertEquals(0.0F, realGrayImage3.addSum(), 0.01F);
      assertEquals((-32768.0F), realGrayImage3.max(), 0.01F);
      assertEquals(32767.0F, realGrayImage3.min(), 0.01F);
      assertEquals(0, realGrayImage3.Y());
      assertEquals(0.0F, realGrayImage3.absSum(), 0.01F);
      assertEquals(0, realGrayImage3.X());
      
      RealGrayImage realGrayImage4 = realGrayImage1.multiply(realGrayImage0);
      assertFalse(realGrayImage0.equals((Object)realGrayImage1));
      assertFalse(realGrayImage0.equals((Object)realGrayImage2));
      assertFalse(realGrayImage1.equals((Object)realGrayImage2));
      assertFalse(realGrayImage1.equals((Object)realGrayImage0));
      assertFalse(realGrayImage1.equals((Object)realGrayImage3));
      assertFalse(realGrayImage4.equals((Object)realGrayImage3));
      assertFalse(realGrayImage4.equals((Object)realGrayImage0));
      assertFalse(realGrayImage4.equals((Object)realGrayImage2));
      assertNotNull(realGrayImage4);
      assertNotSame(realGrayImage0, realGrayImage1);
      assertNotSame(realGrayImage0, realGrayImage4);
      assertNotSame(realGrayImage0, realGrayImage2);
      assertSame(realGrayImage0, realGrayImage3);
      assertNotSame(realGrayImage1, realGrayImage2);
      assertNotSame(realGrayImage1, realGrayImage0);
      assertSame(realGrayImage1, realGrayImage4);
      assertNotSame(realGrayImage1, realGrayImage3);
      assertNotSame(realGrayImage4, realGrayImage3);
      assertNotSame(realGrayImage4, realGrayImage0);
      assertSame(realGrayImage4, realGrayImage1);
      assertNotSame(realGrayImage4, realGrayImage2);
      assertEquals(0, realGrayImage0.Y());
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals(0.0, realGrayImage1.sqrSum(), 0.01);
      assertEquals(0.0F, realGrayImage1.addSum(), 0.01F);
      assertEquals(0, realGrayImage1.X());
      assertEquals(0, realGrayImage1.Y());
      assertEquals(0.0F, realGrayImage1.absSum(), 0.01F);
      assertEquals((-32768.0F), realGrayImage1.max(), 0.01F);
      assertEquals(32767.0F, realGrayImage1.min(), 0.01F);
      assertEquals(32767.0F, realGrayImage4.min(), 0.01F);
      assertEquals((-32768.0F), realGrayImage4.max(), 0.01F);
      assertEquals(0.0, realGrayImage4.sqrSum(), 0.01);
      assertEquals(0.0F, realGrayImage4.addSum(), 0.01F);
      assertEquals(0, realGrayImage4.Y());
      assertEquals(0.0F, realGrayImage4.absSum(), 0.01F);
      assertEquals(0, realGrayImage4.X());
      
      RealGrayImage realGrayImage5 = realGrayImage0.addbuffer(0, 0, 8, 8, (float) 0);
      assertFalse(realGrayImage0.equals((Object)realGrayImage1));
      assertFalse(realGrayImage0.equals((Object)realGrayImage4));
      assertFalse(realGrayImage0.equals((Object)realGrayImage2));
      assertFalse(realGrayImage5.equals((Object)realGrayImage0));
      assertFalse(realGrayImage5.equals((Object)realGrayImage4));
      assertFalse(realGrayImage5.equals((Object)realGrayImage3));
      assertFalse(realGrayImage5.equals((Object)realGrayImage1));
      assertFalse(realGrayImage5.equals((Object)realGrayImage2));
      assertNotNull(realGrayImage5);
      assertNotSame(realGrayImage0, realGrayImage1);
      assertNotSame(realGrayImage0, realGrayImage4);
      assertNotSame(realGrayImage0, realGrayImage2);
      assertSame(realGrayImage0, realGrayImage3);
      assertNotSame(realGrayImage0, realGrayImage5);
      assertNotSame(realGrayImage5, realGrayImage0);
      assertNotSame(realGrayImage5, realGrayImage4);
      assertNotSame(realGrayImage5, realGrayImage3);
      assertNotSame(realGrayImage5, realGrayImage1);
      assertNotSame(realGrayImage5, realGrayImage2);
      assertEquals(0, realGrayImage0.Y());
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals(0.0F, realGrayImage5.addSum(), 0.01F);
      assertEquals((-32768.0F), realGrayImage5.max(), 0.01F);
      assertEquals(0, realGrayImage5.Y());
      assertEquals(32767.0F, realGrayImage5.min(), 0.01F);
      assertEquals(0.0F, realGrayImage5.absSum(), 0.01F);
      assertEquals(0, realGrayImage5.X());
      assertEquals(0.0, realGrayImage5.sqrSum(), 0.01);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      int int0 = 1979;
      RealGrayImage realGrayImage0 = new RealGrayImage(1979, 1979);
      assertNotNull(realGrayImage0);
      assertEquals(1979, realGrayImage0.Y());
      assertEquals(1979, realGrayImage0.X());
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(0, rOI0.uy());
      assertEquals(0, rOI0.ux());
      assertEquals(1, rOI0.X());
      assertEquals(0, rOI0.lx());
      assertEquals(0, rOI0.ly());
      assertEquals(1, rOI0.Y());
      
      int int1 = 4182;
      int int2 = (-1658);
      rOI0.setROI(4182, 1979, (-1658), 1979);
      assertEquals(4182, rOI0.lx());
      assertEquals((-1658), rOI0.ux());
      assertEquals(1979, rOI0.ly());
      assertEquals(5841, rOI0.X());
      assertEquals(1, rOI0.Y());
      assertEquals(1979, rOI0.uy());
      
      // Undeclared exception!
      try { 
        realGrayImage0.toString(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1979
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2553);
      assertNotNull(realGrayImage0);
      assertEquals(2553, realGrayImage0.Y());
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      
      boolean boolean0 = Float.isFinite(0);
      assertTrue(boolean0);
      
      Float float0 = Float.valueOf(1.0F);
      assertNotNull(float0);
      assertEquals(1.0F, (float)float0, 0.01F);
      
      float float1 = float0.floatValue();
      assertEquals(1.0F, float1, 0.01F);
      
      // Undeclared exception!
      realGrayImage0.addbuffer(2095, 2553, 1.0F);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2553);
      assertNotNull(realGrayImage0);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals(2553, realGrayImage0.Y());
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      
      Float float0 = new Float((-1179.88));
      assertNotNull(float0);
      assertEquals((-1179.88F), (float)float0, 0.01F);
      
      realGrayImage0.median(2553);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals(2553, realGrayImage0.Y());
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      int int0 = 22;
      RealGrayImage realGrayImage0 = new RealGrayImage(22, 2500);
      assertNotNull(realGrayImage0);
      assertEquals(22, realGrayImage0.X());
      assertEquals(2500, realGrayImage0.Y());
      
      int int1 = 1521;
      int int2 = 1517;
      int int3 = (-474);
      // Undeclared exception!
      realGrayImage0.addbuffer(1521, 599, 1517, (-474), (-2077.1543F));
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      assertNotNull(realGrayImage0);
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals(0, realGrayImage0.X());
      assertEquals(0, realGrayImage0.Y());
      
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(1, 1, (float) 0);
      assertFalse(realGrayImage1.equals((Object)realGrayImage0));
      assertNotNull(realGrayImage1);
      assertNotSame(realGrayImage0, realGrayImage1);
      assertNotSame(realGrayImage1, realGrayImage0);
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals(0, realGrayImage0.X());
      assertEquals(0, realGrayImage0.Y());
      assertEquals(0.0F, realGrayImage1.min(), 0.01F);
      assertEquals(0.0, realGrayImage1.sqrSum(), 0.01);
      assertEquals(0.0F, realGrayImage1.addSum(), 0.01F);
      assertEquals(0.0F, realGrayImage1.max(), 0.01F);
      assertEquals(1, realGrayImage1.X());
      assertEquals(1, realGrayImage1.Y());
      assertEquals(0.0F, realGrayImage1.absSum(), 0.01F);
      
      realGrayImage0.clip((-16777216), 0);
      assertFalse(realGrayImage0.equals((Object)realGrayImage1));
      assertNotSame(realGrayImage0, realGrayImage1);
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals(0, realGrayImage0.X());
      assertEquals(0, realGrayImage0.Y());
      
      RealGrayImage realGrayImage2 = realGrayImage1.copy();
      assertFalse(realGrayImage0.equals((Object)realGrayImage1));
      assertFalse(realGrayImage1.equals((Object)realGrayImage0));
      assertFalse(realGrayImage2.equals((Object)realGrayImage0));
      assertFalse(realGrayImage2.equals((Object)realGrayImage1));
      assertNotNull(realGrayImage2);
      assertNotSame(realGrayImage0, realGrayImage2);
      assertNotSame(realGrayImage0, realGrayImage1);
      assertNotSame(realGrayImage1, realGrayImage0);
      assertNotSame(realGrayImage1, realGrayImage2);
      assertNotSame(realGrayImage2, realGrayImage0);
      assertNotSame(realGrayImage2, realGrayImage1);
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals(0, realGrayImage0.X());
      assertEquals(0, realGrayImage0.Y());
      assertEquals(0.0F, realGrayImage1.min(), 0.01F);
      assertEquals(0.0, realGrayImage1.sqrSum(), 0.01);
      assertEquals(0.0F, realGrayImage1.addSum(), 0.01F);
      assertEquals(0.0F, realGrayImage1.max(), 0.01F);
      assertEquals(1, realGrayImage1.X());
      assertEquals(1, realGrayImage1.Y());
      assertEquals(0.0F, realGrayImage1.absSum(), 0.01F);
      assertEquals(1, realGrayImage2.X());
      assertEquals(1, realGrayImage2.Y());
      assertEquals(0.0F, realGrayImage2.min(), 0.01F);
      assertEquals(0.0F, realGrayImage2.max(), 0.01F);
      assertEquals(0.0F, realGrayImage2.addSum(), 0.01F);
      assertEquals(0.0, realGrayImage2.sqrSum(), 0.01);
      assertEquals(0.0F, realGrayImage2.absSum(), 0.01F);
      
      // Undeclared exception!
      try { 
        realGrayImage2.multiply((float) 0, (ROI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 0);
      assertNotNull(realGrayImage0);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals(0, realGrayImage0.Y());
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      
      String string0 = realGrayImage0.toString();
      assertNotNull(string0);
      assertEquals("0:0\n", string0);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals(0, realGrayImage0.Y());
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      
      String string1 = realGrayImage0.toString();
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      assertEquals("0:0\n", string1);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals(0, realGrayImage0.Y());
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(0, rOI0.uy());
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.ly());
      assertEquals(0, rOI0.lx());
      assertEquals(1, rOI0.X());
      assertEquals(1, rOI0.Y());
      
      Float float0 = new Float((float) (-2130));
      assertNotNull(float0);
      assertEquals((-2130.0F), (float)float0, 0.01F);
      
      Float float1 = Float.valueOf((-535.55F));
      assertNotEquals((float)float1, (float)float0, 0.01F);
      assertNotNull(float1);
      assertEquals((-535.55F), (float)float1, 0.01F);
      
      Float float2 = new Float((-480.6));
      assertNotEquals((float)float2, (float)float0, 0.01F);
      assertNotEquals((float)float2, (float)float1, 0.01F);
      assertNotNull(float2);
      assertEquals((-480.6F), (float)float2, 0.01F);
      
      RealGrayImage realGrayImage1 = realGrayImage0.clear(float2);
      assertNotEquals((float)float2, (float)float0, 0.01F);
      assertNotEquals((float)float2, (float)float1, 0.01F);
      assertNotNull(realGrayImage1);
      assertSame(realGrayImage0, realGrayImage1);
      assertSame(realGrayImage1, realGrayImage0);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals(0, realGrayImage0.Y());
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals((-32768.0F), realGrayImage1.max(), 0.01F);
      assertEquals(32767.0F, realGrayImage1.min(), 0.01F);
      assertEquals(0.0, realGrayImage1.sqrSum(), 0.01);
      assertEquals(0, realGrayImage1.Y());
      assertEquals(0.0F, realGrayImage1.absSum(), 0.01F);
      assertEquals(0, realGrayImage1.X());
      assertEquals(0.0F, realGrayImage1.addSum(), 0.01F);
      
      float float3 = realGrayImage1.addSum();
      assertNotEquals((float)float2, (float)float0, 0.01F);
      assertNotEquals((float)float2, (float)float1, 0.01F);
      assertSame(realGrayImage0, realGrayImage1);
      assertSame(realGrayImage1, realGrayImage0);
      assertEquals(0.0F, float3, 0.01F);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals(0, realGrayImage0.Y());
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals((-32768.0F), realGrayImage1.max(), 0.01F);
      assertEquals(32767.0F, realGrayImage1.min(), 0.01F);
      assertEquals(0.0, realGrayImage1.sqrSum(), 0.01);
      assertEquals(0, realGrayImage1.Y());
      assertEquals(0.0F, realGrayImage1.absSum(), 0.01F);
      assertEquals(0, realGrayImage1.X());
      assertEquals(0.0F, realGrayImage1.addSum(), 0.01F);
      
      // Undeclared exception!
      try { 
        realGrayImage1.multiply((-2130), 0, (float) (-760));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(2477, 1327);
      assertNotNull(realGrayImage0);
      assertEquals(1327, realGrayImage0.Y());
      assertEquals(2477, realGrayImage0.X());
      
      ROI rOI0 = new ROI();
      assertNotNull(rOI0);
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.ly());
      assertEquals(0, rOI0.lx());
      assertEquals(1, rOI0.Y());
      assertEquals(1, rOI0.X());
      assertEquals(0, rOI0.uy());
      
      String string0 = realGrayImage0.toString(rOI0);
      assertNotNull(string0);
      assertEquals("2477:1327\nnull \n", string0);
      assertEquals(1327, realGrayImage0.Y());
      assertEquals(2477, realGrayImage0.X());
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.ly());
      assertEquals(0, rOI0.lx());
      assertEquals(1, rOI0.Y());
      assertEquals(1, rOI0.X());
      assertEquals(0, rOI0.uy());
      
      RealGrayImage realGrayImage1 = null;
      try {
        realGrayImage1 = new RealGrayImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2553);
      assertNotNull(realGrayImage0);
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals(2553, realGrayImage0.Y());
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      
      // Undeclared exception!
      try { 
        realGrayImage0.addbuffer((-2400), 1, (float) 2553);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2553);
      assertNotNull(realGrayImage0);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(2553, realGrayImage0.Y());
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      
      RealGrayImage realGrayImage1 = realGrayImage0.addbuffer(1, 1, (float) 2553);
      assertFalse(realGrayImage1.equals((Object)realGrayImage0));
      assertNotNull(realGrayImage1);
      assertNotSame(realGrayImage0, realGrayImage1);
      assertNotSame(realGrayImage1, realGrayImage0);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(2553, realGrayImage0.Y());
      assertEquals(0, realGrayImage0.X());
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(2553.0F, realGrayImage1.addSum(), 0.01F);
      assertEquals(2553.0F, realGrayImage1.absSum(), 0.01F);
      assertEquals(1, realGrayImage1.X());
      assertEquals(1, realGrayImage1.Y());
      assertEquals(2553.0F, realGrayImage1.min(), 0.01F);
      assertEquals(6517809.0, realGrayImage1.sqrSum(), 0.01);
      assertEquals(2553.0F, realGrayImage1.max(), 0.01F);
      
      realGrayImage0.clip((-16777216), 0);
      assertFalse(realGrayImage0.equals((Object)realGrayImage1));
      assertNotSame(realGrayImage0, realGrayImage1);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(2553, realGrayImage0.Y());
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      
      realGrayImage0.sqrSum();
      realGrayImage0.subtract((float) (-16777216));
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        realGrayImage0.multiply((-495), (-16777216), (float) 1, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -16777216
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      RealGrayImage realGrayImage0 = new RealGrayImage(0, 2500);
      assertNotNull(realGrayImage0);
      assertEquals((-32768.0F), realGrayImage0.max(), 0.01F);
      assertEquals(32767.0F, realGrayImage0.min(), 0.01F);
      assertEquals(0, realGrayImage0.X());
      assertEquals(0.0, realGrayImage0.sqrSum(), 0.01);
      assertEquals(0.0F, realGrayImage0.absSum(), 0.01F);
      assertEquals(0.0F, realGrayImage0.addSum(), 0.01F);
      assertEquals(2500, realGrayImage0.Y());
      
      Float float0 = new Float(565.417813221691);
      assertNotNull(float0);
      assertEquals(565.4178F, (float)float0, 0.01F);
      
      ROI rOI0 = new ROI(0, 0, 0, 0);
      assertNotNull(rOI0);
      assertEquals(0, rOI0.uy());
      assertEquals(0, rOI0.ux());
      assertEquals(0, rOI0.lx());
      assertEquals(0, rOI0.ly());
      assertEquals(1, rOI0.Y());
      assertEquals(1, rOI0.X());
      
      // Undeclared exception!
      try { 
        realGrayImage0.set(2500, 2500, float0, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2500
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      int int0 = 2;
      RealGrayImage realGrayImage0 = new RealGrayImage(1934, 2);
      float[][] floatArray0 = new float[0][4];
      RealGrayImage realGrayImage1 = new RealGrayImage(floatArray0);
      int int1 = 790;
      realGrayImage0.copy();
      ROI rOI0 = new ROI();
      rOI0.ly();
      // Undeclared exception!
      try { 
        realGrayImage1.divide(2462, 790, 2553.0F, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 790
         //
         verifyException("jigl.image.types.RealGrayImage", e);
      }
  }
}
