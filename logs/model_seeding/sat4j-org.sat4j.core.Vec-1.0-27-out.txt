* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.sat4j.core.Vec
* Starting Client-0
* Connecting to master process on port 20280
* Analyzing classpath: 
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
* Finished analyzing classpath
* Generating tests for class org.sat4j.core.Vec
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1334
* Using seed 1550583321131
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 418 / 1334
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.7816091954022989
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7157894736842105
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.7207943925233645
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.9210526315789473
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.6947368421052632
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 200
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 285
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.8045977011494253
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7473684210526316
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.7476635514018691
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5526315789473685
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.9210526315789473
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.7473684210526316
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 377
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.867816091954023
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8315789473684211
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.8037383177570093
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.6052631578947368
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.9736842105263158
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8105263157894737
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 482
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9022988505747126
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8736842105263158
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.8341121495327103
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.6578947368421053
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8315789473684211
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 586
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9597701149425287
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9157894736842105
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9462616822429907
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.6578947368421053
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8421052631578947
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 678
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9597701149425287
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.947429906542056
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.6578947368421053
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8421052631578947
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 774
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 873
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9597701149425287
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9509345794392523
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7105263157894737
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8421052631578947
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 978
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 1075
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9597701149425287
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9509345794392523
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7105263157894737
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8421052631578947
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 1181
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 1287
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9597701149425287
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9521028037383178
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7105263157894737
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8631578947368421
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 1321
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9597701149425287
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9521028037383178
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7105263157894737
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8631578947368421
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9597701149425287
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9521028037383178
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7105263157894737
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8631578947368421
* Search finished after 125s and 12 generations, 14910 statements, best individual has fitness: 79.0
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9597701149425287
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9521028037383178
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7105263157894737
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8631578947368421
* Minimizing test suite
[MASTER] 14:38:52.919 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 96%
* Total number of goals: 174
* Number of covered goals: 167
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 93%
* Total number of goals: 95
* Number of covered goals: 88
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 34
* Number of covered goals: 34
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 95%
* Total number of goals: 856
* Number of covered goals: 815
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 71%
* Total number of goals: 38
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 38
* Number of covered goals: 38
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 38
* Number of covered goals: 38
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 86%
* Total number of goals: 95
* Number of covered goals: 82
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9597701149425287
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9521028037383178
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7105263157894737
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8631578947368421
* Generated 139 tests with total length 1845
* Resulting test suite's coverage: 93% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 14:39:43.982 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.7946% of time used, but only 13/139 tests minimized), falling back to using all assertions
[MASTER] 14:39:56.544 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 17%
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9597701149425287
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9521028037383178
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7105263157894737
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8631578947368421
* Compiling and checking tests
[MASTER] 14:40:33.706 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:40:33.707 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1799;
Vec<String> vec0 = new Vec<String>(1799);
assertTrue(vec0.isEmpty());
assertEquals(0, vec0.size());
assertNotNull(vec0);

vec0.growTo(1799, "");
assertEquals(1799, vec0.size());
assertFalse(vec0.isEmpty());

Vec<Object> vec1 = new Vec<Object>(1799);
assertTrue(vec1.isEmpty());
assertEquals(0, vec1.size());
assertNotNull(vec1);

String string0 = vec1.toString();
assertTrue(vec1.isEmpty());
assertEquals(0, vec1.size());
assertEquals("", string0);
assertNotNull(string0);

Vec<String>[] vecArray0 = (Vec<String>[]) Array.newInstance(Vec.class, 2);
vecArray0[0] = vec0;
vecArray0[1] = vec0;
Vec<Vec<String>> vec2 = new Vec<Vec<String>>(vecArray0);
assertEquals(2, vecArray0.length);
assertEquals(2, vec2.size());
assertFalse(vec2.isEmpty());
assertNotNull(vec2);

vec2.growTo(1799, vec0);
assertEquals(2, vecArray0.length);
assertEquals(1799, vec0.size());
assertFalse(vec0.isEmpty());
assertEquals(1799, vec2.size());
assertFalse(vec2.isEmpty());

vec0.removeFromLast("");

[MASTER] 14:40:40.896 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 14:40:40.905 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<String> vec0 = new Vec<String>(1);
assertEquals(0, vec0.size());
assertTrue(vec0.isEmpty());
assertNotNull(vec0);

Object[] objectArray0 = new Object[1];
objectArray0[0] = (Object) vec0;
Vec<Object> vec1 = new Vec<Object>(objectArray0);
assertEquals(1, objectArray0.length);
assertFalse(vec1.isEmpty());
assertEquals(1, vec1.size());
assertNotNull(vec1);

ReadOnlyVec<Object> readOnlyVec0 = new ReadOnlyVec<Object>(vec1);
assertEquals(1, objectArray0.length);
assertFalse(vec1.isEmpty());
assertEquals(1, vec1.size());
assertFalse(readOnlyVec0.isEmpty());
assertEquals(1, readOnlyVec0.size());
assertNotNull(readOnlyVec0);

Vec<Object> vec2 = new Vec<Object>(1466);
assertFalse(vec2.equals((Object)vec1));
assertEquals(0, vec2.size());
assertTrue(vec2.isEmpty());
assertNotNull(vec2);

Vec<Object>[] vecArray0 = (Vec<Object>[]) Array.newInstance(Vec.class, 15);
Vec<Object> vec3 = new Vec<Object>(vecArray0);
assertEquals(15, vecArray0.length);
assertFalse(vec3.equals((Object)vec1));
assertFalse(vec3.equals((Object)vec2));
assertEquals(15, vec3.size());
assertFalse(vec3.isEmpty());
assertNotNull(vec3);

vecArray0[0] = vec3;
vecArray0[1] = vec2;
vecArray0[2] = vec2;
vecArray0[3] = vec1;
vecArray0[4] = vec2;
vec2.growTo(1466, "");
assertFalse(vec2.equals((Object)vec1));
assertFalse(vec2.equals((Object)vec3));
assertFalse(vec2.isEmpty());
assertEquals(1466, vec2.size());
assertNotSame(vec2, vec1);
assertNotSame(vec2, vec3);

vecArray0[5] = vec2;
vecArray0[6] = vec1;
vecArray0[7] = vec1;
vecArray0[4] = vec1;
Vec<Vec<Object>> vec4 = new Vec<Vec<Object>>(1);
assertTrue(vec4.isEmpty());
assertEquals(0, vec4.size());
assertNotNull(vec4);

IVec<Vec<Object>> iVec0 = vec4.push(vec3);
assertEquals(15, vecArray0.length);
assertFalse(vec3.equals((Object)vec1));
assertFalse(vec3.equals((Object)vec2));
assertEquals(1, vec4.size());
assertFalse(vec4.isEmpty());
assertEquals(1, iVec0.size());
assertFalse(iVec0.isEmpty());
assertEquals(15, vec3.size());
assertFalse(vec3.isEmpty());
assertNotSame(vec3, vec1);
assertNotSame(vec3, vec2);
assertNotNull(iVec0);

Iterator<Vec<Object>> iterator0 = vec4.iterator();
assertEquals(1, vec4.size());
assertFalse(vec4.isEmpty());
assertNotNull(iterator0);

Object[] objectArray1 = new Object[6];
assertFalse(objectArray1.equals((Object)objectArray0));

objectArray1[0] = (Object) iterator0;
objectArray1[1] = (Object) vec1;
objectArray1[2] = (Object) vec4;
objectArray1[3] = (Object) vec1;
objectArray1[4] = (Object) vec1;
objectArray1[5] = (Object) vec1;
Vec<Object> vec5 = new Vec<Object>(objectArray1);
assertEquals(6, objectArray1.length);
assertFalse(objectArray1.equals((Object)objectArray0));
assertFalse(vec5.equals((Object)vec1));
assertFalse(vec5.equals((Object)vec3));
assertFalse(vec5.equals((Object)vec2));
assertEquals(6, vec5.size());
assertFalse(vec5.isEmpty());
assertNotNull(vec5);

int int0 = vec4.indexOf(vec1);
assertEquals(1, objectArray0.length);
assertFalse(objectArray0.equals((Object)objectArray1));
assertFalse(vec1.equals((Object)vec2));
assertFalse(vec1.equals((Object)vec3));
assertFalse(vec1.equals((Object)vec5));
assertEquals(1, vec4.size());
assertFalse(vec4.isEmpty());
assertFalse(vec1.isEmpty());
assertEquals(1, vec1.size());
assertNotSame(objectArray0, objectArray1);
assertNotSame(vec1, vec2);
assertNotSame(vec1, vec3);
assertNotSame(vec1, vec5);
assertEquals((-1), int0);

Vec<Vec<Object>> vec6 = new Vec<Vec<Object>>(vecArray0);
assertEquals(15, vecArray0.length);
assertFalse(vec6.equals((Object)vec4));
assertEquals(15, vec6.size());
assertFalse(vec6.isEmpty());
assertNotNull(vec6);

vec6.remove(vec2);
assertEquals(15, vecArray0.length);
assertFalse(vec2.equals((Object)vec5));
assertFalse(vec2.equals((Object)vec1));
assertFalse(vec2.equals((Object)vec3));
assertFalse(vec6.equals((Object)vec4));
assertFalse(vec2.isEmpty());
assertEquals(1466, vec2.size());
assertFalse(vec6.isEmpty());
assertEquals(14, vec6.size());
assertNotSame(vec2, vec5);
assertNotSame(vec2, vec1);
assertNotSame(vec2, vec3);
assertNotSame(vec6, vec4);

IVec<Object> iVec1 = vec5.clone();
assertEquals(6, objectArray1.length);
assertFalse(objectArray1.equals((Object)objectArray0));
assertFalse(vec5.equals((Object)vec1));
assertFalse(vec5.equals((Object)vec3));
assertFalse(vec5.equals((Object)vec2));
assertEquals(6, iVec1.size());
assertFalse(iVec1.isEmpty());
assertEquals(6, vec5.size());
assertFalse(vec5.isEmpty());
assertNotSame(objectArray1, objectArray0);
assertNotSame(vec5, vec1);
assertNotSame(vec5, vec3);
assertNotSame(vec5, vec2);
assertNotNull(iVec1);

vec6.toString();

[MASTER] 14:40:41.706 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:40:41.707 [logback-1] WARN  JUnitAnalyzer - Failing test:
 String[] stringArray0 = new String[6];
stringArray0[0] = "7#O";
Vec<String> vec0 = new Vec<String>(stringArray0);
assertEquals(6, stringArray0.length);
assertFalse(vec0.isEmpty());
assertEquals(6, vec0.size());
assertNotNull(vec0);

ToLongFunction<Object> toLongFunction0 = (ToLongFunction<Object>) mock(ToLongFunction.class, new ViolatedAssumptionAnswer());
doReturn(0L, (-1104L), (-1289L), 0L, 0L).when(toLongFunction0).applyAsLong(any());
Comparator<String> comparator0 = Comparator.comparingLong((ToLongFunction<? super String>) toLongFunction0);
assertNotNull(comparator0);

ToIntFunction<Object> toIntFunction0 = (ToIntFunction<Object>) mock(ToIntFunction.class, new ViolatedAssumptionAnswer());
Comparator<Object> comparator1 = Comparator.comparingInt((ToIntFunction<? super Object>) toIntFunction0);
assertNotNull(comparator1);

vec0.sort(comparator0);
assertEquals(6, stringArray0.length);
assertFalse(vec0.isEmpty());
assertEquals(6, vec0.size());

Vec<String> vec1 = new Vec<String>(2, "");
assertFalse(vec1.equals((Object)vec0));
assertFalse(vec1.isEmpty());
assertEquals(2, vec1.size());
assertNotNull(vec1);

Vec<Object> vec2 = new Vec<Object>(stringArray0);
assertEquals(6, stringArray0.length);
assertEquals(6, vec2.size());
assertFalse(vec2.isEmpty());
assertNotNull(vec2);

Object object0 = vec2.last();
assertEquals(6, stringArray0.length);
assertEquals(6, vec2.size());
assertFalse(vec2.isEmpty());
assertNull(object0);

ReadOnlyVec<Object> readOnlyVec0 = new ReadOnlyVec<Object>(vec2);
assertEquals(6, stringArray0.length);
assertEquals(6, vec2.size());
assertFalse(vec2.isEmpty());
assertEquals(6, readOnlyVec0.size());
assertFalse(readOnlyVec0.isEmpty());
assertNotNull(readOnlyVec0);

Vec<Object> vec3 = new Vec<Object>(2);
assertFalse(vec3.equals((Object)vec2));
assertTrue(vec3.isEmpty());
assertEquals(0, vec3.size());
assertNotNull(vec3);

vec3.sort(comparator1);
assertFalse(vec3.equals((Object)vec2));
assertTrue(vec3.isEmpty());
assertEquals(0, vec3.size());
assertNotSame(vec3, vec2);

Comparator<Object> comparator2 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
vec3.sortUnique(comparator2);
assertFalse(vec3.equals((Object)vec2));
assertTrue(vec3.isEmpty());
assertEquals(0, vec3.size());
assertNotSame(vec3, vec2);

boolean boolean0 = vec3.isEmpty();
assertFalse(vec3.equals((Object)vec2));
assertTrue(vec3.isEmpty());
assertEquals(0, vec3.size());
assertNotSame(vec3, vec2);
assertTrue(boolean0);

vec1.removeFromLast("");

[MASTER] 14:40:42.279 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:40:42.279 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<String> vec0 = new Vec<String>(1, "p%Fb00g;NzftF");
assertEquals(1, vec0.size());
assertFalse(vec0.isEmpty());
assertNotNull(vec0);

vec0.insertFirstWithShifting("p%Fb00g;NzftF");
assertEquals(2, vec0.size());
assertFalse(vec0.isEmpty());

vec0.remove("p%Fb00g;NzftF");

[MASTER] 14:40:44.531 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:40:44.531 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<Object> vec0 = new Vec<Object>();
assertTrue(vec0.isEmpty());
assertEquals(0, vec0.size());
assertNotNull(vec0);

vec0.selectionSort(0, 0, (Comparator<Object>) null);
assertTrue(vec0.isEmpty());
assertEquals(0, vec0.size());

vec0.ensure(0);
assertTrue(vec0.isEmpty());
assertEquals(0, vec0.size());

vec0.shrinkTo(1);
assertFalse(vec0.isEmpty());
assertEquals(1, vec0.size());

vec0.ensure(0);
assertFalse(vec0.isEmpty());
assertEquals(1, vec0.size());

String[] stringArray0 = new String[7];
stringArray0[0] = "";
stringArray0[1] = ")^#H>[EU,*?a$W`&c1";
stringArray0[2] = "rUU9Wh";
stringArray0[3] = "";
stringArray0[4] = ">nRcdQ10H0mll";
stringArray0[5] = "~keYvv";
stringArray0[6] = "x|~? ~s$&";
Vec<String> vec1 = new Vec<String>(stringArray0);
assertEquals(7, stringArray0.length);
assertEquals(7, vec1.size());
assertFalse(vec1.isEmpty());
assertNotNull(vec1);

vec1.remove("~keYvv");

[MASTER] 14:40:45.067 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:40:45.067 [logback-1] WARN  JUnitAnalyzer - Failing test:
 int int0 = 1799;
Vec<String> vec0 = new Vec<String>(1799);
assertEquals(0, vec0.size());
assertTrue(vec0.isEmpty());
assertNotNull(vec0);

vec0.growTo(1799, "");
assertFalse(vec0.isEmpty());
assertEquals(1799, vec0.size());

Vec<Object> vec1 = new Vec<Object>(354);
assertEquals(0, vec1.size());
assertTrue(vec1.isEmpty());
assertNotNull(vec1);

String string0 = vec1.toString();
assertEquals(0, vec1.size());
assertTrue(vec1.isEmpty());
assertEquals("", string0);
assertNotNull(string0);

Vec<String>[] vecArray0 = (Vec<String>[]) Array.newInstance(Vec.class, 2);
vecArray0[0] = vec0;
vecArray0[1] = vec0;
Vec<Vec<String>> vec2 = new Vec<Vec<String>>(vecArray0);
assertEquals(2, vecArray0.length);
assertFalse(vec2.isEmpty());
assertEquals(2, vec2.size());
assertNotNull(vec2);

vec2.growTo(1799, vec0);
assertEquals(2, vecArray0.length);
assertFalse(vec0.isEmpty());
assertEquals(1799, vec0.size());
assertEquals(1799, vec2.size());
assertFalse(vec2.isEmpty());

vec0.removeFromLast("");

[MASTER] 14:40:45.987 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:40:45.987 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<String> vec0 = new Vec<String>(1799);
assertEquals(0, vec0.size());
assertTrue(vec0.isEmpty());
assertNotNull(vec0);

vec0.growTo(1799, "");
assertFalse(vec0.isEmpty());
assertEquals(1799, vec0.size());

Vec<String>[] vecArray0 = (Vec<String>[]) Array.newInstance(Vec.class, 2);
vecArray0[0] = vec0;
Vec<Vec<String>> vec1 = new Vec<Vec<String>>(vecArray0);
assertEquals(2, vecArray0.length);
assertEquals(2, vec1.size());
assertFalse(vec1.isEmpty());
assertNotNull(vec1);

vec1.growTo(1799, vecArray0[1]);
assertEquals(2, vecArray0.length);
assertEquals(1799, vec1.size());
assertFalse(vec1.isEmpty());

vec0.removeFromLast("");

[MASTER] 14:40:46.707 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:40:46.708 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<String> vec0 = new Vec<String>(1799);
assertTrue(vec0.isEmpty());
assertEquals(0, vec0.size());
assertNotNull(vec0);

vec0.growTo(1799, "");
assertFalse(vec0.isEmpty());
assertEquals(1799, vec0.size());

Vec<String>[] vecArray0 = (Vec<String>[]) Array.newInstance(Vec.class, 2);
vecArray0[0] = vec0;
vecArray0[1] = vec0;
Vec<Vec<String>> vec1 = new Vec<Vec<String>>(vecArray0);
assertEquals(2, vecArray0.length);
assertEquals(2, vec1.size());
assertFalse(vec1.isEmpty());
assertNotNull(vec1);

vec1.growTo(1799, vec0);
assertEquals(2, vecArray0.length);
assertFalse(vec0.isEmpty());
assertEquals(1799, vec0.size());
assertEquals(1799, vec1.size());
assertFalse(vec1.isEmpty());

vec0.removeFromLast("");

[MASTER] 14:40:53.050 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:40:53.051 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<String> vec0 = new Vec<String>(1789);
assertEquals(0, vec0.size());
assertTrue(vec0.isEmpty());
assertNotNull(vec0);

vec0.growTo(1789, "");
assertFalse(vec0.isEmpty());
assertEquals(1789, vec0.size());

Vec<Object> vec1 = new Vec<Object>(354);
assertTrue(vec1.isEmpty());
assertEquals(0, vec1.size());
assertNotNull(vec1);

String string0 = vec1.toString();
assertTrue(vec1.isEmpty());
assertEquals(0, vec1.size());
assertEquals("", string0);
assertNotNull(string0);

Vec<String>[] vecArray0 = (Vec<String>[]) Array.newInstance(Vec.class, 2);
vecArray0[0] = vec0;
vecArray0[1] = vec0;
Vec<Vec<String>> vec2 = new Vec<Vec<String>>(vecArray0);
assertEquals(2, vecArray0.length);
assertFalse(vec2.isEmpty());
assertEquals(2, vec2.size());
assertNotNull(vec2);

vec0.removeFromLast("");

[MASTER] 14:40:53.244 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:40:53.245 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<String> vec0 = new Vec<String>(1789);
assertEquals(0, vec0.size());
assertTrue(vec0.isEmpty());
assertNotNull(vec0);

vec0.growTo(1789, "");
assertEquals(1789, vec0.size());
assertFalse(vec0.isEmpty());

Vec<String>[] vecArray0 = (Vec<String>[]) Array.newInstance(Vec.class, 2);
vecArray0[0] = vec0;
vecArray0[1] = vec0;
Vec<Vec<String>> vec1 = new Vec<Vec<String>>(vecArray0);
assertEquals(2, vecArray0.length);
assertFalse(vec1.isEmpty());
assertEquals(2, vec1.size());
assertNotNull(vec1);

vec0.removeFromLast("");

[MASTER] 14:40:54.997 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 14:40:54.998 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<String> vec0 = new Vec<String>(1789);
assertTrue(vec0.isEmpty());
assertEquals(0, vec0.size());
assertNotNull(vec0);

vec0.growTo(1789, "");
assertFalse(vec0.isEmpty());
assertEquals(1789, vec0.size());

Vec<Object> vec1 = new Vec<Object>(354);
assertTrue(vec1.isEmpty());
assertEquals(0, vec1.size());
assertNotNull(vec1);

String string0 = vec1.toString();
assertTrue(vec1.isEmpty());
assertEquals(0, vec1.size());
assertEquals("", string0);
assertNotNull(string0);

Vec<String>[] vecArray0 = (Vec<String>[]) Array.newInstance(Vec.class, 2);
vecArray0[0] = vec0;
vecArray0[1] = vec0;
Vec<Vec<String>> vec2 = new Vec<Vec<String>>(vecArray0);
assertEquals(2, vecArray0.length);
assertEquals(2, vec2.size());
assertFalse(vec2.isEmpty());
assertNotNull(vec2);

vec0.removeFromLast("");

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 2
* Writing tests to file
* Writing JUnit test case 'Vec_ESTest' to evosuite-tests
* Done!

* Computation finished
