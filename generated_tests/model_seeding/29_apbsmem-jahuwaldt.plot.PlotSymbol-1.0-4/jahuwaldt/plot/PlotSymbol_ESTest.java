/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 25 18:42:15 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jahuwaldt.plot.BoxURSymbol;
import jahuwaldt.plot.RTriangle4Symbol;
import jahuwaldt.plot.TabLSymbol;
import jahuwaldt.plot.ThinRect2Symbol;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.SystemColor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlotSymbol_ESTest extends PlotSymbol_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BoxURSymbol boxURSymbol0 = new BoxURSymbol();
      boxURSymbol0.setSize((-649));
      int int0 = boxURSymbol0.getSize();
      assertEquals((-649), int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BoxURSymbol boxURSymbol0 = new BoxURSymbol();
      SystemColor systemColor0 = SystemColor.textText;
      boxURSymbol0.setFillColor(systemColor0);
      boxURSymbol0.getFillColor();
      assertEquals(8, boxURSymbol0.getSize());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TabLSymbol tabLSymbol0 = new TabLSymbol();
      Color color0 = Color.orange;
      tabLSymbol0.setBorderColor(color0);
      tabLSymbol0.getBorderColor();
      assertEquals(8, tabLSymbol0.getSize());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Color color0 = new Color(17);
      RTriangle4Symbol rTriangle4Symbol0 = new RTriangle4Symbol();
      rTriangle4Symbol0.setBorderColor(color0);
      rTriangle4Symbol0.getBorderColor();
      assertEquals(8, rTriangle4Symbol0.getSize());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ThinRect2Symbol thinRect2Symbol0 = new ThinRect2Symbol();
      // Undeclared exception!
      try { 
        thinRect2Symbol0.draw((Graphics) null, 1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PolygonSymbol", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TabLSymbol tabLSymbol0 = new TabLSymbol();
      tabLSymbol0.getFillColor();
      assertEquals(8, tabLSymbol0.getSize());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BoxURSymbol boxURSymbol0 = new BoxURSymbol();
      int int0 = boxURSymbol0.getSize();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BoxURSymbol boxURSymbol0 = new BoxURSymbol();
      boxURSymbol0.setBorderColor((Color) null);
      boxURSymbol0.getBorderColor();
      assertEquals(8, boxURSymbol0.getSize());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BoxURSymbol boxURSymbol0 = new BoxURSymbol();
      BoxURSymbol boxURSymbol1 = (BoxURSymbol)boxURSymbol0.clone();
      assertNotSame(boxURSymbol1, boxURSymbol0);
      assertEquals(8, boxURSymbol1.getSize());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BoxURSymbol boxURSymbol0 = new BoxURSymbol();
      assertEquals(8, boxURSymbol0.getSize());
      
      boxURSymbol0.setSize(0);
      int int0 = boxURSymbol0.getSize();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BoxURSymbol boxURSymbol0 = new BoxURSymbol();
      Color color0 = new Color((-5017));
      boxURSymbol0.setFillColor(color0);
      boxURSymbol0.getFillColor();
      assertEquals(8, boxURSymbol0.getSize());
  }
}
