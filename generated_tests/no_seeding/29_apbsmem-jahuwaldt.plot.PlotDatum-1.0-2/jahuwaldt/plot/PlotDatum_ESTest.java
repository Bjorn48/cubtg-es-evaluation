/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 14:31:34 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import jahuwaldt.plot.CircleSymbol;
import jahuwaldt.plot.PlotDatum;
import jahuwaldt.plot.TabRSymbol;
import jahuwaldt.plot.ThinRect2Symbol;
import jahuwaldt.plot.Triangle1Symbol;
import java.awt.Color;
import java.awt.SystemColor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlotDatum_ESTest extends PlotDatum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1.0, 1.0, true);
      plotDatum0.setYError(1.0);
      boolean boolean0 = plotDatum0.hasErrorBar();
      assertEquals(1.0, plotDatum0.getYError(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-1.0), (-1.0), false);
      plotDatum0.setYError(186.565);
      double double0 = plotDatum0.getYError();
      assertEquals(186.565, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-1.0), (-1.0), false);
      assertEquals(0.0, plotDatum0.getYError(), 0.01);
      
      plotDatum0.setYError((-1.0));
      double double0 = plotDatum0.getYError();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ThinRect2Symbol thinRect2Symbol0 = new ThinRect2Symbol();
      PlotDatum plotDatum0 = new PlotDatum((-1030.3), 705.2863190131613, false, thinRect2Symbol0);
      double double0 = plotDatum0.getY();
      assertEquals((-1030.3), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(705.2863190131613, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TabRSymbol tabRSymbol0 = new TabRSymbol();
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, true, tabRSymbol0);
      plotDatum0.setY((-502.99498884250664));
      double double0 = plotDatum0.getY();
      assertEquals((-502.99498884250664), plotDatum0.y, 0.01);
      assertEquals((-502.99498884250664), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1.0, 0.0, true);
      double double0 = plotDatum0.getX();
      assertEquals(1.0, double0, 0.01);
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertTrue(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-291.81851851986), 1857.8612609544016, false);
      double double0 = plotDatum0.getX();
      assertFalse(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(1857.8612609544016, plotDatum0.y, 0.01);
      assertEquals((-291.81851851986), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CircleSymbol circleSymbol0 = new CircleSymbol();
      circleSymbol0.setSize(0);
      PlotDatum plotDatum0 = new PlotDatum(2.0, 2.0, true, circleSymbol0);
      plotDatum0.getPlotSymbol();
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(2.0, plotDatum0.x, 0.01);
      assertEquals(2.0, plotDatum0.y, 0.01);
      assertTrue(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TabRSymbol tabRSymbol0 = new TabRSymbol();
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, true, tabRSymbol0);
      plotDatum0.getPlotSymbol();
      assertTrue(plotDatum0.connected());
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-2547.2329), 509.789509, true);
      Triangle1Symbol triangle1Symbol0 = new Triangle1Symbol();
      triangle1Symbol0.setSize((-2146628843));
      plotDatum0.setPlotSymbol(triangle1Symbol0);
      plotDatum0.getPlotSymbol();
      assertEquals((-2547.2329), plotDatum0.x, 0.01);
      assertTrue(plotDatum0.connected());
      assertEquals(509.789509, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, true);
      SystemColor systemColor0 = SystemColor.inactiveCaption;
      plotDatum0.setLineColor(systemColor0);
      plotDatum0.getLineColor();
      assertTrue(plotDatum0.connected());
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, false);
      boolean boolean0 = plotDatum0.connected();
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(boolean0);
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertEquals(0.0, plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TabRSymbol tabRSymbol0 = new TabRSymbol();
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, true, tabRSymbol0);
      PlotDatum plotDatum1 = (PlotDatum)plotDatum0.clone();
      assertEquals(0.0, plotDatum1.x, 0.01);
      assertEquals(0.0, plotDatum1.y, 0.01);
      assertFalse(plotDatum1.hasErrorBar());
      assertTrue(plotDatum1.connected());
      assertNotSame(plotDatum1, plotDatum0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1.0, 0.0, true);
      PlotDatum plotDatum1 = (PlotDatum)plotDatum0.clone();
      assertNotSame(plotDatum1, plotDatum0);
      assertEquals(0.0, plotDatum1.y, 0.01);
      assertEquals(1.0, plotDatum1.x, 0.01);
      assertTrue(plotDatum1.connected());
      assertFalse(plotDatum1.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-325.72), (-325.72), false);
      plotDatum0.setLineColor((Color) null);
      assertEquals((-325.72), plotDatum0.y, 0.01);
      assertFalse(plotDatum0.connected());
      assertEquals((-325.72), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TabRSymbol tabRSymbol0 = new TabRSymbol();
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, true, tabRSymbol0);
      plotDatum0.setYError(0.0);
      assertEquals(0.0, plotDatum0.getYError(), 0.01);
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertTrue(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TabRSymbol tabRSymbol0 = new TabRSymbol();
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, true, tabRSymbol0);
      double double0 = plotDatum0.getYError();
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertTrue(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TabRSymbol tabRSymbol0 = new TabRSymbol();
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, true, tabRSymbol0);
      boolean boolean0 = plotDatum0.connected();
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1.0, 1.0, true);
      boolean boolean0 = plotDatum0.hasErrorBar();
      assertEquals(1.0, plotDatum0.x, 0.01);
      assertTrue(plotDatum0.connected());
      assertEquals(1.0, plotDatum0.y, 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TabRSymbol tabRSymbol0 = new TabRSymbol();
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, true, tabRSymbol0);
      plotDatum0.setX((-305.6810155848));
      assertEquals((-305.6810155848), plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TabRSymbol tabRSymbol0 = new TabRSymbol();
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, true, tabRSymbol0);
      plotDatum0.setConnected(true);
      assertFalse(plotDatum0.hasErrorBar());
      assertTrue(plotDatum0.connected());
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertEquals(0.0, plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-2547.2329), 509.789509, true);
      plotDatum0.getPlotSymbol();
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-2547.2329), plotDatum0.x, 0.01);
      assertTrue(plotDatum0.connected());
      assertEquals(509.789509, plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TabRSymbol tabRSymbol0 = new TabRSymbol();
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, true, tabRSymbol0);
      double double0 = plotDatum0.getY();
      assertTrue(plotDatum0.connected());
      assertEquals(0.0, double0, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(0.0, plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-2547.2329), 509.789509, true);
      plotDatum0.getLineColor();
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(509.789509, plotDatum0.y, 0.01);
      assertEquals((-2547.2329), plotDatum0.x, 0.01);
      assertTrue(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TabRSymbol tabRSymbol0 = new TabRSymbol();
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, true, tabRSymbol0);
      double double0 = plotDatum0.getX();
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertTrue(plotDatum0.connected());
  }
}
