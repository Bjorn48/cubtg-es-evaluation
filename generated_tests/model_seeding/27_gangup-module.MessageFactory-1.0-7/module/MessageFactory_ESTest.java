/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 25 22:14:50 GMT 2019
 */

package module;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.Proxy;
import java.util.NoSuchElementException;
import javax.swing.JPopupMenu;
import module.Message;
import module.MessageFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MessageFactory_ESTest extends MessageFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Message message0 = MessageFactory.createWarningMessage("", (Object[]) null);
      assertEquals("*", message0.getRecipient());
      assertEquals("WARNING", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      System.setCurrentTimeMillis((-46L));
      Message message0 = MessageFactory.createWarningMessage("", objectArray0);
      assertEquals("*", message0.getRecipient());
      assertEquals("WARNING", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      Message message0 = MessageFactory.createMessage("", ",fight,", (Object) "");
      assertEquals("", message0.getHeader());
      assertEquals(",fight,", message0.getRecipient());
      
      Message message1 = MessageFactory.createWarningMessage("", objectArray0);
      assertEquals("WARNING", message1.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Message message0 = MessageFactory.createConnectionDroppedMessage(2424, "<RM");
      assertEquals("*", message0.getRecipient());
      assertEquals("DROPPED", message0.getHeader());
      
      System.setCurrentTimeMillis(0L);
      Message message1 = MessageFactory.createUnloadMessage("_GUI_WARNING_UNSUPPORTED_LF");
      assertEquals("KERNEL", message1.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      System.setCurrentTimeMillis((-46L));
      MessageFactory.createMessage("", ",fight,", (Object) "");
      Message message0 = MessageFactory.createUnloadMessage("OQuQ1e>6N`");
      assertEquals("KERNEL", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = new Message();
      messageFactory0.unrefObject(message0);
      Message message1 = MessageFactory.createUnloadMessage("=g$SD=D;~ iLv@c*x");
      assertEquals("*", message1.getRecipient());
      assertEquals("KERNEL", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      System.setCurrentTimeMillis(0);
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      Message message0 = MessageFactory.createMessage("", "", (Object) proxy_Type0);
      assertEquals(0, Message.UNDEFINED);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MessageFactory.createMessage("", ",fight,", (Object) "");
      Message message0 = MessageFactory.createMessage("module.ServerNetworkModule", "ID: ", (Object) null);
      assertEquals("ID: ", message0.getRecipient());
      assertEquals("module.ServerNetworkModule", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Message message0 = MessageFactory.createConnectionDroppedMessage(2424, "<RM");
      System.setCurrentTimeMillis(0L);
      Message message1 = MessageFactory.createMessage("[J!Z-y", (Object) message0);
      assertEquals("[J!Z-y", message1.getHeader());
      assertEquals("*", message1.getRecipient());
      assertEquals("*", message0.getRecipient());
      assertEquals("DROPPED", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      System.setCurrentTimeMillis((-46L));
      MessageFactory.createMessage("", ",fight,", (Object) "");
      JPopupMenu.Separator jPopupMenu_Separator0 = new JPopupMenu.Separator();
      Message message0 = MessageFactory.createMessage("gui.GUIFrame", (Object) jPopupMenu_Separator0);
      assertEquals("*", message0.getRecipient());
      assertEquals("gui.GUIFrame", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      Message message0 = MessageFactory.createWarningMessage("", objectArray0);
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message1 = new Message();
      messageFactory0.unrefObject(message1);
      Message message2 = MessageFactory.createMessage("", (Object) message0);
      assertEquals("*", message0.getRecipient());
      assertEquals("", message2.getHeader());
      assertEquals("*", message2.getRecipient());
      assertEquals("WARNING", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MessageFactory.getInstance();
      Object object0 = new Object();
      Message message0 = MessageFactory.createMessage("kr!", object0);
      assertEquals("*", message0.getRecipient());
      assertEquals("kr!", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      System.setCurrentTimeMillis(0L);
      Message message0 = messageFactory0.createMessage();
      assertEquals("", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      System.setCurrentTimeMillis((-46L));
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = messageFactory0.createMessage();
      assertEquals("*", message0.getRecipient());
      assertEquals("", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = MessageFactory.createConnectionDroppedMessage(20, ":RL~j");
      Message message1 = message0.reply(message0.DELIVERED);
      messageFactory0.unrefObject(message1);
      assertEquals("*", message0.getRecipient());
      assertEquals("DROPPED", message1.getHeader());
      
      Message message2 = messageFactory0.createMessage();
      assertEquals("*", message2.getRecipient());
      assertEquals("", message2.getHeader());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Message message0 = MessageFactory.createConnectionDroppedMessage(2424, "<RM");
      assertEquals("*", message0.getRecipient());
      assertEquals("DROPPED", message0.getHeader());
      
      Object[] objectArray0 = new Object[2];
      System.setCurrentTimeMillis(0L);
      Message message1 = MessageFactory.createErrorMessage("", objectArray0);
      assertEquals("*", message1.getRecipient());
      assertEquals("ERROR", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      System.setCurrentTimeMillis((-46L));
      Message message0 = MessageFactory.createMessage("", ",fight,", (Object) "");
      assertEquals(",fight,", message0.getRecipient());
      assertEquals("", message0.getHeader());
      
      Message message1 = MessageFactory.createErrorMessage("45z9`*", objectArray0);
      assertEquals("ERROR", message1.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      Message message0 = MessageFactory.createMessage("", ",fight,", (Object) "");
      assertEquals("", message0.getHeader());
      assertEquals(",fight,", message0.getRecipient());
      
      Message message1 = MessageFactory.createErrorMessage("45z9`*", objectArray0);
      assertEquals("ERROR", message1.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Message message0 = MessageFactory.createConnectionDroppedMessage(1, "h y");
      assertEquals("DROPPED", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      System.setCurrentTimeMillis((-46L));
      Message message0 = MessageFactory.createConnectionDroppedMessage(7, ",fight,");
      assertEquals("DROPPED", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Message message0 = MessageFactory.createMessage("", ",fight,", (Object) "");
      assertEquals("", message0.getHeader());
      assertEquals(",fight,", message0.getRecipient());
      
      Message message1 = MessageFactory.createConnectionDroppedMessage(7, ",fight,");
      assertEquals("*", message1.getRecipient());
      assertEquals("DROPPED", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      MessageFactory.createWarningMessage("n)ZGU_oOIUlD+))rl", objectArray0);
      MessageFactory.instance = null;
      // Undeclared exception!
      try { 
        MessageFactory.createWarningMessage("", objectArray0);
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      MessageFactory.createWarningMessage("n)ZGU_oOIUlD+))rl", objectArray0);
      MessageFactory.instance = null;
      // Undeclared exception!
      try { 
        MessageFactory.createMessage("", "n)ZGU_oOIUlD+))rl", (Object) "n)ZGU_oOIUlD+))rl");
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        MessageFactory.createMessage("S~Q-NX=<F:8", (Object) "S~Q-NX=<F:8");
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      MessageFactory.createWarningMessage("n)ZGU_oOIUlD+))rl", objectArray0);
      MessageFactory messageFactory0 = MessageFactory.instance;
      MessageFactory.instance = null;
      // Undeclared exception!
      try { 
        messageFactory0.createMessage();
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      assertNotNull(messageFactory0);
      
      Message message0 = MessageFactory.createErrorMessage("", (Object[]) null);
      assertEquals("ERROR", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        MessageFactory.createUnloadMessage("OQuQ1e>6N`");
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        MessageFactory.createErrorMessage("45z9`*", objectArray0);
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }
}
