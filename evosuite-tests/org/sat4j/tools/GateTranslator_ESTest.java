/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 19 15:45:21 GMT 2019
 */

package org.sat4j.tools;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.sat4j.LightFactory;
import org.sat4j.core.ReadOnlyVecInt;
import org.sat4j.core.Vec;
import org.sat4j.core.VecInt;
import org.sat4j.specs.IConstr;
import org.sat4j.specs.ISolver;
import org.sat4j.specs.IVecInt;
import org.sat4j.tools.ClausalCardinalitiesDecorator;
import org.sat4j.tools.DimacsOutputSolver;
import org.sat4j.tools.DimacsStringSolver;
import org.sat4j.tools.FullClauseSelectorSolver;
import org.sat4j.tools.GateTranslator;
import org.sat4j.tools.LexicoDecorator;
import org.sat4j.tools.Minimal4InclusionModel;
import org.sat4j.tools.ModelIterator;
import org.sat4j.tools.NegationDecorator;
import org.sat4j.tools.SolutionCounter;
import org.sat4j.tools.StatisticsSolver;
import org.sat4j.tools.encoding.Binary;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GateTranslator_ESTest extends GateTranslator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsOutputSolver0);
      VecInt vecInt0 = new VecInt(1023);
      gateTranslator0.xor(2873, (IVecInt) vecInt0);
      gateTranslator0.iff(47, vecInt0);
      gateTranslator0.xor(3, (IVecInt) vecInt0);
      BigInteger bigInteger0 = BigInteger.valueOf(1023);
      Vec<BigInteger> vec0 = new Vec<BigInteger>(3, bigInteger0);
      gateTranslator0.optimisationFunction(vecInt0, vec0, vecInt0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      VecInt vecInt0 = new VecInt(1000);
      vecInt0.shrinkTo((-2177));
      Vec<BigInteger> vec0 = new Vec<BigInteger>();
      gateTranslator0.optimisationFunction(vecInt0, vec0, vecInt0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      gateTranslator0.fullAdderSum((-957), (-957), 2, 2);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsOutputSolver0);
      gateTranslator0.fullAdderCarry(792, 792, 792, 792);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Minimal4InclusionModel minimal4InclusionModel0 = mock(Minimal4InclusionModel.class, new ViolatedAssumptionAnswer());
      doReturn((IConstr) null, (IConstr) null, (IConstr) null, (IConstr) null, (IConstr) null).when(minimal4InclusionModel0).addClause(any(org.sat4j.specs.IVecInt.class));
      Binary binary0 = new Binary();
      ClausalCardinalitiesDecorator<Minimal4InclusionModel> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<Minimal4InclusionModel>(minimal4InclusionModel0, binary0);
      GateTranslator gateTranslator0 = new GateTranslator(clausalCardinalitiesDecorator0);
      gateTranslator0.additionalFullAdderConstraints((-2304), 0, (-2304), (-2304), 0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      gateTranslator0.not(15, 15);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsOutputSolver0);
      gateTranslator0.ite(4, (-4501), 0, 0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      GateTranslator gateTranslator0 = new GateTranslator(iSolver0);
      gateTranslator0.gateTrue((-4075));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsOutputSolver0);
      gateTranslator0.gateFalse(1023);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      GateTranslator gateTranslator0 = new GateTranslator(iSolver0);
      gateTranslator0.gateFalse((-3595));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsOutputSolver0);
      gateTranslator0.and(1023, 7, (-1217));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      VecInt vecInt0 = new VecInt(32, 2);
      // Undeclared exception!
      gateTranslator0.xor(2, (IVecInt) vecInt0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsOutputSolver0);
      FullClauseSelectorSolver<SolutionCounter> fullClauseSelectorSolver0 = new FullClauseSelectorSolver<SolutionCounter>((SolutionCounter) null, false);
      IVecInt iVecInt0 = fullClauseSelectorSolver0.getLastClause();
      ReadOnlyVecInt readOnlyVecInt0 = new ReadOnlyVecInt(iVecInt0);
      // Undeclared exception!
      try { 
        gateTranslator0.xor(778, (IVecInt) readOnlyVecInt0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.core.ReadOnlyVecInt", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      // Undeclared exception!
      try { 
        gateTranslator0.xor(27, (IVecInt) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.GateTranslator", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsOutputSolver0);
      VecInt vecInt0 = new VecInt(1023);
      vecInt0.shrink((-2068));
      // Undeclared exception!
      try { 
        gateTranslator0.xor((-285), (IVecInt) vecInt0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.core.VecInt", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.xor(6, 485, (-2135));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.or(236, (IVecInt) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.GateTranslator", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      VecInt vecInt0 = new VecInt(1000);
      vecInt0.shrinkTo((-786));
      // Undeclared exception!
      try { 
        gateTranslator0.or((-786), vecInt0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.GateTranslator", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VecInt vecInt0 = new VecInt(1023);
      StatisticsSolver statisticsSolver0 = mock(StatisticsSolver.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(statisticsSolver0).nextFreeVarId(anyBoolean());
      NegationDecorator<StatisticsSolver> negationDecorator0 = new NegationDecorator<StatisticsSolver>(statisticsSolver0);
      ModelIterator modelIterator0 = new ModelIterator(negationDecorator0, (-1442L));
      GateTranslator gateTranslator0 = new GateTranslator(modelIterator0);
      // Undeclared exception!
      try { 
        gateTranslator0.or(1023, vecInt0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Please call newVar(int) before adding constraints!!!
         //
         verifyException("org.sat4j.tools.AbstractClauseSelectorSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.defaultSolver();
      GateTranslator gateTranslator0 = new GateTranslator(iSolver0);
      VecInt vecInt0 = new VecInt();
      // Undeclared exception!
      try { 
        gateTranslator0.or(0, vecInt0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is not a valid variable identifier
         //
         verifyException("org.sat4j.minisat.core.Solver", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      VecInt vecInt0 = new VecInt();
      vecInt0.shrinkTo(1418);
      // Undeclared exception!
      try { 
        gateTranslator0.or(1067, vecInt0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsOutputSolver0);
      VecInt vecInt0 = new VecInt(1023);
      vecInt0.unsafePush(1023);
      Vec<BigInteger> vec0 = new Vec<BigInteger>(1023, (BigInteger) null);
      // Undeclared exception!
      try { 
        gateTranslator0.optimisationFunction(vecInt0, vec0, vecInt0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.GateTranslator", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsOutputSolver0);
      VecInt vecInt0 = new VecInt();
      gateTranslator0.xor(2, (IVecInt) vecInt0);
      Vec<BigInteger> vec0 = new Vec<BigInteger>(0);
      // Undeclared exception!
      try { 
        gateTranslator0.optimisationFunction(vecInt0, vec0, vecInt0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      Minimal4InclusionModel minimal4InclusionModel0 = new Minimal4InclusionModel(iSolver0);
      LexicoDecorator<Minimal4InclusionModel> lexicoDecorator0 = new LexicoDecorator<Minimal4InclusionModel>(minimal4InclusionModel0);
      GateTranslator gateTranslator0 = new GateTranslator(lexicoDecorator0);
      try { 
        gateTranslator0.not(30, 30);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Creating Empty clause ?
         //
         verifyException("org.sat4j.minisat.constraints.cnf.Clauses", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StatisticsSolver statisticsSolver0 = mock(StatisticsSolver.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(statisticsSolver0).nextFreeVarId(anyBoolean());
      NegationDecorator<StatisticsSolver> negationDecorator0 = new NegationDecorator<StatisticsSolver>(statisticsSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(negationDecorator0);
      // Undeclared exception!
      try { 
        gateTranslator0.not((-1027), 2610);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Please call newVar(int) before adding constraints!!!
         //
         verifyException("org.sat4j.tools.AbstractClauseSelectorSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StatisticsSolver statisticsSolver0 = mock(StatisticsSolver.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(statisticsSolver0).nextFreeVarId(anyBoolean());
      NegationDecorator<StatisticsSolver> negationDecorator0 = new NegationDecorator<StatisticsSolver>(statisticsSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(negationDecorator0);
      // Undeclared exception!
      try { 
        gateTranslator0.ite(5, 5, 1009, 0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Please call newVar(int) before adding constraints!!!
         //
         verifyException("org.sat4j.tools.AbstractClauseSelectorSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.it(3893, 619, 619);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      VecInt vecInt0 = new VecInt(43, 43);
      // Undeclared exception!
      gateTranslator0.iff(6, vecInt0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      // Undeclared exception!
      try { 
        gateTranslator0.iff(360, (IVecInt) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.GateTranslator", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      VecInt vecInt0 = new VecInt();
      vecInt0.pop();
      // Undeclared exception!
      try { 
        gateTranslator0.iff(15, vecInt0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      // Undeclared exception!
      try { 
        gateTranslator0.halfOr(2, (IVecInt) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.GateTranslator", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      VecInt vecInt0 = new VecInt(1000);
      vecInt0.shrinkTo((-2177));
      // Undeclared exception!
      try { 
        gateTranslator0.halfOr(2, vecInt0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.GateTranslator", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      VecInt vecInt0 = new VecInt();
      vecInt0.shrinkTo(11);
      // Undeclared exception!
      try { 
        gateTranslator0.halfOr(712, vecInt0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.halfAdderSum(0, 1712, (-620));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.halfAdderCarry(2, 48, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.gateTrue((-2453));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StatisticsSolver statisticsSolver0 = mock(StatisticsSolver.class, new ViolatedAssumptionAnswer());
      doReturn((IConstr) null).when(statisticsSolver0).addClause(any(org.sat4j.specs.IVecInt.class));
      doReturn(0, 0).when(statisticsSolver0).nextFreeVarId(anyBoolean());
      NegationDecorator<StatisticsSolver> negationDecorator0 = new NegationDecorator<StatisticsSolver>(statisticsSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(negationDecorator0);
      // Undeclared exception!
      try { 
        gateTranslator0.gateTrue(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The constraint you entered cannot be removed from the solver.
         //
         verifyException("org.sat4j.core.ConstrGroup", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StatisticsSolver statisticsSolver0 = mock(StatisticsSolver.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(statisticsSolver0).nextFreeVarId(anyBoolean());
      NegationDecorator<StatisticsSolver> negationDecorator0 = new NegationDecorator<StatisticsSolver>(statisticsSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(negationDecorator0);
      // Undeclared exception!
      try { 
        gateTranslator0.gateFalse(15);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Please call newVar(int) before adding constraints!!!
         //
         verifyException("org.sat4j.tools.AbstractClauseSelectorSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      GateTranslator gateTranslator0 = new GateTranslator(iSolver0);
      // Undeclared exception!
      try { 
        gateTranslator0.gateFalse(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is not a valid variable identifier
         //
         verifyException("org.sat4j.minisat.core.Solver", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StatisticsSolver statisticsSolver0 = mock(StatisticsSolver.class, new ViolatedAssumptionAnswer());
      doReturn(389, 0).when(statisticsSolver0).nextFreeVarId(anyBoolean());
      NegationDecorator<StatisticsSolver> negationDecorator0 = new NegationDecorator<StatisticsSolver>(statisticsSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(negationDecorator0);
      // Undeclared exception!
      try { 
        gateTranslator0.fullAdderCarry(0, 0, 8, (-753));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Please call newVar(int) before adding constraints!!!
         //
         verifyException("org.sat4j.tools.AbstractClauseSelectorSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      // Undeclared exception!
      try { 
        gateTranslator0.and(4, (IVecInt) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.GateTranslator", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      VecInt vecInt0 = new VecInt(1000);
      vecInt0.shrinkTo((-2177));
      // Undeclared exception!
      try { 
        gateTranslator0.and(65, (IVecInt) vecInt0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.GateTranslator", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VecInt vecInt0 = new VecInt(1023);
      StatisticsSolver statisticsSolver0 = mock(StatisticsSolver.class, new ViolatedAssumptionAnswer());
      doReturn(1023).when(statisticsSolver0).nextFreeVarId(anyBoolean());
      NegationDecorator<StatisticsSolver> negationDecorator0 = new NegationDecorator<StatisticsSolver>(statisticsSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(negationDecorator0);
      // Undeclared exception!
      try { 
        gateTranslator0.and(2556, (IVecInt) vecInt0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Please call newVar(int) before adding constraints!!!
         //
         verifyException("org.sat4j.tools.AbstractClauseSelectorSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VecInt vecInt0 = new VecInt(0, (-1664));
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.defaultSolver();
      GateTranslator gateTranslator0 = new GateTranslator(iSolver0);
      // Undeclared exception!
      try { 
        gateTranslator0.and(0, (IVecInt) vecInt0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is not a valid variable identifier
         //
         verifyException("org.sat4j.minisat.core.Solver", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StatisticsSolver statisticsSolver0 = mock(StatisticsSolver.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(statisticsSolver0).nextFreeVarId(anyBoolean());
      NegationDecorator<StatisticsSolver> negationDecorator0 = new NegationDecorator<StatisticsSolver>(statisticsSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(negationDecorator0);
      // Undeclared exception!
      try { 
        gateTranslator0.and((-2078), (-2078), (-2078));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Please call newVar(int) before adding constraints!!!
         //
         verifyException("org.sat4j.tools.AbstractClauseSelectorSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      StatisticsSolver statisticsSolver0 = mock(StatisticsSolver.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(statisticsSolver0).nextFreeVarId(anyBoolean());
      NegationDecorator<StatisticsSolver> negationDecorator0 = new NegationDecorator<StatisticsSolver>(statisticsSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(negationDecorator0);
      // Undeclared exception!
      try { 
        gateTranslator0.additionalFullAdderConstraints(1588, 0, 4934, (-1016), 0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Please call newVar(int) before adding constraints!!!
         //
         verifyException("org.sat4j.tools.AbstractClauseSelectorSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.fullAdderCarry(1, 801, 0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      gateTranslator0.xor((-957), 2, 168);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.fullAdderSum((-1977), (-1349), (-1349), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Minimal4InclusionModel minimal4InclusionModel0 = mock(Minimal4InclusionModel.class, new ViolatedAssumptionAnswer());
      doReturn((IConstr) null, (IConstr) null, (IConstr) null, (IConstr) null).when(minimal4InclusionModel0).addClause(any(org.sat4j.specs.IVecInt.class));
      Binary binary0 = new Binary();
      ClausalCardinalitiesDecorator<Minimal4InclusionModel> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<Minimal4InclusionModel>(minimal4InclusionModel0, binary0);
      GateTranslator gateTranslator0 = new GateTranslator(clausalCardinalitiesDecorator0);
      gateTranslator0.halfAdderSum(1479, 0, 0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.and(0, (-824), (-824));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.additionalFullAdderConstraints(0, 0, 0, 158, 3893);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      gateTranslator0.halfAdderCarry((-1), (-1), (-957));
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsOutputSolver0);
      VecInt vecInt0 = new VecInt(1023);
      IVecInt iVecInt0 = vecInt0.push(1023);
      BigInteger bigInteger0 = BigInteger.valueOf(500L);
      Vec<BigInteger> vec0 = new Vec<BigInteger>(13, bigInteger0);
      // Undeclared exception!
      try { 
        gateTranslator0.optimisationFunction(iVecInt0, vec0, iVecInt0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      VecInt vecInt0 = new VecInt();
      gateTranslator0.iff(46, vecInt0);
      gateTranslator0.halfOr(15, vecInt0);
      assertEquals(2, dimacsStringSolver0.nConstraints());
      assertFalse(vecInt0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      VecInt vecInt0 = new VecInt();
      IConstr[] iConstrArray0 = gateTranslator0.halfOr(15, vecInt0);
      assertEquals(0, iConstrArray0.length);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsOutputSolver0);
      VecInt vecInt0 = new VecInt(1023);
      IVecInt iVecInt0 = vecInt0.push(1023);
      gateTranslator0.or((-29), iVecInt0);
      assertFalse(vecInt0.isEmpty());
      assertEquals(1, vecInt0.size());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      VecInt vecInt0 = new VecInt();
      gateTranslator0.iff(46, vecInt0);
      gateTranslator0.and(15, (IVecInt) vecInt0);
      assertEquals(1, vecInt0.size());
      assertEquals(46, vecInt0.last());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.ite(30, 30, 30, 30);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsOutputSolver0);
      IConstr[] iConstrArray0 = gateTranslator0.it(39, 3411, 6);
      assertEquals(3, iConstrArray0.length);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.gateFalse(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.not(3893, 3893);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsOutputSolver0);
      IConstr iConstr0 = gateTranslator0.gateTrue(1023);
      assertNull(iConstr0);
  }
}
