<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="s4" action="org.sat4j.specs.IOptimizationProblem.model()" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s4"><transition target="s5" action="org.sat4j.specs.IOptimizationProblem.discardCurrentSolution()" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s5"><transition target="s6" action="org.sat4j.specs.IOptimizationProblem.getObjectiveValue()" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition></state><state id="s6"><transition target="s3" action="org.sat4j.specs.IOptimizationProblem.admitABetterSolution(org.sat4j.specs.IVecInt)" proba="0.16666666666666666"></transition><transition target="s5" action="org.sat4j.specs.IOptimizationProblem.discardCurrentSolution()" proba="0.3333333333333333"></transition><transition target="sX" action="epsilon" proba="0.3333333333333333"></transition><transition target="s9" action="org.sat4j.specs.IOptimizationProblem.toString()" proba="0.16666666666666666"></transition></state><state id="s7"><transition target="s8" action="org.sat4j.specs.IOptimizationProblem.nonOptimalMeansSatisfiable()" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s1" action="org.sat4j.specs.IOptimizationProblem.hasNoObjectiveFunction()" proba="1.0"></transition></state><state id="s9"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s10"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s0"><transition target="s4" action="org.sat4j.specs.IOptimizationProblem.model()" proba="0.1111111111111111"></transition><transition target="s11" action="org.sat4j.specs.IOptimizationProblem.isOptimal()" proba="0.1111111111111111"></transition><transition target="s10" action="org.sat4j.specs.IOptimizationProblem.model(int)" proba="0.1111111111111111"></transition><transition target="s6" action="org.sat4j.specs.IOptimizationProblem.getObjectiveValue()" proba="0.1111111111111111"></transition><transition target="s7" action="org.sat4j.specs.IOptimizationProblem.admitABetterSolution()" proba="0.2222222222222222"></transition><transition target="s1" action="org.sat4j.specs.IOptimizationProblem.hasNoObjectiveFunction()" proba="0.3333333333333333"></transition></state><state id="s1"><transition target="s6" action="org.sat4j.specs.IOptimizationProblem.getObjectiveValue()" proba="0.8"></transition><transition target="s2" action="org.sat4j.specs.IOptimizationProblem.isSatisfiable(org.sat4j.specs.IVecInt)" proba="0.2"></transition></state><state id="s2"><transition target="s3" action="org.sat4j.specs.IOptimizationProblem.admitABetterSolution(org.sat4j.specs.IVecInt)" proba="1.0"></transition></state></states></ts>