/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 09:31:21 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("q]EY5p");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup((-1151));
      javaCharStream0.adjustBeginLineColumn(12, 12);
      javaCharStream0.prevCharIsCR = false;
      javaCharStream0.backup((-1151));
      javaCharStream0.getColumn();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z5_M@wx,Gg>");
      stringReader0.reset();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3541), 77);
      char[] charArray0 = javaCharStream0.buffer;
      javaCharStream0.backup(2425);
      javaCharStream0.BeginToken();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream.hexval('e');
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-4174), 56);
      javaCharStream0.available = 77;
      char[] charArray0 = javaCharStream0.buffer;
      javaCharStream0.backup(56);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.UpdateLineColumn('v');
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ov<DS<a@$3&yY@J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.BeginToken();
      stringReader0.close();
      javaCharStream0.GetImage();
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ov<DS<a@$3&yY@J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(117, 1408);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 77, 77);
      javaCharStream0.ReInit((InputStream) mockFileInputStream0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.markSupported();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("Vv<D<a@$3&y@J");
      int int0 = 9;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 9, 9, 9);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 1854, 3460);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0);
      javaCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("Vv<D<a@$3&y@J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 9, 9, 9);
      char[] charArray0 = new char[3];
      charArray0[0] = 'b';
      charArray0[1] = '.';
      charArray0[2] = 'u';
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ov<DS<a@$3&yY@J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-4203), 819);
      javaCharStream1.GetSuffix(2439);
      javaCharStream0.backup((-1));
      javaCharStream1.BeginToken();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream2 = new JavaCharStream(pipedInputStream0, 394, 99, 99);
      javaCharStream1.backup((-1503));
      JavaCharStream javaCharStream3 = new JavaCharStream(pipedInputStream0, 2439, 1503, 819);
      javaCharStream3.backup(975);
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringReader stringReader0 = new StringReader("q]EY5p");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 113);
      int int0 = 720;
      javaCharStream0.ReInit((Reader) stringReader0, 720, 0);
      javaCharStream0.getBeginLine();
      char[] charArray0 = new char[8];
      charArray0[0] = 'x';
      charArray0[1] = '7';
      charArray0[2] = 'Y';
      charArray0[3] = 'C';
      charArray0[4] = '-';
      charArray0[5] = ';';
      charArray0[6] = 'g';
      charArray0[7] = '8';
      try { 
        stringReader0.read(charArray0, (-1904), 0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      JavaCharStream.hexval('F');
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">%)\"");
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1942, 7);
      javaCharStream0.backup(1942);
      javaCharStream0.backup(7);
      stringReader0.read();
      javaCharStream0.FillBuff();
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginColumn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-32);
      byteArray0[2] = (byte) (-29);
      byteArray0[3] = (byte)56;
      byteArray0[4] = (byte)32;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 0, (-1008), 997);
      PipedInputStream pipedInputStream0 = new PipedInputStream(5);
      pipedInputStream0.mark((byte) (-32));
      pipedInputStream0.mark(997);
      pipedInputStream0.markSupported();
      javaCharStream0.adjustBeginLineColumn(997, 1408);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, (-2592), 58, (-2592));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.getBeginLine();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ov<2S<a@$3&yY@J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.BeginToken();
      stringReader0.close();
      javaCharStream0.GetImage();
      javaCharStream0.getEndColumn();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      JavaCharStream.hexval('a');
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ov<DS<a@$3&yYJ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.backup(807);
      stringReader0.read();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -807
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 0, 0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-53);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.getBeginColumn();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">%)\"");
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      JavaCharStream.hexval('F');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream((PipedOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ov<2S<a@$3&yY@J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ov<DS<a@$3&yY@J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.BeginToken();
      stringReader0.close();
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(1161);
      javaCharStream0.readChar();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.backup(117);
      StringReader stringReader0 = new StringReader("D&t_]0");
      stringReader0.read();
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      stringReader0.close();
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(117);
      javaCharStream0.AdjustBuffSize();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3?w1oJIhCR{U");
      stringReader0.ready();
      stringReader0.ready();
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 65, 0);
      javaCharStream0.ReInit((Reader) stringReader0, 65, 1, 0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-32), 92, 569);
      PipedInputStream pipedInputStream0 = new PipedInputStream(72);
      pipedInputStream0.mark(569);
      pipedInputStream0.mark((byte)0);
      StringReader stringReader0 = new StringReader("kch%y3XeD{4wQQs*");
      stringReader0.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte) (-32), 5, 0);
      stringReader0.reset();
      javaCharStream1.Done();
      javaCharStream0.getBeginColumn();
      // Undeclared exception!
      try { 
        javaCharStream1.readChar();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ov<DS<a@$3&yY@J");
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 21, 21, 21);
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 4073, 574, 4090);
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(0);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      char char0 = 'G';
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      JavaCharStream.hexval('5');
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      JavaCharStream.hexval('0');
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ov<DS<a@$3&yY@J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 0, 0);
      // Undeclared exception!
      try { 
        javaCharStream1.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ov<DS<a@$3&yY@J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(101);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.markSupported();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      JavaCharStream.hexval('D');
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">%)\"");
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1942, 7);
      javaCharStream0.backup(1942);
      javaCharStream0.backup(7);
      stringReader0.read();
      int[] intArray0 = new int[3];
      intArray0[0] = 2146;
      intArray0[1] = 62;
      StringReader stringReader1 = new StringReader(">%)\"");
      javaCharStream0.backup(62);
      stringReader1.read();
      javaCharStream0.GetSuffix(0);
      stringReader0.ready();
      javaCharStream0.GetSuffix(62);
      javaCharStream0.ReInit((Reader) null, 0, 2631);
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      String string0 = "q]EY5p";
      StringReader stringReader0 = new StringReader("q]EY5p");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      File file0 = MockFile.createTempFile("q]EY5p", "P^@GIg");
      javaCharStream0.ReInit((Reader) stringReader0);
      MockFile mockFile0 = new MockFile(file0, "q]EY5p");
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ov<DS<a@$3&yY@J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 21, 21, 21);
      JavaCharStream.hexval('7');
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream.hexval('d');
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-4174), 56);
      javaCharStream0.available = 56;
      char[] charArray0 = javaCharStream0.buffer;
      javaCharStream0.BeginToken();
      javaCharStream0.backup(56);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginLine();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.ReadByte();
      javaCharStream0.getBeginColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('F');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ov<DS<a@$3&yY@J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.BeginToken();
      stringReader0.close();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      javaCharStream0.ReInit((InputStream) pipedInputStream0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">%)\"");
      char[] charArray0 = new char[0];
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader0.read(charArray0);
      JavaCharStream.hexval('5');
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, (-1), 4506);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      try { 
        JavaCharStream.hexval('-');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)56;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, (-314));
      javaCharStream0.backup((-673));
      javaCharStream0.backup((byte) (-33));
      javaCharStream0.adjustBeginLineColumn(0, (byte)0);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('C');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ov<DSa@$3&yY@J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.backup(90);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -90
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      sequenceInputStream0.mark((-1));
      sequenceInputStream0.close();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)125;
      byteArray0[1] = (byte)40;
      byteArray0[2] = (byte)109;
      sequenceInputStream0.read(byteArray0);
      javaCharStream0.maxNextCharInd = (-348);
      javaCharStream0.maxNextCharInd = 0;
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ov<DS<a@$3&yY@J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)33;
      byteArray0[1] = (byte)6;
      byteArray0[2] = (byte)102;
      byteArray0[3] = (byte)84;
      byteArray0[4] = (byte) (-47);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)107;
      byteArray0[8] = (byte)31;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)33);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 3949);
      javaCharStream0.ReInit((InputStream) pushbackInputStream0, (int) (byte)0, (-1305));
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.ExpandBuff(true);
      // Undeclared exception!
      try { 
        javaCharStream1.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      JavaCharStream.hexval('9');
      StringReader stringReader0 = new StringReader("|b4%VrMwI");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, (-1), 9);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("q]EY5p");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">%)\"");
      char[] charArray0 = new char[7];
      stringReader0.read(charArray0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)17;
      char char0 = '\\';
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ov<DS<a@$3&yY@J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      JavaCharStream.hexval('2');
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, (-19), (-468), (-19));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3?w1oJIhCR{U");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-2100), 0);
      javaCharStream0.AdjustBuffSize();
      stringReader0.ready();
      stringReader0.reset();
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      javaCharStream0.readChar();
      javaCharStream0.getBeginLine();
      javaCharStream0.BeginToken();
      javaCharStream0.getLine();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-32);
      byteArray0[2] = (byte) (-29);
      byteArray0[3] = (byte)56;
      byteArray0[4] = (byte)32;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 0, (-1008), 997);
      PipedInputStream pipedInputStream0 = new PipedInputStream(5);
      pipedInputStream0.mark((byte) (-32));
      pipedInputStream0.mark(997);
      pipedInputStream0.markSupported();
      javaCharStream0.ReInit((InputStream) pipedInputStream0, (-1), 8, 0);
      javaCharStream0.GetSuffix((byte)32);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.skip((byte)32);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (int) (byte)0, 5);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0);
      JavaCharStream.hexval('3');
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      JavaCharStream.hexval('C');
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%=hxwqd");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 141, 73, 141);
      javaCharStream0.BeginToken();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0);
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream.hexval('d');
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      JavaCharStream.hexval('B');
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      sequenceInputStream0.mark(2);
      sequenceInputStream0.close();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      // Undeclared exception!
      try { 
        sequenceInputStream1.read((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("q]EY5p");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.prevCharIsCR = false;
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      char char0 = '^';
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      JavaCharStream.hexval('f');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 15);
      pipedOutputStream0.write(81);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      pushbackInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 15, (-1), (-1));
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream.hexval('2');
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">%)\"");
      char[] charArray0 = new char[0];
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader0.read(charArray0);
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = 1471;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 1195, 1471);
      int int1 = (-4203);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-4203), (-15));
      javaCharStream0.GetSuffix(1195);
      javaCharStream1.backup((-1));
      JavaCharStream javaCharStream2 = new JavaCharStream((Reader) null, (-4203), 819);
      javaCharStream2.GetSuffix(2439);
      javaCharStream2.backup(2439);
      javaCharStream2.BeginToken();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream3 = new JavaCharStream(pipedInputStream0, 2439, 620, 819);
      javaCharStream3.backup((-4203));
      javaCharStream2.backup((-2276));
      javaCharStream2.backup(819);
      try { 
        javaCharStream3.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-34);
      byteArray0[1] = (byte) (-79);
      byteArray0[2] = (byte)12;
      byteArray0[3] = (byte)80;
      byteArray0[4] = (byte)62;
      byteArray0[5] = (byte) (-112);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)80, 561);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      JavaCharStream.hexval('1');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, 1, 1990, 1);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">%)\"");
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1942, 7);
      javaCharStream0.backup(1942);
      javaCharStream0.backup(7);
      stringReader0.read();
      int[] intArray0 = new int[3];
      intArray0[0] = 2146;
      intArray0[1] = 62;
      intArray0[2] = 1942;
      javaCharStream0.bufcolumn = intArray0;
      javaCharStream0.readChar();
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">%)\"");
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-8);
      byteArray0[4] = (byte) (-2);
      JavaCharStream.hexval('2');
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-32);
      byteArray0[2] = (byte) (-29);
      byteArray0[3] = (byte)56;
      byteArray0[4] = (byte)32;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 0, (-1008), 997);
      PipedInputStream pipedInputStream0 = new PipedInputStream(5);
      pipedInputStream0.mark((byte) (-32));
      javaCharStream0.Done();
      pipedInputStream0.mark(997);
      pipedInputStream0.markSupported();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader("q]EY5p");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 7, 7);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.nextCharInd = 113;
      javaCharStream0.prevCharIsCR = false;
      javaCharStream0.tokenBegin = 1;
      javaCharStream0.getBeginColumn();
      javaCharStream0.prevCharIsLF = false;
      boolean boolean0 = false;
      try { 
        stringReader0.ready();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("'qrYh-d<(@");
      char[] charArray0 = new char[5];
      charArray0[0] = 'z';
      charArray0[1] = 'u';
      charArray0[2] = 'K';
      charArray0[3] = '4';
      charArray0[4] = '@';
      stringReader0.read(charArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 89, 5);
      javaCharStream0.backup(4133);
      javaCharStream0.backup(80);
      javaCharStream0.adjustBeginLineColumn(4133, 3206);
      javaCharStream0.FillBuff();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3?w1oJIhCR{U");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-2106), 0);
      stringReader0.ready();
      stringReader0.reset();
      javaCharStream0.GetImage();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream1.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0);
      javaCharStream0.ReInit((InputStream) bufferedInputStream0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 82, 82, 87);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      char char0 = '`';
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1709, 1709, 1709);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('J');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      JavaCharStream.hexval('0');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      JavaCharStream.hexval('D');
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 12, 12);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      JavaCharStream.hexval('0');
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      sequenceInputStream0.mark(0);
      sequenceInputStream0.close();
      // Undeclared exception!
      try { 
        sequenceInputStream0.read((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ov<DS<a@$3&yY@J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ov<DS<a@$3&yY@J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.ExpandBuff(true);
      // Undeclared exception!
      try { 
        javaCharStream1.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ov<DS<a@$3&yY@J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.BeginToken();
      stringReader0.close();
      JavaCharStream.hexval('A');
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(95);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 9);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      javaCharStream0.ReInit((InputStream) pushbackInputStream0, 9, 9);
      javaCharStream0.AdjustBuffSize();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0);
      javaCharStream0.backup(185);
      javaCharStream0.adjustBeginLineColumn((-5292), (-1744));
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ov<DS<a@$3&yY@J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 26, 26, 26);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-4203), 819);
      char[] charArray0 = javaCharStream0.buffer;
      javaCharStream1.backup(2425);
      javaCharStream1.BeginToken();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream2 = new JavaCharStream(pipedInputStream0, 2425, 26, 819);
      javaCharStream2.backup((-4203));
      javaCharStream1.backup((-2276));
      javaCharStream0.ReadByte();
      javaCharStream2.AdjustBuffSize();
      pipedInputStream0.markSupported();
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 215, (-1), 0);
      javaCharStream0.ExpandBuff(false);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StringReader stringReader0 = new StringReader("3?w1oJIhCR{U");
      int int0 = 0;
      int int1 = (-2100);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-2100), 0);
      javaCharStream0.AdjustBuffSize();
      stringReader0.ready();
      stringReader0.reset();
      javaCharStream0.readChar();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.ReadByte();
      javaCharStream0.getLine();
      javaCharStream0.getColumn();
      int int2 = 0;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = null;
      try {
        bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, (-2100));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">%)\"");
      char[] charArray0 = new char[9];
      charArray0[0] = 'Y';
      charArray0[1] = 'g';
      charArray0[2] = 'q';
      charArray0[3] = '2';
      charArray0[4] = 't';
      charArray0[5] = 'N';
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      JavaCharStream.hexval('E');
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader("t)rQUYZZ2*4jP");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, 4105, 4105, 4105);
      stringReader0.markSupported();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      javaCharStream0.getBeginColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte) (-101);
      JavaCharStream.hexval('e');
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      String string0 = ">%)\"";
      StringReader stringReader0 = new StringReader(">%)\"");
      char[] charArray0 = new char[9];
      charArray0[0] = 'Y';
      charArray0[1] = 'g';
      charArray0[2] = 'q';
      charArray0[3] = '2';
      charArray0[4] = 't';
      charArray0[5] = 'N';
      charArray0[6] = 'Z';
      charArray0[7] = 'b';
      charArray0[8] = ')';
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">%)\"");
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte)0;
      stringReader0.read(charArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1443), 0);
      javaCharStream0.backup(66);
      javaCharStream0.backup(3531);
      javaCharStream0.adjustBeginLineColumn(0, (-3044));
      javaCharStream0.FillBuff();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ov<DS<a@$3&yY@J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      JavaCharStream javaCharStream1 = new JavaCharStream((Reader) null, (-4203), 819);
      javaCharStream1.GetSuffix(2439);
      javaCharStream1.backup(2439);
      javaCharStream1.BeginToken();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream2 = new JavaCharStream(pipedInputStream0, 2439, 620, 819);
      javaCharStream2.backup((-4203));
      javaCharStream1.backup((-2276));
      javaCharStream1.backup(819);
      try { 
        javaCharStream2.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">%)\"");
      char[] charArray0 = new char[9];
      charArray0[0] = 'Y';
      charArray0[1] = 'g';
      charArray0[2] = 'q';
      charArray0[3] = '2';
      charArray0[4] = 't';
      charArray0[5] = 'N';
      charArray0[6] = 'Z';
      charArray0[7] = 'b';
      charArray0[8] = ')';
      stringReader0.read(charArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4, 1942);
      javaCharStream0.prevCharIsCR = false;
      javaCharStream0.backup('Z');
      javaCharStream0.backup((-762));
      javaCharStream0.maxNextCharInd = 2674;
      javaCharStream0.adjustBeginLineColumn(70, 374);
      JavaCharStream.hexval('b');
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!lg3^)|&]v[");
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ov<DS<a@$3&yY@J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-4203), 819);
      javaCharStream1.GetSuffix(2439);
      javaCharStream1.backup(2439);
      javaCharStream1.BeginToken();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      javaCharStream1.ExpandBuff(true);
      JavaCharStream javaCharStream2 = new JavaCharStream(pipedInputStream0, 2439, 0, 819);
      javaCharStream2.backup((-4203));
      javaCharStream1.backup((-2276));
      javaCharStream0.ReadByte();
      javaCharStream2.AdjustBuffSize();
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">%)\"");
      char[] charArray0 = new char[9];
      StringReader stringReader1 = new StringReader(">%)\"");
      stringReader1.read(charArray0);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ov<2S<a@$3&yY@J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.BeginToken();
      stringReader0.close();
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(0);
      javaCharStream0.getEndLine();
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0);
      javaCharStream0.ReInit((InputStream) bufferedInputStream0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">%)\"");
      char[] charArray0 = new char[13];
      charArray0[0] = 'Y';
      charArray0[1] = 'g';
      charArray0[2] = 'q';
      charArray0[3] = '2';
      charArray0[4] = 't';
      charArray0[5] = 'N';
      charArray0[6] = 'Z';
      charArray0[7] = 'b';
      charArray0[8] = ')';
      stringReader0.read(charArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4, 1942);
      javaCharStream0.backup('Z');
      JavaCharStream.hexval('4');
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn(838, 838);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      try { 
        JavaCharStream.hexval('y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte)14;
      byteArray0[3] = (byte)14;
      byteArray0[3] = (byte) (-83);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[5] = (byte)98;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-3);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      byteArrayInputStream0.mark((byte)0);
      StringReader stringReader0 = new StringReader("\"qK");
      javaCharStream0.getLine();
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-4707), (-4707));
      int[] intArray0 = new int[5];
      intArray0[0] = (-4707);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      intArray0[4] = (-1);
      javaCharStream0.bufcolumn = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      char char0 = '?';
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">%)\"");
      char[] charArray0 = new char[9];
      charArray0[0] = 'Y';
      charArray0[1] = 'g';
      charArray0[2] = 'q';
      charArray0[3] = '2';
      charArray0[4] = 't';
      charArray0[5] = 'N';
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)58;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-83);
      byteArray0[3] = (byte)49;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)61;
      byteArray0[6] = (byte) (-128);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 1038);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.BeginToken();
      stringReader0.close();
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(68);
      javaCharStream0.getEndLine();
      javaCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">%)\"");
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1942, 7);
      javaCharStream0.backup(1942);
      javaCharStream0.backup(7);
      stringReader0.read();
      int[] intArray0 = new int[3];
      intArray0[0] = 2146;
      intArray0[1] = 62;
      javaCharStream0.adjustBeginLineColumn((-3131), 7);
      javaCharStream0.Done();
  }
}
