/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 25 17:32:12 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jahuwaldt.plot.DiamondSymbol;
import jahuwaldt.plot.PlotAxis;
import jahuwaldt.plot.PlotAxisScale;
import jahuwaldt.plot.PlotRun;
import jahuwaldt.plot.PlotRunList;
import jahuwaldt.plot.PlotXAxis;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.text.NumberFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlotXAxis_ESTest extends PlotXAxis_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      Rectangle rectangle0 = new Rectangle((-2322), 0, 1, (-1794));
      plotXAxis0.setAxisTickLimits();
      plotXAxis0.resizeAxis(rectangle0);
      assertEquals(0, PlotAxis.kNoGrid);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PlotRun[] plotRunArray0 = new PlotRun[10];
      double[] doubleArray0 = new double[9];
      DiamondSymbol diamondSymbol0 = new DiamondSymbol();
      PlotRun plotRun0 = new PlotRun(doubleArray0, doubleArray0, false, diamondSymbol0);
      plotRunArray0[0] = plotRun0;
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.manualQuant = true;
      // Undeclared exception!
      try { 
        plotXAxis0.setAxisBounds(plotRunList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotXAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      Rectangle rectangle0 = new Rectangle();
      plotXAxis0.resizeAxis(rectangle0);
      assertEquals(0, PlotAxis.kNoGrid);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      Rectangle rectangle0 = new Rectangle();
      // Undeclared exception!
      try { 
        plotXAxis0.draw((Graphics) null, (Component) null, rectangle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotXAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.manualUpperBounds(true);
      plotXAxis0.setAxisBounds((PlotRunList) null);
      assertEquals((-1.0), plotXAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DiamondSymbol diamondSymbol0 = new DiamondSymbol();
      double[] doubleArray0 = new double[7];
      PlotRun plotRun0 = new PlotRun(doubleArray0, doubleArray0, true, diamondSymbol0);
      PlotRun[] plotRunArray0 = new PlotRun[7];
      plotRunArray0[0] = plotRun0;
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.manualUpperBounds(true);
      // Undeclared exception!
      try { 
        plotXAxis0.setAxisBounds(plotRunList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotXAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      PlotRun[] plotRunArray0 = new PlotRun[2];
      double[] doubleArray0 = new double[4];
      DiamondSymbol diamondSymbol0 = new DiamondSymbol();
      PlotRun plotRun0 = new PlotRun(doubleArray0, doubleArray0, false, diamondSymbol0);
      plotRunArray0[0] = plotRun0;
      PlotRun[] plotRunArray1 = new PlotRun[5];
      plotRunArray1[0] = plotRunArray0[0];
      plotRunArray1[1] = plotRun0;
      plotRunArray1[2] = plotRunArray1[0];
      plotRunArray1[3] = plotRunArray0[0];
      PlotRun plotRun1 = new PlotRun();
      plotRunArray1[4] = plotRun1;
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray1);
      plotXAxis0.setAxisBounds(plotRunList0);
      assertEquals(4.9E-324, plotXAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      PlotRunList plotRunList0 = new PlotRunList();
      plotXAxis0.setAxisBounds(plotRunList0);
      assertEquals((-1.0), plotXAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.manualUpperBounds(true);
      plotXAxis0.manualLB = true;
      plotXAxis0.setAxisBounds((PlotRunList) null);
      assertEquals(1, PlotAxis.kTickMarksOnly);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      plotXAxis0.manualLB = true;
      plotXAxis0.setAxisBounds((PlotRunList) null);
      assertEquals(1.0, plotXAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis();
      // Undeclared exception!
      try { 
        plotXAxis0.resizeAxis((Rectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotXAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PlotXAxis plotXAxis0 = new PlotXAxis(",", (PlotAxisScale) null, (NumberFormat) null, 7);
      assertEquals(7, plotXAxis0.getGridStyle());
  }
}
