/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 19 17:28:52 GMT 2019
 */

package org.sat4j.minisat.orders;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.sat4j.core.VecInt;
import org.sat4j.minisat.constraints.CardinalityDataStructureYanMax;
import org.sat4j.minisat.core.Heap;
import org.sat4j.minisat.core.IPhaseSelectionStrategy;
import org.sat4j.minisat.core.Solver;
import org.sat4j.minisat.learning.NoLearningNoHeuristics;
import org.sat4j.minisat.orders.LevelBasedVarOrderHeap;
import org.sat4j.minisat.restarts.ArminRestarts;
import org.sat4j.specs.IVecInt;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LevelBasedVarOrderHeap_ESTest extends LevelBasedVarOrderHeap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[8];
      LevelBasedVarOrderHeap levelBasedVarOrderHeap0 = new LevelBasedVarOrderHeap();
      NoLearningNoHeuristics<CardinalityDataStructureYanMax> noLearningNoHeuristics0 = new NoLearningNoHeuristics<CardinalityDataStructureYanMax>();
      CardinalityDataStructureYanMax cardinalityDataStructureYanMax0 = new CardinalityDataStructureYanMax();
      ArminRestarts arminRestarts0 = new ArminRestarts();
      Solver<CardinalityDataStructureYanMax> solver0 = new Solver<CardinalityDataStructureYanMax>(noLearningNoHeuristics0, cardinalityDataStructureYanMax0, levelBasedVarOrderHeap0, arminRestarts0);
      IVecInt iVecInt0 = solver0.createBlockingClauseForCurrentModel();
      levelBasedVarOrderHeap0.addLevel(iVecInt0);
      levelBasedVarOrderHeap0.addLevel(intArray0);
      levelBasedVarOrderHeap0.init();
      assertEquals(0, levelBasedVarOrderHeap0.numberOfInterestingVariables());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LevelBasedVarOrderHeap levelBasedVarOrderHeap0 = new LevelBasedVarOrderHeap();
      double[] doubleArray0 = new double[0];
      Heap heap0 = levelBasedVarOrderHeap0.createHeap(doubleArray0);
      assertTrue(heap0.empty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LevelBasedVarOrderHeap levelBasedVarOrderHeap0 = new LevelBasedVarOrderHeap();
      // Undeclared exception!
      try { 
        levelBasedVarOrderHeap0.init();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.orders.LevelBasedVarOrderHeap", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[1] = 3758;
      LevelBasedVarOrderHeap levelBasedVarOrderHeap0 = new LevelBasedVarOrderHeap();
      NoLearningNoHeuristics<CardinalityDataStructureYanMax> noLearningNoHeuristics0 = new NoLearningNoHeuristics<CardinalityDataStructureYanMax>();
      CardinalityDataStructureYanMax cardinalityDataStructureYanMax0 = new CardinalityDataStructureYanMax();
      ArminRestarts arminRestarts0 = new ArminRestarts();
      Solver<CardinalityDataStructureYanMax> solver0 = new Solver<CardinalityDataStructureYanMax>(noLearningNoHeuristics0, cardinalityDataStructureYanMax0, levelBasedVarOrderHeap0, arminRestarts0);
      levelBasedVarOrderHeap0.addLevel(intArray0);
      // Undeclared exception!
      try { 
        levelBasedVarOrderHeap0.init();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3758
         //
         verifyException("org.sat4j.minisat.orders.LevelBasedVarOrderHeap", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LevelBasedVarOrderHeap levelBasedVarOrderHeap0 = new LevelBasedVarOrderHeap();
      // Undeclared exception!
      try { 
        levelBasedVarOrderHeap0.addLevel((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.core.VecInt", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LevelBasedVarOrderHeap levelBasedVarOrderHeap0 = new LevelBasedVarOrderHeap();
      // Undeclared exception!
      try { 
        levelBasedVarOrderHeap0.addLevel((IVecInt) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.orders.LevelBasedVarOrderHeap", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LevelBasedVarOrderHeap levelBasedVarOrderHeap0 = new LevelBasedVarOrderHeap();
      NoLearningNoHeuristics<CardinalityDataStructureYanMax> noLearningNoHeuristics0 = new NoLearningNoHeuristics<CardinalityDataStructureYanMax>();
      CardinalityDataStructureYanMax cardinalityDataStructureYanMax0 = new CardinalityDataStructureYanMax();
      ArminRestarts arminRestarts0 = new ArminRestarts();
      Solver<CardinalityDataStructureYanMax> solver0 = new Solver<CardinalityDataStructureYanMax>(noLearningNoHeuristics0, cardinalityDataStructureYanMax0, levelBasedVarOrderHeap0, arminRestarts0);
      IVecInt iVecInt0 = solver0.createBlockingClauseForCurrentModel();
      iVecInt0.shrink(3);
      // Undeclared exception!
      try { 
        levelBasedVarOrderHeap0.addLevel(iVecInt0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.core.VecInt", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LevelBasedVarOrderHeap levelBasedVarOrderHeap0 = new LevelBasedVarOrderHeap();
      VecInt vecInt0 = new VecInt();
      vecInt0.shrinkTo(1393);
      // Undeclared exception!
      try { 
        levelBasedVarOrderHeap0.addLevel((IVecInt) vecInt0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LevelBasedVarOrderHeap levelBasedVarOrderHeap0 = new LevelBasedVarOrderHeap((IPhaseSelectionStrategy) null);
      assertEquals(0, levelBasedVarOrderHeap0.numberOfInterestingVariables());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LevelBasedVarOrderHeap levelBasedVarOrderHeap0 = new LevelBasedVarOrderHeap();
      String string0 = levelBasedVarOrderHeap0.toString();
      assertEquals("Level and activity based heuristics using a heap phase appearing in latest learned clause", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LevelBasedVarOrderHeap levelBasedVarOrderHeap0 = new LevelBasedVarOrderHeap();
      NoLearningNoHeuristics<CardinalityDataStructureYanMax> noLearningNoHeuristics0 = new NoLearningNoHeuristics<CardinalityDataStructureYanMax>();
      CardinalityDataStructureYanMax cardinalityDataStructureYanMax0 = new CardinalityDataStructureYanMax();
      ArminRestarts arminRestarts0 = new ArminRestarts();
      Solver<CardinalityDataStructureYanMax> solver0 = new Solver<CardinalityDataStructureYanMax>(noLearningNoHeuristics0, cardinalityDataStructureYanMax0, levelBasedVarOrderHeap0, arminRestarts0);
      levelBasedVarOrderHeap0.init();
      levelBasedVarOrderHeap0.init();
      assertEquals(0, levelBasedVarOrderHeap0.numberOfInterestingVariables());
  }
}
