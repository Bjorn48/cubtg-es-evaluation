* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.sat4j.minisat.core.Heap
* Starting Client-0
* Connecting to master process on port 4612
* Analyzing classpath: 
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
* Finished analyzing classpath
* Generating tests for class org.sat4j.minisat.core.Heap
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 548
* Using seed 1550361218718
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 203 / 548
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.203125
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.22033898305084745
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.12852664576802508
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.0
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.35714285714285715
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.14285714285714285
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.22033898305084745
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 200
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 288
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 380
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 478
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.423728813559322
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.4169278996865204
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.2631578947368421
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.8571428571428571
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.6428571428571429
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.423728813559322
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 575
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 673
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.609375
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5084745762711864
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.4952978056426332
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.3684210526315789
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9285714285714286
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.7857142857142857
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.4915254237288136
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 772
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.640625
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.559322033898305
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.5266457680250783
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.42105263157894735
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9285714285714286
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.7857142857142857
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.5423728813559322
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 863
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.640625
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.559322033898305
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.5266457680250783
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.42105263157894735
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9285714285714286
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.7857142857142857
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.5423728813559322
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 965
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.640625
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.559322033898305
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.5266457680250783
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.42105263157894735
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9285714285714286
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.7857142857142857
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.5423728813559322
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 1065
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.6875
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6101694915254238
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.6018808777429467
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.42105263157894735
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.7857142857142857
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.5932203389830508
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 1145
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.734375
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6440677966101694
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.6614420062695925
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5263157894736842
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.8571428571428571
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.6271186440677966
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.734375
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6440677966101694
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.6614420062695925
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5263157894736842
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.8571428571428571
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.6271186440677966
* Search finished after 123s and 10 generations, 7807 statements, best individual has fitness: 179.0
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.734375
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6440677966101694
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.6614420062695925
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5263157894736842
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.8571428571428571
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.6271186440677966
* Minimizing test suite
[MASTER] 00:56:52.031 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 77%
* Total number of goals: 64
* Number of covered goals: 49
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 64%
* Total number of goals: 59
* Number of covered goals: 38
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 70%
* Total number of goals: 319
* Number of covered goals: 224
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 53%
* Total number of goals: 19
* Number of covered goals: 10
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 63%
* Total number of goals: 59
* Number of covered goals: 37
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.734375
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6440677966101694
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.6614420062695925
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5263157894736842
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.8571428571428571
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.6271186440677966
* Generated 50 tests with total length 469
* Resulting test suite's coverage: 76% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 00:57:32.445 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6702666666666667% of time used, but only 8/50 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 10%
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.734375
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6440677966101694
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.6614420062695925
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5263157894736842
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.8571428571428571
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.6271186440677966
* Compiling and checking tests
[MASTER] 00:57:50.042 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 00:57:50.044 [logback-1] WARN  JUnitAnalyzer - Failing test:
 VariableComparator variableComparator0 = null;
Heap heap0 = new Heap((VariableComparator) null);
int int0 = heap0.size();
heap0.heapProperty(int0);
int int1 = 658;
Heap heap1 = new Heap(variableComparator0);
heap0.size();
heap1.insert(int1);
heap1.empty();

[MASTER] 00:57:53.249 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.StackOverflowError: null
[MASTER] 00:57:53.252 [logback-1] WARN  JUnitAnalyzer - Failing test:
 VariableComparator variableComparator0 = null;
Heap heap0 = new Heap((VariableComparator) null);
assertTrue(heap0.heapProperty());
assertTrue(heap0.empty());
assertEquals(0, heap0.size());
assertNotNull(heap0);

int int0 = heap0.size();
assertTrue(heap0.heapProperty());
assertTrue(heap0.empty());
assertEquals(0, heap0.size());
assertEquals(0, int0);

heap0.heapProperty(int0);
int int1 = 2244;
int int2 = 655;
heap0.setBounds(int2);
VariableComparator variableComparator1 = mock(VariableComparator.class, new ViolatedAssumptionAnswer());
Heap heap1 = new Heap(variableComparator1);
int int3 = 1285;
heap1.setBounds(int3);
int int4 = 3061;
heap1.insert(int4);
heap1.insert(int4);
int int5 = (-1227);
heap1.increase(int5);
heap1.heapProperty();
Heap heap2 = new Heap(variableComparator0);
heap2.empty();
int int6 = 309;
heap0.inHeap(int6);
Heap heap3 = new Heap(variableComparator0);
int int7 = 625;
heap2.setBounds(int1);
int int8 = (-1);
heap3.inHeap(int8);
heap3.inHeap(int6);
heap3.inHeap(int7);
heap3.heapProperty();
int int9 = 1;
heap2.get(int9);
int int10 = (-1);
heap0.get(int10);
heap2.heapProperty(int6);

[MASTER] 00:57:53.488 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<1>
[MASTER] 00:57:53.488 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Heap heap0 = new Heap((VariableComparator) null);
assertEquals(0, heap0.size());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertNotNull(heap0);

boolean boolean0 = heap0.heapProperty();
assertEquals(0, heap0.size());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertTrue(boolean0);

heap0.setBounds(2649);
assertEquals(0, heap0.size());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());

VariableComparator variableComparator0 = mock(VariableComparator.class, new ViolatedAssumptionAnswer());
boolean boolean1 = heap0.empty();
assertEquals(0, heap0.size());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertTrue(boolean1);
assertTrue(boolean1 == boolean0);

int int0 = 1232;
heap0.insert(1232);
assertEquals(0, heap0.size());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());

int int1 = heap0.size();
assertEquals(0, heap0.size());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertEquals(0, int1);
assertFalse(int1 == int0);

int int2 = 799;
heap0.insert(799);

[MASTER] 00:57:53.601 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<1>
[MASTER] 00:57:53.602 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Heap heap0 = new Heap((VariableComparator) null);
assertEquals(0, heap0.size());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertNotNull(heap0);

int int0 = 1496;
heap0.setBounds(1496);
assertEquals(0, heap0.size());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());

boolean boolean0 = heap0.heapProperty();
assertEquals(0, heap0.size());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertTrue(boolean0);

heap0.setBounds(1496);
assertEquals(0, heap0.size());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());

heap0.insert(2649);
assertEquals(0, heap0.size());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());

heap0.setBounds(1496);

[MASTER] 00:57:54.733 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 00:57:54.734 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Heap heap0 = new Heap((VariableComparator) null);
assertTrue(heap0.heapProperty());
assertTrue(heap0.empty());
assertEquals(0, heap0.size());
assertNotNull(heap0);

heap0.setBounds(2649);
assertTrue(heap0.heapProperty());
assertTrue(heap0.empty());
assertEquals(0, heap0.size());

VariableComparator variableComparator0 = mock(VariableComparator.class, new ViolatedAssumptionAnswer());
boolean boolean0 = heap0.empty();
assertTrue(heap0.heapProperty());
assertTrue(heap0.empty());
assertEquals(0, heap0.size());
assertTrue(boolean0);

int int0 = 1232;
heap0.insert(1232);
assertTrue(heap0.heapProperty());
assertTrue(heap0.empty());
assertEquals(0, heap0.size());

int int1 = heap0.size();
assertTrue(heap0.heapProperty());
assertTrue(heap0.empty());
assertEquals(0, heap0.size());
assertEquals(0, int1);
assertFalse(int1 == int0);

int int2 = 799;
heap0.insert(799);

[MASTER] 00:57:54.894 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 00:57:54.894 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Heap heap0 = new Heap((VariableComparator) null);
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertEquals(0, heap0.size());
assertNotNull(heap0);

boolean boolean0 = heap0.heapProperty();
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertEquals(0, heap0.size());
assertTrue(boolean0);

heap0.setBounds(2649);
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertEquals(0, heap0.size());

VariableComparator variableComparator0 = mock(VariableComparator.class, new ViolatedAssumptionAnswer());
boolean boolean1 = heap0.empty();
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertEquals(0, heap0.size());
assertTrue(boolean1);
assertTrue(boolean1 == boolean0);

heap0.insert(1232);
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertEquals(0, heap0.size());

heap0.getmin();
heap0.empty();

[MASTER] 00:57:55.820 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 00:57:55.821 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Heap heap0 = new Heap((VariableComparator) null);
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertEquals(0, heap0.size());
assertNotNull(heap0);

heap0.setBounds(2649);
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertEquals(0, heap0.size());

VariableComparator variableComparator0 = mock(VariableComparator.class, new ViolatedAssumptionAnswer());
boolean boolean0 = heap0.empty();
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertEquals(0, heap0.size());
assertTrue(boolean0);

heap0.insert(1232);
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertEquals(0, heap0.size());

int int0 = heap0.size();
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertEquals(0, heap0.size());
assertEquals(0, int0);

boolean boolean1 = heap0.empty();
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertEquals(0, heap0.size());
assertTrue(boolean1);
assertTrue(boolean1 == boolean0);


[MASTER] 00:57:56.532 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 00:57:56.533 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Heap heap0 = new Heap((VariableComparator) null);
assertTrue(heap0.empty());
assertEquals(0, heap0.size());
assertTrue(heap0.heapProperty());
assertNotNull(heap0);

boolean boolean0 = heap0.heapProperty();
assertTrue(heap0.empty());
assertEquals(0, heap0.size());
assertTrue(heap0.heapProperty());
assertTrue(boolean0);

heap0.setBounds(2649);
assertTrue(heap0.empty());
assertEquals(0, heap0.size());
assertTrue(heap0.heapProperty());

VariableComparator variableComparator0 = mock(VariableComparator.class, new ViolatedAssumptionAnswer());
boolean boolean1 = heap0.ok(2649);
assertTrue(heap0.empty());
assertEquals(0, heap0.size());
assertTrue(heap0.heapProperty());
assertFalse(boolean1);
assertFalse(boolean1 == boolean0);

heap0.insert(1232);
assertTrue(heap0.empty());
assertEquals(0, heap0.size());
assertTrue(heap0.heapProperty());

boolean boolean2 = heap0.ok(1232);
assertTrue(heap0.empty());
assertEquals(0, heap0.size());
assertTrue(heap0.heapProperty());
assertTrue(boolean2);
assertTrue(boolean2 == boolean0);
assertFalse(boolean2 == boolean1);


[MASTER] 00:57:56.747 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<1>
[MASTER] 00:57:56.748 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Heap heap0 = new Heap((VariableComparator) null);
assertEquals(0, heap0.size());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertNotNull(heap0);

boolean boolean0 = heap0.heapProperty();
assertEquals(0, heap0.size());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertTrue(boolean0);

heap0.setBounds(2649);
assertEquals(0, heap0.size());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());

VariableComparator variableComparator0 = mock(VariableComparator.class, new ViolatedAssumptionAnswer());
boolean boolean1 = heap0.empty();
assertEquals(0, heap0.size());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertTrue(boolean1);
assertTrue(boolean1 == boolean0);

int int0 = 1232;
heap0.insert(1232);
assertEquals(0, heap0.size());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());

heap0.getmin();
heap0.insert(799);
heap0.setBounds(799);

* Writing tests to file
* Writing JUnit test case 'Heap_ESTest' to evosuite-tests
* Done!

* Computation finished
