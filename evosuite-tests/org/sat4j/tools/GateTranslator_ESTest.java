/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 18 01:30:29 GMT 2019
 */

package org.sat4j.tools;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;
import org.sat4j.BasicLauncher;
import org.sat4j.LightFactory;
import org.sat4j.core.ASolverFactory;
import org.sat4j.core.ReadOnlyVec;
import org.sat4j.core.ReadOnlyVecInt;
import org.sat4j.core.Vec;
import org.sat4j.core.VecInt;
import org.sat4j.minisat.constraints.CardinalityDataStructureYanMax;
import org.sat4j.minisat.core.RestartStrategy;
import org.sat4j.minisat.core.SearchParams;
import org.sat4j.minisat.core.Solver;
import org.sat4j.minisat.learning.ActiveLearning;
import org.sat4j.minisat.learning.ClauseOnlyLearning;
import org.sat4j.minisat.learning.FixedLengthLearning;
import org.sat4j.minisat.learning.NoLearningButHeuristics;
import org.sat4j.minisat.learning.PercentLengthLearning;
import org.sat4j.minisat.orders.LevelBasedVarOrderHeap;
import org.sat4j.minisat.orders.PureOrder;
import org.sat4j.minisat.orders.RSATPhaseSelectionStrategy;
import org.sat4j.minisat.orders.SubsetVarOrder;
import org.sat4j.minisat.orders.TabuListDecorator;
import org.sat4j.minisat.orders.VarOrderHeap;
import org.sat4j.minisat.restarts.FixedPeriodRestarts;
import org.sat4j.minisat.restarts.Glucose21Restarts;
import org.sat4j.minisat.restarts.LubyRestarts;
import org.sat4j.minisat.restarts.NoRestarts;
import org.sat4j.opt.MaxSatDecorator;
import org.sat4j.specs.IConstr;
import org.sat4j.specs.ISolver;
import org.sat4j.specs.IVecInt;
import org.sat4j.tools.AbstractMinimalModel;
import org.sat4j.tools.ClausalCardinalitiesDecorator;
import org.sat4j.tools.DimacsOutputSolver;
import org.sat4j.tools.DimacsStringSolver;
import org.sat4j.tools.FullClauseSelectorSolver;
import org.sat4j.tools.GateTranslator;
import org.sat4j.tools.Minimal4CardinalityModel;
import org.sat4j.tools.Minimal4InclusionModel;
import org.sat4j.tools.ModelIterator;
import org.sat4j.tools.ModelIteratorToSATAdapter;
import org.sat4j.tools.NegationDecorator;
import org.sat4j.tools.OptToSatAdapter;
import org.sat4j.tools.SolutionCounter;
import org.sat4j.tools.SolutionFoundListener;
import org.sat4j.tools.StatisticsSolver;
import org.sat4j.tools.SubModelIterator;
import org.sat4j.tools.encoding.Binary;
import org.sat4j.tools.encoding.Sequential;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GateTranslator_ESTest extends GateTranslator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver(103);
      AbstractMinimalModel abstractMinimalModel0 = new AbstractMinimalModel(dimacsStringSolver0);
      IVecInt iVecInt0 = AbstractMinimalModel.positiveLiterals(dimacsStringSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(abstractMinimalModel0);
      iVecInt0.shrink(103);
      Vec<BigInteger> vec0 = new Vec<BigInteger>();
      ReadOnlyVec<BigInteger> readOnlyVec0 = new ReadOnlyVec<BigInteger>(vec0);
      gateTranslator0.optimisationFunction(iVecInt0, readOnlyVec0, iVecInt0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      VecInt vecInt0 = new VecInt();
      vecInt0.pop();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      // Undeclared exception!
      try { 
        gateTranslator0.and((-1), (IVecInt) vecInt0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.sat4j.tools.GateTranslator", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsOutputSolver0);
      gateTranslator0.halfAdderSum((-892), (-376), 0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsOutputSolver0);
      gateTranslator0.fullAdderSum(310, 310, 310, (-1069));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[6];
      VecInt vecInt0 = new VecInt(intArray0);
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      BigInteger bigInteger0 = BigInteger.TEN;
      BigInteger bigInteger1 = BigInteger.ONE;
      BigInteger[] bigIntegerArray0 = new BigInteger[7];
      bigIntegerArray0[0] = bigInteger1;
      bigIntegerArray0[1] = bigInteger1;
      bigIntegerArray0[2] = bigInteger0;
      bigIntegerArray0[3] = bigInteger0;
      bigIntegerArray0[4] = bigInteger0;
      bigIntegerArray0[5] = bigInteger1;
      Vec<BigInteger> vec0 = new Vec<BigInteger>(bigIntegerArray0);
      gateTranslator0.optimisationFunction(vecInt0, vec0, vecInt0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver(102);
      AbstractMinimalModel abstractMinimalModel0 = new AbstractMinimalModel(dimacsStringSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(abstractMinimalModel0);
      gateTranslator0.fullAdderCarry(183, 102, (byte)36, (byte)36);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver(102);
      AbstractMinimalModel abstractMinimalModel0 = new AbstractMinimalModel(dimacsStringSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(abstractMinimalModel0);
      gateTranslator0.ite(379, (-1), 3231, (-1));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver();
      int[] intArray0 = new int[3];
      VecInt vecInt0 = new VecInt(intArray0);
      GateTranslator gateTranslator0 = new GateTranslator(dimacsOutputSolver0);
      gateTranslator0.halfOr(5, vecInt0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LightFactory lightFactory0 = LightFactory.instance();
      ISolver iSolver0 = lightFactory0.defaultSolver();
      SolutionFoundListener solutionFoundListener0 = SolutionFoundListener.VOID;
      ModelIteratorToSATAdapter modelIteratorToSATAdapter0 = new ModelIteratorToSATAdapter(iSolver0, solutionFoundListener0);
      GateTranslator gateTranslator0 = new GateTranslator(modelIteratorToSATAdapter0);
      gateTranslator0.gateTrue(2862);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver();
      int[] intArray0 = new int[3];
      VecInt vecInt0 = new VecInt(intArray0);
      Minimal4CardinalityModel minimal4CardinalityModel0 = new Minimal4CardinalityModel(dimacsOutputSolver0, vecInt0);
      Minimal4InclusionModel minimal4InclusionModel0 = new Minimal4InclusionModel(minimal4CardinalityModel0);
      GateTranslator gateTranslator0 = new GateTranslator(minimal4InclusionModel0);
      gateTranslator0.gateFalse(292);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LightFactory lightFactory0 = LightFactory.instance();
      ISolver iSolver0 = lightFactory0.lightSolver();
      GateTranslator gateTranslator0 = new GateTranslator(iSolver0);
      gateTranslator0.gateFalse((-2480));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClauseOnlyLearning<CardinalityDataStructureYanMax> clauseOnlyLearning0 = new ClauseOnlyLearning<CardinalityDataStructureYanMax>();
      CardinalityDataStructureYanMax cardinalityDataStructureYanMax0 = new CardinalityDataStructureYanMax();
      RSATPhaseSelectionStrategy rSATPhaseSelectionStrategy0 = new RSATPhaseSelectionStrategy();
      LevelBasedVarOrderHeap levelBasedVarOrderHeap0 = new LevelBasedVarOrderHeap(rSATPhaseSelectionStrategy0);
      LubyRestarts lubyRestarts0 = new LubyRestarts((-601));
      Solver<CardinalityDataStructureYanMax> solver0 = new Solver<CardinalityDataStructureYanMax>(clauseOnlyLearning0, cardinalityDataStructureYanMax0, levelBasedVarOrderHeap0, lubyRestarts0);
      IVecInt iVecInt0 = solver0.createBlockingClauseForCurrentModel();
      GateTranslator gateTranslator0 = new GateTranslator(solver0);
      gateTranslator0.iff((-601), iVecInt0);
      try { 
        gateTranslator0.xor(813, iVecInt0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Contradiction with implied literal
         //
         verifyException("org.sat4j.minisat.constraints.card.MaxWatchCard", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.defaultSolver();
      VecInt vecInt0 = new VecInt(15, (-432));
      AbstractMinimalModel abstractMinimalModel0 = new AbstractMinimalModel(iSolver0, vecInt0);
      GateTranslator gateTranslator0 = new GateTranslator(abstractMinimalModel0);
      // Undeclared exception!
      gateTranslator0.xor(3591, (IVecInt) vecInt0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      VecInt vecInt0 = new VecInt(39);
      ReadOnlyVecInt readOnlyVecInt0 = new ReadOnlyVecInt(vecInt0);
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      // Undeclared exception!
      try { 
        gateTranslator0.xor(39, (IVecInt) readOnlyVecInt0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.core.ReadOnlyVecInt", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(dimacsStringSolver0, true);
      AbstractMinimalModel abstractMinimalModel0 = new AbstractMinimalModel(maxSatDecorator0);
      SolutionCounter solutionCounter0 = new SolutionCounter(dimacsStringSolver0);
      IVecInt iVecInt0 = AbstractMinimalModel.positiveLiterals(solutionCounter0);
      GateTranslator gateTranslator0 = new GateTranslator(abstractMinimalModel0);
      // Undeclared exception!
      try { 
        gateTranslator0.xor(8, iVecInt0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The constraint you entered cannot be removed from the solver.
         //
         verifyException("org.sat4j.core.ConstrGroup", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ActiveLearning<CardinalityDataStructureYanMax> activeLearning0 = new ActiveLearning<CardinalityDataStructureYanMax>();
      CardinalityDataStructureYanMax cardinalityDataStructureYanMax0 = new CardinalityDataStructureYanMax();
      VarOrderHeap varOrderHeap0 = new VarOrderHeap();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(varOrderHeap0);
      FixedPeriodRestarts fixedPeriodRestarts0 = new FixedPeriodRestarts();
      Solver<CardinalityDataStructureYanMax> solver0 = new Solver<CardinalityDataStructureYanMax>(activeLearning0, cardinalityDataStructureYanMax0, tabuListDecorator0, fixedPeriodRestarts0);
      GateTranslator gateTranslator0 = new GateTranslator(solver0);
      // Undeclared exception!
      gateTranslator0.xor(20, 3, (-1807));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.xor(872, 735, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.SolverDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LightFactory lightFactory0 = LightFactory.instance();
      ISolver iSolver0 = lightFactory0.lightSolver();
      GateTranslator gateTranslator0 = new GateTranslator(iSolver0);
      IVecInt iVecInt0 = gateTranslator0.createBlockingClauseForCurrentModel();
      gateTranslator0.xor((-3027), iVecInt0);
      try { 
        gateTranslator0.or((-3027), iVecInt0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Creating Empty clause ?
         //
         verifyException("org.sat4j.minisat.constraints.cnf.Clauses", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PercentLengthLearning<CardinalityDataStructureYanMax> percentLengthLearning0 = new PercentLengthLearning<CardinalityDataStructureYanMax>((-4266));
      CardinalityDataStructureYanMax cardinalityDataStructureYanMax0 = new CardinalityDataStructureYanMax();
      SearchParams searchParams0 = new SearchParams((-805.2234819269121), (-1795));
      PureOrder pureOrder0 = new PureOrder();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(pureOrder0, 534);
      Solver<CardinalityDataStructureYanMax> solver0 = new Solver<CardinalityDataStructureYanMax>(percentLengthLearning0, cardinalityDataStructureYanMax0, searchParams0, tabuListDecorator0, (RestartStrategy) null);
      IVecInt iVecInt0 = solver0.createBlockingClauseForCurrentModel();
      GateTranslator gateTranslator0 = new GateTranslator(solver0);
      gateTranslator0.iff(534, iVecInt0);
      // Undeclared exception!
      gateTranslator0.or((-4266), iVecInt0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VecInt vecInt0 = new VecInt();
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.or((-1202), vecInt0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.SolverDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver();
      VecInt vecInt0 = new VecInt(55, 55);
      SubModelIterator subModelIterator0 = new SubModelIterator(dimacsOutputSolver0, vecInt0, 55);
      Binary binary0 = new Binary();
      ClausalCardinalitiesDecorator<ModelIterator> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<ModelIterator>(subModelIterator0, binary0);
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(clausalCardinalitiesDecorator0, true);
      GateTranslator gateTranslator0 = new GateTranslator(maxSatDecorator0);
      // Undeclared exception!
      try { 
        gateTranslator0.or(55, vecInt0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The constraint you entered cannot be removed from the solver.
         //
         verifyException("org.sat4j.core.ConstrGroup", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VecInt vecInt0 = new VecInt(0);
      vecInt0.pop();
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsOutputSolver0);
      // Undeclared exception!
      try { 
        gateTranslator0.or(0, vecInt0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      IVecInt iVecInt0 = AbstractMinimalModel.positiveLiterals(dimacsStringSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      gateTranslator0.iff((-1), iVecInt0);
      BigInteger bigInteger0 = BigInteger.ONE;
      BigInteger[] bigIntegerArray0 = new BigInteger[3];
      bigIntegerArray0[0] = bigInteger0;
      Vec<BigInteger> vec0 = new Vec<BigInteger>(bigIntegerArray0);
      ReadOnlyVecInt readOnlyVecInt0 = new ReadOnlyVecInt(iVecInt0);
      // Undeclared exception!
      try { 
        gateTranslator0.optimisationFunction(iVecInt0, vec0, readOnlyVecInt0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.core.ReadOnlyVecInt", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LightFactory lightFactory0 = LightFactory.instance();
      ISolver iSolver0 = lightFactory0.lightSolver();
      GateTranslator gateTranslator0 = new GateTranslator(iSolver0);
      try { 
        gateTranslator0.not(3377, 3377);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Creating Empty clause ?
         //
         verifyException("org.sat4j.minisat.constraints.cnf.Clauses", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StatisticsSolver statisticsSolver0 = new StatisticsSolver();
      VecInt vecInt0 = new VecInt(0);
      SubModelIterator subModelIterator0 = new SubModelIterator(statisticsSolver0, vecInt0, 153L);
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(subModelIterator0);
      GateTranslator gateTranslator0 = new GateTranslator(maxSatDecorator0);
      // Undeclared exception!
      try { 
        gateTranslator0.not(0, 0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not implemented yet!
         //
         verifyException("org.sat4j.tools.StatisticsSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.not(2, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.SolverDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver();
      FullClauseSelectorSolver<DimacsOutputSolver> fullClauseSelectorSolver0 = new FullClauseSelectorSolver<DimacsOutputSolver>(dimacsOutputSolver0, true);
      IVecInt iVecInt0 = fullClauseSelectorSolver0.getLastClause();
      ReadOnlyVecInt readOnlyVecInt0 = new ReadOnlyVecInt(iVecInt0);
      Minimal4CardinalityModel minimal4CardinalityModel0 = new Minimal4CardinalityModel(fullClauseSelectorSolver0, readOnlyVecInt0);
      ClausalCardinalitiesDecorator<AbstractMinimalModel> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<AbstractMinimalModel>(minimal4CardinalityModel0);
      GateTranslator gateTranslator0 = new GateTranslator(clausalCardinalitiesDecorator0);
      // Undeclared exception!
      try { 
        gateTranslator0.not(8, 8);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Please call newVar(int) before adding constraints!!!
         //
         verifyException("org.sat4j.tools.AbstractClauseSelectorSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LightFactory lightFactory0 = LightFactory.instance();
      ISolver iSolver0 = lightFactory0.lightSolver();
      GateTranslator gateTranslator0 = new GateTranslator(iSolver0);
      // Undeclared exception!
      try { 
        gateTranslator0.not(37, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is not a valid variable identifier
         //
         verifyException("org.sat4j.minisat.core.Solver", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ActiveLearning<CardinalityDataStructureYanMax> activeLearning0 = new ActiveLearning<CardinalityDataStructureYanMax>();
      CardinalityDataStructureYanMax cardinalityDataStructureYanMax0 = new CardinalityDataStructureYanMax();
      PureOrder pureOrder0 = new PureOrder();
      LubyRestarts lubyRestarts0 = new LubyRestarts();
      Solver<CardinalityDataStructureYanMax> solver0 = new Solver<CardinalityDataStructureYanMax>(activeLearning0, cardinalityDataStructureYanMax0, pureOrder0, lubyRestarts0);
      ISolver iSolver0 = solver0.getSolvingEngine();
      GateTranslator gateTranslator0 = new GateTranslator(iSolver0);
      // Undeclared exception!
      gateTranslator0.ite((-2503), 372, (-2503), 372);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.ite(376, 376, 376, 376);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.SolverDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ActiveLearning<CardinalityDataStructureYanMax> activeLearning0 = new ActiveLearning<CardinalityDataStructureYanMax>();
      CardinalityDataStructureYanMax cardinalityDataStructureYanMax0 = new CardinalityDataStructureYanMax();
      VarOrderHeap varOrderHeap0 = new VarOrderHeap();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(varOrderHeap0);
      FixedPeriodRestarts fixedPeriodRestarts0 = new FixedPeriodRestarts();
      Solver<CardinalityDataStructureYanMax> solver0 = new Solver<CardinalityDataStructureYanMax>(activeLearning0, cardinalityDataStructureYanMax0, tabuListDecorator0, fixedPeriodRestarts0);
      ModelIterator modelIterator0 = new ModelIterator(solver0, 3182L);
      GateTranslator gateTranslator0 = new GateTranslator(modelIterator0);
      // Undeclared exception!
      try { 
        gateTranslator0.ite(2, 0, 37, 3407);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is not a valid variable identifier
         //
         verifyException("org.sat4j.minisat.core.Solver", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ActiveLearning<CardinalityDataStructureYanMax> activeLearning0 = new ActiveLearning<CardinalityDataStructureYanMax>();
      CardinalityDataStructureYanMax cardinalityDataStructureYanMax0 = new CardinalityDataStructureYanMax();
      VarOrderHeap varOrderHeap0 = new VarOrderHeap();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(varOrderHeap0);
      FixedPeriodRestarts fixedPeriodRestarts0 = new FixedPeriodRestarts();
      Solver<CardinalityDataStructureYanMax> solver0 = new Solver<CardinalityDataStructureYanMax>(activeLearning0, cardinalityDataStructureYanMax0, tabuListDecorator0, fixedPeriodRestarts0);
      ModelIterator modelIterator0 = new ModelIterator(solver0, 3182L);
      GateTranslator gateTranslator0 = new GateTranslator(modelIterator0);
      // Undeclared exception!
      gateTranslator0.it((-2344), (-2344), 5);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.it((-1), (-1), (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.SolverDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("The timeout is given in number of conflicts!");
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver(mockPrintWriter0);
      Sequential sequential0 = new Sequential();
      ClausalCardinalitiesDecorator<DimacsOutputSolver> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<DimacsOutputSolver>(dimacsOutputSolver0, sequential0);
      NegationDecorator<ClausalCardinalitiesDecorator<DimacsOutputSolver>> negationDecorator0 = new NegationDecorator<ClausalCardinalitiesDecorator<DimacsOutputSolver>>(clausalCardinalitiesDecorator0);
      GateTranslator gateTranslator0 = new GateTranslator(negationDecorator0);
      // Undeclared exception!
      try { 
        gateTranslator0.it(1223, 33, (-1694));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Please call newVar(int) before adding constraints!!!
         //
         verifyException("org.sat4j.tools.AbstractClauseSelectorSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FixedLengthLearning<CardinalityDataStructureYanMax> fixedLengthLearning0 = new FixedLengthLearning<CardinalityDataStructureYanMax>(0);
      CardinalityDataStructureYanMax cardinalityDataStructureYanMax0 = new CardinalityDataStructureYanMax();
      VarOrderHeap varOrderHeap0 = new VarOrderHeap();
      Glucose21Restarts glucose21Restarts0 = new Glucose21Restarts();
      Solver<CardinalityDataStructureYanMax> solver0 = new Solver<CardinalityDataStructureYanMax>(fixedLengthLearning0, cardinalityDataStructureYanMax0, varOrderHeap0, glucose21Restarts0);
      GateTranslator gateTranslator0 = new GateTranslator(solver0);
      // Undeclared exception!
      try { 
        gateTranslator0.it(0, 0, (-431));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is not a valid variable identifier
         //
         verifyException("org.sat4j.minisat.core.Solver", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LightFactory lightFactory0 = LightFactory.instance();
      ISolver iSolver0 = lightFactory0.lightSolver();
      GateTranslator gateTranslator0 = new GateTranslator(iSolver0);
      IVecInt iVecInt0 = gateTranslator0.createBlockingClauseForCurrentModel();
      gateTranslator0.xor(708, iVecInt0);
      try { 
        gateTranslator0.iff(708, iVecInt0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Creating Empty clause ?
         //
         verifyException("org.sat4j.minisat.constraints.cnf.Clauses", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      IVecInt iVecInt0 = VecInt.EMPTY;
      // Undeclared exception!
      try { 
        gateTranslator0.iff(41, iVecInt0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.core.EmptyVecInt", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VecInt vecInt0 = new VecInt();
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.iff((-1177), vecInt0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.SolverDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      VecInt vecInt0 = new VecInt();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      FullClauseSelectorSolver<GateTranslator> fullClauseSelectorSolver0 = new FullClauseSelectorSolver<GateTranslator>(gateTranslator0, true);
      GateTranslator gateTranslator1 = new GateTranslator(fullClauseSelectorSolver0);
      // Undeclared exception!
      try { 
        gateTranslator1.iff(894, vecInt0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Please call newVar(int) before adding constraints!!!
         //
         verifyException("org.sat4j.tools.AbstractClauseSelectorSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int[] intArray0 = new int[6];
      VecInt vecInt0 = new VecInt(intArray0);
      ActiveLearning<CardinalityDataStructureYanMax> activeLearning0 = new ActiveLearning<CardinalityDataStructureYanMax>(659.108809);
      CardinalityDataStructureYanMax cardinalityDataStructureYanMax0 = new CardinalityDataStructureYanMax();
      VarOrderHeap varOrderHeap0 = new VarOrderHeap();
      Glucose21Restarts glucose21Restarts0 = new Glucose21Restarts();
      Solver<CardinalityDataStructureYanMax> solver0 = new Solver<CardinalityDataStructureYanMax>(activeLearning0, cardinalityDataStructureYanMax0, varOrderHeap0, glucose21Restarts0);
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(solver0);
      OptToSatAdapter optToSatAdapter0 = new OptToSatAdapter(maxSatDecorator0);
      AbstractMinimalModel abstractMinimalModel0 = new AbstractMinimalModel(optToSatAdapter0);
      GateTranslator gateTranslator0 = new GateTranslator(abstractMinimalModel0);
      // Undeclared exception!
      try { 
        gateTranslator0.iff((-1), vecInt0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is not a valid variable identifier
         //
         verifyException("org.sat4j.minisat.core.Solver", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      VecInt vecInt0 = new VecInt();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      vecInt0.shrink((-3243));
      // Undeclared exception!
      try { 
        gateTranslator0.iff(37, vecInt0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.core.VecInt", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ActiveLearning<CardinalityDataStructureYanMax> activeLearning0 = new ActiveLearning<CardinalityDataStructureYanMax>();
      CardinalityDataStructureYanMax cardinalityDataStructureYanMax0 = new CardinalityDataStructureYanMax();
      SearchParams searchParams0 = new SearchParams(0.0, 14);
      PureOrder pureOrder0 = new PureOrder();
      Solver<CardinalityDataStructureYanMax> solver0 = new Solver<CardinalityDataStructureYanMax>(activeLearning0, cardinalityDataStructureYanMax0, searchParams0, pureOrder0, (RestartStrategy) null);
      IVecInt iVecInt0 = solver0.createBlockingClauseForCurrentModel();
      GateTranslator gateTranslator0 = new GateTranslator(solver0);
      gateTranslator0.iff(1412, iVecInt0);
      try { 
        gateTranslator0.halfOr(103, iVecInt0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Contradiction with implied literal
         //
         verifyException("org.sat4j.minisat.constraints.card.MaxWatchCard", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ActiveLearning<CardinalityDataStructureYanMax> activeLearning0 = new ActiveLearning<CardinalityDataStructureYanMax>();
      CardinalityDataStructureYanMax cardinalityDataStructureYanMax0 = new CardinalityDataStructureYanMax();
      VarOrderHeap varOrderHeap0 = new VarOrderHeap();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(varOrderHeap0);
      FixedPeriodRestarts fixedPeriodRestarts0 = new FixedPeriodRestarts();
      Solver<CardinalityDataStructureYanMax> solver0 = new Solver<CardinalityDataStructureYanMax>(activeLearning0, cardinalityDataStructureYanMax0, tabuListDecorator0, fixedPeriodRestarts0);
      ModelIterator modelIterator0 = new ModelIterator(solver0, 3182L);
      int[] intArray0 = new int[6];
      intArray0[0] = 2;
      intArray0[1] = (-370);
      intArray0[2] = (-370);
      intArray0[3] = 2;
      intArray0[4] = (-370);
      VecInt vecInt0 = new VecInt(intArray0);
      GateTranslator gateTranslator0 = new GateTranslator(modelIterator0);
      // Undeclared exception!
      gateTranslator0.halfOr((-1051), vecInt0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.halfOr(7, (IVecInt) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.GateTranslator", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      VecInt vecInt0 = new VecInt();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      vecInt0.shrink(4497);
      // Undeclared exception!
      try { 
        gateTranslator0.halfOr(1001, vecInt0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.GateTranslator", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      StatisticsSolver statisticsSolver0 = new StatisticsSolver();
      VecInt vecInt0 = new VecInt(0);
      SubModelIterator subModelIterator0 = new SubModelIterator(statisticsSolver0, vecInt0, 156L);
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(subModelIterator0);
      GateTranslator gateTranslator0 = new GateTranslator(maxSatDecorator0);
      // Undeclared exception!
      try { 
        gateTranslator0.halfAdderCarry(0, 0, (-1368));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not implemented yet!
         //
         verifyException("org.sat4j.tools.StatisticsSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.halfAdderCarry(0, (-1140), (-633));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.SolverDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ModelIterator modelIterator0 = new ModelIterator((ISolver) null, (-1119L));
      SolutionCounter solutionCounter0 = new SolutionCounter(modelIterator0);
      GateTranslator gateTranslator0 = new GateTranslator(solutionCounter0);
      // Undeclared exception!
      try { 
        gateTranslator0.gateTrue(2509);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.SolverDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ActiveLearning<CardinalityDataStructureYanMax> activeLearning0 = new ActiveLearning<CardinalityDataStructureYanMax>();
      CardinalityDataStructureYanMax cardinalityDataStructureYanMax0 = new CardinalityDataStructureYanMax();
      VarOrderHeap varOrderHeap0 = new VarOrderHeap();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(varOrderHeap0);
      FixedPeriodRestarts fixedPeriodRestarts0 = new FixedPeriodRestarts();
      Solver<CardinalityDataStructureYanMax> solver0 = new Solver<CardinalityDataStructureYanMax>(activeLearning0, cardinalityDataStructureYanMax0, tabuListDecorator0, fixedPeriodRestarts0);
      ModelIterator modelIterator0 = new ModelIterator(solver0, 3182L);
      GateTranslator gateTranslator0 = new GateTranslator(modelIterator0);
      // Undeclared exception!
      gateTranslator0.fullAdderCarry(1645, 2, 1645, 5);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ActiveLearning<CardinalityDataStructureYanMax> activeLearning0 = new ActiveLearning<CardinalityDataStructureYanMax>();
      CardinalityDataStructureYanMax cardinalityDataStructureYanMax0 = new CardinalityDataStructureYanMax();
      VarOrderHeap varOrderHeap0 = new VarOrderHeap();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(varOrderHeap0);
      FixedPeriodRestarts fixedPeriodRestarts0 = new FixedPeriodRestarts();
      Solver<CardinalityDataStructureYanMax> solver0 = new Solver<CardinalityDataStructureYanMax>(activeLearning0, cardinalityDataStructureYanMax0, tabuListDecorator0, fixedPeriodRestarts0);
      ModelIterator modelIterator0 = new ModelIterator(solver0, 3182L);
      GateTranslator gateTranslator0 = new GateTranslator(modelIterator0);
      // Undeclared exception!
      try { 
        gateTranslator0.fullAdderCarry(8, 0, 3538, 2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is not a valid variable identifier
         //
         verifyException("org.sat4j.minisat.core.Solver", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      NoLearningButHeuristics<CardinalityDataStructureYanMax> noLearningButHeuristics0 = new NoLearningButHeuristics<CardinalityDataStructureYanMax>();
      CardinalityDataStructureYanMax cardinalityDataStructureYanMax0 = new CardinalityDataStructureYanMax();
      SearchParams searchParams0 = new SearchParams(102);
      int[] intArray0 = new int[3];
      SubsetVarOrder subsetVarOrder0 = new SubsetVarOrder(intArray0);
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(subsetVarOrder0, 102);
      LubyRestarts lubyRestarts0 = new LubyRestarts((-1125));
      ASolverFactory<Minimal4InclusionModel> aSolverFactory0 = (ASolverFactory<Minimal4InclusionModel>) mock(ASolverFactory.class, new ViolatedAssumptionAnswer());
      BasicLauncher<Minimal4InclusionModel> basicLauncher0 = new BasicLauncher<Minimal4InclusionModel>(aSolverFactory0);
      Solver<CardinalityDataStructureYanMax> solver0 = new Solver<CardinalityDataStructureYanMax>(noLearningButHeuristics0, cardinalityDataStructureYanMax0, searchParams0, tabuListDecorator0, lubyRestarts0, basicLauncher0);
      GateTranslator gateTranslator0 = new GateTranslator(solver0);
      // Undeclared exception!
      try { 
        gateTranslator0.fullAdderCarry(Integer.MIN_VALUE, 5, Integer.MIN_VALUE, Integer.MIN_VALUE);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2147483648
         //
         verifyException("org.sat4j.minisat.constraints.cnf.Lits", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      int[] intArray0 = new int[0];
      VecInt vecInt0 = new VecInt(intArray0);
      StatisticsSolver statisticsSolver0 = new StatisticsSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(statisticsSolver0);
      OptToSatAdapter optToSatAdapter0 = new OptToSatAdapter(maxSatDecorator0);
      Minimal4CardinalityModel minimal4CardinalityModel0 = new Minimal4CardinalityModel(optToSatAdapter0, vecInt0);
      GateTranslator gateTranslator0 = new GateTranslator(minimal4CardinalityModel0);
      // Undeclared exception!
      try { 
        gateTranslator0.and(2647, (IVecInt) vecInt0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not implemented yet!
         //
         verifyException("org.sat4j.tools.StatisticsSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      IVecInt iVecInt0 = AbstractMinimalModel.positiveLiterals(dimacsStringSolver0);
      iVecInt0.shrinkTo(Integer.MAX_VALUE);
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      // Undeclared exception!
      try { 
        gateTranslator0.and((-861), iVecInt0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.GateTranslator", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver();
      FullClauseSelectorSolver<DimacsOutputSolver> fullClauseSelectorSolver0 = new FullClauseSelectorSolver<DimacsOutputSolver>(dimacsOutputSolver0, true);
      IVecInt iVecInt0 = fullClauseSelectorSolver0.getLastClause();
      ReadOnlyVecInt readOnlyVecInt0 = new ReadOnlyVecInt(iVecInt0);
      Minimal4CardinalityModel minimal4CardinalityModel0 = new Minimal4CardinalityModel(fullClauseSelectorSolver0, readOnlyVecInt0);
      ClausalCardinalitiesDecorator<AbstractMinimalModel> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<AbstractMinimalModel>(minimal4CardinalityModel0);
      GateTranslator gateTranslator0 = new GateTranslator(clausalCardinalitiesDecorator0);
      // Undeclared exception!
      try { 
        gateTranslator0.and(8, (IVecInt) readOnlyVecInt0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Please call newVar(int) before adding constraints!!!
         //
         verifyException("org.sat4j.tools.AbstractClauseSelectorSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      int[] intArray0 = new int[6];
      VecInt vecInt0 = new VecInt(intArray0);
      LightFactory lightFactory0 = new LightFactory();
      ISolver iSolver0 = lightFactory0.lightSolver();
      GateTranslator gateTranslator0 = new GateTranslator(iSolver0);
      // Undeclared exception!
      try { 
        gateTranslator0.and(2, (IVecInt) vecInt0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is not a valid variable identifier
         //
         verifyException("org.sat4j.minisat.core.Solver", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      StatisticsSolver statisticsSolver0 = new StatisticsSolver();
      VecInt vecInt0 = new VecInt();
      SubModelIterator subModelIterator0 = new SubModelIterator(statisticsSolver0, vecInt0, 153L);
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(subModelIterator0);
      GateTranslator gateTranslator0 = new GateTranslator(maxSatDecorator0);
      // Undeclared exception!
      try { 
        gateTranslator0.and(0, 0, 0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not implemented yet!
         //
         verifyException("org.sat4j.tools.StatisticsSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.and(18, 1, 18);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.SolverDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      LightFactory lightFactory0 = LightFactory.instance();
      ISolver iSolver0 = lightFactory0.lightSolver();
      GateTranslator gateTranslator0 = new GateTranslator(iSolver0);
      // Undeclared exception!
      try { 
        gateTranslator0.and(0, 283, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is not a valid variable identifier
         //
         verifyException("org.sat4j.minisat.core.Solver", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ClauseOnlyLearning<CardinalityDataStructureYanMax> clauseOnlyLearning0 = new ClauseOnlyLearning<CardinalityDataStructureYanMax>();
      CardinalityDataStructureYanMax cardinalityDataStructureYanMax0 = new CardinalityDataStructureYanMax();
      SearchParams searchParams0 = new SearchParams(1000.0, (-123));
      int[] intArray0 = new int[0];
      SubsetVarOrder subsetVarOrder0 = new SubsetVarOrder(intArray0);
      NoRestarts noRestarts0 = new NoRestarts();
      Solver<CardinalityDataStructureYanMax> solver0 = new Solver<CardinalityDataStructureYanMax>(clauseOnlyLearning0, cardinalityDataStructureYanMax0, searchParams0, subsetVarOrder0, noRestarts0);
      GateTranslator gateTranslator0 = new GateTranslator(solver0);
      // Undeclared exception!
      gateTranslator0.additionalFullAdderConstraints(6, 6, (-892), 6, 5);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.additionalFullAdderConstraints((-603), 1011, 488, 1011, (-742));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.SolverDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      LightFactory lightFactory0 = LightFactory.instance();
      ISolver iSolver0 = lightFactory0.lightSolver();
      GateTranslator gateTranslator0 = new GateTranslator(iSolver0);
      // Undeclared exception!
      try { 
        gateTranslator0.additionalFullAdderConstraints(6, 6, 6, 6, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is not a valid variable identifier
         //
         verifyException("org.sat4j.minisat.core.Solver", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver(102);
      AbstractMinimalModel abstractMinimalModel0 = new AbstractMinimalModel(dimacsStringSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(abstractMinimalModel0);
      gateTranslator0.and(3, 7, 7);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      int[] intArray0 = new int[2];
      VecInt vecInt0 = new VecInt(intArray0);
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      BigInteger bigInteger0 = BigInteger.ONE;
      Vec<BigInteger> vec0 = new Vec<BigInteger>(376, bigInteger0);
      // Undeclared exception!
      try { 
        gateTranslator0.optimisationFunction(vecInt0, vec0, vecInt0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.SolverDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      int[] intArray0 = new int[6];
      VecInt vecInt0 = new VecInt(intArray0);
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      BigInteger bigInteger0 = BigInteger.TEN;
      Vec<BigInteger> vec0 = new Vec<BigInteger>(376, bigInteger0);
      // Undeclared exception!
      try { 
        gateTranslator0.optimisationFunction(vecInt0, vec0, vecInt0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      int[] intArray0 = new int[2];
      VecInt vecInt0 = new VecInt(intArray0);
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      BigInteger[] bigIntegerArray0 = new BigInteger[0];
      Vec<BigInteger> vec0 = new Vec<BigInteger>(bigIntegerArray0);
      // Undeclared exception!
      try { 
        gateTranslator0.optimisationFunction(vecInt0, vec0, vecInt0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.sat4j.core.Vec", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      VecInt vecInt0 = new VecInt(15, 35);
      // Undeclared exception!
      gateTranslator0.iff(15, vecInt0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ActiveLearning<CardinalityDataStructureYanMax> activeLearning0 = new ActiveLearning<CardinalityDataStructureYanMax>();
      CardinalityDataStructureYanMax cardinalityDataStructureYanMax0 = new CardinalityDataStructureYanMax();
      VarOrderHeap varOrderHeap0 = new VarOrderHeap();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(varOrderHeap0);
      FixedPeriodRestarts fixedPeriodRestarts0 = new FixedPeriodRestarts();
      Solver<CardinalityDataStructureYanMax> solver0 = new Solver<CardinalityDataStructureYanMax>(activeLearning0, cardinalityDataStructureYanMax0, tabuListDecorator0, fixedPeriodRestarts0);
      ModelIterator modelIterator0 = new ModelIterator(solver0, 3182L);
      int[] intArray0 = new int[6];
      VecInt vecInt0 = new VecInt(intArray0);
      GateTranslator gateTranslator0 = new GateTranslator(modelIterator0);
      // Undeclared exception!
      try { 
        gateTranslator0.halfOr((-1051), vecInt0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 is not a valid variable identifier
         //
         verifyException("org.sat4j.minisat.core.Solver", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      int[] intArray0 = new int[0];
      VecInt vecInt0 = new VecInt(intArray0);
      StatisticsSolver statisticsSolver0 = new StatisticsSolver();
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(statisticsSolver0);
      OptToSatAdapter optToSatAdapter0 = new OptToSatAdapter(maxSatDecorator0);
      Minimal4CardinalityModel minimal4CardinalityModel0 = new Minimal4CardinalityModel(optToSatAdapter0, vecInt0);
      GateTranslator gateTranslator0 = new GateTranslator(minimal4CardinalityModel0);
      IConstr[] iConstrArray0 = gateTranslator0.halfOr(2, vecInt0);
      assertEquals(0, iConstrArray0.length);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      DimacsOutputSolver dimacsOutputSolver0 = new DimacsOutputSolver();
      int[] intArray0 = new int[3];
      VecInt vecInt0 = new VecInt(intArray0);
      GateTranslator gateTranslator0 = new GateTranslator(dimacsOutputSolver0);
      gateTranslator0.or(2290, vecInt0);
      assertEquals(3, vecInt0.size());
      assertFalse(vecInt0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ActiveLearning<CardinalityDataStructureYanMax> activeLearning0 = new ActiveLearning<CardinalityDataStructureYanMax>();
      CardinalityDataStructureYanMax cardinalityDataStructureYanMax0 = new CardinalityDataStructureYanMax();
      VarOrderHeap varOrderHeap0 = new VarOrderHeap();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(varOrderHeap0);
      FixedPeriodRestarts fixedPeriodRestarts0 = new FixedPeriodRestarts();
      Solver<CardinalityDataStructureYanMax> solver0 = new Solver<CardinalityDataStructureYanMax>(activeLearning0, cardinalityDataStructureYanMax0, tabuListDecorator0, fixedPeriodRestarts0);
      ModelIterator modelIterator0 = new ModelIterator(solver0, 3182L);
      GateTranslator gateTranslator0 = new GateTranslator(modelIterator0);
      IVecInt iVecInt0 = solver0.createBlockingClauseForCurrentModel();
      gateTranslator0.or((-2519), iVecInt0);
      // Undeclared exception!
      gateTranslator0.not(1752, 5);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver(102);
      VecInt vecInt0 = new VecInt(102, 102);
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      gateTranslator0.and(102, (IVecInt) vecInt0);
      assertEquals(103, dimacsStringSolver0.nConstraints());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      int[] intArray0 = new int[3];
      VecInt vecInt0 = new VecInt(intArray0);
      Minimal4CardinalityModel minimal4CardinalityModel0 = new Minimal4CardinalityModel((ISolver) null, vecInt0);
      ClausalCardinalitiesDecorator<AbstractMinimalModel> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<AbstractMinimalModel>(minimal4CardinalityModel0);
      GateTranslator gateTranslator0 = new GateTranslator(clausalCardinalitiesDecorator0);
      // Undeclared exception!
      try { 
        gateTranslator0.and(124, (IVecInt) vecInt0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.SolverDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.halfAdderSum(1, 1, (-1256));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.SolverDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver(102);
      AbstractMinimalModel abstractMinimalModel0 = new AbstractMinimalModel(dimacsStringSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(abstractMinimalModel0);
      gateTranslator0.halfAdderCarry((-68), (-121), (-1207));
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      StatisticsSolver statisticsSolver0 = new StatisticsSolver();
      VecInt vecInt0 = new VecInt(0);
      SubModelIterator subModelIterator0 = new SubModelIterator(statisticsSolver0, vecInt0, 156L);
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(subModelIterator0);
      GateTranslator gateTranslator0 = new GateTranslator(maxSatDecorator0);
      // Undeclared exception!
      try { 
        gateTranslator0.ite(0, 0, 0, 0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Not implemented yet!
         //
         verifyException("org.sat4j.tools.StatisticsSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver();
      GateTranslator gateTranslator0 = new GateTranslator(dimacsStringSolver0);
      gateTranslator0.xor(66, 29, 66);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.xor(48, (IVecInt) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.GateTranslator", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.fullAdderSum((-557), (-557), 1114, (-557));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.SolverDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver(102);
      AbstractMinimalModel abstractMinimalModel0 = new AbstractMinimalModel(dimacsStringSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(abstractMinimalModel0);
      IConstr[] iConstrArray0 = gateTranslator0.it(102, (-1), 4);
      assertEquals(3, iConstrArray0.length);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.gateFalse((-170));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.SolverDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      GateTranslator gateTranslator0 = new GateTranslator((ISolver) null);
      // Undeclared exception!
      try { 
        gateTranslator0.fullAdderCarry(0, 0, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.SolverDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver(102);
      AbstractMinimalModel abstractMinimalModel0 = new AbstractMinimalModel(dimacsStringSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(abstractMinimalModel0);
      gateTranslator0.additionalFullAdderConstraints((-121), (-1), (-121), 1, (-581));
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ActiveLearning<CardinalityDataStructureYanMax> activeLearning0 = new ActiveLearning<CardinalityDataStructureYanMax>();
      CardinalityDataStructureYanMax cardinalityDataStructureYanMax0 = new CardinalityDataStructureYanMax();
      VarOrderHeap varOrderHeap0 = new VarOrderHeap();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(varOrderHeap0);
      FixedPeriodRestarts fixedPeriodRestarts0 = new FixedPeriodRestarts();
      Solver<CardinalityDataStructureYanMax> solver0 = new Solver<CardinalityDataStructureYanMax>(activeLearning0, cardinalityDataStructureYanMax0, tabuListDecorator0, fixedPeriodRestarts0);
      ModelIterator modelIterator0 = new ModelIterator(solver0, 3182L);
      GateTranslator gateTranslator0 = new GateTranslator(modelIterator0);
      IConstr[] iConstrArray0 = gateTranslator0.not(1752, 5);
      assertEquals(1752, solver0.realNumberOfVariables());
      assertEquals(2, iConstrArray0.length);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      DimacsStringSolver dimacsStringSolver0 = new DimacsStringSolver(102);
      AbstractMinimalModel abstractMinimalModel0 = new AbstractMinimalModel(dimacsStringSolver0);
      GateTranslator gateTranslator0 = new GateTranslator(abstractMinimalModel0);
      IConstr iConstr0 = gateTranslator0.gateTrue((-1207));
      assertNull(iConstr0);
  }
}
