/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 18:32:09 GMT 2019
 */

package de.paragon.explorer.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.paragon.explorer.figure.ExplorerFigure;
import de.paragon.explorer.figure.Figure;
import de.paragon.explorer.figure.InformationFigure;
import de.paragon.explorer.util.StandardEnumerator;
import java.util.Stack;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StandardEnumerator_ESTest extends StandardEnumerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StandardEnumerator standardEnumerator0 = new StandardEnumerator();
      standardEnumerator0.setCount((-2795));
      standardEnumerator0.removeElement("");
      assertEquals((-2795), standardEnumerator0.getCount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StandardEnumerator standardEnumerator0 = new StandardEnumerator();
      standardEnumerator0.setCount(692);
      // Undeclared exception!
      try { 
        standardEnumerator0.nextFigure();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class de.paragon.explorer.util.ResourceBundlePurchaser
         //
         verifyException("de.paragon.explorer.util.StandardEnumerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Stack<ExplorerFigure> stack0 = new Stack<ExplorerFigure>();
      StandardEnumerator standardEnumerator0 = new StandardEnumerator(stack0);
      standardEnumerator0.setCount(1601);
      // Undeclared exception!
      try { 
        standardEnumerator0.nextElement();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class de.paragon.explorer.util.ResourceBundlePurchaser
         //
         verifyException("de.paragon.explorer.util.StandardEnumerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StandardEnumerator standardEnumerator0 = new StandardEnumerator();
      standardEnumerator0.setCount(1601);
      boolean boolean0 = standardEnumerator0.hasMoreElements();
      assertEquals(0, standardEnumerator0.getCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StandardEnumerator standardEnumerator0 = new StandardEnumerator();
      standardEnumerator0.setCount((-2036));
      Vector<String> vector0 = new Vector<String>(0);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, 0);
      standardEnumerator0.addElement(defaultTableModel0);
      assertEquals((-2036), standardEnumerator0.getCount());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StandardEnumerator standardEnumerator0 = new StandardEnumerator();
      standardEnumerator0.insertElementAt((Object) null, 0);
      Object object0 = standardEnumerator0.nextElement();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StandardEnumerator standardEnumerator0 = new StandardEnumerator();
      Vector<String> vector0 = new Vector<String>(0);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, 0);
      standardEnumerator0.addElement(defaultTableModel0);
      boolean boolean0 = standardEnumerator0.isInEnumeration(defaultTableModel0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StandardEnumerator standardEnumerator0 = new StandardEnumerator();
      Vector<Object> vector0 = standardEnumerator0.getVector();
      vector0.trimToSize();
      Vector<Object> vector1 = standardEnumerator0.getVector();
      assertEquals(0, vector1.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StandardEnumerator standardEnumerator0 = new StandardEnumerator();
      standardEnumerator0.addElement((Object) null);
      standardEnumerator0.nextFigure();
      int int0 = standardEnumerator0.getCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StandardEnumerator standardEnumerator0 = new StandardEnumerator();
      standardEnumerator0.setCount((-2932));
      int int0 = standardEnumerator0.getCount();
      assertEquals((-2932), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StandardEnumerator standardEnumerator0 = new StandardEnumerator();
      // Undeclared exception!
      try { 
        standardEnumerator0.setVector((Vector<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.paragon.explorer.util.StandardEnumerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StandardEnumerator standardEnumerator0 = new StandardEnumerator();
      standardEnumerator0.addElement(standardEnumerator0);
      // Undeclared exception!
      try { 
        standardEnumerator0.nextFigure();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // de.paragon.explorer.util.StandardEnumerator cannot be cast to de.paragon.explorer.figure.Figure
         //
         verifyException("de.paragon.explorer.util.StandardEnumerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StandardEnumerator standardEnumerator0 = new StandardEnumerator();
      standardEnumerator0.setCount((-1295));
      // Undeclared exception!
      try { 
        standardEnumerator0.nextFigure();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StandardEnumerator standardEnumerator0 = new StandardEnumerator();
      standardEnumerator0.setCount((-99));
      // Undeclared exception!
      try { 
        standardEnumerator0.nextElement();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StandardEnumerator standardEnumerator0 = new StandardEnumerator();
      // Undeclared exception!
      try { 
        standardEnumerator0.insertElementAt((Object) null, 10);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10 > 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StandardEnumerator standardEnumerator0 = null;
      try {
        standardEnumerator0 = new StandardEnumerator((Vector<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.paragon.explorer.util.StandardEnumerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Stack<InformationFigure> stack0 = new Stack<InformationFigure>();
      InformationFigure informationFigure0 = mock(InformationFigure.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(informationFigure0).toString();
      stack0.add(informationFigure0);
      StandardEnumerator standardEnumerator0 = new StandardEnumerator(stack0);
      Vector<Object> vector0 = standardEnumerator0.getVector();
      standardEnumerator0.setVector(vector0);
      assertEquals(1, vector0.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StandardEnumerator standardEnumerator0 = new StandardEnumerator();
      int int0 = standardEnumerator0.getCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Stack<ExplorerFigure> stack0 = new Stack<ExplorerFigure>();
      StandardEnumerator standardEnumerator0 = new StandardEnumerator(stack0);
      standardEnumerator0.setCount(1601);
      standardEnumerator0.removeElement(stack0);
      assertEquals(0, stack0.size());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Stack<InformationFigure> stack0 = new Stack<InformationFigure>();
      StandardEnumerator standardEnumerator0 = new StandardEnumerator(stack0);
      // Undeclared exception!
      try { 
        standardEnumerator0.nextFigure();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class de.paragon.explorer.util.ResourceBundlePurchaser
         //
         verifyException("de.paragon.explorer.util.StandardEnumerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StandardEnumerator standardEnumerator0 = new StandardEnumerator();
      // Undeclared exception!
      try { 
        standardEnumerator0.nextElement();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class de.paragon.explorer.util.ResourceBundlePurchaser
         //
         verifyException("de.paragon.explorer.util.StandardEnumerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Stack<InformationFigure> stack0 = new Stack<InformationFigure>();
      InformationFigure informationFigure0 = mock(InformationFigure.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(informationFigure0).toString();
      InformationFigure informationFigure1 = mock(InformationFigure.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(informationFigure1).toString();
      stack0.add(informationFigure1);
      stack0.add(informationFigure0);
      StandardEnumerator standardEnumerator0 = new StandardEnumerator(stack0);
      Figure figure0 = standardEnumerator0.nextFigure();
      standardEnumerator0.nextFigure();
      standardEnumerator0.hasMoreElements();
      standardEnumerator0.removeElement(figure0);
      assertEquals(2, stack0.size());
      assertEquals(0, standardEnumerator0.getCount());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StandardEnumerator standardEnumerator0 = new StandardEnumerator();
      Object object0 = new Object();
      standardEnumerator0.setCount(692);
      standardEnumerator0.addElement(object0);
      assertEquals(692, standardEnumerator0.getCount());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StandardEnumerator standardEnumerator0 = new StandardEnumerator();
      Vector<String> vector0 = new Vector<String>(0);
      boolean boolean0 = standardEnumerator0.isInEnumeration(vector0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StandardEnumerator standardEnumerator0 = new StandardEnumerator();
      standardEnumerator0.insertElementAt((Object) null, 0);
      boolean boolean0 = standardEnumerator0.hasMoreElements();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StandardEnumerator standardEnumerator0 = new StandardEnumerator();
      standardEnumerator0.addElement(standardEnumerator0);
      Object object0 = standardEnumerator0.nextElement();
      assertSame(object0, standardEnumerator0);
  }
}
