/*
 * This file was automatically generated by EvoSuite
 * Sun Feb 17 13:08:40 GMT 2019
 */

package org.ow2.proactive.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.ow2.proactive.utils.Environment;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Environment_ESTest extends Environment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        Environment.unsetenv((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.ProcessEnvironment$Variable", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        Environment.setenv((String) null, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ow2.proactive.utils.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Map<String, String> map0 = Environment.getwinenv();
      Environment.POSIX environment_POSIX0 = Environment.getPOSIXinstance();
      environment_POSIX0.libc = (Object) map0;
      // Undeclared exception!
      try { 
        Environment.setenv("@yr*E", "|Tzc):\"5C", true);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.HashMap cannot be cast to org.ow2.proactive.utils.Environment$WinLibC
         //
         verifyException("org.ow2.proactive.utils.Environment$POSIX", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = Environment.setenv("%MXT|", "2_f{}IW=*", true);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Environment.POSIX environment_POSIX0 = new Environment.POSIX();
      Environment environment0 = new Environment();
      environment_POSIX0.libc = (Object) environment0;
      // Undeclared exception!
      try { 
        environment_POSIX0.unsetenv("&");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.ow2.proactive.utils.Environment cannot be cast to org.ow2.proactive.utils.Environment$WinLibC
         //
         verifyException("org.ow2.proactive.utils.Environment$POSIX", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Environment.POSIX environment_POSIX0 = Environment.getPOSIXinstance();
      int int0 = environment_POSIX0.unsetenv("et'i$PTWLBtzmy/(+3");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Environment.POSIX environment_POSIX0 = Environment.getPOSIXinstance();
      int int0 = environment_POSIX0.setenv("", "", 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Environment.POSIX environment_POSIX0 = new Environment.POSIX();
      Environment environment0 = new Environment();
      environment_POSIX0.libc = (Object) environment0;
      // Undeclared exception!
      try { 
        environment_POSIX0.setenv("-06-", "id[j$|", 1233);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.ow2.proactive.utils.Environment cannot be cast to org.ow2.proactive.utils.Environment$WinLibC
         //
         verifyException("org.ow2.proactive.utils.Environment$POSIX", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Map<String, String> map0 = Environment.getenv();
      assertEquals(273, map0.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = Environment.setenv("The list of prefixes must not be null", "The list of prefixes must not be null", false);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        Environment.setenv("==4~_&ccS$|?]e0", "==4~_&ccS$|?]e0", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Environment variable cannot contain '='
         //
         verifyException("org.ow2.proactive.utils.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Map<String, String> map0 = Environment.getwinenv();
      Environment.POSIX environment_POSIX0 = Environment.getPOSIXinstance();
      environment_POSIX0.libc = (Object) map0;
      // Undeclared exception!
      try { 
        Environment.unsetenv("lKqMLmenKcggFQ&th");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.HashMap cannot be cast to org.ow2.proactive.utils.Environment$WinLibC
         //
         verifyException("org.ow2.proactive.utils.Environment$POSIX", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = Environment.unsetenv("lKqMLmenKcggFQ&th");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Environment.main((String[]) null);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Map<String, String> map0 = Environment.getwinenv();
      Environment.POSIX environment_POSIX0 = Environment.getPOSIXinstance();
      environment_POSIX0.libc = (Object) map0;
      // Undeclared exception!
      try { 
        Environment.main((String[]) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.HashMap cannot be cast to org.ow2.proactive.utils.Environment$WinLibC
         //
         verifyException("org.ow2.proactive.utils.Environment$POSIX", e);
      }
  }
}
