/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 15:50:29 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.eteks.sweethome3d.model.CatalogLight;
import com.eteks.sweethome3d.model.HomeFurnitureGroup;
import com.eteks.sweethome3d.model.HomeLight;
import com.eteks.sweethome3d.model.HomePieceOfFurniture;
import com.eteks.sweethome3d.model.LightSource;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import java.math.BigDecimal;
import java.net.URL;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeFurnitureGroup_ESTest extends HomeFurnitureGroup_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      assertNotNull(temporaryURLContent0);
      
      LightSource[] lightSourceArray0 = new LightSource[8];
      float[][] floatArray0 = new float[3][2];
      float[] floatArray1 = new float[3];
      floatArray0[0] = floatArray1;
      floatArray0[1] = floatArray1;
      floatArray0[2] = floatArray1;
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      CatalogLight catalogLight0 = new CatalogLight("Y1Oc_\"d!6ts#M", "Y1Oc_\"d!6ts#M", "Y1Oc_\"d!6ts#M", temporaryURLContent0, temporaryURLContent0, 0.0F, 0.0F, 0.0F, 0.0F, true, lightSourceArray0, floatArray0, "Y1Oc_\"d!6ts#M", true, bigDecimal0, bigDecimal0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getGrade());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("Y1Oc_\"d!6ts#M", catalogLight0.getCreator());
      assertEquals("Y1Oc_\"d!6ts#M", catalogLight0.getDescription());
      assertEquals("Y1Oc_\"d!6ts#M", catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals("Y1Oc_\"d!6ts#M", catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertEquals(8, lightSourceArray0.length);
      assertEquals(3, floatArray0.length);
      assertNotNull(catalogLight0);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getGrade());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("Y1Oc_\"d!6ts#M", catalogLight0.getCreator());
      assertEquals("Y1Oc_\"d!6ts#M", catalogLight0.getDescription());
      assertEquals("Y1Oc_\"d!6ts#M", catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals("Y1Oc_\"d!6ts#M", catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals("Y1Oc_\"d!6ts#M", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals("Y1Oc_\"d!6ts#M", homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals("Y1Oc_\"d!6ts#M", homeLight0.getDescription());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(8, lightSourceArray0.length);
      assertEquals(3, floatArray0.length);
      assertNotNull(homeLight0);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeLight0);
      assertTrue(boolean0);
      assertEquals(1, linkedList0.size());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getGrade());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("Y1Oc_\"d!6ts#M", catalogLight0.getCreator());
      assertEquals("Y1Oc_\"d!6ts#M", catalogLight0.getDescription());
      assertEquals("Y1Oc_\"d!6ts#M", catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals("Y1Oc_\"d!6ts#M", catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals("Y1Oc_\"d!6ts#M", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals("Y1Oc_\"d!6ts#M", homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals("Y1Oc_\"d!6ts#M", homeLight0.getDescription());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(8, lightSourceArray0.length);
      assertEquals(3, floatArray0.length);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "Y1Oc_\"d!6ts#M");
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals("Y1Oc_\"d!6ts#M", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNotNull(homeFurnitureGroup0);
      
      homeFurnitureGroup0.setAngle((-2587.763F));
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals("Y1Oc_\"d!6ts#M", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.9094071F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      
      homeFurnitureGroup0.setModelMirrored(true);
      assertEquals(1, linkedList0.size());
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertEquals("Y1Oc_\"d!6ts#M", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertTrue(homeFurnitureGroup0.isResizable());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertEquals(0.9094071F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isVisible());
      assertNull(homeFurnitureGroup0.getShininess());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertTrue(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertNull(homeFurnitureGroup0.getColor());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertNull(homeFurnitureGroup0.getCurrency());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      assertNotNull(temporaryURLContent0);
      
      LightSource[] lightSourceArray0 = new LightSource[8];
      float[][] floatArray0 = new float[3][2];
      float[] floatArray1 = new float[3];
      floatArray0[0] = floatArray1;
      floatArray0[1] = floatArray1;
      floatArray0[2] = floatArray1;
      BigDecimal bigDecimal0 = new BigDecimal((long) 0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNotNull(bigDecimal0);
      
      CatalogLight catalogLight0 = new CatalogLight("Y1Oc_\"d!6ts#M", "Y1Oc_\"d!6ts#M", "Y1Oc_\"d!6ts#M", temporaryURLContent0, temporaryURLContent0, 0.0F, 0.0F, 0.0F, 0.0F, true, lightSourceArray0, floatArray0, "Y1Oc_\"d!6ts#M", true, bigDecimal0, bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("Y1Oc_\"d!6ts#M", catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertEquals("Y1Oc_\"d!6ts#M", catalogLight0.getId());
      assertNull(catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertEquals("Y1Oc_\"d!6ts#M", catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals("Y1Oc_\"d!6ts#M", catalogLight0.getCreator());
      assertNull(catalogLight0.getGrade());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(8, lightSourceArray0.length);
      assertEquals(3, floatArray0.length);
      assertNotNull(catalogLight0);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("Y1Oc_\"d!6ts#M", catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertEquals("Y1Oc_\"d!6ts#M", catalogLight0.getId());
      assertNull(catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertEquals("Y1Oc_\"d!6ts#M", catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals("Y1Oc_\"d!6ts#M", catalogLight0.getCreator());
      assertNull(catalogLight0.getGrade());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals("Y1Oc_\"d!6ts#M", homeLight0.getName());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals("Y1Oc_\"d!6ts#M", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals("Y1Oc_\"d!6ts#M", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(8, lightSourceArray0.length);
      assertEquals(3, floatArray0.length);
      assertNotNull(homeLight0);
      
      boolean boolean0 = linkedList0.add((HomePieceOfFurniture) homeLight0);
      assertTrue(boolean0);
      assertEquals(1, linkedList0.size());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("Y1Oc_\"d!6ts#M", catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertEquals("Y1Oc_\"d!6ts#M", catalogLight0.getId());
      assertNull(catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertEquals("Y1Oc_\"d!6ts#M", catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals("Y1Oc_\"d!6ts#M", catalogLight0.getCreator());
      assertNull(catalogLight0.getGrade());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals("Y1Oc_\"d!6ts#M", homeLight0.getName());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals("Y1Oc_\"d!6ts#M", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals("Y1Oc_\"d!6ts#M", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(8, lightSourceArray0.length);
      assertEquals(3, floatArray0.length);
      
      HomeFurnitureGroup homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "Y1Oc_\"d!6ts#M");
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertEquals(0.0F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("Y1Oc_\"d!6ts#M", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isMovable());
      assertNotNull(homeFurnitureGroup0);
      
      homeFurnitureGroup0.setWidth(3.4028235E38F);
      assertEquals(1, linkedList0.size());
      assertEquals(0.0F, homeFurnitureGroup0.getElevation(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getDepth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getAngle(), 0.01F);
      assertFalse(homeFurnitureGroup0.isDoorOrWindow());
      assertNull(homeFurnitureGroup0.getStaircaseCutOutShape());
      assertTrue(homeFurnitureGroup0.isResizable());
      assertEquals(0.0F, homeFurnitureGroup0.getNameAngle(), 0.01F);
      assertTrue(homeFurnitureGroup0.isDeformable());
      assertNull(homeFurnitureGroup0.getCurrency());
      assertFalse(homeFurnitureGroup0.isBackFaceShown());
      assertNull(homeFurnitureGroup0.getShininess());
      assertEquals(0.0F, homeFurnitureGroup0.getGroundElevation(), 0.01F);
      assertEquals(3.4028235E38F, homeFurnitureGroup0.getWidth(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getX(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup0.getY(), 0.01F);
      assertNull(homeFurnitureGroup0.getDescription());
      assertTrue(homeFurnitureGroup0.isTexturable());
      assertTrue(homeFurnitureGroup0.isVisible());
      assertEquals(0.0F, homeFurnitureGroup0.getNameYOffset(), 0.01F);
      assertFalse(homeFurnitureGroup0.isNameVisible());
      assertNull(homeFurnitureGroup0.getColor());
      assertEquals(0.0F, homeFurnitureGroup0.getHeight(), 0.01F);
      assertFalse(homeFurnitureGroup0.isModelMirrored());
      assertNull(homeFurnitureGroup0.getCatalogId());
      assertEquals("Y1Oc_\"d!6ts#M", homeFurnitureGroup0.getName());
      assertTrue(homeFurnitureGroup0.isMovable());
      
      HomeFurnitureGroup homeFurnitureGroup1 = new HomeFurnitureGroup(linkedList0, "Y1Oc_\"d!6ts#M");
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(Float.NaN, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(Float.NaN, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(Float.NaN, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals("Y1Oc_\"d!6ts#M", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertFalse(homeFurnitureGroup1.isModelMirrored());
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(Float.NaN, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNotNull(homeFurnitureGroup1);
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
      
      homeFurnitureGroup1.setModelMirrored(true);
      assertEquals(1, linkedList0.size());
      assertTrue(homeFurnitureGroup1.isVisible());
      assertEquals(0.0F, homeFurnitureGroup1.getNameYOffset(), 0.01F);
      assertTrue(homeFurnitureGroup1.isModelMirrored());
      assertTrue(homeFurnitureGroup1.isTexturable());
      assertNull(homeFurnitureGroup1.getShininess());
      assertEquals(Float.NaN, homeFurnitureGroup1.getY(), 0.01F);
      assertEquals(Float.NaN, homeFurnitureGroup1.getX(), 0.01F);
      assertNull(homeFurnitureGroup1.getCatalogId());
      assertEquals(0.0F, homeFurnitureGroup1.getNameAngle(), 0.01F);
      assertNull(homeFurnitureGroup1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeFurnitureGroup1.getElevation(), 0.01F);
      assertNull(homeFurnitureGroup1.getDescription());
      assertTrue(homeFurnitureGroup1.isResizable());
      assertEquals(Float.NaN, homeFurnitureGroup1.getDepth(), 0.01F);
      assertEquals("Y1Oc_\"d!6ts#M", homeFurnitureGroup1.getName());
      assertEquals(0.0F, homeFurnitureGroup1.getAngle(), 0.01F);
      assertEquals(0.0F, homeFurnitureGroup1.getGroundElevation(), 0.01F);
      assertTrue(homeFurnitureGroup1.isMovable());
      assertEquals(0.0F, homeFurnitureGroup1.getNameXOffset(), 0.01F);
      assertNull(homeFurnitureGroup1.getColor());
      assertEquals(0.0F, homeFurnitureGroup1.getHeight(), 0.01F);
      assertEquals(Float.NaN, homeFurnitureGroup1.getWidth(), 0.01F);
      assertFalse(homeFurnitureGroup1.isDoorOrWindow());
      assertTrue(homeFurnitureGroup1.isDeformable());
      assertFalse(homeFurnitureGroup1.isNameVisible());
      assertFalse(homeFurnitureGroup1.isBackFaceShown());
      assertNull(homeFurnitureGroup1.getCurrency());
      assertNotSame(homeFurnitureGroup1, homeFurnitureGroup0);
      assertFalse(homeFurnitureGroup1.equals((Object)homeFurnitureGroup0));
  }
}
