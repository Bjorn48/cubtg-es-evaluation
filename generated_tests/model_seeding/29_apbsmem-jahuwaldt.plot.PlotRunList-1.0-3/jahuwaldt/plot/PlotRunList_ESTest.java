/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 25 17:32:47 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jahuwaldt.plot.BoxLLSymbol;
import jahuwaldt.plot.BoxURSymbol;
import jahuwaldt.plot.PlotDatum;
import jahuwaldt.plot.PlotRun;
import jahuwaldt.plot.PlotRunList;
import jahuwaldt.plot.PlotSymbol;
import jahuwaldt.plot.SquareSymbol;
import jahuwaldt.plot.TabLSymbol;
import jahuwaldt.plot.TabUpSymbol;
import jahuwaldt.plot.ThinRect1Symbol;
import jahuwaldt.plot.XSymbol;
import java.awt.Color;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.PriorityQueue;
import javax.swing.DropMode;
import javax.swing.JWindow;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlotRunList_ESTest extends PlotRunList_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PlotRunList plotRunList0 = new PlotRunList();
      plotRunList0.add(0, (Object) null);
      assertEquals(1, plotRunList0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PlotRun[] plotRunArray0 = new PlotRun[3];
      PlotRun plotRun0 = new PlotRun();
      TabUpSymbol tabUpSymbol0 = new TabUpSymbol();
      plotRunArray0[0] = plotRun0;
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      // Undeclared exception!
      try { 
        plotRunList0.setPlotSymbol(tabUpSymbol0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotRunList", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PlotRun[] plotRunArray0 = new PlotRun[4];
      double[] doubleArray0 = new double[2];
      XSymbol xSymbol0 = new XSymbol();
      PlotRun plotRun0 = new PlotRun(doubleArray0, doubleArray0, true, xSymbol0);
      plotRunArray0[0] = plotRun0;
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      // Undeclared exception!
      try { 
        plotRunList0.setLineColor((Color) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotRunList", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PlotRunList plotRunList0 = new PlotRunList();
      int int0 = plotRunList0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PlotRun[] plotRunArray0 = new PlotRun[2];
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      int int0 = plotRunList0.size();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PlotRun[] plotRunArray0 = new PlotRun[4];
      PriorityQueue<Integer> priorityQueue0 = new PriorityQueue<Integer>();
      PlotRun plotRun0 = new PlotRun(priorityQueue0);
      plotRunArray0[0] = plotRun0;
      plotRunArray0[2] = plotRunArray0[0];
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      Object object0 = plotRunList0.set(2, plotRunArray0[2]);
      assertNotNull(object0);
      assertEquals(4, plotRunList0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PlotRun[] plotRunArray0 = new PlotRun[36];
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      plotRunList0.remove(0);
      assertEquals(35, plotRunList0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PlotRun[] plotRunArray0 = new PlotRun[4];
      PriorityQueue<Integer> priorityQueue0 = new PriorityQueue<Integer>();
      PlotRun plotRun0 = new PlotRun(priorityQueue0);
      plotRunArray0[2] = plotRun0;
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      plotRunList0.remove(2);
      assertEquals(3, plotRunList0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PlotRun[] plotRunArray0 = new PlotRun[2];
      PlotRun plotRun0 = new PlotRun();
      plotRunArray0[0] = plotRun0;
      double[] doubleArray0 = new double[1];
      BoxURSymbol boxURSymbol0 = new BoxURSymbol();
      PlotRun plotRun1 = new PlotRun(doubleArray0, doubleArray0, false, boxURSymbol0);
      plotRunArray0[1] = plotRun1;
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      double double0 = plotRunList0.getMinY();
      assertEquals(2, plotRunList0.size());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PlotRun[] plotRunArray0 = new PlotRun[6];
      LinkedList<JWindow> linkedList0 = new LinkedList<JWindow>();
      PlotRun plotRun0 = new PlotRun(linkedList0);
      plotRunArray0[0] = plotRun0;
      PlotDatum[] plotDatumArray0 = new PlotDatum[2];
      ThinRect1Symbol thinRect1Symbol0 = new ThinRect1Symbol();
      PlotDatum plotDatum0 = new PlotDatum((-4150.78), (-4150.78), true, thinRect1Symbol0);
      plotDatumArray0[0] = plotDatum0;
      plotDatumArray0[1] = plotDatum0;
      PlotRun plotRun1 = new PlotRun(plotDatumArray0);
      plotRunArray0[1] = plotRun1;
      plotRunArray0[2] = plotRunArray0[0];
      plotRunArray0[3] = plotRunArray0[1];
      plotRunArray0[4] = plotRunArray0[0];
      plotRunArray0[5] = plotRunArray0[4];
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      double double0 = plotRunList0.getMinY();
      assertEquals((-4150.78), double0, 0.01);
      assertEquals(6, plotRunList0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = (-1.0);
      PlotRun plotRun0 = new PlotRun(doubleArray0, doubleArray0, false, (PlotSymbol) null);
      PlotRunList plotRunList0 = new PlotRunList(plotRun0);
      plotRunList0.add((Object) plotRun0);
      double double0 = plotRunList0.getMinX();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PlotRun[] plotRunArray0 = new PlotRun[7];
      double[] doubleArray0 = new double[0];
      TabLSymbol tabLSymbol0 = new TabLSymbol();
      PlotRun plotRun0 = new PlotRun(doubleArray0, doubleArray0, true, tabLSymbol0);
      plotRunArray0[1] = plotRun0;
      plotRunArray0[2] = plotRunArray0[1];
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      Object object0 = plotRunList0.get(2);
      assertNotNull(object0);
      assertEquals(7, plotRunList0.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PlotRunList plotRunList0 = new PlotRunList();
      // Undeclared exception!
      try { 
        plotRunList0.set(406, plotRunList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // jahuwaldt.plot.PlotRunList cannot be cast to jahuwaldt.plot.PlotRun
         //
         verifyException("jahuwaldt.plot.PlotRunList", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PlotRunList plotRunList0 = new PlotRunList();
      PlotRun plotRun0 = new PlotRun();
      // Undeclared exception!
      try { 
        plotRunList0.set((-1), plotRun0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PlotRunList plotRunList0 = new PlotRunList();
      // Undeclared exception!
      try { 
        plotRunList0.remove((-849));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PlotRun[] plotRunArray0 = new PlotRun[36];
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      // Undeclared exception!
      try { 
        plotRunList0.getMinX();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotRunList", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PlotRunList plotRunList0 = new PlotRunList();
      plotRunList0.add((Object) null);
      // Undeclared exception!
      try { 
        plotRunList0.getMaxY();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotRunList", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PlotRun[] plotRunArray0 = new PlotRun[1];
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      // Undeclared exception!
      try { 
        plotRunList0.getMaxX();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotRunList", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PlotRunList plotRunList0 = new PlotRunList();
      // Undeclared exception!
      try { 
        plotRunList0.get((-3401));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PlotRun[] plotRunArray0 = new PlotRun[36];
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      // Undeclared exception!
      try { 
        plotRunList0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotRunList", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PlotRunList plotRunList0 = new PlotRunList();
      // Undeclared exception!
      try { 
        plotRunList0.add(2, (Object) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PlotRun[] plotRunArray0 = new PlotRun[3];
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      DropMode dropMode0 = DropMode.ON_OR_INSERT;
      // Undeclared exception!
      try { 
        plotRunList0.add((-1), (Object) dropMode0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.swing.DropMode cannot be cast to jahuwaldt.plot.PlotRun
         //
         verifyException("jahuwaldt.plot.PlotRunList", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PlotRunList plotRunList0 = null;
      try {
        plotRunList0 = new PlotRunList((PlotRun[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotRunList", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PlotRunList plotRunList0 = null;
      try {
        plotRunList0 = new PlotRunList((Collection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotRunList", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      PlotRun plotRun0 = new PlotRun(doubleArray0, doubleArray0, false, (PlotSymbol) null);
      PlotRunList plotRunList0 = new PlotRunList(plotRun0);
      plotRunList0.add((Object) plotRun0);
      plotRunList0.clone();
      assertEquals(1, plotRunList0.size());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PlotRunList plotRunList0 = new PlotRunList();
      plotRunList0.setLineColor((Color) null);
      assertEquals(0, plotRunList0.size());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PlotRunList plotRunList0 = new PlotRunList();
      plotRunList0.setPlotSymbol((PlotSymbol) null);
      assertEquals(0, plotRunList0.size());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PlotRun[] plotRunArray0 = new PlotRun[2];
      double[] doubleArray0 = new double[1];
      BoxLLSymbol boxLLSymbol0 = new BoxLLSymbol();
      PlotRun plotRun0 = new PlotRun(doubleArray0, doubleArray0, false, boxLLSymbol0);
      plotRunArray0[0] = plotRun0;
      plotRunArray0[1] = plotRun0;
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      double double0 = plotRunList0.getMaxY();
      assertEquals(4.9E-324, double0, 0.01);
      assertEquals(2, plotRunList0.size());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PlotRun[] plotRunArray0 = new PlotRun[2];
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      // Undeclared exception!
      try { 
        plotRunList0.getMinY();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotRunList", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PlotRunList plotRunList0 = new PlotRunList();
      double double0 = plotRunList0.getMinY();
      assertEquals(1.7976931348623157E308, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PlotRun[] plotRunArray0 = new PlotRun[3];
      PlotRun plotRun0 = new PlotRun();
      plotRunArray0[0] = plotRun0;
      plotRunArray0[1] = plotRun0;
      plotRunArray0[2] = plotRunArray0[0];
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      double double0 = plotRunList0.getMaxX();
      assertEquals(4.9E-324, double0, 0.01);
      assertEquals(3, plotRunList0.size());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      PlotRun plotRun0 = new PlotRun(doubleArray0, doubleArray0, false, (PlotSymbol) null);
      PlotRunList plotRunList0 = new PlotRunList(plotRun0);
      double double0 = plotRunList0.getMinX();
      assertEquals(1.7976931348623157E308, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinkedHashSet<PlotRun> linkedHashSet0 = new LinkedHashSet<PlotRun>();
      double[] doubleArray0 = new double[2];
      SquareSymbol squareSymbol0 = new SquareSymbol();
      PlotRun plotRun0 = new PlotRun(doubleArray0, doubleArray0, false, squareSymbol0);
      linkedHashSet0.add(plotRun0);
      PlotRunList plotRunList0 = new PlotRunList(linkedHashSet0);
      assertEquals(1, plotRunList0.size());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PlotRunList plotRunList0 = new PlotRunList();
      PlotRunList plotRunList1 = new PlotRunList(plotRunList0);
      assertTrue(plotRunList1.equals((Object)plotRunList0));
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PlotRunList plotRunList0 = new PlotRunList();
      plotRunList0.clear();
      assertEquals(0, plotRunList0.size());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PlotRun plotRun0 = new PlotRun();
      PlotRunList plotRunList0 = new PlotRunList(plotRun0);
      // Undeclared exception!
      try { 
        plotRunList0.set(1494, plotRun0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1494, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      PlotRun plotRun0 = new PlotRun(doubleArray0, doubleArray0, false, (PlotSymbol) null);
      PlotRunList plotRunList0 = new PlotRunList(plotRun0);
      plotRunList0.add((Object) plotRun0);
      assertEquals(1, plotRunList0.size());
      
      double double0 = plotRunList0.getMinX();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PlotRun[] plotRunArray0 = new PlotRun[3];
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      plotRunList0.iterator();
      assertEquals(3, plotRunList0.size());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PlotRunList plotRunList0 = new PlotRunList();
      // Undeclared exception!
      try { 
        plotRunList0.remove(1721);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1721, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PlotRunList plotRunList0 = new PlotRunList();
      // Undeclared exception!
      try { 
        plotRunList0.get(1082);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1082, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
