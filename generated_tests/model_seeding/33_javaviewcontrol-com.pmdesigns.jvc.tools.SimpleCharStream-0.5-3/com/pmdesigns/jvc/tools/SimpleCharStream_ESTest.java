/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 10:47:01 GMT 2019
 */

package com.pmdesigns.jvc.tools;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.pmdesigns.jvc.tools.SimpleCharStream;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.Reader;
import java.io.StringReader;
import java.io.UnsupportedEncodingException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleCharStream_ESTest extends SimpleCharStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleCharStream simpleCharStream0 = new SimpleCharStream((Reader) null, 773, 0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2~~Z");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 8, (-2966));
      simpleCharStream0.readChar();
      simpleCharStream0.GetImage();
      simpleCharStream0.GetSuffix(8);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.mark(1);
      StringReader stringReader1 = new StringReader("w(oyBlB");
      stringReader0.ready();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 1, 1);
      simpleCharStream0.GetSuffix((byte)0);
      stringReader0.markSupported();
      simpleCharStream0.inBuf = (-2214);
      try { 
        simpleCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("[}Q4Ox0L=");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader1, 1, 4089);
      simpleCharStream0.GetSuffix(3294);
      simpleCharStream0.getBeginColumn();
      // Undeclared exception!
      try { 
        simpleCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.close();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, (-1), (-1));
      // Undeclared exception!
      try { 
        simpleCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("G ");
      stringReader0.markSupported();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 2340, 4096, 1);
      simpleCharStream0.inBuf = 0;
      char[] charArray0 = new char[9];
      charArray0[0] = '%';
      charArray0[1] = 'e';
      charArray0[2] = 'P';
      charArray0[3] = '3';
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)71;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)105;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-105);
      byteArray0[6] = (byte)10;
      byteArray0[7] = (byte) (-36);
      byteArray0[8] = (byte)18;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      charArray0[4] = 'F';
      charArray0[5] = 'n';
      charArray0[6] = 'r';
      stringReader0.mark(1);
      stringReader0.read(charArray0);
      charArray0[7] = '?';
      charArray0[8] = 'i';
      stringReader0.read(charArray0);
      stringReader0.reset();
      simpleCharStream0.GetSuffix(0);
      // Undeclared exception!
      try { 
        simpleCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      StringReader stringReader0 = new StringReader("C# 2y;lQ");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, (byte)0, 2048);
      simpleCharStream0.BeginToken();
      stringReader0.skip(0);
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("[Pic{P Z");
      stringReader1.ready();
      StringReader stringReader2 = new StringReader("N@;Jt1BK|l5u4r3I");
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader1, 1863, (-1));
      simpleCharStream0.BeginToken();
      simpleCharStream0.getEndColumn();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, (-2966), (byte)0);
      try { 
        simpleCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      try { 
        simpleCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleCharStream simpleCharStream0 = new SimpleCharStream((Reader) null, (-1159), 243, 243);
      simpleCharStream0.GetImage();
      // Undeclared exception!
      try { 
        simpleCharStream0.UpdateLineColumn('1');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)93;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0, (byte)93, (byte)0);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream0, (-18), (byte)0, (byte)93);
      simpleCharStream0.adjustBeginLineColumn(1630, 4061);
      simpleCharStream0.readChar();
      simpleCharStream0.adjustBeginLineColumn((-1393), 153);
      simpleCharStream0.getEndLine();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.mark(1);
      stringReader0.ready();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 4084, 75, 75);
      simpleCharStream0.Done();
      // Undeclared exception!
      try { 
        simpleCharStream0.getEndLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      StringReader stringReader0 = new StringReader("C# 2y;lQ");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, (byte)0, 2048);
      StringReader stringReader1 = new StringReader("%o3");
      simpleCharStream0.ReInit((Reader) stringReader1);
      simpleCharStream0.BeginToken();
      stringReader0.skip(0);
      stringReader0.markSupported();
      simpleCharStream0.ExpandBuff(true);
      simpleCharStream0.UpdateLineColumn('%');
      simpleCharStream0.Done();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      int int0 = 4096;
      pipedInputStream0.close();
      try { 
        simpleCharStream0.ReInit((InputStream) pipedInputStream0, "");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.mark(1);
      stringReader0.ready();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.bufpos = 0;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-13);
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte) (-32);
      byteArray0[3] = (byte)106;
      byteArray0[4] = (byte) (-22);
      byteArray0[5] = (byte)30;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, (byte)8);
      byteArrayInputStream0.mark((byte) (-32));
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream0, (byte)8, 0, (byte)30);
      simpleCharStream1.readChar();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.mark(1);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.bufpos = 0;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-13);
      byteArray0[1] = (byte)8;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-13), 2702);
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(byteArrayInputStream0, 2599, (byte) (-32), 492);
      try { 
        simpleCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e>ul{rp9g~l:NRD'");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 4066, (-2717));
      simpleCharStream0.getBeginLine();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = 1;
      SimpleCharStream simpleCharStream0 = null;
      try {
        simpleCharStream0 = new SimpleCharStream((InputStream) null, "&6");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.mark(1);
      stringReader0.ready();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0);
      simpleCharStream0.bufpos = 0;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-13);
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte) (-32);
      byteArray0[3] = (byte)106;
      byteArray0[4] = (byte) (-22);
      byteArray0[5] = (byte)30;
      byteArray0[6] = (byte)0;
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(stringReader0, (byte) (-1), 0);
      simpleCharStream0.GetSuffix((byte)8);
      simpleCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-35), 2479);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0, (byte)52, (byte)52, 0);
      // Undeclared exception!
      try { 
        simpleCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      InputStream inputStream0 = null;
      byte byte0 = (byte)34;
      byte byte1 = (byte)51;
      String string0 = "";
      StringReader stringReader0 = new StringReader("1xm;Pwb gfKh//4");
      int int0 = 2048;
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, 2048, 1598);
      simpleCharStream0.GetSuffix((byte)34);
      SimpleCharStream simpleCharStream1 = null;
      try {
        simpleCharStream1 = new SimpleCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)0;
      StringReader stringReader0 = new StringReader("");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, (byte)0, 700, 773);
      simpleCharStream0.prevCharIsCR = true;
      simpleCharStream0.GetImage();
      Reader reader0 = mock(Reader.class, new ViolatedAssumptionAnswer());
      SimpleCharStream simpleCharStream1 = new SimpleCharStream(reader0, 0, 0);
      simpleCharStream1.GetImage();
      simpleCharStream1.getBeginLine();
      simpleCharStream1.backup(773);
      simpleCharStream1.getBeginColumn();
      simpleCharStream1.getEndLine();
      simpleCharStream1.getEndColumn();
      simpleCharStream1.UpdateLineColumn('1');
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)93;
      byteArray0[1] = (byte)93;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-1), 2473);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0, (byte)93, (byte)93, 0);
      char[] charArray0 = simpleCharStream0.buffer;
      // Undeclared exception!
      try { 
        simpleCharStream0.getBeginColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte) (-32);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2514, (byte)106);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.mark((byte)30);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pipedInputStream0, (byte) (-22), 1527, (byte)106);
      simpleCharStream0.backup((byte)8);
      simpleCharStream0.readChar();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      StringReader stringReader0 = new StringReader("C# 2y;lQ");
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(stringReader0, (byte)0, 2048);
      simpleCharStream0.BeginToken();
      stringReader0.skip(0);
      simpleCharStream0.ExpandBuff(false);
      simpleCharStream0.UpdateLineColumn('C');
      simpleCharStream0.Done();
      int int0 = 4063;
      simpleCharStream0.ReInit((Reader) stringReader0, 13, 4063);
      StringReader stringReader1 = new StringReader("C# 2y;lQ");
      SimpleCharStream simpleCharStream1 = null;
      try {
        simpleCharStream1 = new SimpleCharStream(stringReader1, 4063, 13, (-1992));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pipedInputStream0);
      try { 
        simpleCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)93;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(byteArrayInputStream0, (byte)93, (byte)93);
      simpleCharStream0.adjustBeginLineColumn((byte)93, (byte)93);
  }
}
