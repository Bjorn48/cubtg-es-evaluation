/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 22:47:55 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import jahuwaldt.plot.BoxLLSymbol;
import jahuwaldt.plot.BoxLRSymbol;
import jahuwaldt.plot.DiamondSymbol;
import jahuwaldt.plot.PlotDatum;
import jahuwaldt.plot.SquareSymbol;
import jahuwaldt.plot.TabUpSymbol;
import java.awt.Color;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlotDatum_ESTest extends PlotDatum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DiamondSymbol diamondSymbol0 = new DiamondSymbol();
      PlotDatum plotDatum0 = new PlotDatum((-2118.873580338), (-2118.873580338), true, diamondSymbol0);
      plotDatum0.setYError(482.40481762170015);
      double double0 = plotDatum0.getYError();
      assertEquals(482.40481762170015, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DiamondSymbol diamondSymbol0 = new DiamondSymbol();
      PlotDatum plotDatum0 = new PlotDatum((-2597.396948455641), (-2597.396948455641), true, diamondSymbol0);
      assertEquals(0.0, plotDatum0.getYError(), 0.01);
      
      plotDatum0.setYError((-2597.396948455641));
      double double0 = plotDatum0.getYError();
      assertEquals((-2597.396948455641), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TabUpSymbol tabUpSymbol0 = new TabUpSymbol();
      PlotDatum plotDatum0 = new PlotDatum((-1997.256972408486), 0.0, true, tabUpSymbol0);
      double double0 = plotDatum0.getY();
      assertEquals(0.0, double0, 0.01);
      assertEquals((-1997.256972408486), plotDatum0.x, 0.01);
      assertTrue(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TabUpSymbol tabUpSymbol0 = new TabUpSymbol();
      PlotDatum plotDatum0 = new PlotDatum((-6180.455166939784), 163.0, false, tabUpSymbol0);
      plotDatum0.setY((-2246.08));
      double double0 = plotDatum0.getY();
      assertEquals((-2246.08), plotDatum0.y, 0.01);
      assertEquals((-2246.08), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, true);
      double double0 = plotDatum0.getX();
      assertFalse(plotDatum0.hasErrorBar());
      assertTrue(plotDatum0.connected());
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BoxLLSymbol boxLLSymbol0 = new BoxLLSymbol();
      PlotDatum plotDatum0 = new PlotDatum((-9.9434069), (-9.9434069), false, boxLLSymbol0);
      double double0 = plotDatum0.getX();
      assertFalse(plotDatum0.connected());
      assertEquals((-9.9434069), plotDatum0.y, 0.01);
      assertEquals((-9.9434069), double0, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-1322.0404199794211), (-400.41150792), true);
      plotDatum0.getPlotSymbol();
      assertEquals((-1322.0404199794211), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-400.41150792), plotDatum0.y, 0.01);
      assertTrue(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TabUpSymbol tabUpSymbol0 = new TabUpSymbol();
      tabUpSymbol0.setSize(0);
      PlotDatum plotDatum0 = new PlotDatum((-6180.455166939784), 163.0, false, tabUpSymbol0);
      plotDatum0.getPlotSymbol();
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-6180.455166939784), plotDatum0.x, 0.01);
      assertEquals(163.0, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SquareSymbol squareSymbol0 = new SquareSymbol();
      PlotDatum plotDatum0 = new PlotDatum(1777.76286651, (-1.0), false, squareSymbol0);
      squareSymbol0.setSize((-1));
      plotDatum0.getPlotSymbol();
      assertEquals((-1.0), plotDatum0.y, 0.01);
      assertFalse(plotDatum0.connected());
      assertEquals(1777.76286651, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, (-1576.0), true);
      Color color0 = Color.GRAY;
      plotDatum0.setLineColor(color0);
      Color color1 = plotDatum0.getLineColor();
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-1576.0), plotDatum0.y, 0.01);
      assertTrue(plotDatum0.connected());
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertEquals(128, color1.getRed());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 904.6503216066943, false);
      boolean boolean0 = plotDatum0.connected();
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(boolean0);
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertEquals(904.6503216066943, plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SquareSymbol squareSymbol0 = new SquareSymbol();
      PlotDatum plotDatum0 = new PlotDatum(1777.76286651, (-1.0), false, squareSymbol0);
      PlotDatum plotDatum1 = (PlotDatum)plotDatum0.clone();
      assertEquals(1777.76286651, plotDatum1.x, 0.01);
      assertEquals((-1.0), plotDatum1.y, 0.01);
      assertNotSame(plotDatum1, plotDatum0);
      assertFalse(plotDatum1.hasErrorBar());
      assertFalse(plotDatum1.connected());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, (-1782.0), false);
      PlotDatum plotDatum1 = (PlotDatum)plotDatum0.clone();
      assertNotSame(plotDatum1, plotDatum0);
      assertFalse(plotDatum1.connected());
      assertFalse(plotDatum1.hasErrorBar());
      assertEquals((-1782.0), plotDatum1.y, 0.01);
      assertEquals(0.0, plotDatum1.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(2087.429131182081, 2087.429131182081, false);
      plotDatum0.setLineColor((Color) null);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(2087.429131182081, plotDatum0.y, 0.01);
      assertEquals(2087.429131182081, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, true);
      plotDatum0.setYError(0.0);
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertEquals(0.0, plotDatum0.getYError(), 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertTrue(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-1322.0404199794211), (-400.41150792), true);
      plotDatum0.setYError(920.7601576348628);
      boolean boolean0 = plotDatum0.hasErrorBar();
      assertEquals(920.7601576348628, plotDatum0.getYError(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SquareSymbol squareSymbol0 = new SquareSymbol();
      PlotDatum plotDatum0 = new PlotDatum(1777.76286651, (-1.0), false, squareSymbol0);
      double double0 = plotDatum0.getYError();
      assertEquals((-1.0), plotDatum0.y, 0.01);
      assertEquals(0.0, double0, 0.01);
      assertFalse(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(1777.76286651, plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1.0, 1.0, true);
      boolean boolean0 = plotDatum0.connected();
      assertFalse(plotDatum0.hasErrorBar());
      assertTrue(boolean0);
      assertEquals(1.0, plotDatum0.x, 0.01);
      assertEquals(1.0, plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-1322.0404199794211), (-400.41150792), true);
      boolean boolean0 = plotDatum0.hasErrorBar();
      assertEquals((-1322.0404199794211), plotDatum0.x, 0.01);
      assertFalse(boolean0);
      assertTrue(plotDatum0.connected());
      assertEquals((-400.41150792), plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SquareSymbol squareSymbol0 = new SquareSymbol();
      PlotDatum plotDatum0 = new PlotDatum(1777.76286651, (-1.0), false, squareSymbol0);
      plotDatum0.setX((-833.0));
      assertEquals((-833.0), plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TabUpSymbol tabUpSymbol0 = new TabUpSymbol();
      PlotDatum plotDatum0 = new PlotDatum((-6180.455166939784), 163.0, false, tabUpSymbol0);
      assertFalse(plotDatum0.connected());
      
      plotDatum0.setConnected(true);
      assertTrue(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TabUpSymbol tabUpSymbol0 = new TabUpSymbol();
      PlotDatum plotDatum0 = new PlotDatum((-6180.455166939784), 163.0, false, tabUpSymbol0);
      plotDatum0.getPlotSymbol();
      assertEquals((-6180.455166939784), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(plotDatum0.connected());
      assertEquals(163.0, plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1.0, 1.0, false);
      double double0 = plotDatum0.getY();
      assertFalse(plotDatum0.connected());
      assertEquals(1.0, plotDatum0.x, 0.01);
      assertEquals(1.0, double0, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.6562185006233969, 0.6562185006233969, false);
      BoxLRSymbol boxLRSymbol0 = new BoxLRSymbol();
      plotDatum0.setPlotSymbol(boxLRSymbol0);
      assertEquals(0.6562185006233969, plotDatum0.x, 0.01);
      assertEquals(0.6562185006233969, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.239, 0.239, true);
      plotDatum0.getLineColor();
      assertEquals(0.239, plotDatum0.y, 0.01);
      assertEquals(0.239, plotDatum0.x, 0.01);
      assertTrue(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(2788.763888068976, 0L, false);
      double double0 = plotDatum0.getX();
      assertEquals(2788.763888068976, double0, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(plotDatum0.connected());
      assertEquals(0.0, plotDatum0.y, 0.01);
  }
}
