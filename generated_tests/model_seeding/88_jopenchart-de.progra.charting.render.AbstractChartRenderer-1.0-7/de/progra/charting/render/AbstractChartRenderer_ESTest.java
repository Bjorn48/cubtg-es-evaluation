/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 25 22:51:59 GMT 2019
 */

package de.progra.charting.render;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.progra.charting.CoordSystem;
import de.progra.charting.PointToPixelTranslator;
import de.progra.charting.model.ChartDataModel;
import de.progra.charting.model.DefaultChartDataModel;
import de.progra.charting.model.ObjectChartDataModel;
import de.progra.charting.render.BarChartRenderer;
import de.progra.charting.render.PieChartRenderer;
import de.progra.charting.render.PlotChartRenderer;
import de.progra.charting.render.RadarChartRenderer;
import de.progra.charting.render.RowColorModel;
import de.progra.charting.render.StackedBarChartRenderer;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.geom.AffineTransform;
import java.text.DecimalFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractChartRenderer_ESTest extends AbstractChartRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      DecimalFormat decimalFormat0 = coordSystem0.getYDecimalFormat();
      CoordSystem coordSystem1 = new CoordSystem(defaultChartDataModel0, decimalFormat0, false, false, false);
      StackedBarChartRenderer stackedBarChartRenderer0 = new StackedBarChartRenderer(coordSystem1, defaultChartDataModel0);
      stackedBarChartRenderer0.setCoordSystem(coordSystem0);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      RadarChartRenderer radarChartRenderer0 = new RadarChartRenderer(coordSystem0, defaultChartDataModel0);
      radarChartRenderer0.setChartDataModel((ChartDataModel) null);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      BarChartRenderer barChartRenderer0 = new BarChartRenderer(coordSystem0, defaultChartDataModel0);
      AffineTransform affineTransform0 = barChartRenderer0.getTransform(1);
      assertNull(affineTransform0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      StackedBarChartRenderer stackedBarChartRenderer0 = new StackedBarChartRenderer(coordSystem0, defaultChartDataModel0);
      CoordSystem coordSystem1 = stackedBarChartRenderer0.getCoordSystem();
      assertTrue(coordSystem1.isPaintLabels());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      DecimalFormat decimalFormat0 = coordSystem0.getYDecimalFormat();
      CoordSystem coordSystem1 = new CoordSystem(defaultChartDataModel0, decimalFormat0, false, false, false);
      StackedBarChartRenderer stackedBarChartRenderer0 = new StackedBarChartRenderer(coordSystem1, defaultChartDataModel0);
      CoordSystem coordSystem2 = stackedBarChartRenderer0.getCoordSystem();
      assertEquals(15, coordSystem2.ARROWLENGTH);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer((ChartDataModel) null);
      ChartDataModel chartDataModel0 = pieChartRenderer0.getChartDataModel();
      assertNull(chartDataModel0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      PlotChartRenderer plotChartRenderer0 = new PlotChartRenderer(coordSystem0, defaultChartDataModel0);
      ChartDataModel chartDataModel0 = plotChartRenderer0.getChartDataModel();
      assertFalse(chartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      Rectangle rectangle0 = coordSystem0.getInnerBounds();
      PlotChartRenderer plotChartRenderer0 = new PlotChartRenderer(coordSystem0, defaultChartDataModel0);
      plotChartRenderer0.setBounds(rectangle0);
      Rectangle rectangle1 = plotChartRenderer0.getBounds();
      assertEquals(2147483599, rectangle1.height);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      StackedBarChartRenderer stackedBarChartRenderer0 = new StackedBarChartRenderer(coordSystem0, defaultChartDataModel0);
      Rectangle rectangle0 = new Rectangle();
      stackedBarChartRenderer0.setBounds(rectangle0);
      Rectangle rectangle1 = stackedBarChartRenderer0.getBounds();
      assertEquals(0.0, rectangle1.getHeight(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer((ChartDataModel) null);
      // Undeclared exception!
      try { 
        pieChartRenderer0.renderChart((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.render.PieChartRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RadarChartRenderer radarChartRenderer0 = new RadarChartRenderer((ChartDataModel) null);
      Rectangle rectangle0 = radarChartRenderer0.getBounds();
      assertNull(rectangle0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer((ChartDataModel) null);
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      PointToPixelTranslator pointToPixelTranslator0 = coordSystem0.getPointToPixelTranslator(0);
      pieChartRenderer0.setPointToPixelTranslator(pointToPixelTranslator0);
      PointToPixelTranslator pointToPixelTranslator1 = pieChartRenderer0.getPointToPixelTranslator();
      assertSame(pointToPixelTranslator1, pointToPixelTranslator0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer((ChartDataModel) null);
      PointToPixelTranslator pointToPixelTranslator0 = pieChartRenderer0.getPointToPixelTranslator();
      assertNull(pointToPixelTranslator0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer((ChartDataModel) null);
      Dimension dimension0 = pieChartRenderer0.getPreferredSize();
      assertEquals(Integer.MIN_VALUE, dimension0.height);
      assertEquals(Integer.MIN_VALUE, dimension0.width);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer((ChartDataModel) null);
      pieChartRenderer0.setRowColorModel((RowColorModel) null);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer((ChartDataModel) null);
      // Undeclared exception!
      try { 
        pieChartRenderer0.getTransform(1693);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.render.AbstractChartRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      StackedBarChartRenderer stackedBarChartRenderer0 = new StackedBarChartRenderer(coordSystem0, objectChartDataModel0, Integer.MAX_VALUE);
      ChartDataModel chartDataModel0 = stackedBarChartRenderer0.getChartDataModel();
      assertSame(objectChartDataModel0, chartDataModel0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer((ChartDataModel) null);
      // Undeclared exception!
      try { 
        pieChartRenderer0.render((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.render.AbstractChartRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer((ChartDataModel) null);
      RowColorModel rowColorModel0 = pieChartRenderer0.getRowColorModel();
      assertNull(rowColorModel0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer((ChartDataModel) null);
      CoordSystem coordSystem0 = pieChartRenderer0.getCoordSystem();
      assertNull(coordSystem0);
  }
}
