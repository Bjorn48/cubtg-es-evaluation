/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 16:25:10 GMT 2019
 */

package jigl.image.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import javax.swing.JLayeredPane;
import jigl.image.Image;
import jigl.image.ROI;
import jigl.image.types.GrayImage;
import jigl.image.types.InterpolatedColorImage;
import jigl.image.types.InterpolatedGrayImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GrayImage_ESTest extends GrayImage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      int int0 = 3409;
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(3409, 3409);
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage(3409, 3409);
      ROI rOI0 = new ROI();
      int int1 = 8;
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.subtract(8, rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ROI rOI0 = new ROI();
      rOI0.setROI(4, 4, 4, 4);
      rOI0.setROI(311, 4, 892, 4);
      GrayImage grayImage0 = new GrayImage(892, 4);
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(grayImage0);
      GrayImage grayImage1 = new GrayImage(interpolatedGrayImage0);
      ROI rOI1 = new ROI();
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage(4, 892);
      // Undeclared exception!
      try { 
        grayImage1.add((Image<Integer>) interpolatedGrayImage0, rOI0, rOI1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      int[][] intArray0 = new int[0][2];
      GrayImage grayImage0 = new GrayImage(intArray0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      GrayImage grayImage1 = grayImage0.clear(integer0);
      GrayImage grayImage2 = grayImage1.addbuffer(47, 47, 47, (-1082), 47);
      grayImage2.divide(5);
      ROI rOI0 = new ROI();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      int[][] intArray0 = new int[1][9];
      GrayImage grayImage0 = new GrayImage(intArray0);
      ROI rOI0 = new ROI();
      rOI0.setROI(2101, 892, 892, 0);
      GrayImage grayImage1 = new GrayImage(892, 892);
      grayImage0.max();
      // Undeclared exception!
      try { 
        grayImage0.sqrSum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      int[][] intArray0 = new int[0][4];
      GrayImage grayImage0 = new GrayImage(intArray0);
      // Undeclared exception!
      try { 
        grayImage0.byteSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      int[][] intArray0 = new int[0][2];
      GrayImage grayImage0 = new GrayImage(intArray0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      grayImage0.clear(integer0);
      grayImage0.copy();
      GrayImage grayImage1 = new GrayImage(grayImage0);
      ROI rOI0 = new ROI();
      GrayImage grayImage2 = null;
      try {
        grayImage2 = new GrayImage((-4576), (-4576));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      int[][] intArray0 = new int[0][9];
      GrayImage grayImage0 = new GrayImage(intArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "OnO&4VM";
      grayImage0.addbuffer(6, 6, 6, 345, 345);
      int int0 = (-2287);
      int[] intArray1 = new int[7];
      intArray1[0] = 345;
      intArray1[1] = 345;
      intArray1[2] = 6;
      intArray1[3] = (-519);
      intArray1[4] = (-2422);
      intArray1[5] = 345;
      intArray1[6] = (-2287);
      int int1 = (-1);
      ROI rOI0 = new ROI(1, 9, (-2287), 272);
      // Undeclared exception!
      try { 
        grayImage0.subtract(272, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        GrayImage.main(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      short[] shortArray0 = new short[6];
      shortArray0[3] = (short)128;
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage((short)128, (short)128, shortArray0);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      int[][] intArray0 = new int[0][2];
      GrayImage grayImage0 = new GrayImage(intArray0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      GrayImage grayImage1 = grayImage0.clear(integer0);
      grayImage1.addbuffer(15, 47, 47, (-1082), 47);
      grayImage0.add((Image<Integer>) grayImage1);
      grayImage1.copy();
      // Undeclared exception!
      try { 
        grayImage0.byteSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      int int0 = 0;
      short[] shortArray0 = null;
      GrayImage grayImage0 = new GrayImage(205, 0, (short[]) null);
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(grayImage0);
      // Undeclared exception!
      try { 
        grayImage0.addbuffer((-1629), 2486, (-5213));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      int[][] intArray0 = new int[0][2];
      GrayImage grayImage0 = new GrayImage(intArray0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      GrayImage grayImage1 = grayImage0.clear(integer0);
      int int0 = (-1082);
      GrayImage grayImage2 = grayImage1.addbuffer(15, 47, 47, (-1082), 47);
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(47, 3559);
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.multiply((Image<Integer>) grayImage2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage((java.awt.Image) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.AbstractImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      int int0 = 5;
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage(5, 5, (int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ROI rOI0 = new ROI();
      rOI0.setROI(311, 0, 892, 0);
      GrayImage grayImage0 = new GrayImage(0, 4);
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(grayImage0);
      GrayImage grayImage1 = new GrayImage(interpolatedGrayImage0);
      ROI rOI1 = new ROI();
      // Undeclared exception!
      try { 
        grayImage1.add((Image<Integer>) interpolatedGrayImage0, rOI0, rOI1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      int[][] intArray0 = new int[0][2];
      GrayImage grayImage0 = new GrayImage(intArray0);
      grayImage0.divide((-32768));
      ROI rOI0 = new ROI();
      grayImage0.copy();
      grayImage0.clip((-32768), (-1206));
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      int[][] intArray0 = new int[0][9];
      GrayImage grayImage0 = new GrayImage(intArray0);
      GrayImage grayImage1 = new GrayImage(grayImage0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      int[][] intArray0 = new int[0][2];
      GrayImage grayImage0 = new GrayImage(intArray0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      ROI rOI0 = new ROI(15, (-191), 4, 15);
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(grayImage0);
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.divide(1829, 400, Integer.MAX_VALUE, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 209
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      int[][] intArray0 = new int[0][2];
      GrayImage grayImage0 = new GrayImage(intArray0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      GrayImage grayImage1 = grayImage0.clear(integer0);
      grayImage1.addbuffer(15, 47, 47, (-1082), 47);
      ROI rOI0 = new ROI(47, 424, 3219, 2311);
      // Undeclared exception!
      try { 
        grayImage1.addbuffer(3219, (-1439), 47);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      int int0 = 205;
      int int1 = 0;
      GrayImage grayImage0 = new GrayImage(205, 0, (short[]) null);
      int int2 = 2046;
      ROI rOI0 = new ROI((-3204), 138, (-477), 2046);
      // Undeclared exception!
      try { 
        grayImage0.copy(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 138
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(205, 0, (short[]) null);
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(grayImage0);
      interpolatedGrayImage0.multiply((Image<Integer>) grayImage0);
      int int0 = (-4698);
      grayImage0.toString();
      int int1 = (-421);
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.multiply((-4698), (-421), (-421));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -421
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      int[][] intArray0 = new int[0][2];
      GrayImage grayImage0 = new GrayImage(intArray0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      GrayImage grayImage1 = grayImage0.clear(integer0);
      grayImage1.addbuffer(15, 15, (-1082), (-32768), 2514);
      GrayImage grayImage2 = grayImage1.divide(1294);
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        grayImage2.divide(2691, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      short[][] shortArray0 = new short[9][5];
      short[] shortArray1 = new short[1];
      shortArray1[0] = (short) (-32768);
      shortArray0[0] = shortArray1;
      short[] shortArray2 = new short[2];
      shortArray2[0] = (short) (-32768);
      shortArray2[1] = (short) (-32768);
      shortArray0[1] = shortArray2;
      short[] shortArray3 = new short[7];
      shortArray3[0] = (short) (-32768);
      shortArray3[1] = (short) (-32768);
      shortArray3[2] = (short) (-32768);
      shortArray3[3] = (short) (-32768);
      shortArray3[4] = (short) (-32768);
      shortArray3[5] = (short) (-32768);
      shortArray3[6] = (short) (-32768);
      shortArray0[2] = shortArray3;
      short[] shortArray4 = new short[6];
      shortArray4[0] = (short) (-32768);
      shortArray4[1] = (short) (-32768);
      shortArray4[2] = (short) (-32768);
      shortArray4[3] = (short) (-32768);
      shortArray4[4] = (short) (-32768);
      shortArray4[5] = (short) (-32768);
      shortArray0[3] = shortArray4;
      short[] shortArray5 = new short[8];
      shortArray5[0] = (short) (-32768);
      shortArray5[1] = (short) (-32768);
      shortArray5[2] = (short) (-32768);
      shortArray5[3] = (short) (-32768);
      shortArray5[4] = (short) (-32768);
      shortArray5[5] = (short)5;
      shortArray5[6] = (short) (-32768);
      shortArray5[7] = (short) (-32768);
      shortArray0[4] = shortArray5;
      short[] shortArray6 = new short[7];
      shortArray6[0] = (short) (-32768);
      shortArray6[1] = (short) (-3322);
      shortArray6[2] = (short) (-3635);
      shortArray6[3] = (short)5;
      shortArray6[4] = (short)5;
      shortArray6[5] = (short)5;
      shortArray6[6] = (short)5;
      shortArray0[5] = shortArray6;
      short[] shortArray7 = new short[8];
      shortArray7[0] = (short) (-3635);
      shortArray7[1] = (short)5;
      shortArray7[2] = (short) (-3322);
      shortArray7[3] = (short) (-3635);
      shortArray7[4] = (short) (-32768);
      shortArray7[5] = (short) (-3635);
      shortArray7[6] = (short) (-32768);
      shortArray7[7] = (short) (-3635);
      shortArray0[6] = shortArray7;
      short[] shortArray8 = new short[5];
      shortArray8[0] = (short) (-3635);
      shortArray8[1] = (short)5;
      shortArray8[2] = (short) (-32768);
      shortArray8[3] = (short) (-3635);
      shortArray8[4] = (short) (-3322);
      shortArray0[7] = shortArray8;
      short[] shortArray9 = new short[6];
      shortArray9[0] = (short) (-32768);
      shortArray9[1] = (short) (-3322);
      shortArray9[2] = (short)5;
      shortArray9[3] = (short) (-32768);
      shortArray9[4] = (short)5;
      shortArray9[5] = (short)5;
      shortArray0[8] = shortArray9;
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage(shortArray0);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      int[][] intArray0 = new int[1][4];
      GrayImage grayImage0 = new GrayImage(intArray0);
      // Undeclared exception!
      try { 
        grayImage0.byteSize();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      int int0 = 176;
      int int1 = 345;
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(176, 345);
      int int2 = (-4026);
      int int3 = (-1499);
      double double0 = (-2696.045);
      int int4 = 31;
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.absSum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      int[][] intArray0 = new int[1][9];
      GrayImage grayImage0 = new GrayImage(intArray0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      // Undeclared exception!
      try { 
        grayImage0.clear(integer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      int[][] intArray0 = new int[0][2];
      GrayImage grayImage0 = new GrayImage(intArray0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      GrayImage grayImage1 = grayImage0.clear(integer0);
      Integer.toUnsignedString(131);
      GrayImage grayImage2 = grayImage1.addbuffer(15, 47, 47, 47, 47);
      GrayImage grayImage3 = grayImage2.divide(5);
      ROI rOI0 = new ROI();
      grayImage1.multiply((-2455));
      grayImage3.toString();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      int int0 = 3409;
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(3409, 3409);
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage(3409, 3409);
      ROI rOI0 = new ROI();
      int int1 = 8;
      // Undeclared exception!
      interpolatedGrayImage1.max();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ROI rOI0 = new ROI(0, (-4698), 4, 0);
      rOI0.setROI(311, 0, 892, 0);
      GrayImage grayImage0 = new GrayImage(9, 4);
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(grayImage0);
      GrayImage grayImage1 = new GrayImage(interpolatedGrayImage0);
      ROI rOI1 = new ROI();
      // Undeclared exception!
      try { 
        grayImage1.add((Image<Integer>) interpolatedGrayImage0, rOI0, rOI1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      int[][] intArray0 = new int[0][2];
      GrayImage grayImage0 = new GrayImage(intArray0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      grayImage0.clear(integer0);
      int int0 = (-2031);
      int int1 = 4;
      int int2 = 9;
      int int3 = 0;
      // Undeclared exception!
      try { 
        grayImage0.addbuffer((-767), 47, 3219, 0, 424);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      int[][] intArray0 = new int[0][9];
      GrayImage grayImage0 = new GrayImage(intArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "OnO&4VM";
      int int0 = 6;
      int int1 = 345;
      GrayImage grayImage1 = grayImage0.copy();
      grayImage0.addbuffer(6, 6, 6, 345, 345);
      int[] intArray1 = new int[7];
      intArray1[0] = 6;
      // Undeclared exception!
      try { 
        grayImage1.set(345, 345, (Integer) 6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 345
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      int[][] intArray0 = new int[0][2];
      GrayImage grayImage0 = new GrayImage(intArray0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      grayImage0.clear(integer0);
      ROI rOI0 = new ROI();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      int[][] intArray0 = new int[2][5];
      int[] intArray1 = new int[6];
      intArray1[0] = 4;
      intArray1[1] = 4;
      intArray1[2] = 4;
      intArray1[3] = 4;
      intArray1[4] = 4;
      intArray1[5] = 4;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[5];
      intArray2[0] = 4;
      intArray2[1] = 4;
      intArray2[2] = 4;
      intArray2[3] = 4;
      intArray2[4] = 4;
      intArray0[1] = intArray2;
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("jigl.util.ArrayUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ROI rOI0 = new ROI();
      rOI0.setROI(4, 4, 4, 4);
      GrayImage grayImage0 = new GrayImage(4, 4);
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(grayImage0);
      GrayImage grayImage1 = new GrayImage(interpolatedGrayImage0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(205, 0, (short[]) null);
      grayImage0.toString();
      GrayImage grayImage1 = new GrayImage(2758, 205);
      // Undeclared exception!
      grayImage1.add((Image<Integer>) grayImage0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      int[][] intArray0 = new int[0][2];
      GrayImage grayImage0 = new GrayImage(intArray0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      grayImage0.clear(integer0);
      int int0 = 47;
      int int1 = 3219;
      int int2 = 15;
      int int3 = (-1082);
      // Undeclared exception!
      grayImage0.addbuffer(int0, int1, int2, int3, int2);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      int int0 = 6;
      int[] intArray0 = new int[0];
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage(6, 6, intArray0);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ROI rOI0 = new ROI();
      int int0 = 311;
      rOI0.setROI(311, 0, 892, 0);
      GrayImage grayImage0 = new GrayImage(0, 4);
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(grayImage0);
      GrayImage grayImage1 = new GrayImage(interpolatedGrayImage0);
      ROI rOI1 = new ROI(892, 311, 311, 4);
      // Undeclared exception!
      try { 
        grayImage1.add((Image<Integer>) interpolatedGrayImage0, rOI0, rOI1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 311
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(205, 0, (short[]) null);
      GrayImage grayImage1 = grayImage0.addbuffer(0, 205, 0, 0, 0);
      int int0 = (-69);
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      // Undeclared exception!
      try { 
        grayImage1.set(424, (-69), integer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -69
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(205, 0, (short[]) null);
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(0, 205);
      interpolatedGrayImage0.multiply((Image<Integer>) grayImage0);
      grayImage0.toString();
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.multiply((-4698), (-421), (-421));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -421
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      int[][] intArray0 = new int[0][9];
      GrayImage grayImage0 = new GrayImage(intArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "OnO&4VM";
      grayImage0.copy();
      GrayImage grayImage1 = grayImage0.addbuffer(6, 6, 6, 345, 345);
      int[] intArray1 = new int[7];
      intArray1[0] = 6;
      intArray1[1] = 345;
      intArray1[2] = 6;
      grayImage1.copy();
      int int0 = (-519);
      // Undeclared exception!
      try { 
        grayImage0.byteSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      int int0 = 171;
      int int1 = 4205;
      int int2 = 345;
      int[][] intArray0 = new int[0][1];
      GrayImage grayImage0 = new GrayImage(intArray0);
      GrayImage grayImage1 = grayImage0.copy();
      int int3 = 1503;
      int int4 = 9;
      int int5 = 1063;
      // Undeclared exception!
      grayImage1.addbuffer(int3, int3, int4, int1, int5);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      int int0 = 14;
      ROI rOI0 = new ROI(2046, 14, 2046, 2046);
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(4046, 3529);
      interpolatedGrayImage0.copy(rOI0);
      int int1 = 4205;
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage((-2720), (-16777216), (int[]) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      int[][] intArray0 = new int[0][9];
      GrayImage grayImage0 = new GrayImage(intArray0);
      String[] stringArray0 = new String[2];
      GrayImage grayImage1 = grayImage0.copy();
      grayImage1.addbuffer(6, 6, (-2362), 6, (-2830));
      ROI rOI0 = new ROI();
      ROI rOI1 = new ROI();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(4046, 11);
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage((GrayImage) interpolatedGrayImage0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      short[][] shortArray0 = new short[1][5];
      short[] shortArray1 = new short[6];
      shortArray1[0] = (short)128;
      shortArray1[1] = (short)0;
      shortArray1[2] = (short) (-1485);
      shortArray1[3] = (short)0;
      shortArray1[4] = (short) (-359);
      shortArray1[5] = (short) (-3355);
      shortArray0[0] = shortArray1;
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage(shortArray0);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      int[][] intArray0 = new int[0][2];
      GrayImage grayImage0 = new GrayImage(intArray0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      GrayImage grayImage1 = grayImage0.clear(integer0);
      grayImage1.addbuffer(15, 47, 47, (-1082), 47);
      ROI rOI0 = new ROI(47, 424, 3219, 2311);
      // Undeclared exception!
      try { 
        grayImage1.min(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 424
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      int[][] intArray0 = new int[0][9];
      GrayImage grayImage0 = new GrayImage(intArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "OnO&4VM";
      int int0 = 6;
      int int1 = 345;
      grayImage0.copy();
      grayImage0.addbuffer(6, 6, 6, 345, 345);
      int int2 = 1;
      int int3 = (-2287);
      int[] intArray1 = new int[7];
      // Undeclared exception!
      try { 
        grayImage0.byteSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      int[][] intArray0 = new int[0][2];
      GrayImage grayImage0 = new GrayImage(intArray0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      grayImage0.clear(integer0);
      int int0 = 306;
      // Undeclared exception!
      try { 
        grayImage0.set(47, 306, (Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(3409, 3409);
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage(3409, 3409);
      ROI rOI0 = new ROI();
      interpolatedGrayImage1.toString(rOI0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      int int0 = 2444;
      // Undeclared exception!
      try { 
        interpolatedGrayImage1.set(2444, 3409, integer0, (ROI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      int[] intArray0 = new int[8];
      int int0 = (-96);
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage((-96), 2581, intArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(205, 0, (short[]) null);
      grayImage0.toString();
      grayImage0.sqrSum();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      short[] shortArray0 = new short[6];
      shortArray0[1] = (short)0;
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(864, (short)0);
      interpolatedGrayImage0.max();
      interpolatedGrayImage0.divide((int) (short)0);
      ROI rOI0 = new ROI();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 2090;
      intArray0[1] = 2090;
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage(2090, 2090, intArray0);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ROI rOI0 = new ROI();
      int[] intArray0 = new int[17];
      intArray0[0] = (-16777216);
      intArray0[1] = 171;
      intArray0[3] = (-16777216);
      GrayImage grayImage0 = new GrayImage(171, 0, intArray0);
      GrayImage grayImage1 = grayImage0.addbuffer(172, 6, (-16777216));
      grayImage1.addbuffer(172, 0, (-16777216));
      grayImage0.addbuffer(6, 0, 1);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      int[][] intArray0 = new int[0][2];
      GrayImage grayImage0 = new GrayImage(intArray0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      GrayImage grayImage1 = grayImage0.clear(integer0);
      int int0 = 47;
      int int1 = 3641;
      int int2 = 943;
      int int3 = (-1);
      grayImage1.addbuffer(int1, int2, int3, int0, int3);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ROI rOI0 = new ROI(0, (-4698), 4, 0);
      GrayImage grayImage0 = new GrayImage(0, 0, (int[]) null);
      // Undeclared exception!
      try { 
        grayImage0.multiply(0, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4698
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      int[][] intArray0 = new int[0][2];
      GrayImage grayImage0 = new GrayImage(intArray0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      grayImage0.clear(integer0);
      ROI rOI0 = null;
      // Undeclared exception!
      try { 
        grayImage0.toString((ROI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      int[][] intArray0 = new int[0][2];
      GrayImage grayImage0 = new GrayImage(intArray0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      GrayImage grayImage1 = grayImage0.clear(integer0);
      int int0 = 47;
      int int1 = 3219;
      GrayImage grayImage2 = grayImage1.addbuffer(15, 47, 47, (-1082), 47);
      // Undeclared exception!
      grayImage2.addbuffer(3219, 128, 11);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          int[][] intArray0 = new int[0][2];
          GrayImage grayImage0 = new GrayImage(intArray0);
          Integer integer0 = JLayeredPane.DRAG_LAYER;
          GrayImage grayImage1 = grayImage0.clear(integer0);
          Integer.min(729, 3270);
          GrayImage grayImage2 = grayImage1.addbuffer(15, 15, (-1082), (-32768), 2514);
          // Undeclared exception!
          try { 
            grayImage2.getJavaImage();
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.lang.RuntimePermission\" \"loadLibrary.javalcms\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkLink(SecurityManager.java:835)
             // java.lang.Runtime.loadLibrary0(Runtime.java:864)
             // java.lang.System.loadLibrary(System.java:1122)
             // sun.java2d.cmm.lcms.LCMS$1.run(LCMS.java:210)
             // java.security.AccessController.doPrivileged(Native Method)
             // sun.java2d.cmm.lcms.LCMS.getModule(LCMS.java:203)
             // sun.java2d.cmm.lcms.LcmsServiceProvider.getModule(LcmsServiceProvider.java:34)
             // sun.java2d.cmm.CMMServiceProvider.getColorManagementModule(CMMServiceProvider.java:31)
             // sun.java2d.cmm.CMSManager.getModule(CMSManager.java:76)
             // java.awt.color.ICC_Profile.getInstance(ICC_Profile.java:783)
             // java.awt.color.ICC_Profile.getInstance(ICC_Profile.java:1017)
             // java.awt.color.ICC_Profile.getInstance(ICC_Profile.java:982)
             // java.awt.color.ICC_Profile$2.run(ICC_Profile.java:933)
             // java.awt.color.ICC_Profile$2.run(ICC_Profile.java:929)
             // java.security.AccessController.doPrivileged(Native Method)
             // java.awt.color.ICC_Profile.getStandardProfile(ICC_Profile.java:928)
             // java.awt.color.ICC_Profile.getDeferredInstance(ICC_Profile.java:1075)
             // java.awt.color.ICC_Profile.getInstance(ICC_Profile.java:847)
             // java.awt.color.ColorSpace.getInstance(ColorSpace.java:298)
             // java.awt.image.DirectColorModel.<init>(DirectColorModel.java:182)
             // java.awt.image.ColorModel.getRGBdefault(ColorModel.java:242)
             // java.awt.image.MemoryImageSource.<init>(MemoryImageSource.java:227)
             // jigl.image.types.GrayImage.getJavaImage(GrayImage.java:608)
             // sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             // sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(3409, 3409);
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage(3409, 3409);
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.subtract((Image<Integer>) interpolatedGrayImage1, rOI0, rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      int[][] intArray0 = new int[0][2];
      GrayImage grayImage0 = new GrayImage(intArray0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      grayImage0.clear(integer0);
      int int0 = 651;
      int int1 = (-1);
      // Undeclared exception!
      try { 
        grayImage0.addbuffer(47, (-1082), 651, (-1), (-514));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(3409, 3409);
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage(3409, 3409);
      ROI rOI0 = new ROI();
      int int0 = 8;
      int int1 = 2311;
      ROI rOI1 = new ROI(2311, 332, 1775, 2311);
      // Undeclared exception!
      interpolatedGrayImage0.copy();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      int int0 = 0;
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(0, 0);
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.toString(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(0, 205);
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.multiply((-4698), (-4698), (-4698));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4698
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      int[][] intArray0 = new int[0][2];
      GrayImage grayImage0 = new GrayImage(intArray0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      GrayImage grayImage1 = grayImage0.clear(integer0);
      int int0 = 3219;
      int int1 = 128;
      int int2 = 11;
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(47, 3559);
      // Undeclared exception!
      interpolatedGrayImage0.multiply((Image<Integer>) grayImage1);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      int[][] intArray0 = new int[0][9];
      GrayImage grayImage0 = new GrayImage(intArray0);
      String[] stringArray0 = new String[6];
      stringArray0[2] = "A>r";
      stringArray0[4] = "(";
      GrayImage grayImage1 = new GrayImage(grayImage0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      ROI rOI0 = new ROI();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      int int0 = 0;
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      GrayImage grayImage0 = new GrayImage(0, 0, intArray0);
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(grayImage0);
      int int1 = (-1254);
      ROI rOI0 = new ROI();
      int int2 = 2267;
      int int3 = 1485;
      try { 
        interpolatedGrayImage0.interp(0.0F, 0.0F);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.InterpolatedGrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ROI rOI0 = new ROI();
      int[] intArray0 = new int[4];
      intArray0[0] = (-16777216);
      intArray0[1] = 171;
      intArray0[2] = (-2695);
      intArray0[3] = 4205;
      GrayImage grayImage0 = new GrayImage(171, 0, intArray0);
      // Undeclared exception!
      try { 
        grayImage0.multiply((-1259), rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(205, 0, (short[]) null);
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(0, 205);
      GrayImage grayImage1 = interpolatedGrayImage0.multiply((Image<Integer>) grayImage0);
      ROI rOI0 = new ROI(0, (-2021), (-2021), Integer.MAX_VALUE);
      // Undeclared exception!
      try { 
        grayImage1.subtract((Image<Integer>) grayImage0, rOI0, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2021
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          int[][] intArray0 = new int[0][9];
          GrayImage grayImage0 = new GrayImage(intArray0);
          String[] stringArray0 = new String[2];
          stringArray0[0] = "OnO&4VM";
          int int0 = 6;
          int int1 = 345;
          grayImage0.copy();
          GrayImage grayImage1 = grayImage0.addbuffer(6, 6, 6, 345, 345);
          // Undeclared exception!
          try { 
            grayImage1.getJavaImage();
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.lang.RuntimePermission\" \"loadLibrary.javalcms\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkLink(SecurityManager.java:835)
             // java.lang.Runtime.loadLibrary0(Runtime.java:864)
             // java.lang.System.loadLibrary(System.java:1122)
             // sun.java2d.cmm.lcms.LCMS$1.run(LCMS.java:210)
             // java.security.AccessController.doPrivileged(Native Method)
             // sun.java2d.cmm.lcms.LCMS.getModule(LCMS.java:203)
             // sun.java2d.cmm.lcms.LcmsServiceProvider.getModule(LcmsServiceProvider.java:34)
             // sun.java2d.cmm.CMMServiceProvider.getColorManagementModule(CMMServiceProvider.java:31)
             // sun.java2d.cmm.CMSManager.getModule(CMSManager.java:76)
             // java.awt.color.ICC_Profile.getInstance(ICC_Profile.java:783)
             // java.awt.color.ICC_Profile.getInstance(ICC_Profile.java:1017)
             // java.awt.color.ICC_Profile.getInstance(ICC_Profile.java:982)
             // java.awt.color.ICC_Profile$2.run(ICC_Profile.java:933)
             // java.awt.color.ICC_Profile$2.run(ICC_Profile.java:929)
             // java.security.AccessController.doPrivileged(Native Method)
             // java.awt.color.ICC_Profile.getStandardProfile(ICC_Profile.java:928)
             // java.awt.color.ICC_Profile.getDeferredInstance(ICC_Profile.java:1075)
             // java.awt.color.ICC_Profile.getInstance(ICC_Profile.java:847)
             // java.awt.color.ColorSpace.getInstance(ColorSpace.java:298)
             // java.awt.image.DirectColorModel.<init>(DirectColorModel.java:182)
             // java.awt.image.ColorModel.getRGBdefault(ColorModel.java:242)
             // java.awt.image.MemoryImageSource.<init>(MemoryImageSource.java:227)
             // jigl.image.types.GrayImage.getJavaImage(GrayImage.java:608)
             // sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             // sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ROI rOI0 = new ROI();
      rOI0.setROI(311, 0, 892, 0);
      GrayImage grayImage0 = new GrayImage(0, 4);
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(grayImage0);
      // Undeclared exception!
      try { 
        grayImage0.multiply(0, (ROI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ROI rOI0 = new ROI();
      int[][] intArray0 = new int[1][7];
      int[] intArray1 = new int[6];
      intArray1[0] = 311;
      intArray1[1] = 311;
      intArray1[2] = 0;
      intArray1[3] = 892;
      intArray1[4] = 892;
      intArray1[5] = 892;
      intArray0[0] = intArray1;
      GrayImage grayImage0 = new GrayImage(intArray0);
      // Undeclared exception!
      try { 
        grayImage0.copy();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      int[][] intArray0 = new int[0][2];
      GrayImage grayImage0 = new GrayImage(intArray0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      grayImage0.clear(integer0);
      int int0 = 4;
      int int1 = 9;
      int int2 = (-32768);
      ROI rOI0 = new ROI((-32768), (-2031), 2351, 4);
      // Undeclared exception!
      try { 
        grayImage0.toString(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2031
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(88, 2833);
      // Undeclared exception!
      try { 
        grayImage0.sqrSum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(3409, 3409);
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage(3409, 3409);
      ROI rOI0 = new ROI();
      int int0 = Integer.MAX_VALUE;
      interpolatedGrayImage1.toString(rOI0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.set((-3532), (-3532), integer0, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3532
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ROI rOI0 = new ROI();
      rOI0.setROI(4, 4, 4, 4);
      rOI0.setROI(311, 4, 894, 4);
      GrayImage grayImage0 = new GrayImage(894, 4);
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(grayImage0);
      int int0 = 2383;
      GrayImage grayImage1 = new GrayImage(2383, 311);
      Integer integer0 = new Integer(16);
      grayImage1.set(311, 296, integer0);
      Integer.toUnsignedString(311);
      short[] shortArray0 = new short[4];
      shortArray0[0] = (short)1664;
      short short0 = (short)1;
      shortArray0[1] = (short)1;
      short short1 = (short)1;
      shortArray0[2] = (short)1;
      shortArray0[3] = (short)312;
      GrayImage grayImage2 = null;
      try {
        grayImage2 = new GrayImage(894, 296, shortArray0);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      int[][] intArray0 = new int[0][2];
      GrayImage grayImage0 = new GrayImage(intArray0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      GrayImage grayImage1 = grayImage0.clear(integer0);
      grayImage0.addbuffer(9, 47, 3219, 0, 424);
      Integer.toUnsignedLong(32767);
      grayImage1.min();
      ROI rOI0 = new ROI((-2031), 4, 9, 0);
      int[] intArray1 = new int[0];
      GrayImage grayImage2 = null;
      try {
        grayImage2 = new GrayImage((-2031), 4, intArray1);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      int int0 = 6;
      GrayImage grayImage0 = new GrayImage(6, 6);
      ROI rOI0 = new ROI();
      grayImage0.toString(rOI0);
      // Undeclared exception!
      try { 
        grayImage0.get(6, 6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(205, 0, (short[]) null);
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(0, 205);
      grayImage0.divide(0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(205, 0, (short[]) null);
      GrayImage grayImage1 = grayImage0.addbuffer(0, 205, 0, 0, 0);
      ROI rOI0 = new ROI(2311, 424, 205, 3580);
      grayImage0.addbuffer(0, 3580, 2311);
      // Undeclared exception!
      try { 
        grayImage1.min(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 424
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      int int0 = 3409;
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(3409, 3409);
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage(3409, 3409);
      ROI rOI0 = new ROI();
      rOI0.setROI(3409, 2606, (-1981), (-1536));
      int int1 = 8;
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.subtract(Integer.MAX_VALUE, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1536
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      int int0 = 345;
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(176, 345);
      int int1 = (-1499);
      ROI rOI0 = new ROI(176, (-4026), 176, (-1499));
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.add(345, rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4026
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      int[][] intArray0 = new int[0][2];
      GrayImage grayImage0 = new GrayImage(intArray0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      GrayImage grayImage1 = grayImage0.clear(integer0);
      GrayImage grayImage2 = grayImage1.addbuffer(15, 47, 47, (-1082), 47);
      grayImage2.divide(5);
      ROI rOI0 = new ROI();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      int[][] intArray0 = new int[0][2];
      GrayImage grayImage0 = new GrayImage(intArray0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      GrayImage grayImage1 = grayImage0.clear(integer0);
      int int0 = 3219;
      GrayImage grayImage2 = grayImage1.addbuffer(15, 47, 47, (-1082), 47);
      int int1 = 128;
      int int2 = 11;
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(47, 3559);
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.multiply((Image<Integer>) grayImage2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      int[][] intArray0 = new int[0][9];
      GrayImage grayImage0 = new GrayImage(intArray0);
      String[] stringArray0 = new String[6];
      grayImage0.max();
      stringArray0[0] = "OnO&4VM";
      stringArray0[1] = ">=>";
      stringArray0[2] = "A>r";
      stringArray0[3] = "2Z`";
      int int0 = (-421);
      InterpolatedGrayImage interpolatedGrayImage0 = null;
      try {
        interpolatedGrayImage0 = new InterpolatedGrayImage((-421), (-421));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(205, 0, (short[]) null);
      InterpolatedGrayImage interpolatedGrayImage0 = null;
      try {
        interpolatedGrayImage0 = new InterpolatedGrayImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ROI rOI0 = new ROI();
      int[] intArray0 = new int[4];
      intArray0[0] = (-16777216);
      intArray0[1] = 171;
      intArray0[2] = (-2695);
      intArray0[3] = 4205;
      GrayImage grayImage0 = new GrayImage(171, 0, intArray0);
      grayImage0.sqrSum();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      short[][] shortArray0 = new short[3][0];
      short[] shortArray1 = new short[9];
      shortArray1[0] = (short)0;
      shortArray1[1] = (short)682;
      shortArray1[2] = (short)8;
      shortArray1[3] = (short)0;
      shortArray1[4] = (short)4457;
      shortArray1[5] = (short)0;
      shortArray1[6] = (short)695;
      shortArray1[7] = (short)0;
      shortArray1[8] = (short)0;
      shortArray0[0] = shortArray1;
      short[] shortArray2 = new short[5];
      shortArray2[0] = (short)0;
      shortArray2[1] = (short)0;
      shortArray2[2] = (short)0;
      shortArray2[3] = (short) (-169);
      shortArray2[4] = (short)0;
      shortArray0[1] = shortArray2;
      short[] shortArray3 = new short[0];
      shortArray0[2] = shortArray3;
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage(shortArray0);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      int[][] intArray0 = new int[0][2];
      GrayImage grayImage0 = new GrayImage(intArray0);
      GrayImage grayImage1 = grayImage0.divide((-32768));
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        grayImage1.min(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage((short[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(205, 0, (short[]) null);
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(0, 205);
      interpolatedGrayImage0.multiply((Image<Integer>) grayImage0);
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.toString(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(0, 205);
      GrayImage grayImage1 = grayImage0.addbuffer(0, 205, 0, 0, 0);
      int int0 = (-69);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      // Undeclared exception!
      try { 
        grayImage1.set((-1290), (-69), integer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -69
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ROI rOI0 = new ROI();
      int[] intArray0 = new int[17];
      intArray0[0] = (-16777216);
      intArray0[1] = 171;
      intArray0[3] = (-16777216);
      GrayImage grayImage0 = new GrayImage(171, 0, intArray0);
      grayImage0.sqrSum();
      // Undeclared exception!
      try { 
        grayImage0.subtract((-16777216), 171, Integer.MAX_VALUE);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 171
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ROI rOI0 = new ROI(222, 175, 3295, 22);
      GrayImage grayImage0 = new GrayImage(88, 2833);
      // Undeclared exception!
      try { 
        grayImage0.sqrSum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      int int0 = 2;
      InterpolatedColorImage interpolatedColorImage0 = new InterpolatedColorImage(2, 2);
      GrayImage grayImage0 = interpolatedColorImage0.plane(2);
      // Undeclared exception!
      try { 
        grayImage0.getJavaImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage((GrayImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      int int0 = 3409;
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(3409, 3409);
      int int1 = 22;
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage(22, 3409);
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        interpolatedGrayImage0.subtract((Image<Integer>) interpolatedGrayImage1, rOI0, rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      int[][] intArray0 = new int[0][2];
      GrayImage grayImage0 = new GrayImage(intArray0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      GrayImage grayImage1 = grayImage0.clear(integer0);
      GrayImage grayImage2 = new GrayImage(grayImage1);
      // Undeclared exception!
      try { 
        grayImage2.getJavaImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(205, 0, (short[]) null);
      grayImage0.addbuffer(0, 205, 0, 0, 0);
      grayImage0.addbuffer(0, 535, 205);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage(205, 205, (short[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      int int0 = 3409;
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(3409, 3409);
      InterpolatedGrayImage interpolatedGrayImage1 = new InterpolatedGrayImage(22, 3409);
      ROI rOI0 = new ROI();
      ROI rOI1 = new ROI();
      // Undeclared exception!
      try { 
        interpolatedGrayImage1.min(rOI1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      int[][] intArray0 = new int[0][2];
      GrayImage grayImage0 = new GrayImage(intArray0);
      grayImage0.copy();
      GrayImage grayImage1 = new GrayImage(grayImage0);
      GrayImage grayImage2 = grayImage1.addbuffer(3, 2, (-2830), (-2830), 2);
      grayImage2.max();
      ROI rOI0 = new ROI();
      InterpolatedGrayImage interpolatedGrayImage0 = null;
      try {
        interpolatedGrayImage0 = new InterpolatedGrayImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
