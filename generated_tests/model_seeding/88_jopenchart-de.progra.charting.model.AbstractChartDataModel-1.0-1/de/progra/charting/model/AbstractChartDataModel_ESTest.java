/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 25 15:52:32 GMT 2019
 */

package de.progra.charting.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.progra.charting.event.ChartDataModelListener;
import de.progra.charting.model.DataSet;
import de.progra.charting.model.DefaultChartDataModel;
import de.progra.charting.model.EditableChartDataModel;
import de.progra.charting.model.ObjectChartDataModel;
import java.math.BigInteger;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractChartDataModel_ESTest extends AbstractChartDataModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      Short short0 = new Short((short)1801);
      boolean boolean0 = objectChartDataModel0.equals(short0);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(boolean0);
      assertFalse(objectChartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      double[][] doubleArray0 = new double[2][2];
      String[] stringArray0 = new String[3];
      ObjectChartDataModel objectChartDataModel1 = new ObjectChartDataModel(doubleArray0, doubleArray0, stringArray0);
      boolean boolean0 = objectChartDataModel0.equals(objectChartDataModel1);
      assertFalse(boolean0);
      assertFalse(objectChartDataModel1.isManualScale());
      assertFalse(objectChartDataModel1.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      objectChartDataModel0.setMaximumColumnValue(1689.8436644185429);
      assertEquals(1689.8436644185429, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      assertFalse(editableChartDataModel0.isManualScale());
      
      editableChartDataModel0.manualscale = true;
      boolean boolean0 = editableChartDataModel0.isManualScale();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      boolean boolean0 = defaultChartDataModel0.isManualScale();
      assertFalse(boolean0);
      assertFalse(defaultChartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      editableChartDataModel0.isColumnNumeric();
      assertFalse(editableChartDataModel0.isManualScale());
      assertFalse(editableChartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      assertFalse(editableChartDataModel0.isAutoScale());
      
      editableChartDataModel0.setAutoScale(true);
      boolean boolean0 = editableChartDataModel0.isAutoScale();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      BigInteger bigInteger0 = BigInteger.TEN;
      objectChartDataModel0.setMinimumValue(bigInteger0);
      Number number0 = objectChartDataModel0.getManualMinimumValue();
      assertNotNull(number0);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      objectChartDataModel0.setMinimumColumnValue(36.0);
      double double0 = objectChartDataModel0.getManualMinimumColumnValue();
      assertEquals(36.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      byte[] byteArray0 = new byte[9];
      byteArray0[8] = (byte) (-92);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      editableChartDataModel0.maxvalue = (Number) bigInteger0;
      Number number0 = editableChartDataModel0.getManualMaximumValue();
      assertFalse(editableChartDataModel0.isAutoScale());
      assertNotNull(number0);
      assertFalse(editableChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      editableChartDataModel0.maxcolumn = 0.5;
      double double0 = editableChartDataModel0.getManualMaximumColumnValue();
      assertEquals(0.5, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      objectChartDataModel0.maxcolumn = (-1676.3);
      double double0 = objectChartDataModel0.getManualMaximumColumnValue();
      assertEquals((-1676.3), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[][] intArray0 = new int[1][8];
      String[] stringArray0 = new String[3];
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel(intArray0, intArray0, stringArray0);
      objectChartDataModel0.getAxisBinding(0);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      // Undeclared exception!
      try { 
        editableChartDataModel0.getDataSetName(821);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 821, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      // Undeclared exception!
      try { 
        objectChartDataModel0.getDataSetName(6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("de.progra.charting.model.ObjectChartDataModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      defaultChartDataModel0.data = null;
      // Undeclared exception!
      try { 
        defaultChartDataModel0.getAxisBinding((-3897));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.model.DefaultChartDataModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      // Undeclared exception!
      try { 
        editableChartDataModel0.getAxisBinding(909);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 909, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      // Undeclared exception!
      try { 
        objectChartDataModel0.getAxisBinding((-650));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -650
         //
         verifyException("de.progra.charting.model.ObjectChartDataModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      editableChartDataModel0.listener = null;
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      // Undeclared exception!
      try { 
        editableChartDataModel0.fireChartDataModelChangedEvent(objectChartDataModel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.model.AbstractChartDataModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      // Undeclared exception!
      try { 
        editableChartDataModel0.fireChartDataModelChangedEvent((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      editableChartDataModel0.listener = null;
      ChartDataModelListener chartDataModelListener0 = mock(ChartDataModelListener.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        editableChartDataModel0.addChartDataModelListener(chartDataModelListener0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.model.AbstractChartDataModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      DataSet[] dataSetArray0 = new DataSet[1];
      objectChartDataModel0.data = dataSetArray0;
      boolean boolean0 = objectChartDataModel0.equals(editableChartDataModel0);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      boolean boolean0 = objectChartDataModel0.equals((Object) null);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      boolean boolean0 = objectChartDataModel0.equals(editableChartDataModel0);
      assertTrue(boolean0);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      ChartDataModelListener chartDataModelListener0 = mock(ChartDataModelListener.class, new ViolatedAssumptionAnswer());
      editableChartDataModel0.addChartDataModelListener(chartDataModelListener0);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      editableChartDataModel0.fireChartDataModelChangedEvent(integer0);
      assertFalse(editableChartDataModel0.isManualScale());
      assertFalse(editableChartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      Short short0 = new Short((short)1801);
      editableChartDataModel0.fireChartDataModelChangedEvent(short0);
      assertFalse(editableChartDataModel0.isManualScale());
      assertFalse(editableChartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      double double0 = editableChartDataModel0.getManualMinimumColumnValue();
      assertFalse(editableChartDataModel0.isManualScale());
      assertEquals(0.0, double0, 0.01);
      assertFalse(editableChartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      Short short0 = new Short((short)1801);
      objectChartDataModel0.setMaximumValue(short0);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      objectChartDataModel0.setMinimumColumnValue((-13.161911332713734));
      double double0 = objectChartDataModel0.getManualMinimumColumnValue();
      assertEquals((-13.161911332713734), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      boolean boolean0 = objectChartDataModel0.isColumnNumeric();
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertFalse(objectChartDataModel0.isManualScale());
      
      objectChartDataModel0.setManualScale(true);
      assertTrue(objectChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      objectChartDataModel0.getColumnClass();
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      Class class0 = defaultChartDataModel0.getColumnClass();
      defaultChartDataModel0.setValueAt((-603), (-477), class0);
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertFalse(defaultChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      objectChartDataModel0.getManualMinimumValue();
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      objectChartDataModel0.setAxisBinding((short)1801, 4);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      double double0 = objectChartDataModel0.getManualMaximumColumnValue();
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, double0, 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      boolean boolean0 = objectChartDataModel0.isAutoScale();
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      objectChartDataModel0.getManualMaximumValue();
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      objectChartDataModel0.removeChartDataModelListener((ChartDataModelListener) null);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
  }
}
