/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 09:38:42 GMT 2019
 */

package module;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayDeque;
import java.util.MissingResourceException;
import javax.swing.JLayeredPane;
import module.ClientNetworkModule;
import module.ExampleModule;
import module.GameModule;
import module.Kernel;
import module.Message;
import module.MessageFactory;
import module.Module;
import module.ServerNetworkModule;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Kernel_ESTest extends Kernel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Kernel kernel0 = new Kernel();
      kernel0.getKernel();
      kernel0.unsubscribe((Module) null);
      kernel0.unsubscribe((Module) null);
      try { 
        kernel0.request("!xS", "Xh]JPsuUgE{sJNmb");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Requests are not implemented
         //
         verifyException("module.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Kernel kernel0 = new Kernel();
      kernel0.getKernel();
      ClientNetworkModule clientNetworkModule0 = null;
      try {
        clientNetworkModule0 = new ClientNetworkModule(kernel0);
        fail("Expecting exception: MissingResourceException");
      
      } catch(MissingResourceException e) {
         //
         // Can't find bundle for base name gangup, locale en
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Kernel kernel0 = new Kernel();
      GameModule gameModule0 = null;
      try {
        gameModule0 = new GameModule();
        fail("Expecting exception: MissingResourceException");
      
      } catch(MissingResourceException e) {
         //
         // Can't find bundle for base name gangup, locale en
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Kernel kernel0 = new Kernel();
      Message message0 = MessageFactory.createMessage("", (Object) "");
      message0.getRecipient();
      message0.getHeader();
      message0.setDelivered(true);
      message0.unref();
      kernel0.processMessage(message0);
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      message0.body = (Object) integer0;
      try { 
        kernel0.request("DUMP", "MapTileView");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Requests are not implemented
         //
         verifyException("module.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Kernel kernel0 = new Kernel();
      String string0 = "z";
      try { 
        kernel0.unloadModule("z");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // mod=z
         //
         verifyException("module.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Kernel kernel0 = new Kernel();
      kernel0.start();
      ServerNetworkModule serverNetworkModule0 = null;
      try {
        serverNetworkModule0 = new ServerNetworkModule();
        fail("Expecting exception: MissingResourceException");
      
      } catch(MissingResourceException e) {
         //
         // Can't find bundle for base name gangup, locale en
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Kernel kernel0 = new Kernel();
      String string0 = "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ";
      Message message0 = MessageFactory.createUnloadMessage("Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ");
      message0.setDelivered(false);
      message0.getBody();
      Message message1 = new Message();
      Message message2 = new Message();
      try { 
        message2.sendFrom(kernel0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("module.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Kernel kernel0 = new Kernel();
      kernel0.getKernel();
      String string0 = "oCCro#dnn@n(kc;";
      kernel0.unsubscribe((Module) null, "oCCro#dnn@n(kc;");
      ArrayDeque<Module> arrayDeque0 = new ArrayDeque<Module>();
      Message message0 = new Message();
      ExampleModule exampleModule0 = null;
      try {
        exampleModule0 = new ExampleModule();
        fail("Expecting exception: MissingResourceException");
      
      } catch(MissingResourceException e) {
         //
         // Can't find bundle for base name gangup, locale en
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Kernel kernel0 = new Kernel();
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) "w(`&Y?\"WyW~-{^&";
      objectArray0[1] = (Object) kernel0;
      objectArray0[2] = (Object) kernel0;
      objectArray0[3] = (Object) "w(`&Y?\"WyW~-{^&";
      Message message0 = MessageFactory.createWarningMessage("w(`&Y?\"WyW~-{^&", objectArray0);
      try { 
        message0.sendFrom(kernel0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: modnull,msg=Message[id=0,session=0,head=WARNING,recip=*,sender=null,state=1,ttl=3000,time=1392409281320,body=Reading string from locale failed: key=w(`&Y?\"WyW~-{^&
         // This probably means that you have an old or otherwise
         // inaccurate locale file (maybe it's missing altogether)
         // or that the classpath does not contain the directory.]
         //
         verifyException("module.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Kernel kernel0 = new Kernel();
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) "N4i;,Fri(q-KW$SlSE";
      objectArray0[1] = (Object) "N4i;,Fri(q-KW$SlSE";
      objectArray0[2] = (Object) "N4i;,Fri(q-KW$SlSE";
      objectArray0[3] = (Object) "N4i;,Fri(q-KW$SlSE";
      Message message0 = MessageFactory.createWarningMessage("N4i;,Fri(q-KW$SlSE", objectArray0);
      message0.ref();
      message0.unref();
      kernel0.receiveMessage(message0);
      Message message1 = MessageFactory.createMessage("", (Object) "");
      message1.getRecipient();
      message1.getHeader();
      message1.setDelivered(true);
      message1.unref();
      try { 
        kernel0.request(message1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Sorry, requests are not implemented in Kernel
         //
         verifyException("module.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Kernel kernel0 = new Kernel();
      try { 
        kernel0.loadModule("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("module.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Kernel kernel0 = new Kernel();
      Message message0 = null;
      try { 
        kernel0.processMessage((Message) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("module.Kernel", e);
      }
  }
}
