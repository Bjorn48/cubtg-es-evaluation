/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 25 17:09:26 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.CatalogDoorOrWindow;
import com.eteks.sweethome3d.model.CatalogLight;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.FurnitureCategory;
import com.eteks.sweethome3d.model.HomeDoorOrWindow;
import com.eteks.sweethome3d.model.HomeLight;
import com.eteks.sweethome3d.model.HomePieceOfFurniture;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.Level;
import com.eteks.sweethome3d.model.LightSource;
import com.eteks.sweethome3d.model.PieceOfFurniture;
import com.eteks.sweethome3d.model.Sash;
import com.eteks.sweethome3d.model.TextStyle;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.math.BigDecimal;
import java.math.MathContext;
import java.math.RoundingMode;
import java.net.URL;
import java.util.Comparator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomePieceOfFurniture_ESTest extends HomePieceOfFurniture_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setNameYOffset(0L);
      homeLight0.setName("");
      homeLight0.setVisible(false);
      homeLight0.isAtLevel((Level) null);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      
      Integer integer0 = Integer.valueOf(862);
      assertEquals(862, (int)integer0);
      assertNotNull(integer0);
      
      Integer integer1 = Integer.valueOf(862);
      assertTrue(integer1.equals((Object)integer0));
      assertEquals(862, (int)integer1);
      assertNotNull(integer1);
      
      Integer integer2 = Integer.valueOf(862);
      assertTrue(integer2.equals((Object)integer0));
      assertTrue(integer2.equals((Object)integer1));
      assertEquals(862, (int)integer2);
      assertNotNull(integer2);
      
      homeLight0.setColor(integer2);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertTrue(integer2.equals((Object)integer0));
      assertTrue(integer2.equals((Object)integer1));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(862, (int)homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      
      homeLight0.setNameAngle(0.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(862, (int)homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      
      homeLight0.setMovable(true);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(862, (int)homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      
      homeLight0.setHeight((-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals((-19.779608F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(862, (int)homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      
      homeLight0.setColor(integer0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(integer0.equals((Object)integer1));
      assertTrue(integer0.equals((Object)integer2));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals((-19.779608F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(862, (int)homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      
      float[][] floatArray0 = homeLight0.getModelRotation();
      assertEquals(9, stringArray0.length);
      assertEquals(3, floatArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(floatArray0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals((-19.779608F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(862, (int)homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      
      // Undeclared exception!
      try { 
        HomePieceOfFurniture.SortableProperty.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      stringArray0[3] = "";
      Long long0 = new Long((-83L));
      Float float0 = new Float((float) (-83L));
      Float.isFinite((-83L));
      Long.compare(2568L, 1L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[13];
      resourceURLContent0.getJAREntryName();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-83L), (-83L), (-83L), (-83L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      Level level0 = new Level("axez?(:nM", (-83L), (-83L), (-83L));
      homeLight0.isTopLeftPointAt(3.4028235E38F, (-83L), 3.4028235E38F);
      homeLight1.setDescription("");
      BigDecimal bigDecimal1 = BigDecimal.ZERO;
      homeLight0.getY();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      lightSourceArray0[2] = lightSource0;
      LightSource lightSource1 = new LightSource(791, 0L, 791, 46);
      lightSourceArray0[3] = lightSource1;
      lightSourceArray0[4] = lightSource1;
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource2 = new LightSource(0L, 0.0F, (-19.779608F), 46);
      lightSourceArray0[6] = lightSource2;
      Float.max((-2669.9358F), 46);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isBottomRightPointAt(1.0F, 46, (-19.779608F));
      homeLight0.isPointAt(0L, 0.0F, 0.0F);
      homeLight0.isDoorOrWindow();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      String[] stringArray0 = new String[8];
      Long long0 = new Long(1L);
      Float float0 = new Float((float) 1L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 1L, 1L, 1L, 1L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.getLightSources();
      HomeLight homeLight1 = new HomeLight(homeLight0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      resourceURLContent0.getJAREntryURL();
      homeLight0.isPointAt(1L, 1L, 1L);
      homeLight1.isBottomLeftPointAt(1L, 1L, 1L);
      homeLight1.getGroundElevation();
      homeLight1.getDepth();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[3] = "";
      Long long0 = new Long((-55L));
      Float float0 = new Float((float) (-55L));
      Float.isFinite((-55L));
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-55L), (-55L), (-55L), (-55L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      Integer integer0 = new Integer(121);
      HomeLight homeLight2 = homeLight0.clone();
      homeLight2.setColor(integer0);
      HomeLight homeLight3 = homeLight1.clone();
      homeLight3.setDescription("");
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      resourceURLContent0.getJAREntryName();
      lightSourceArray0[3] = lightSourceArray0[2];
      lightSourceArray0[4] = lightSourceArray0[2];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      homeLight0.setWidth(2123.574F);
      homeLight0.setNameAngle(2123.574F);
      homeLight0.setAngle(860.215F);
      homeLight0.setHeight(860.215F);
      homeLight0.isNameCenterPointAt(860.215F, 2123.574F, 860.215F);
      homeLight0.isModelMirrored();
      homeLight0.setName("");
      homeLight0.isNameVisible();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      String string0 = "";
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      LightSource[] lightSourceArray0 = new LightSource[9];
      lightSourceArray0[3] = lightSourceArray0[2];
      lightSourceArray0[4] = lightSourceArray0[2];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, false, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, false, false, bigDecimal0, bigDecimal0, (String) null);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "j", temporaryURLContent0, 690.6708F, 827.0952F, "");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Object object0 = new Object();
      homeTexture0.equals(object0);
      // Undeclared exception!
      try { 
        homeLight1.setTexture(homeTexture0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't texturable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[2] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      lightSourceArray0[6] = lightSourceArray0[4];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      
      homeLight0.setDepth(2.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(2.0F, homeLight0.getDepth(), 0.01F);
      
      homeLight0.setAngle(1.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(2.0F, homeLight0.getDepth(), 0.01F);
      
      homeLight0.setDepth((-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals((-19.779608F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      
      HomePieceOfFurniture.SortableProperty[] homePieceOfFurniture_SortablePropertyArray0 = HomePieceOfFurniture.SortableProperty.values();
      assertEquals(19, homePieceOfFurniture_SortablePropertyArray0.length);
      assertNotNull(homePieceOfFurniture_SortablePropertyArray0);
      
      homeLight0.setModelMirrored(true);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals((-19.779608F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertTrue(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      
      boolean boolean1 = homeLight0.intersectsRectangle(2079.3F, 0L, 1548.0F, 2079.3F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(boolean1 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals((-19.779608F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertTrue(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      
      float float1 = homeLight0.getNameYOffset();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals(0.0F, float1, 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals((-19.779608F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertTrue(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[7] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      Float.isFinite(0L);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      bigDecimal0.stripTrailingZeros();
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isPointAt(0L, 0L, 0.0F);
      homeLight0.getColor();
      Float.valueOf(0.0F);
      Float float1 = Float.valueOf(0.0F);
      homeLight0.setShininess(float1);
      homeLight0.setNameVisible(true);
      homeLight0.getValueAddedTaxPercentage();
      homeLight0.isTopRightPointAt(5.2831855F, 5.2831855F, 1483.9431F);
      homeLight0.getModel();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[7] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(328.95245F, 791, 2.0F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(2.0F, lightSource0.getZ(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      assertEquals(328.95245F, lightSource0.getX(), 0.01F);
      
      lightSourceArray0[1] = lightSource0;
      LightSource lightSource1 = new LightSource((-2872), (-487.1F), 328.95245F, (-2872), float0);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals((-2872.0F), lightSource1.getX(), 0.01F);
      assertEquals((-2872), lightSource1.getColor());
      assertEquals(328.95245F, lightSource1.getZ(), 0.01F);
      assertEquals((-487.1F), lightSource1.getY(), 0.01F);
      assertEquals(0.0F, lightSource1.getDiameter(), 0.01F);
      
      lightSourceArray0[2] = lightSource1;
      LightSource lightSource2 = new LightSource((-487.1F), 328.95245F, 791, (-2872));
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertNotNull(lightSource2);
      assertEquals((-2872), lightSource2.getColor());
      assertEquals(791.0F, lightSource2.getZ(), 0.01F);
      assertNull(lightSource2.getDiameter());
      assertEquals(328.95245F, lightSource2.getY(), 0.01F);
      assertEquals((-487.1F), lightSource2.getX(), 0.01F);
      
      lightSourceArray0[4] = lightSource1;
      LightSource lightSource3 = new LightSource(20, 328.95245F, 791, 20, float0);
      assertFalse(lightSource3.equals((Object)lightSource1));
      assertFalse(lightSource3.equals((Object)lightSource0));
      assertFalse(lightSource3.equals((Object)lightSource2));
      assertNotNull(lightSource3);
      assertEquals(20, lightSource3.getColor());
      assertEquals(791.0F, lightSource3.getZ(), 0.01F);
      assertEquals(0.0F, lightSource3.getDiameter(), 0.01F);
      assertEquals(328.95245F, lightSource3.getY(), 0.01F);
      assertEquals(20.0F, lightSource3.getX(), 0.01F);
      
      LightSource lightSource4 = new LightSource(2.0F, 20, 3094.0688F, (-2872));
      assertFalse(lightSource4.equals((Object)lightSource1));
      assertFalse(lightSource4.equals((Object)lightSource0));
      assertFalse(lightSource4.equals((Object)lightSource2));
      assertFalse(lightSource4.equals((Object)lightSource3));
      assertNotNull(lightSource4);
      assertEquals(20.0F, lightSource4.getY(), 0.01F);
      assertEquals(2.0F, lightSource4.getX(), 0.01F);
      assertEquals((-2872), lightSource4.getColor());
      assertEquals(3094.0688F, lightSource4.getZ(), 0.01F);
      assertNull(lightSource4.getDiameter());
      
      lightSourceArray0[7] = lightSource4;
      lightSourceArray0[8] = lightSource1;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 328.95245F, 0L, 328.95245F, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, false, bigDecimal0, bigDecimal0, "");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(328.95245F, catalogLight0.getWidth(), 0.01F);
      assertEquals(328.95245F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(328.95245F, catalogLight0.getWidth(), 0.01F);
      assertEquals(328.95245F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(328.95245F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(328.95245F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(164.47623F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      homeLight0.move(0.0F, 791);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(328.95245F, catalogLight0.getWidth(), 0.01F);
      assertEquals(328.95245F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(328.95245F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(791.0F, homeLight0.getY(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(328.95245F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(164.47623F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      boolean boolean0 = homeLight0.isTopRightPointAt(0L, 0L, 20);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(boolean0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(328.95245F, catalogLight0.getWidth(), 0.01F);
      assertEquals(328.95245F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(328.95245F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(791.0F, homeLight0.getY(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(328.95245F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(164.47623F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      homeLight0.setDescription("[O[o");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(328.95245F, catalogLight0.getWidth(), 0.01F);
      assertEquals(328.95245F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(328.95245F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals("[O[o", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(791.0F, homeLight0.getY(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(328.95245F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(164.47623F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      homeLight0.setNameVisible(false);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[3] = "";
      Long long0 = new Long((-55L));
      Float float0 = new Float((float) (-55L));
      Float.isFinite((-55L));
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-55L), (-55L), (-55L), (-55L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setAngle((-1863.0919F));
      homeLight1.setDescription("");
      homeLight0.getPriceValueAddedTaxIncluded();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[3] = "";
      Long long0 = new Long((-55L));
      Float float0 = new Float((float) (-55L));
      Float.isFinite((-55L));
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-55L), (-55L), (-55L), (-55L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.getNameStyle();
      homeLight0.setNameStyle((TextStyle) null);
      homeLight0.setColor((Integer) null);
      homeLight0.setDescription((String) null);
      homeLight1.clone();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[3] = "";
      Long long0 = new Long((-55L));
      Float float0 = new Float((float) (-55L));
      Float.isFinite((-55L));
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-55L), (-55L), (-55L), (-55L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.clone();
      homeLight0.isNameCenterPointAt(1995.259F, (-2309.2F), 691.0F);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      lightSourceArray0[2] = lightSource0;
      LightSource lightSource1 = new LightSource(791, 0L, 791, 791);
      lightSourceArray0[3] = lightSource1;
      lightSourceArray0[4] = lightSource1;
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource2 = new LightSource(0L, 0.0F, (-19.779608F), 791);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      Integer.valueOf(862);
      Integer.valueOf(862);
      Integer integer0 = Integer.valueOf(862);
      homeLight0.setColor(integer0);
      homeLight0.setNameAngle(0.0F);
      homeLight0.setMovable(true);
      homeLight0.setHeight((-19.779608F));
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[7] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(0.3926991F, 2, (-487.1F), 2, float0);
      lightSourceArray0[1] = lightSource0;
      LightSource lightSource1 = new LightSource(2, (-487.1F), 0.3926991F, 2, float0);
      lightSourceArray0[2] = lightSource1;
      LightSource lightSource2 = new LightSource((-487.1F), 0.3926991F, 2, 46);
      lightSourceArray0[3] = lightSource2;
      lightSourceArray0[4] = lightSource1;
      LightSource lightSource3 = new LightSource(20, 0.3926991F, 2, 20, float0);
      LightSource lightSource4 = new LightSource(0.0F, 20, 3094.0688F, 2);
      lightSourceArray0[3] = lightSource4;
      lightSourceArray0[8] = lightSource1;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0.3926991F, 0L, 0.3926991F, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, false, true, false, bigDecimal0, bigDecimal0, "");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("M2tH$P&m&x.[yz!#");
      homeLight0.containsPoint(0.3926991F, 46.0F, 2);
      homeLight0.getGroundElevation();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[3] = "";
      Long long0 = new Long((-55L));
      Float float0 = new Float((float) (-55L));
      Float.isFinite((-55L));
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-55L), (-55L), (-55L), (-55L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      Level level0 = new Level("axez?(:nM", (-55L), (-55L), (-55L));
      homeLight0.isTopLeftPointAt((-55L), (-55L), (-55L));
      homeLight0.getValueAddedTax();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = null;
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[7];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LightSource lightSource0 = new LightSource(0L, 791, 0.0F, 791, float0);
      lightSourceArray0[2] = lightSource0;
      LightSource lightSource1 = new LightSource(791, 0L, 791, 46);
      lightSourceArray0[4] = lightSource1;
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource2 = new LightSource(0L, 0.0F, (-19.779608F), 46);
      lightSourceArray0[6] = lightSource2;
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.getPriceValueAddedTaxIncluded();
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.clone();
      homeLight1.isDoorOrWindow();
      homeLight1.setX(0L);
      homeLight0.getShininess();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[8];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      Long long1 = new Long(0L);
      homeLight0.setAngle(0L);
      HomeLight homeLight1 = new HomeLight(homeLight0);
      homeLight0.setNameYOffset(0L);
      homeLight0.setModelMirrored(true);
      homeLight0.getPriceValueAddedTaxIncluded();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long((-11L));
      Float float0 = new Float((float) (-11L));
      Float.isFinite((-11L));
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-11L), (-11L), (-11L), (-11L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      bigDecimal0.stripTrailingZeros();
      HomeLight homeLight1 = new HomeLight(homeLight0);
      Float float1 = new Float((-9.3558F));
      Float.valueOf(448.32F);
      homeLight0.isTopRightPointAt(5.9049644F, 2148.8F, 6.1405263F);
      homeLight1.getModel();
      homeLight0.setDescription((String) null);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      String[] stringArray0 = new String[8];
      Long long0 = new Long((-11L));
      Float float0 = new Float((float) (-11L));
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-11L), (-11L), (-11L), (-11L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      Long.remainderUnsigned((-11L), (-5231L));
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight0.isModelMirrored();
      homeLight0.setName("Z{<v");
      homeLight0.getGroundElevation();
      homeLight0.getName();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(0L, 0L, (-19.779608F), 46);
      lightSourceArray0[6] = lightSource0;
      Float.isFinite(0L);
      Float.max((-2669.9358F), 46);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      bigDecimal0.stripTrailingZeros();
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isBottomRightPointAt(1.0F, 46, (-19.779608F));
      homeLight0.isPointAt(0L, 0L, 0.0F);
      homeLight0.getColor();
      Float.valueOf((-1726.1F));
      Float float1 = Float.valueOf(0.0F);
      homeLight0.setShininess(float1);
      homeLight0.setNameVisible(true);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      String[] stringArray0 = new String[10];
      stringArray0[2] = "";
      stringArray0[5] = null;
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[10];
      lightSourceArray0[3] = lightSourceArray0[1];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isBottomRightPointAt(0L, 73, (-21.21027F));
      resourceURLContent0.getJAREntryName();
      homeLight0.isNameCenterPointAt(73, (-43.7F), 73);
      homeLight0.getPriceValueAddedTaxIncluded();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      stringArray0[2] = null;
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[6] = lightSourceArray0[4];
      resourceURLContent0.getJAREntryName();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1a\"E-ts1_");
      homeLight0.getNameXOffset();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      resourceURLContent0.getJAREntryName();
      homeLight0.setNameYOffset((-349.2F));
      homeLight0.setNameVisible(false);
      homeLight0.getValueAddedTaxPercentage();
      homeLight0.isTopRightPointAt((-1.0F), 1.0F, (-3092.9F));
      homeLight0.getModel();
      homeLight0.isBottomRightPointAt((-1.0F), 0.0F, (-1.0F));
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(3L);
      Float float0 = new Float((float) 3L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource((-487.1F), 2.0F, 0.0F, 791);
      lightSourceArray0[1] = lightSource0;
      LightSource lightSource1 = new LightSource(0.3926991F, 791, 0.76477206F, 791, float0);
      lightSourceArray0[2] = lightSource1;
      LightSource lightSource2 = new LightSource(791, 0.3926991F, 791, 46);
      lightSourceArray0[3] = lightSource2;
      LightSource lightSource3 = new LightSource(0.3926991F, (-487.1F), 3L, 791, float0);
      lightSourceArray0[4] = lightSource3;
      LightSource lightSource4 = new LightSource(791, 791, 0.0F, 20);
      lightSourceArray0[5] = lightSource4;
      LightSource lightSource5 = new LightSource(3L, 0.76477206F, 0.0F, 46);
      lightSourceArray0[6] = lightSource5;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0.3926991F, 3L, 0.3926991F, 3L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isBottomRightPointAt(0.3926991F, 46, 3L);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      homeLight0.isBottomLeftPointAt(1740.44F, 1740.44F, 2683.83F);
      homeLight0.getModel();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.VALUE_ADDED_TAX_PERCENTAGE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[5] = null;
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      lightSourceArray0[2] = lightSource0;
      LightSource lightSource1 = new LightSource(791, 0L, 791, 46);
      lightSourceArray0[4] = lightSource1;
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource2 = new LightSource(0L, 0.0F, (-479.5861F), 46);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isBottomRightPointAt(1.0F, 46, (-479.5861F));
      homeLight0.setElevation(9.353325F);
      homeLight0.isBottomLeftPointAt(0.0F, 46, (-2347.2F));
      homeLight0.getDescription();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      lightSourceArray0[2] = lightSource0;
      LightSource lightSource1 = new LightSource(791, 0L, 791, 791);
      lightSourceArray0[3] = lightSource1;
      lightSourceArray0[4] = lightSource1;
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource2 = new LightSource(0L, 0.0F, (-19.779608F), 791);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      homeLight0.setElevation(791);
      homeLight0.setMovable(true);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      String[] stringArray0 = new String[8];
      Long long0 = new Long((-11L));
      Float float0 = new Float((float) (-11L));
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      resourceURLContent0.getJAREntryName();
      CatalogLight catalogLight0 = new CatalogLight(")`FMW`-=a=Vi", "", "/_our:(S[Q8", "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-11L), (-11L), (-11L), 4.4950414F, true, lightSourceArray0, "/_our:(S[Q8", (float[][]) null, "", true, true, false, bigDecimal0, bigDecimal0, "VALUE_ADDED_TAX_PERCENTAGE");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.clone();
      // Undeclared exception!
      try { 
        homeLight0.setTexture((HomeTexture) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't texturable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[3] = "";
      Long long0 = new Long((-55L));
      Float float0 = new Float((float) (-55L));
      FileSystemHandling.shouldAllThrowIOExceptions();
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-55L), (-55L), (-55L), (-55L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setName("");
      homeLight1.setVisible(true);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty.values();
      HomePieceOfFurniture homePieceOfFurniture0 = null;
      try {
        homePieceOfFurniture0 = new HomePieceOfFurniture((PieceOfFurniture) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      stringArray0[2] = null;
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[6] = lightSourceArray0[4];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1a\"E-ts1_");
      homeLight0.getNameXOffset();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      homeLight0.setDescription("\u0002n6Ur{\"cGiku '");
      homeLight0.setNameYOffset((-349.2F));
      homeLight0.setNameVisible(false);
      homeLight0.getValueAddedTaxPercentage();
      homeLight0.isTopRightPointAt(0.0F, 0L, (-1.0F));
      homeLight0.getModel();
      homeLight0.isBottomLeftPointAt(1.0F, 0L, 1.0F);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[7];
      Long.remainderUnsigned(1107L, 373L);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LightSource lightSource0 = new LightSource(791, 0L, 791, 46);
      lightSourceArray0[4] = lightSource0;
      LightSource lightSource1 = new LightSource(0L, 0.0F, (-19.779608F), 46);
      lightSourceArray0[6] = lightSource1;
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setWidth(0.0F);
      homeLight1.setNameAngle((-1.0F));
      homeLight0.setAngle((-546.0F));
      homeLight0.setNameXOffset((-19.779608F));
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      TextStyle textStyle0 = new TextStyle(0L, true, false);
      TextStyle textStyle1 = textStyle0.deriveStyle(0L);
      homeLight0.setNameStyle(textStyle1);
      homeLight0.setName("");
      homeLight0.setVisible(true);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = new HomeLight(homeLight0);
      HomeLight homeLight2 = homeLight0.clone();
      homeLight2.setWidth(1394.9326F);
      homeLight0.setNameAngle(0L);
      homeLight1.setAngle(1394.9326F);
      homeLight2.setNameXOffset(0L);
      homeLight0.getValueAddedTax();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long((-11L));
      Float float0 = new Float((float) (-11L));
      Float.isFinite((-11L));
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      resourceURLContent0.getJAREntryURL();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-11L), (-11L), (-11L), (-11L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      BigDecimal bigDecimal1 = bigDecimal0.stripTrailingZeros();
      HomeLight homeLight1 = new HomeLight(homeLight0);
      Integer integer0 = Integer.valueOf(3587);
      homeLight0.setColor(integer0);
      Float float1 = new Float((-9.3558F));
      Float float2 = Float.valueOf(448.32F);
      float2.equals(bigDecimal1);
      Float float3 = new Float((-1595.1604F));
      homeLight0.setShininess(float3);
      homeLight0.getWidth();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(0L, 0L, (-19.779608F), 46);
      lightSourceArray0[6] = lightSource0;
      Float.isFinite(0L);
      Float.max((-2669.9358F), 46);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      bigDecimal0.stripTrailingZeros();
      MathContext mathContext0 = MathContext.DECIMAL32;
      bigDecimal0.negate(mathContext0);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isBottomRightPointAt(1.0F, 46, (-19.779608F));
      homeLight0.isPointAt(0L, 0L, 0.0F);
      homeLight0.getX();
      homeLight0.getAngle();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[7] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource((-2872), (-487.1F), 328.95245F, (-2872), float0);
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      LightSource lightSource1 = new LightSource(2.0F, 20, 3094.0688F, (-2872));
      lightSourceArray0[7] = lightSource1;
      lightSourceArray0[8] = lightSource0;
      resourceURLContent0.getJAREntryURL();
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 328.95245F, 0L, 328.95245F, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, false, bigDecimal0, bigDecimal0, "");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isDoorOrWindow();
      TextStyle textStyle0 = new TextStyle(2514.55F);
      homeLight0.setNameStyle(textStyle0);
      homeLight0.getX();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[7] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(328.95245F, 791, 2.0F, 791, float0);
      lightSourceArray0[1] = lightSource0;
      LightSource lightSource1 = new LightSource(791, (-487.1F), 328.95245F, 791, float0);
      lightSourceArray0[2] = lightSource1;
      LightSource lightSource2 = new LightSource((-487.1F), 328.95245F, 791, 791);
      lightSourceArray0[4] = lightSource1;
      LightSource lightSource3 = new LightSource(20, 328.95245F, 791, 20, float0);
      LightSource lightSource4 = new LightSource(2.0F, 20, 3094.0688F, 791);
      lightSourceArray0[7] = lightSource4;
      lightSourceArray0[8] = lightSource1;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 328.95245F, 0L, 328.95245F, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, false, bigDecimal0, bigDecimal0, "");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.move(0.0F, 791);
      homeLight0.isTopRightPointAt(0L, 0L, 20);
      homeLight0.setNameVisible(false);
      homeLight0.getGroundElevation();
      // Undeclared exception!
      try { 
        homeLight0.setShininess(float0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't texturable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HomePieceOfFurniture.getFurnitureComparator((HomePieceOfFurniture.SortableProperty) null);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(9L);
      Float float0 = new Float((float) 9L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[7];
      Long.remainderUnsigned(1107L, 373L);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LightSource lightSource0 = new LightSource(791, 9L, 791, 46);
      lightSourceArray0[4] = lightSource0;
      LightSource lightSource1 = new LightSource(9L, 0.0F, (-19.779608F), 46);
      lightSourceArray0[6] = lightSource1;
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 9L, 9L, 9L, 9L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.getPriceValueAddedTaxIncluded();
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.clone();
      homeLight1.isDoorOrWindow();
      homeLight0.setWidth(9L);
      // Undeclared exception!
      try { 
        HomePieceOfFurniture.Property.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      Long long0 = new Long((-55L));
      Float float0 = new Float((float) (-55L));
      Float.isFinite((-55L));
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      resourceURLContent0.getJAREntryName();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-55L), (-55L), (-55L), (-55L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.getPriceValueAddedTaxIncluded();
      homeLight1.setModelMirrored(false);
      homeLight1.setAngle((-55L));
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      resourceURLContent0.getJAREntryName();
      lightSourceArray0[3] = lightSourceArray0[2];
      lightSourceArray0[4] = lightSourceArray0[2];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      homeLight0.setNameYOffset(4.0F);
      homeLight0.setNameVisible(true);
      homeLight0.setMovable(true);
      homeLight0.setHeight((-344.8F));
      homeLight0.getHeight();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      LightSource[] lightSourceArray0 = new LightSource[9];
      lightSourceArray0[4] = lightSourceArray0[2];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, false, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, false, false, bigDecimal0, bigDecimal0, (String) null);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setWidth((-545.866F));
      resourceURLContent0.getJAREntryName();
      HomeLight homeLight2 = new HomeLight(catalogLight0);
      homeLight2.isTopRightPointAt((-3712.0F), (-1.0F), (-3712.0F));
      homeLight1.getModel();
      homeLight0.setDescription("");
      homeLight2.getPriceValueAddedTaxIncluded();
      homeLight2.isTexturable();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      resourceURLContent0.getJAREntryName();
      lightSourceArray0[3] = lightSourceArray0[2];
      lightSourceArray0[4] = lightSourceArray0[2];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      homeLight0.setNameYOffset(4.0F);
      homeLight0.setNameVisible(true);
      homeLight0.getValueAddedTaxPercentage();
      homeLight0.isTopRightPointAt(4.0F, 783.5F, 783.5F);
      homeLight0.getModel();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[5] = null;
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[10];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSourceArray0[1];
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource1 = new LightSource(0L, 0.0F, (-19.779608F), 46);
      lightSourceArray0[6] = lightSource1;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isBottomRightPointAt(1.0F, 46, (-19.779608F));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      homeLight0.setElevation(9.0F);
      homeLight0.setMovable(false);
      homeLight0.isDoorOrWindow();
      homeLight0.getColor();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[5] = "com.eteks.sweethome3d.model.CatalogLight";
      stringArray0[6] = null;
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(0L, 791, (-487.1F), 791, float0);
      lightSourceArray0[0] = lightSource0;
      LightSource lightSource1 = new LightSource((-487.1F), 2.0F, 0.0F, 791);
      lightSourceArray0[1] = lightSource1;
      LightSource lightSource2 = new LightSource(1.0F, 791, 0.76477206F, (-2872), float0);
      lightSourceArray0[2] = lightSource2;
      LightSource lightSource3 = new LightSource(791, 0L, 791, 46);
      lightSourceArray0[3] = lightSource3;
      LightSource lightSource4 = new LightSource(0L, (-487.1F), 1.0F, 791, float0);
      lightSourceArray0[4] = lightSource4;
      LightSource lightSource5 = new LightSource(791, 791, 0.0F, 20);
      lightSourceArray0[5] = lightSource5;
      LightSource lightSource6 = new LightSource(0L, 0.76477206F, 0.0F, 46);
      lightSourceArray0[6] = lightSource6;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, false, bigDecimal0, bigDecimal0, "");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isBottomRightPointAt((-1589.899F), 46, 0.0F);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[8] = "";
      stringArray0[7] = stringArray0[0];
      Long long0 = new Long((-17L));
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource((-487.1F), 328.95245F, 791, 791);
      lightSourceArray0[4] = lightSourceArray0[2];
      LightSource lightSource1 = new LightSource(2.0F, 20, 3094.0688F, 791);
      lightSourceArray0[7] = lightSource1;
      lightSourceArray0[8] = lightSourceArray0[4];
      BigDecimal bigDecimal0 = new BigDecimal((-17L));
      String[] stringArray1 = new String[9];
      stringArray1[0] = "";
      stringArray1[1] = "";
      stringArray1[2] = "";
      stringArray1[3] = "";
      stringArray1[4] = "";
      stringArray1[5] = "com.eteks.sweethome3d.model.CatalogLight";
      stringArray1[6] = null;
      stringArray1[7] = "";
      stringArray1[8] = "";
      Long long1 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Class<HomePieceOfFurniture> class1 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent1 = new ResourceURLContent(class1, "", true);
      LightSource[] lightSourceArray1 = new LightSource[9];
      LightSource lightSource2 = new LightSource((-487.1F), (-487.1F), 1.0F, 791);
      lightSourceArray1[0] = lightSource2;
      LightSource lightSource3 = new LightSource((-487.1F), 2.0F, 0.0F, 791);
      lightSourceArray1[1] = lightSource3;
      LightSource lightSource4 = new LightSource(0.0F, (-1999.1F), 0.3926991F, (-2872));
      lightSourceArray1[2] = lightSource4;
      LightSource lightSource5 = new LightSource((-185.9665F), 0.3926991F, 791, 46);
      lightSourceArray1[3] = lightSource5;
      LightSource lightSource6 = new LightSource(46, (-1999.1F), 1.0F, 20);
      lightSourceArray1[4] = lightSource6;
      LightSource lightSource7 = new LightSource((-1999.1F), (-1999.1F), 0.0F, 20);
      lightSourceArray1[5] = lightSource7;
      LightSource lightSource8 = new LightSource(0L, 0.0F, 0.0F, 46);
      lightSourceArray1[6] = lightSource8;
      LightSource lightSource9 = new LightSource(0.0F, 0.0F, 3094.0688F, (-2872));
      lightSourceArray1[7] = lightSource9;
      LightSource lightSource10 = new LightSource((-1589.899F), 1.0F, 0.0F, (-1775));
      lightSourceArray1[8] = lightSource10;
      BigDecimal bigDecimal1 = new BigDecimal(0L);
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray1, long1, float0, resourceURLContent1, resourceURLContent1, resourceURLContent1, 0.3926991F, 0L, 0.3926991F, 0L, true, lightSourceArray1, "", (float[][]) null, (String) null, true, true, false, bigDecimal1, bigDecimal1, "");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      // Undeclared exception!
      try { 
        homeLight1.setColor((Integer) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't texturable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      String[] stringArray0 = new String[8];
      Long long0 = new Long((-11L));
      Float float0 = new Float((float) (-11L));
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      Long.sum((-11L), (-11L));
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[5];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-11L), (-11L), (-11L), (-11L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.getColor();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[7] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(328.95245F, 791, 2.0F, 791, float0);
      lightSourceArray0[1] = lightSource0;
      LightSource lightSource1 = new LightSource((-2872), 328.95245F, 328.95245F, (-2872), float0);
      lightSourceArray0[2] = lightSource1;
      LightSource lightSource2 = new LightSource(0L, 328.95245F, 791, (-2872));
      lightSourceArray0[4] = lightSource1;
      LightSource lightSource3 = new LightSource(20, 328.95245F, 791, 20, float0);
      LightSource lightSource4 = new LightSource(2.0F, 20, 3094.0688F, (-2872));
      lightSourceArray0[7] = lightSource4;
      lightSourceArray0[8] = lightSource1;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 328.95245F, 0L, 328.95245F, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, false, bigDecimal0, bigDecimal0, "");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.move(0.0F, 791);
      homeLight0.getHeight();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      stringArray0[3] = "";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Long long0 = new Long((-55L));
      Float float0 = new Float((float) (-55L));
      Float.isFinite((-55L));
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      resourceURLContent0.getJAREntryName();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-55L), (-55L), (-55L), (-55L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.getLightSources();
      HomeLight homeLight1 = homeLight0.clone();
      homeLight0.setColor((Integer) null);
      homeLight1.setDescription("$?unP7lFk");
      homeLight1.getX();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[3] = "";
      Long long0 = new Long((-11L));
      Float float0 = new Float((float) (-11L));
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-11L), (-11L), (-11L), (-11L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      bigDecimal0.stripTrailingZeros();
      homeLight0.getLightSources();
      HomeLight homeLight1 = new HomeLight(homeLight0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight0.setNameXOffset((-1.3961023F));
      homeLight0.isBottomLeftPointAt(429.44F, 599.1682F, 429.44F);
      homeLight0.getModel();
      homeLight1.isTopRightPointAt((-1.3961023F), (-1.3961023F), 429.44F);
      Level level0 = new Level("i\"x", 0.0F, 0.0F, 0.0F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("i\"x", propertyChangeListener0);
      level0.addPropertyChangeListener(propertyChangeListenerProxy0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight0.isAtLevel(level0);
      homeLight0.getAngle();
      homeLight1.setAngle((-181.421F));
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      stringArray0[2] = "";
      stringArray0[5] = null;
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[10];
      int int0 = 59;
      lightSourceArray0[3] = lightSourceArray0[1];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = new HomeLight(catalogLight0);
      homeLight1.setVisible(false);
      String string0 = null;
      FurnitureCategory furnitureCategory0 = new FurnitureCategory((String) null);
      Class<String> class1 = String.class;
      boolean boolean0 = false;
      ResourceURLContent resourceURLContent1 = null;
      try {
        resourceURLContent1 = new ResourceURLContent(class1, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[5] = null;
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      lightSourceArray0[2] = lightSource0;
      LightSource lightSource1 = new LightSource(791, 0L, 791, 46);
      lightSourceArray0[4] = lightSource1;
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource2 = new LightSource(0L, 0.0F, (-479.5861F), 46);
      resourceURLContent0.getJAREntryName();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isBottomRightPointAt(1.0F, 46, (-479.5861F));
      homeLight0.setElevation(9.0F);
      homeLight0.isBottomLeftPointAt(0.0F, 46, (-2347.2F));
      homeLight0.getHeight();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      resourceURLContent0.getJAREntryName();
      lightSourceArray0[3] = lightSourceArray0[2];
      lightSourceArray0[4] = lightSourceArray0[2];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.getPriceValueAddedTaxIncluded();
      homeLight1.setWidth((-545.866F));
      homeLight1.setNameAngle((-1.0F));
      homeLight0.setAngle(0L);
      homeLight0.setNameXOffset(0L);
      homeLight1.setNameYOffset(0L);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      String[] stringArray0 = new String[8];
      Long long0 = new Long(1L);
      Float float0 = new Float((float) 1L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 1L, 1L, 1L, 1L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setNameVisible(true);
      resourceURLContent0.getJAREntryName();
      HomeLight homeLight1 = new HomeLight(homeLight0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeLight homeLight2 = new HomeLight(homeLight1);
      homeLight2.getPriceValueAddedTaxIncluded();
      homeLight2.getLevel();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[3] = "";
      Long long0 = new Long((-55L));
      Float float0 = new Float((float) (-55L));
      FileSystemHandling.shouldAllThrowIOExceptions();
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[16];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-55L), (-55L), (-55L), (-55L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setVisible(true);
      HomeLight homeLight1 = new HomeLight(homeLight0);
      homeLight1.setX((-55L));
      homeLight1.setShininess((Float) null);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      resourceURLContent0.getJAREntryName();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Long long1 = Long.valueOf(687L);
      CatalogLight catalogLight0 = new CatalogLight("", (String) null, "", "com.eteks.sweethome3d.model.HomePieceOfFurniture$4", stringArray0, long1, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 687L, 0L, 687L, true, lightSourceArray0, "", (float[][]) null, "", true, true, true, bigDecimal0, bigDecimal0, "");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      Long long2 = new Long(687L);
      homeLight0.setNameYOffset(687L);
      Level level0 = new Level("", 0L, 823.272F, 1631.126F);
      homeLight0.setNameVisible(true);
      homeLight0.getValueAddedTaxPercentage();
      homeLight0.isTopRightPointAt(1631.126F, (-0.2F), 1.0F);
      homeLight0.getModel();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = null;
      stringArray0[3] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      lightSourceArray0[4] = lightSourceArray0[2];
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource1 = new LightSource(0L, 0.0F, (-19.779608F), 791);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setDescription("com.eteks.sweethome3d.tools.URLContent");
      homeLight1.setWidth((-545.866F));
      homeLight1.setNameAngle((-1.0F));
      resourceURLContent0.getJAREntryName();
      homeLight1.setVisible(true);
      homeLight1.setNameAngle((-3874.831F));
      HomeLight homeLight2 = homeLight1.clone();
      homeLight2.getValueAddedTaxPercentage();
      homeLight2.getModel();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource((-487.1F), 2.0F, 0.0F, 791);
      lightSourceArray0[1] = lightSource0;
      LightSource lightSource1 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      lightSourceArray0[2] = lightSource1;
      LightSource lightSource2 = new LightSource(791, 0L, 791, 46);
      lightSourceArray0[3] = lightSource2;
      lightSourceArray0[4] = lightSource2;
      lightSourceArray0[5] = lightSource1;
      LightSource lightSource3 = new LightSource(0L, 0.0F, (-19.779608F), 46);
      lightSourceArray0[6] = lightSource3;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isBottomRightPointAt(1.0F, 46, (-19.779608F));
      homeLight0.getTexture();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "com.eteks.sweethome3d.model.CatalogLight";
      stringArray0[6] = null;
      stringArray0[7] = "";
      stringArray0[8] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource((-487.1F), (-487.1F), 1.0F, 791);
      lightSourceArray0[0] = lightSource0;
      LightSource lightSource1 = new LightSource((-487.1F), 2.0F, 0.0F, 791);
      lightSourceArray0[1] = lightSource1;
      LightSource lightSource2 = new LightSource(0.0F, (-1999.1F), 0.3926991F, (-2872));
      lightSourceArray0[2] = lightSource2;
      LightSource lightSource3 = new LightSource((-185.9665F), 0.3926991F, 791, 46);
      lightSourceArray0[3] = lightSource3;
      LightSource lightSource4 = new LightSource(46, (-1999.1F), 1.0F, 20);
      lightSourceArray0[4] = lightSource4;
      LightSource lightSource5 = new LightSource((-1999.1F), (-1999.1F), 0.0F, 20);
      lightSourceArray0[5] = lightSource5;
      LightSource lightSource6 = new LightSource(0L, 0.0F, 0.0F, 46);
      lightSourceArray0[6] = lightSource6;
      LightSource lightSource7 = new LightSource(0.0F, 0.0F, 3094.0688F, (-2872));
      lightSourceArray0[7] = lightSource7;
      LightSource lightSource8 = new LightSource((-1589.899F), 1.0F, 0.0F, (-1775));
      lightSourceArray0[8] = lightSource8;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0.3926991F, 0L, 0.3926991F, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, false, bigDecimal0, bigDecimal0, "");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.getIcon();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Long long0 = new Long((-11L));
      assertEquals((-11L), (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) (-11L));
      assertEquals((-11.0F), (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      long long1 = Long.sum((-11L), (-11L));
      assertEquals((-22L), long1);
      
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[5];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = null;
      Float float1 = new Float(0.0);
      assertNotEquals((float)float1, (float)float0, 0.01F);
      assertEquals(0.0F, (float)float1, 0.01F);
      assertNotNull(float1);
      
      float float2 = float1.floatValue();
      assertNotEquals((float)float1, (float)float0, 0.01F);
      assertEquals(0.0F, float2, 0.01F);
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, "", "", (String) null, stringArray0, long0, (Float) 0.0F, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0.0F, (-11L), (-22L), 0.0F, false, lightSourceArray0, (String) null, (float[][]) null, "", true, false, true, bigDecimal0, bigDecimal0, "FNv>5kUe[-");
      assertEquals(5, lightSourceArray0.length);
      assertEquals(1, stringArray0.length);
      assertFalse(long0.equals((Object)long1));
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getCreator());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getDescription());
      assertFalse(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("", catalogLight0.getName());
      assertFalse(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals((-22.0F), catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals("FNv>5kUe[-", catalogLight0.getCurrency());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(5, lightSourceArray0.length);
      assertEquals(1, stringArray0.length);
      assertFalse(long0.equals((Object)long1));
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getCreator());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getDescription());
      assertFalse(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("", catalogLight0.getName());
      assertFalse(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals((-22.0F), catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals("FNv>5kUe[-", catalogLight0.getCurrency());
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals("", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertTrue(homeLight0.isVisible());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("FNv>5kUe[-", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-22.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isDeformable());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      boolean boolean1 = homeLight0.isNameCenterPointAt(0.5F, 2.0F, 89.0F);
      assertEquals(5, lightSourceArray0.length);
      assertEquals(1, stringArray0.length);
      assertFalse(long0.equals((Object)long1));
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getCreator());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getDescription());
      assertFalse(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("", catalogLight0.getName());
      assertFalse(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals((-22.0F), catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals("FNv>5kUe[-", catalogLight0.getCurrency());
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals("", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertTrue(homeLight0.isVisible());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("FNv>5kUe[-", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-22.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isDeformable());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      
      boolean boolean2 = homeLight0.isModelMirrored();
      assertEquals(5, lightSourceArray0.length);
      assertEquals(1, stringArray0.length);
      assertFalse(long0.equals((Object)long1));
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getCreator());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getDescription());
      assertFalse(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("", catalogLight0.getName());
      assertFalse(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals((-22.0F), catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals("FNv>5kUe[-", catalogLight0.getCurrency());
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals("", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertTrue(homeLight0.isVisible());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("FNv>5kUe[-", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-22.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isDeformable());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      
      homeLight0.setName("");
      assertEquals(5, lightSourceArray0.length);
      assertEquals(1, stringArray0.length);
      assertFalse(long0.equals((Object)long1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getCreator());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getDescription());
      assertFalse(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("", catalogLight0.getName());
      assertFalse(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals((-22.0F), catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals("FNv>5kUe[-", catalogLight0.getCurrency());
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals("", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertTrue(homeLight0.isVisible());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("FNv>5kUe[-", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-22.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isDeformable());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      
      float float3 = homeLight0.getGroundElevation();
      assertEquals(5, lightSourceArray0.length);
      assertEquals(1, stringArray0.length);
      assertFalse(long0.equals((Object)long1));
      assertEquals(float3, float2, 0.01F);
      assertEquals(0.0F, float3, 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getCreator());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getDescription());
      assertFalse(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("", catalogLight0.getName());
      assertFalse(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals((-22.0F), catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals("FNv>5kUe[-", catalogLight0.getCurrency());
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals("", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertTrue(homeLight0.isVisible());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("FNv>5kUe[-", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-22.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isDeformable());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      
      homeLight0.getCurrency();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HomePieceOfFurniture homePieceOfFurniture0 = null;
      try {
        homePieceOfFurniture0 = new HomePieceOfFurniture((PieceOfFurniture) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      lightSourceArray0[4] = lightSourceArray0[2];
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource1 = new LightSource(0L, 0.0F, (-19.779608F), 791);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setDescription("com.eteks.sweethome3d.tools.URLContent");
      homeLight1.setWidth((-545.866F));
      homeLight1.isBottomRightPointAt((-1115.29F), 791, 0L);
      homeLight1.setElevation((-1.0F));
      homeLight0.isBottomLeftPointAt(772.6007F, 0L, 285.0F);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "com.eteks.sweethome3d.model.CatalogLight";
      stringArray0[6] = null;
      stringArray0[7] = "";
      stringArray0[8] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource((-487.1F), (-487.1F), 1.0F, 791);
      lightSourceArray0[0] = lightSource0;
      LightSource lightSource1 = new LightSource((-487.1F), 2.0F, 0.0F, 791);
      lightSourceArray0[1] = lightSource1;
      LightSource lightSource2 = new LightSource(0.0F, (-1999.1F), 0.3926991F, (-2872));
      lightSourceArray0[2] = lightSource2;
      LightSource lightSource3 = new LightSource((-185.9665F), 0.3926991F, 791, 46);
      lightSourceArray0[3] = lightSource3;
      LightSource lightSource4 = new LightSource(46, (-1999.1F), 1.0F, 20);
      lightSourceArray0[4] = lightSource4;
      LightSource lightSource5 = new LightSource((-1999.1F), (-1999.1F), 0.0F, 20);
      lightSourceArray0[5] = lightSource5;
      LightSource lightSource6 = new LightSource(0L, 0.0F, 0.0F, 46);
      lightSourceArray0[6] = lightSource6;
      LightSource lightSource7 = new LightSource(0.0F, 0.0F, 3094.0688F, (-2872));
      lightSourceArray0[7] = lightSource7;
      LightSource lightSource8 = new LightSource((-1589.899F), 1.0F, 0.0F, (-1775));
      lightSourceArray0[8] = lightSource8;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0.3926991F, 0L, 0.3926991F, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, false, bigDecimal0, bigDecimal0, "");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.getY();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      BigDecimal bigDecimal1 = new BigDecimal(3619.337);
      homeLight0.setElevation(0.0F);
      RoundingMode roundingMode0 = RoundingMode.UNNECESSARY;
      bigDecimal0.divide(bigDecimal1, 1152, roundingMode0);
      Long long1 = new Long(0L);
      resourceURLContent0.getJAREntryURL();
      homeLight0.isTopRightPointAt(1650.289F, 1650.289F, 2148.8F);
      homeLight0.getModel();
      homeLight0.setDescription("");
      homeLight0.getPoints();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      stringArray0[0] = "";
      stringArray0[5] = "";
      Long long0 = new Long((-11L));
      Float float0 = new Float((float) (-11L));
      Float.isFinite((-11L));
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-11L), (-11L), (-11L), (-11L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setNameAngle((-11L));
      homeLight0.setAngle((-11L));
      homeLight0.setHeight((-11L));
      homeLight0.getNameStyle();
      homeLight0.setVisible(true);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      lightSourceArray0[2] = lightSource0;
      LightSource lightSource1 = new LightSource(791, 0L, 791, 791);
      lightSourceArray0[3] = lightSource1;
      lightSourceArray0[4] = lightSource1;
      lightSourceArray0[2] = lightSource0;
      LightSource lightSource2 = new LightSource(0L, 0.0F, (-19.779608F), 791);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, false, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, false, false, bigDecimal0, bigDecimal0, (String) null);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setWidth((-545.866F));
      homeLight1.setNameAngle((-1.0F));
      homeLight0.setAngle(0L);
      homeLight0.isMovable();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      stringArray0[3] = "";
      Long long0 = new Long((-55L));
      Float float0 = new Float((float) (-55L));
      FileSystemHandling.shouldAllThrowIOExceptions();
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      resourceURLContent0.getJAREntryName();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-55L), (-55L), (-55L), (-55L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.getLightSources();
      HomeLight homeLight1 = homeLight0.clone();
      Level level0 = new Level("i\"x", 0.0F, 0.0F, 0.0F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("i\"x", propertyChangeListener0);
      level0.addPropertyChangeListener(propertyChangeListenerProxy0);
      homeLight0.setLevel(level0);
      homeLight0.setColor((Integer) null);
      homeLight1.setDescription("$?unP7lFk");
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      stringArray0[2] = "";
      Long long0 = new Long(13L);
      Float float0 = new Float((float) 13L);
      Float.isFinite(13L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      lightSourceArray0[6] = lightSourceArray0[4];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 13L, 13L, 13L, 13L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.isBottomRightPointAt(2.0F, 0.0F, 0.0F);
      homeLight0.isPointAt((-2619.104F), (-1761.0F), (-4215.3F));
      resourceURLContent0.getJAREntryName();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      homeLight0.setElevation((-3186.3F));
      homeLight0.setMovable(true);
      homeLight1.getWidth();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      stringArray0[2] = "";
      stringArray0[5] = null;
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[10];
      lightSourceArray0[3] = lightSourceArray0[1];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isBottomRightPointAt(0L, 73, (-21.21027F));
      resourceURLContent0.getJAREntryName();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      homeLight0.setMovable(false);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      resourceURLContent0.getJAREntryURL();
      LightSource[] lightSourceArray0 = new LightSource[9];
      resourceURLContent0.getJAREntryName();
      lightSourceArray0[3] = lightSourceArray0[2];
      lightSourceArray0[4] = lightSourceArray0[2];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      homeLight0.setWidth(2123.574F);
      homeLight0.setNameAngle(2123.574F);
      homeLight0.setAngle(860.215F);
      homeLight0.setHeight(860.215F);
      homeLight0.isNameCenterPointAt(860.215F, 2123.574F, 860.215F);
      homeLight0.isModelMirrored();
      homeLight0.setName("");
      resourceURLContent0.getJAREntryName();
      homeLight0.isNameVisible();
      homeLight0.isDeformable();
      homeLight0.getNameAngle();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = null;
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      Integer integer0 = Integer.valueOf(862);
      homeLight0.setVisible(true);
      Integer.valueOf(862);
      Integer.valueOf(862);
      homeLight0.setElevation(0.0F);
      homeLight0.isBottomLeftPointAt((-19.779608F), (-2347.2F), (-19.779608F));
      homeLight0.getLevel();
      homeLight0.setColor(integer0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      stringArray0[7] = null;
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[6] = lightSourceArray0[4];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1a\"E-ts1_");
      homeLight0.getNameXOffset();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      homeLight0.setNameYOffset((-1.0F));
      Level level0 = new Level("1a\"E-ts1_", 0L, (-1.0F), (-384.573F));
      homeLight0.isTopLeftPointAt(2.0F, 0.0F, 3.4028235E38F);
      homeLight0.setDescription(stringArray0[7]);
      homeLight0.getNameYOffset();
      homeLight0.getTexture();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      stringArray0[2] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      lightSourceArray0[2] = lightSource0;
      LightSource lightSource1 = new LightSource(791, 0L, 791, 791);
      lightSourceArray0[3] = lightSource1;
      lightSourceArray0[4] = lightSource1;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource1;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isBottomRightPointAt(0.0F, 0L, 2.0F);
      homeLight0.isPointAt(783.5F, 2.1063766F, 1.0F);
      homeLight0.isNameCenterPointAt(2.0F, 5.2831855F, 5.2831855F);
      homeLight0.getNameStyle();
      homeLight0.getDepth();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(0L, 0L, (-19.779608F), 46);
      lightSourceArray0[6] = lightSource0;
      Float.isFinite(0L);
      Float.max((-2669.9358F), 46);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      bigDecimal0.stripTrailingZeros();
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isBottomRightPointAt(1.0F, 46, (-19.779608F));
      homeLight0.isPointAt(0L, 0L, 0.0F);
      Random.setNextRandom((-2135179112));
      homeLight0.getElevation();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "com.eteks.sweethome3d.model.CatalogLight";
      stringArray0[7] = "";
      stringArray0[8] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource((-487.1F), (-487.1F), 1.0F, 791);
      lightSourceArray0[0] = lightSource0;
      LightSource lightSource1 = new LightSource((-487.1F), 2.0F, 0.0F, 791);
      lightSourceArray0[1] = lightSource1;
      LightSource lightSource2 = new LightSource(0.0F, (-1999.1F), 0.3926991F, (-2872));
      lightSourceArray0[2] = lightSource2;
      LightSource lightSource3 = new LightSource((-185.9665F), 0.3926991F, 791, 46);
      lightSourceArray0[3] = lightSource3;
      LightSource lightSource4 = new LightSource(46, (-1999.1F), 1.0F, 20);
      lightSourceArray0[4] = lightSource4;
      LightSource lightSource5 = new LightSource((-1999.1F), (-1999.1F), 0.0F, 20);
      lightSourceArray0[5] = lightSource5;
      LightSource lightSource6 = new LightSource(0L, 0.0F, 0.0F, 46);
      lightSourceArray0[6] = lightSource6;
      LightSource lightSource7 = new LightSource(0.0F, 0.0F, 3094.0688F, (-2872));
      lightSourceArray0[7] = lightSource7;
      LightSource lightSource8 = new LightSource((-1589.899F), 0.0F, 0.0F, (-1775));
      lightSourceArray0[8] = lightSource8;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0.3926991F, 0L, 0.3926991F, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, false, bigDecimal0, bigDecimal0, "");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setAngle(0.0F);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      lightSourceArray0[3] = lightSourceArray0[2];
      lightSourceArray0[4] = lightSourceArray0[2];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("");
      Long long1 = new Long(0L);
      homeLight0.setNameYOffset(0L);
      Level level0 = new Level("", 2637.65F, 2637.65F, 0L);
      homeLight0.setNameVisible(true);
      BigDecimal bigDecimal1 = new BigDecimal(0L);
      homeLight0.getPoints();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight0.getModel();
      homeLight0.setDescription("");
      homeLight0.getDescription();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      String[] stringArray0 = new String[8];
      Long long0 = new Long(1L);
      Float float0 = new Float((float) 1L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 1L, 1L, 1L, 1L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.getLightSources();
      HomeLight homeLight1 = new HomeLight(homeLight0);
      homeLight0.setName((String) null);
      HomeLight homeLight2 = new HomeLight(homeLight0);
      homeLight2.setVisible(false);
      homeLight2.isPointAt(1L, (-1413.38F), 1L);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      stringArray0[7] = null;
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[8];
      lightSourceArray0[6] = lightSourceArray0[4];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setDescription("1a\"E-ts1_");
      homeLight0.getNameXOffset();
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("pwZ3(-9e[Z\"vUr2l", "1a\"E-ts1_", temporaryURLContent0, 0.0F, 613.81F, "");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Object object0 = new Object();
      homeTexture0.equals("+lyP#+7F");
      homeLight0.setTexture(homeTexture0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[7] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(328.95245F, 791, 2.0F, 791, float0);
      lightSourceArray0[1] = lightSource0;
      LightSource lightSource1 = new LightSource(791, (-487.1F), 328.95245F, 791, float0);
      lightSourceArray0[2] = lightSource1;
      LightSource lightSource2 = new LightSource((-487.1F), 328.95245F, 791, 791);
      lightSourceArray0[4] = lightSource1;
      LightSource lightSource3 = new LightSource(20, 328.95245F, 791, 20, float0);
      LightSource lightSource4 = new LightSource(2.0F, 20, 3094.0688F, 791);
      lightSourceArray0[7] = lightSource4;
      lightSourceArray0[8] = lightSource1;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 328.95245F, 0L, 328.95245F, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, false, bigDecimal0, bigDecimal0, "");
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.move(0.0F, 791);
      homeLight0.isTopRightPointAt(0L, 0L, 20);
      homeLight0.setNameVisible(false);
      homeLight0.getName();
      homeLight0.getTexture();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource1 = new LightSource(0L, 0.0F, (-19.779608F), 791);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.clone();
      HomeLight homeLight1 = new HomeLight(homeLight0);
      homeLight1.getPriceValueAddedTaxIncluded();
      homeLight0.clone();
      HomeLight homeLight2 = homeLight0.clone();
      homeLight2.clone();
      homeLight0.isDoorOrWindow();
      homeLight2.setX((-19.779608F));
      homeLight0.getShininess();
      homeLight1.setNameYOffset(1.0F);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "com.eteks.sweethome3d.model.CatalogLight";
      stringArray0[6] = null;
      stringArray0[7] = "";
      stringArray0[8] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource((-487.1F), (-487.1F), 1.0F, 791);
      lightSourceArray0[0] = lightSource0;
      LightSource lightSource1 = new LightSource((-487.1F), 2.0F, 0.0F, 791);
      lightSourceArray0[1] = lightSource1;
      LightSource lightSource2 = new LightSource(0.0F, (-1999.1F), 0.3926991F, (-2872));
      lightSourceArray0[2] = lightSource2;
      LightSource lightSource3 = new LightSource((-185.9665F), 0.3926991F, 791, 46);
      lightSourceArray0[3] = lightSource3;
      LightSource lightSource4 = new LightSource(46, (-1999.1F), 1.0F, 20);
      lightSourceArray0[4] = lightSource4;
      LightSource lightSource5 = new LightSource((-1999.1F), (-1999.1F), 0.0F, 20);
      lightSourceArray0[5] = lightSource5;
      LightSource lightSource6 = new LightSource(0L, 0.0F, 0.0F, 46);
      lightSourceArray0[6] = lightSource6;
      LightSource lightSource7 = new LightSource(0.0F, 0.0F, 3094.0688F, (-2872));
      lightSourceArray0[7] = lightSource7;
      LightSource lightSource8 = new LightSource((-1589.899F), 1.0F, 0.0F, (-1775));
      lightSourceArray0[8] = lightSource8;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0.3926991F, 0L, 0.3926991F, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, false, bigDecimal0, bigDecimal0, "");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setAngle(1.0F);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[5] = null;
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[10];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSourceArray0[1];
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource1 = new LightSource(0L, 0.0F, (-19.779608F), 46);
      lightSourceArray0[6] = lightSource1;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isBottomRightPointAt(1.0F, 46, (-19.779608F));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      homeLight0.setElevation(9.0F);
      homeLight0.setMovable(false);
      homeLight0.getLevel();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[5] = null;
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource((-487.1F), 2.0F, 0.0F, 791);
      lightSourceArray0[1] = lightSource0;
      LightSource lightSource1 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      lightSourceArray0[2] = lightSource1;
      LightSource lightSource2 = new LightSource(791, 0L, 791, 46);
      lightSourceArray0[3] = lightSource2;
      lightSourceArray0[4] = lightSource2;
      lightSourceArray0[5] = lightSource1;
      LightSource lightSource3 = new LightSource(0L, 0.0F, (-19.779608F), 46);
      lightSourceArray0[6] = lightSource3;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isBottomRightPointAt(1.0F, 46, (-19.779608F));
      homeLight0.setElevation(9.0F);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[3] = "";
      Long long0 = new Long((-58L));
      Float float0 = new Float((float) (-58L));
      FileSystemHandling.shouldAllThrowIOExceptions();
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[3];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-58L), (-58L), (-58L), (-58L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.clone();
      homeLight0.setTexture((HomeTexture) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.getNameAngle();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = null;
      stringArray0[7] = "";
      stringArray0[8] = stringArray0[6];
      Long long0 = new Long(22L);
      Float float0 = new Float((float) 22L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource((-487.1F), (-487.1F), 1.0F, 791);
      LightSource lightSource1 = new LightSource((-487.1F), 2.0F, 791, 791);
      lightSourceArray0[1] = lightSource1;
      LightSource lightSource2 = new LightSource(0.0F, (-1999.1F), 0.3926991F, (-2872));
      LightSource lightSource3 = new LightSource((-185.9665F), 0.3926991F, 791, 791);
      LightSource lightSource4 = new LightSource((-2872), (-1999.1F), 1.0F, 20);
      lightSourceArray0[4] = lightSource4;
      LightSource lightSource5 = new LightSource((-1999.1F), (-1999.1F), 22L, 20);
      lightSourceArray0[5] = lightSource5;
      LightSource lightSource6 = new LightSource(22L, 0.0F, (-10.753382F), 791);
      lightSourceArray0[6] = lightSource6;
      LightSource lightSource7 = new LightSource(0.0F, 0.0F, 3094.0688F, (-2872));
      lightSourceArray0[7] = lightSource7;
      LightSource lightSource8 = new LightSource((-1589.899F), 20, 0.0F, (-1775));
      lightSourceArray0[8] = lightSource8;
      BigDecimal bigDecimal0 = new BigDecimal(22L);
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0.3926991F, 22L, 0.3926991F, 22L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, false, bigDecimal0, bigDecimal0, "");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.setY(0.0F);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[3] = "";
      Long long0 = new Long((-55L));
      Float float0 = new Float((float) (-55L));
      FileSystemHandling.shouldAllThrowIOExceptions();
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[16];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-55L), (-55L), (-55L), (-55L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isTopLeftPointAt(3.4028235E38F, (-55L), 3.4028235E38F);
      homeLight0.getPriceValueAddedTaxIncluded();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(290L);
      Float float0 = new Float((float) 290L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(290L, 290L, (-19.779608F), 46);
      lightSourceArray0[6] = lightSource0;
      Float.isFinite(290L);
      Float.max((-2669.9358F), 46);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 290L, 290L, 290L, 290L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      bigDecimal0.stripTrailingZeros();
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isBottomRightPointAt(1.0F, 46, (-19.779608F));
      homeLight0.isPointAt(290L, 290L, 0.0F);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      stringArray0[2] = "";
      Long long0 = new Long(13L);
      Float float0 = new Float((float) 13L);
      Float.isFinite(13L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      lightSourceArray0[6] = lightSourceArray0[4];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 13L, 13L, 13L, 13L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = homeLight0.clone();
      homeLight1.isBottomRightPointAt(2.0F, 0.0F, 0.0F);
      homeLight0.isPointAt((-2619.104F), (-1761.0F), (-4215.3F));
      homeLight1.isNameCenterPointAt(2.0F, (-1.0F), 13L);
      homeLight0.isModelMirrored();
      homeLight0.setName((String) null);
      homeLight1.isNameVisible();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(0.0F, 0.0F, 0.0F, 791);
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource1 = new LightSource(0L, 0.0F, (-19.779608F), 791);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      catalogLight0.getLightSources();
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = new HomeLight(homeLight0);
      homeLight1.getPriceValueAddedTaxIncluded();
      HomeLight homeLight2 = homeLight1.clone();
      HomePieceOfFurniture homePieceOfFurniture0 = homeLight2.clone();
      homePieceOfFurniture0.isDoorOrWindow();
      HomeLight homeLight3 = new HomeLight(catalogLight0);
      homeLight3.setWidth(791);
      // Undeclared exception!
      try { 
        HomePieceOfFurniture.Property.valueOf("U8*EdJ(KW{{j\"NU");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomePieceOfFurniture.Property.U8*EdJ(KW{{j\"NU
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "com.eteks.sweethome3d.model.CatalogLight";
      stringArray0[6] = null;
      stringArray0[7] = "";
      stringArray0[8] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource((-487.1F), (-487.1F), 1.0F, 791);
      lightSourceArray0[0] = lightSource0;
      LightSource lightSource1 = new LightSource((-487.1F), 2.0F, 0.0F, 791);
      lightSourceArray0[1] = lightSource1;
      LightSource lightSource2 = new LightSource(0.0F, (-1999.1F), 0.3926991F, (-2872));
      lightSourceArray0[2] = lightSource2;
      LightSource lightSource3 = new LightSource((-185.9665F), 0.3926991F, 791, 46);
      lightSourceArray0[3] = lightSource3;
      LightSource lightSource4 = new LightSource(46, (-1999.1F), 1.0F, 20);
      lightSourceArray0[4] = lightSource4;
      LightSource lightSource5 = new LightSource((-1999.1F), (-1999.1F), 0.0F, 20);
      lightSourceArray0[5] = lightSource5;
      LightSource lightSource6 = new LightSource(0L, 0.0F, 0.0F, 46);
      lightSourceArray0[6] = lightSource6;
      LightSource lightSource7 = new LightSource(0.0F, 0.0F, 3094.0688F, (-2872));
      lightSourceArray0[7] = lightSource7;
      LightSource lightSource8 = new LightSource((-1589.899F), 1.0F, 0.0F, (-1775));
      lightSourceArray0[8] = lightSource8;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0.3926991F, 0L, 0.3926991F, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, false, bigDecimal0, bigDecimal0, "");
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.getCurrency();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomePieceOfFurniture.Property.values();
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      lightSourceArray0[2] = lightSource0;
      LightSource lightSource1 = new LightSource(791, 0L, 791, 791);
      lightSourceArray0[3] = lightSource1;
      lightSourceArray0[4] = lightSource1;
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource2 = new LightSource(0L, 0.0F, (-19.779608F), 791);
      Float.isFinite(1.0F);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      catalogLight0.getLightSources();
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      HomeLight homeLight1 = new HomeLight(homeLight0);
      homeLight1.setNameAngle((-19.779608F));
      homeLight1.getPrice();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[3] = "";
      Long long0 = new Long((-55L));
      Float float0 = new Float((float) (-55L));
      FileSystemHandling.shouldAllThrowIOExceptions();
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[16];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-55L), (-55L), (-55L), (-55L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.setVisible(true);
      HomeLight homeLight1 = new HomeLight(homeLight0);
      homeLight1.setShininess((Float) null);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      Float float0 = new Float((float) 0L);
      Float.isFinite(0L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.isBottomRightPointAt(0L, 0.3926991F, 0.0F);
      HomeLight homeLight1 = new HomeLight(catalogLight0);
      HomeLight homeLight2 = new HomeLight(homeLight0);
      homeLight1.setVisible(false);
      homeLight2.setMovable(true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight2.getModel();
      homeLight0.setTexture((HomeTexture) null);
      homeLight1.isTopLeftPointAt(0.0F, 0L, (-709.0F));
      homeLight0.getNameXOffset();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      String[] stringArray0 = new String[8];
      Long long0 = new Long(1L);
      Float float0 = new Float((float) 1L);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 1L, 1L, 1L, 1L, false, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, false, false, bigDecimal0, bigDecimal0, (String) null);
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      homeLight0.getLightSources();
      HomeLight homeLight1 = new HomeLight(homeLight0);
      homeLight1.setElevation(1.5486678F);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeLight0.isPointAt(1L, 1L, 1L);
      homeLight1.isBottomLeftPointAt(1L, 1L, 1L);
      homeLight1.getGroundElevation();
      homeLight1.isDoorOrWindow();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      assertEquals(0.0F, lightSource0.getZ(), 0.01F);
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      
      lightSourceArray0[4] = lightSourceArray0[2];
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource1 = new LightSource(0L, 0.0F, (-19.779608F), 791);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals((-19.779608F), lightSource1.getZ(), 0.01F);
      assertEquals(791, lightSource1.getColor());
      assertNull(lightSource1.getDiameter());
      assertEquals(0.0F, lightSource1.getY(), 0.01F);
      assertEquals(0.0F, lightSource1.getX(), 0.01F);
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight1);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      
      homeLight1.setDescription("com.eteks.sweethome3d.tools.URLContent");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals("com.eteks.sweethome3d.tools.URLContent", homeLight1.getDescription());
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      
      homeLight1.setWidth((-545.866F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals((-545.866F), homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals("com.eteks.sweethome3d.tools.URLContent", homeLight1.getDescription());
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      
      homeLight1.setNameAngle((-1.0F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals((-545.866F), homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertEquals(5.2831855F, homeLight1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals("com.eteks.sweethome3d.tools.URLContent", homeLight1.getDescription());
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      
      homeLight0.setAngle(0L);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      
      boolean boolean1 = homeLight0.containsPoint((-545.866F), (-545.866F), 0.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(boolean1 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean1);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      
      boolean boolean2 = homeLight1.isTopLeftPointAt(0.0F, (-1.0F), (-545.866F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean2);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals((-545.866F), homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertEquals(5.2831855F, homeLight1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals("com.eteks.sweethome3d.tools.URLContent", homeLight1.getDescription());
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      
      boolean boolean3 = homeLight0.isResizable();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(boolean3);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(791, lightSource0.getColor());
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(0.0F, lightSource0.getZ(), 0.01F);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      
      lightSourceArray0[2] = lightSource0;
      LightSource lightSource1 = new LightSource(791, 0L, 791, 791);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertNull(lightSource1.getDiameter());
      assertEquals(791.0F, lightSource1.getX(), 0.01F);
      assertEquals(791, lightSource1.getColor());
      assertEquals(791.0F, lightSource1.getZ(), 0.01F);
      assertEquals(0.0F, lightSource1.getY(), 0.01F);
      
      lightSourceArray0[3] = lightSource1;
      lightSourceArray0[4] = lightSource1;
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource2 = new LightSource(0L, 0.0F, (-19.779608F), 791);
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertNotNull(lightSource2);
      assertNull(lightSource2.getDiameter());
      assertEquals(791, lightSource2.getColor());
      assertEquals((-19.779608F), lightSource2.getZ(), 0.01F);
      assertEquals(0.0F, lightSource2.getY(), 0.01F);
      assertEquals(0.0F, lightSource2.getX(), 0.01F);
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      homeLight0.setNameAngle(0.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      boolean boolean1 = homeLight0.isTexturable();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertTrue(boolean1 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(boolean1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      homeLight0.move(791, (-1115.29F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(791.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals((-1115.29F), homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[2] = "";
      Long long0 = new Long(13L);
      assertEquals(13L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 13L);
      assertEquals(13.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(13L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      lightSourceArray0[6] = lightSourceArray0[4];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 13L, 13L, 13L, 13L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(13L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(13.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals(13.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(13.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(13.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(13.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(13L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(13.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals(13.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(13.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(13.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(13.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(13L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(13.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals(13.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(13.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(13.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(13.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(13.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getName());
      assertEquals(13.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(13.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(13.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(6.5F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(6.5F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(13.0F, homeLight0.getDepth(), 0.01F);
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(13L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(13.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals(13.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(13.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(13.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(13.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(13.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getName());
      assertEquals(13.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(13.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(13.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(6.5F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(6.5F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(13.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertNull(homeLight1.getName());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(13.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertEquals(13.0F, homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getCurrency());
      assertEquals(6.5F, homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertEquals(13.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(6.5F, homeLight1.getY(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getCatalogId());
      assertFalse(homeLight1.isModelMirrored());
      assertNull(homeLight1.getColor());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(13.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(13.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      
      boolean boolean1 = homeLight1.isBottomRightPointAt(2.0F, 0.0F, 0.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(13L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(13.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals(13.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(13.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(13.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(13.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(13.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getName());
      assertEquals(13.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(13.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(13.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(6.5F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(6.5F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(13.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertNull(homeLight1.getName());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(13.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertEquals(13.0F, homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getCurrency());
      assertEquals(6.5F, homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertEquals(13.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(6.5F, homeLight1.getY(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getCatalogId());
      assertFalse(homeLight1.isModelMirrored());
      assertNull(homeLight1.getColor());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(13.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(13.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      
      boolean boolean2 = homeLight0.isPointAt((-2619.104F), (-1761.0F), (-4215.3F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(boolean2);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(13L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(13.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals(13.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(13.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(13.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(13.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(13.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getName());
      assertEquals(13.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(13.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(13.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(6.5F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(6.5F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(13.0F, homeLight0.getDepth(), 0.01F);
      
      boolean boolean3 = homeLight1.isNameCenterPointAt(2.0F, (-1.0F), 13L);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertTrue(boolean3);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(13L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(13.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals(13.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(13.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(13.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(13.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(13.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getName());
      assertEquals(13.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(13.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(13.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(6.5F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(6.5F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(13.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertNull(homeLight1.getName());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(13.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertEquals(13.0F, homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getCurrency());
      assertEquals(6.5F, homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertEquals(13.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(6.5F, homeLight1.getY(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getCatalogId());
      assertFalse(homeLight1.isModelMirrored());
      assertNull(homeLight1.getColor());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(13.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(13.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      
      boolean boolean4 = homeLight0.isModelMirrored();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(boolean4 == boolean3);
      assertFalse(boolean4 == boolean0);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean2);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(boolean4);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(13L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(13.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals(13.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(13.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(13.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(13.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(13.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getName());
      assertEquals(13.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(13.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(13.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(6.5F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(6.5F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(13.0F, homeLight0.getDepth(), 0.01F);
      
      boolean boolean5 = homeLight1.isBottomLeftPointAt((-1761.0F), 0.0F, (-4215.3F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertTrue(boolean5 == boolean4);
      assertFalse(boolean5 == boolean0);
      assertTrue(boolean5 == boolean1);
      assertTrue(boolean5 == boolean2);
      assertFalse(boolean5 == boolean3);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(boolean5);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(13L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(13.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals(13.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(13.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(13.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(13.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(13.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getName());
      assertEquals(13.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(13.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(13.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(6.5F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(6.5F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(13.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertNull(homeLight1.getName());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(13.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertEquals(13.0F, homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getCurrency());
      assertEquals(6.5F, homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertEquals(13.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(6.5F, homeLight1.getY(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getCatalogId());
      assertFalse(homeLight1.isModelMirrored());
      assertNull(homeLight1.getColor());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(13.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(13.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      
      Integer integer0 = Integer.valueOf(862);
      assertEquals(862, (int)integer0);
      assertNotNull(integer0);
      
      homeLight0.setVisible(true);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      
      Integer integer1 = Integer.valueOf(862);
      assertTrue(integer1.equals((Object)integer0));
      assertEquals(862, (int)integer1);
      assertNotNull(integer1);
      
      Integer integer2 = Integer.valueOf(862);
      assertTrue(integer2.equals((Object)integer0));
      assertTrue(integer2.equals((Object)integer1));
      assertEquals(862, (int)integer2);
      assertNotNull(integer2);
      
      homeLight0.setColor(integer2);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertTrue(integer2.equals((Object)integer0));
      assertTrue(integer2.equals((Object)integer1));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(862, (int)homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      
      homeLight0.setNameAngle(0.0F);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(862, (int)homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      
      homeLight0.setMovable(true);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(862, (int)homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      
      // Undeclared exception!
      try { 
        homeLight0.setHeight((-19.779608F));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[7] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource((-2872), (-487.1F), 328.95245F, (-2872), float0);
      assertNotNull(lightSource0);
      assertEquals((-2872.0F), lightSource0.getX(), 0.01F);
      assertEquals((-487.1F), lightSource0.getY(), 0.01F);
      assertEquals((-2872), lightSource0.getColor());
      assertEquals(328.95245F, lightSource0.getZ(), 0.01F);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      LightSource lightSource1 = new LightSource(2.0F, 20, 3094.0688F, (-2872));
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(20.0F, lightSource1.getY(), 0.01F);
      assertEquals((-2872), lightSource1.getColor());
      assertEquals(2.0F, lightSource1.getX(), 0.01F);
      assertEquals(3094.0688F, lightSource1.getZ(), 0.01F);
      assertNull(lightSource1.getDiameter());
      
      lightSourceArray0[7] = lightSource1;
      lightSourceArray0[8] = lightSource0;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 328.95245F, 0L, 328.95245F, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, false, bigDecimal0, bigDecimal0, "");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getName());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(328.95245F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isTexturable());
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(328.95245F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(328.95245F, homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(164.47623F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(328.95245F, homeLight0.getWidth(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getName());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(328.95245F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isTexturable());
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(328.95245F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      
      boolean boolean0 = homeLight0.isDoorOrWindow();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(boolean0);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(328.95245F, homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(164.47623F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(328.95245F, homeLight0.getWidth(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getName());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(328.95245F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isTexturable());
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(328.95245F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      
      TextStyle textStyle0 = new TextStyle(2514.55F);
      assertNotNull(textStyle0);
      assertFalse(textStyle0.isItalic());
      assertEquals(2514.55F, textStyle0.getFontSize(), 0.01F);
      assertFalse(textStyle0.isBold());
      
      homeLight0.setNameStyle(textStyle0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(328.95245F, homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(164.47623F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(328.95245F, homeLight0.getWidth(), 0.01F);
      assertFalse(textStyle0.isItalic());
      assertEquals(2514.55F, textStyle0.getFontSize(), 0.01F);
      assertFalse(textStyle0.isBold());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getName());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(328.95245F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isTexturable());
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(328.95245F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      
      boolean boolean1 = homeLight0.isPointAt(2920.541F, 2514.55F, 3094.0688F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(328.95245F, homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(164.47623F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(328.95245F, homeLight0.getWidth(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getName());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(328.95245F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isTexturable());
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(328.95245F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(0.0F, lightSource0.getZ(), 0.01F);
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      
      lightSourceArray0[2] = lightSource0;
      LightSource lightSource1 = new LightSource(791, 0L, 791, 791);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(0.0F, lightSource1.getY(), 0.01F);
      assertEquals(791.0F, lightSource1.getX(), 0.01F);
      assertEquals(791, lightSource1.getColor());
      assertNull(lightSource1.getDiameter());
      assertEquals(791.0F, lightSource1.getZ(), 0.01F);
      
      lightSourceArray0[3] = lightSource1;
      lightSourceArray0[4] = lightSource1;
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource2 = new LightSource(0L, 0.0F, (-19.779608F), 791);
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertNotNull(lightSource2);
      assertNull(lightSource2.getDiameter());
      assertEquals(791, lightSource2.getColor());
      assertEquals((-19.779608F), lightSource2.getZ(), 0.01F);
      assertEquals(0.0F, lightSource2.getY(), 0.01F);
      assertEquals(0.0F, lightSource2.getX(), 0.01F);
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      homeLight0.setNameAngle(0.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      float float1 = homeLight0.getWidth();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals(0.0F, float1, 0.01F);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      float float2 = homeLight0.getDepth();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertEquals((float)float0, (float)float1, 0.01F);
      assertEquals(float2, float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals(0.0F, float2, 0.01F);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String[] stringArray0 = new String[8];
      Long long0 = new Long(1L);
      assertEquals(1L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 1L);
      assertEquals(1.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 1L, 1L, 1L, 1L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      
      homeLight0.setWidth(1L);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      
      HomeLight homeLight1 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getName());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(1.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getColor());
      assertNull(homeLight1.getCatalogId());
      assertEquals(1.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertFalse(homeLight1.isNameVisible());
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.5F, homeLight1.getX(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.5F, homeLight1.getY(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertEquals(1.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight1.getWidth(), 0.01F);
      assertEquals(1.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isDoorOrWindow());
      
      boolean boolean0 = homeLight1.isTopRightPointAt(2533.28F, 2253.0F, 2253.0F);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(boolean0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getName());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(1.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getColor());
      assertNull(homeLight1.getCatalogId());
      assertEquals(1.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertFalse(homeLight1.isNameVisible());
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.5F, homeLight1.getX(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.5F, homeLight1.getY(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertEquals(1.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight1.getWidth(), 0.01F);
      assertEquals(1.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isDoorOrWindow());
      
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeLight1.getModel();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertNotSame(homeLight1, homeLight0);
      assertSame(resourceURLContent1, resourceURLContent0);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(resourceURLContent1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getName());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(1.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getColor());
      assertNull(homeLight1.getCatalogId());
      assertEquals(1.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertFalse(homeLight1.isNameVisible());
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.5F, homeLight1.getX(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.5F, homeLight1.getY(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertEquals(1.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight1.getWidth(), 0.01F);
      assertEquals(1.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(resourceURLContent1.isJAREntry());
      assertTrue(resourceURLContent1.isMultiPartResource());
      
      homeLight1.setDescription("");
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getName());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(1.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getColor());
      assertNull(homeLight1.getCatalogId());
      assertEquals(1.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertFalse(homeLight1.isNameVisible());
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.5F, homeLight1.getX(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.5F, homeLight1.getY(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertEquals(1.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight1.getWidth(), 0.01F);
      assertEquals(1.0F, homeLight1.getElevation(), 0.01F);
      assertEquals("", homeLight1.getDescription());
      assertFalse(homeLight1.isDoorOrWindow());
      
      HomeLight homeLight2 = new HomeLight(homeLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight2.equals((Object)homeLight1));
      assertFalse(homeLight2.equals((Object)homeLight0));
      assertNotNull(homeLight2);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight2.getNameAngle(), 0.01F);
      assertNull(homeLight2.getStaircaseCutOutShape());
      assertNull(homeLight2.getName());
      assertNull(homeLight2.getCatalogId());
      assertEquals(0.5F, homeLight2.getPower(), 0.01F);
      assertEquals(1.0F, homeLight2.getDepth(), 0.01F);
      assertTrue(homeLight2.isResizable());
      assertEquals(1.0F, homeLight2.getElevation(), 0.01F);
      assertNull(homeLight2.getDescription());
      assertEquals(0.0F, homeLight2.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homeLight2.getHeight(), 0.01F);
      assertEquals(1.0F, homeLight2.getGroundElevation(), 0.01F);
      assertTrue(homeLight2.isDeformable());
      assertTrue(homeLight2.isVisible());
      assertTrue(homeLight2.isMovable());
      assertNull(homeLight2.getShininess());
      assertFalse(homeLight2.isNameVisible());
      assertNull(homeLight2.getColor());
      assertNull(homeLight2.getCurrency());
      assertEquals(0.0F, homeLight2.getNameYOffset(), 0.01F);
      assertFalse(homeLight2.isDoorOrWindow());
      assertEquals(0.5F, homeLight2.getX(), 0.01F);
      assertTrue(homeLight2.isTexturable());
      assertEquals(0.5F, homeLight2.getY(), 0.01F);
      assertEquals(1.0F, homeLight2.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight2.getAngle(), 0.01F);
      assertFalse(homeLight2.isModelMirrored());
      assertFalse(homeLight2.isBackFaceShown());
      
      BigDecimal bigDecimal1 = homeLight2.getPriceValueAddedTaxIncluded();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight2);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight2, homeLight1);
      assertNotSame(homeLight2, homeLight0);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertFalse(homeLight0.equals((Object)homeLight2));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight2.equals((Object)homeLight1));
      assertFalse(homeLight2.equals((Object)homeLight0));
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight2.getNameAngle(), 0.01F);
      assertNull(homeLight2.getStaircaseCutOutShape());
      assertNull(homeLight2.getName());
      assertNull(homeLight2.getCatalogId());
      assertEquals(0.5F, homeLight2.getPower(), 0.01F);
      assertEquals(1.0F, homeLight2.getDepth(), 0.01F);
      assertTrue(homeLight2.isResizable());
      assertEquals(1.0F, homeLight2.getElevation(), 0.01F);
      assertNull(homeLight2.getDescription());
      assertEquals(0.0F, homeLight2.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homeLight2.getHeight(), 0.01F);
      assertEquals(1.0F, homeLight2.getGroundElevation(), 0.01F);
      assertTrue(homeLight2.isDeformable());
      assertTrue(homeLight2.isVisible());
      assertTrue(homeLight2.isMovable());
      assertNull(homeLight2.getShininess());
      assertFalse(homeLight2.isNameVisible());
      assertNull(homeLight2.getColor());
      assertNull(homeLight2.getCurrency());
      assertEquals(0.0F, homeLight2.getNameYOffset(), 0.01F);
      assertFalse(homeLight2.isDoorOrWindow());
      assertEquals(0.5F, homeLight2.getX(), 0.01F);
      assertTrue(homeLight2.isTexturable());
      assertEquals(0.5F, homeLight2.getY(), 0.01F);
      assertEquals(1.0F, homeLight2.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight2.getAngle(), 0.01F);
      assertFalse(homeLight2.isModelMirrored());
      assertFalse(homeLight2.isBackFaceShown());
      assertEquals((short)2, bigDecimal1.shortValue());
      assertEquals((byte)2, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = null;
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      assertEquals(0.0F, lightSource0.getZ(), 0.01F);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      
      lightSourceArray0[2] = lightSource0;
      LightSource lightSource1 = new LightSource(791, 0L, 791, 46);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(791.0F, lightSource1.getZ(), 0.01F);
      assertEquals(791.0F, lightSource1.getX(), 0.01F);
      assertNull(lightSource1.getDiameter());
      assertEquals(0.0F, lightSource1.getY(), 0.01F);
      assertEquals(46, lightSource1.getColor());
      
      lightSourceArray0[3] = lightSource1;
      lightSourceArray0[4] = lightSource1;
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource2 = new LightSource(0L, 0.0F, (-19.779608F), 46);
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertNotNull(lightSource2);
      assertNull(lightSource2.getDiameter());
      assertEquals((-19.779608F), lightSource2.getZ(), 0.01F);
      assertEquals(0.0F, lightSource2.getX(), 0.01F);
      assertEquals(46, lightSource2.getColor());
      assertEquals(0.0F, lightSource2.getY(), 0.01F);
      
      lightSourceArray0[6] = lightSource2;
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight1);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight1.isResizable());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      homeLight1.setAngle(2.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight1.isResizable());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals(2.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeLight0.getModel();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertSame(resourceURLContent1, resourceURLContent0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(resourceURLContent1);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent1.isJAREntry());
      assertTrue(resourceURLContent1.isMultiPartResource());
      
      float float1 = homeLight1.getAngle();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals(2.0F, float1, 0.01F);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight1.isResizable());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals(2.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[3] = "";
      Long long0 = new Long((-55L));
      assertEquals((-55L), (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) (-55L));
      assertEquals((-55.0F), (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite((-55L));
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-55L), (-55L), (-55L), (-55L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isResizable());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isResizable());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight1.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight1.getX(), 0.01F);
      assertEquals((-27.5F), homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertEquals((-55.0F), homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getDescription());
      assertNull(homeLight1.getName());
      assertEquals((-55.0F), homeLight1.getWidth(), 0.01F);
      assertEquals((-55.0F), homeLight1.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertFalse(homeLight1.isModelMirrored());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals((-55.0F), homeLight1.getDepth(), 0.01F);
      
      homeLight0.setDepth(55.0F);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(55.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isResizable());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      
      HomeLight homeLight2 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(homeLight2.equals((Object)homeLight1));
      assertFalse(homeLight2.equals((Object)homeLight0));
      assertNotNull(homeLight2);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(homeLight2.getDescription());
      assertEquals(0.0F, homeLight2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight2.getNameAngle(), 0.01F);
      assertNull(homeLight2.getCatalogId());
      assertNull(homeLight2.getStaircaseCutOutShape());
      assertTrue(homeLight2.isResizable());
      assertFalse(homeLight2.isDoorOrWindow());
      assertFalse(homeLight2.isModelMirrored());
      assertTrue(homeLight2.isTexturable());
      assertFalse(homeLight2.isBackFaceShown());
      assertEquals(0.0F, homeLight2.getAngle(), 0.01F);
      assertNull(homeLight2.getName());
      assertFalse(homeLight2.isNameVisible());
      assertEquals((-55.0F), homeLight2.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight2.getNameYOffset(), 0.01F);
      assertTrue(homeLight2.isVisible());
      assertNull(homeLight2.getCurrency());
      assertEquals((-55.0F), homeLight2.getDepth(), 0.01F);
      assertEquals((-55.0F), homeLight2.getGroundElevation(), 0.01F);
      assertNull(homeLight2.getColor());
      assertTrue(homeLight2.isDeformable());
      assertTrue(homeLight2.isMovable());
      assertNull(homeLight2.getShininess());
      assertEquals((-27.5F), homeLight2.getY(), 0.01F);
      assertEquals((-27.5F), homeLight2.getX(), 0.01F);
      assertEquals(0.5F, homeLight2.getPower(), 0.01F);
      assertEquals((-55.0F), homeLight2.getElevation(), 0.01F);
      assertEquals((-55.0F), homeLight2.getWidth(), 0.01F);
      
      homeLight2.setModelMirrored(true);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight2, homeLight1);
      assertNotSame(homeLight2, homeLight0);
      assertFalse(homeLight2.equals((Object)homeLight1));
      assertFalse(homeLight2.equals((Object)homeLight0));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(homeLight2.getDescription());
      assertEquals(0.0F, homeLight2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight2.getNameAngle(), 0.01F);
      assertNull(homeLight2.getCatalogId());
      assertNull(homeLight2.getStaircaseCutOutShape());
      assertTrue(homeLight2.isResizable());
      assertFalse(homeLight2.isDoorOrWindow());
      assertTrue(homeLight2.isTexturable());
      assertFalse(homeLight2.isBackFaceShown());
      assertEquals(0.0F, homeLight2.getAngle(), 0.01F);
      assertNull(homeLight2.getName());
      assertFalse(homeLight2.isNameVisible());
      assertEquals((-55.0F), homeLight2.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight2.getNameYOffset(), 0.01F);
      assertTrue(homeLight2.isVisible());
      assertNull(homeLight2.getCurrency());
      assertTrue(homeLight2.isModelMirrored());
      assertEquals((-55.0F), homeLight2.getDepth(), 0.01F);
      assertEquals((-55.0F), homeLight2.getGroundElevation(), 0.01F);
      assertNull(homeLight2.getColor());
      assertTrue(homeLight2.isDeformable());
      assertTrue(homeLight2.isMovable());
      assertNull(homeLight2.getShininess());
      assertEquals((-27.5F), homeLight2.getY(), 0.01F);
      assertEquals((-27.5F), homeLight2.getX(), 0.01F);
      assertEquals(0.5F, homeLight2.getPower(), 0.01F);
      assertEquals((-55.0F), homeLight2.getElevation(), 0.01F);
      assertEquals((-55.0F), homeLight2.getWidth(), 0.01F);
      
      float float1 = homeLight0.getX();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight2);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(homeLight0.equals((Object)homeLight2));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertEquals((-27.5F), float1, 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(55.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isResizable());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[2] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      lightSourceArray0[6] = lightSourceArray0[4];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      
      homeLight0.setDepth(2.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(2.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      
      homeLight0.setAngle(1.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(2.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      
      long long1 = Long.min(0L, 0L);
      assertEquals(0L, long1);
      
      homeLight0.setDepth((-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertTrue(long0.equals((Object)long1));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals((-19.779608F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      
      HomePieceOfFurniture.SortableProperty[] homePieceOfFurniture_SortablePropertyArray0 = HomePieceOfFurniture.SortableProperty.values();
      assertEquals(19, homePieceOfFurniture_SortablePropertyArray0.length);
      assertNotNull(homePieceOfFurniture_SortablePropertyArray0);
      
      homeLight0.setModelMirrored(true);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertTrue(long0.equals((Object)long1));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals((-19.779608F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      
      BigDecimal bigDecimal1 = homeLight0.getPriceValueAddedTaxIncluded();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(bigDecimal1, bigDecimal0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertTrue(long0.equals((Object)long1));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(bigDecimal1);
      assertEquals((short)0, bigDecimal1.shortValue());
      assertEquals((byte)0, bigDecimal1.byteValue());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals((-19.779608F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      
      float float1 = homeLight0.getDepth();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertTrue(long0.equals((Object)long1));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((-19.779608F), float1, 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals((-19.779608F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      
      TextStyle textStyle0 = homeLight0.getNameStyle();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertTrue(long0.equals((Object)long1));
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNull(textStyle0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals((-19.779608F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[7] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(328.95245F, 791, 2.0F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(2.0F, lightSource0.getZ(), 0.01F);
      assertEquals(328.95245F, lightSource0.getX(), 0.01F);
      
      lightSourceArray0[1] = lightSource0;
      LightSource lightSource1 = new LightSource((-2872), (-487.1F), 328.95245F, (-2872), float0);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(0.0F, lightSource1.getDiameter(), 0.01F);
      assertEquals(328.95245F, lightSource1.getZ(), 0.01F);
      assertEquals((-487.1F), lightSource1.getY(), 0.01F);
      assertEquals((-2872.0F), lightSource1.getX(), 0.01F);
      assertEquals((-2872), lightSource1.getColor());
      
      lightSourceArray0[2] = lightSource1;
      LightSource lightSource2 = new LightSource((-487.1F), 328.95245F, 791, (-2872));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertNotNull(lightSource2);
      assertEquals((-487.1F), lightSource2.getX(), 0.01F);
      assertEquals((-2872), lightSource2.getColor());
      assertEquals(791.0F, lightSource2.getZ(), 0.01F);
      assertEquals(328.95245F, lightSource2.getY(), 0.01F);
      assertNull(lightSource2.getDiameter());
      
      lightSourceArray0[4] = lightSource1;
      LightSource lightSource3 = new LightSource(2.0F, 20, 3094.0688F, (-2872));
      assertFalse(lightSource3.equals((Object)lightSource0));
      assertFalse(lightSource3.equals((Object)lightSource2));
      assertFalse(lightSource3.equals((Object)lightSource1));
      assertNotNull(lightSource3);
      assertNull(lightSource3.getDiameter());
      assertEquals((-2872), lightSource3.getColor());
      assertEquals(3094.0688F, lightSource3.getZ(), 0.01F);
      assertEquals(2.0F, lightSource3.getX(), 0.01F);
      assertEquals(20.0F, lightSource3.getY(), 0.01F);
      
      lightSourceArray0[7] = lightSource3;
      lightSourceArray0[8] = lightSource1;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      String[] stringArray1 = new String[9];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[0] = "";
      stringArray1[1] = "";
      stringArray1[2] = "";
      stringArray1[3] = "";
      stringArray1[4] = "";
      stringArray1[5] = "com.eteks.sweethome3d.model.CatalogLight";
      stringArray1[6] = null;
      stringArray1[7] = "";
      stringArray1[8] = "";
      Long long1 = new Long(0L);
      assertTrue(long1.equals((Object)long0));
      assertEquals(0L, (long)long1);
      assertNotNull(long1);
      
      Float float1 = new Float((float) 0L);
      assertEquals((float)float1, (float)float0, 0.01F);
      assertEquals(0.0F, (float)float1, 0.01F);
      assertNotNull(float1);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray1 = new LightSource[9];
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      
      LightSource lightSource4 = new LightSource((-487.1F), (-487.1F), 1.0F, 791);
      assertFalse(lightSource4.equals((Object)lightSource2));
      assertFalse(lightSource4.equals((Object)lightSource1));
      assertFalse(lightSource4.equals((Object)lightSource0));
      assertFalse(lightSource4.equals((Object)lightSource3));
      assertNotNull(lightSource4);
      assertEquals(791, lightSource4.getColor());
      assertEquals(1.0F, lightSource4.getZ(), 0.01F);
      assertEquals((-487.1F), lightSource4.getY(), 0.01F);
      assertEquals((-487.1F), lightSource4.getX(), 0.01F);
      assertNull(lightSource4.getDiameter());
      
      lightSourceArray1[0] = lightSource4;
      LightSource lightSource5 = new LightSource((-487.1F), 2.0F, 0.0F, 791);
      assertFalse(lightSource5.equals((Object)lightSource4));
      assertFalse(lightSource5.equals((Object)lightSource3));
      assertFalse(lightSource5.equals((Object)lightSource0));
      assertFalse(lightSource5.equals((Object)lightSource1));
      assertFalse(lightSource5.equals((Object)lightSource2));
      assertNotNull(lightSource5);
      assertEquals(0.0F, lightSource5.getZ(), 0.01F);
      assertEquals((-487.1F), lightSource5.getX(), 0.01F);
      assertNull(lightSource5.getDiameter());
      assertEquals(791, lightSource5.getColor());
      assertEquals(2.0F, lightSource5.getY(), 0.01F);
      
      lightSourceArray1[1] = lightSource5;
      LightSource lightSource6 = new LightSource(0.0F, (-1999.1F), 0.3926991F, (-2872));
      assertFalse(lightSource6.equals((Object)lightSource1));
      assertFalse(lightSource6.equals((Object)lightSource0));
      assertFalse(lightSource6.equals((Object)lightSource2));
      assertFalse(lightSource6.equals((Object)lightSource5));
      assertFalse(lightSource6.equals((Object)lightSource3));
      assertFalse(lightSource6.equals((Object)lightSource4));
      assertNotNull(lightSource6);
      assertEquals((-1999.1F), lightSource6.getY(), 0.01F);
      assertNull(lightSource6.getDiameter());
      assertEquals(0.3926991F, lightSource6.getZ(), 0.01F);
      assertEquals(0.0F, lightSource6.getX(), 0.01F);
      assertEquals((-2872), lightSource6.getColor());
      
      lightSourceArray1[2] = lightSource6;
      LightSource lightSource7 = new LightSource((-185.9665F), 0.3926991F, 791, 46);
      assertFalse(lightSource7.equals((Object)lightSource1));
      assertFalse(lightSource7.equals((Object)lightSource0));
      assertFalse(lightSource7.equals((Object)lightSource2));
      assertFalse(lightSource7.equals((Object)lightSource4));
      assertFalse(lightSource7.equals((Object)lightSource6));
      assertFalse(lightSource7.equals((Object)lightSource5));
      assertFalse(lightSource7.equals((Object)lightSource3));
      assertNotNull(lightSource7);
      assertNull(lightSource7.getDiameter());
      assertEquals((-185.9665F), lightSource7.getX(), 0.01F);
      assertEquals(0.3926991F, lightSource7.getY(), 0.01F);
      assertEquals(46, lightSource7.getColor());
      assertEquals(791.0F, lightSource7.getZ(), 0.01F);
      
      lightSourceArray1[3] = lightSource7;
      LightSource lightSource8 = new LightSource(46, (-1999.1F), 1.0F, 20);
      assertFalse(lightSource8.equals((Object)lightSource1));
      assertFalse(lightSource8.equals((Object)lightSource2));
      assertFalse(lightSource8.equals((Object)lightSource6));
      assertFalse(lightSource8.equals((Object)lightSource5));
      assertFalse(lightSource8.equals((Object)lightSource7));
      assertFalse(lightSource8.equals((Object)lightSource3));
      assertFalse(lightSource8.equals((Object)lightSource4));
      assertFalse(lightSource8.equals((Object)lightSource0));
      assertNotNull(lightSource8);
      assertEquals(46.0F, lightSource8.getX(), 0.01F);
      assertEquals((-1999.1F), lightSource8.getY(), 0.01F);
      assertEquals(1.0F, lightSource8.getZ(), 0.01F);
      assertNull(lightSource8.getDiameter());
      assertEquals(20, lightSource8.getColor());
      
      lightSourceArray1[4] = lightSource8;
      LightSource lightSource9 = new LightSource((-1999.1F), (-1999.1F), 0.0F, 20);
      assertFalse(lightSource9.equals((Object)lightSource4));
      assertFalse(lightSource9.equals((Object)lightSource7));
      assertFalse(lightSource9.equals((Object)lightSource6));
      assertFalse(lightSource9.equals((Object)lightSource0));
      assertFalse(lightSource9.equals((Object)lightSource8));
      assertFalse(lightSource9.equals((Object)lightSource2));
      assertFalse(lightSource9.equals((Object)lightSource1));
      assertFalse(lightSource9.equals((Object)lightSource3));
      assertFalse(lightSource9.equals((Object)lightSource5));
      assertNotNull(lightSource9);
      assertEquals(20, lightSource9.getColor());
      assertNull(lightSource9.getDiameter());
      assertEquals((-1999.1F), lightSource9.getX(), 0.01F);
      assertEquals((-1999.1F), lightSource9.getY(), 0.01F);
      assertEquals(0.0F, lightSource9.getZ(), 0.01F);
      
      lightSourceArray1[5] = lightSource9;
      LightSource lightSource10 = new LightSource(0L, 0.0F, 0.0F, 46);
      assertFalse(lightSource10.equals((Object)lightSource5));
      assertFalse(lightSource10.equals((Object)lightSource7));
      assertFalse(lightSource10.equals((Object)lightSource6));
      assertFalse(lightSource10.equals((Object)lightSource0));
      assertFalse(lightSource10.equals((Object)lightSource2));
      assertFalse(lightSource10.equals((Object)lightSource1));
      assertFalse(lightSource10.equals((Object)lightSource8));
      assertFalse(lightSource10.equals((Object)lightSource3));
      assertFalse(lightSource10.equals((Object)lightSource4));
      assertFalse(lightSource10.equals((Object)lightSource9));
      assertNotNull(lightSource10);
      assertEquals(0.0F, lightSource10.getZ(), 0.01F);
      assertEquals(0.0F, lightSource10.getX(), 0.01F);
      assertEquals(0.0F, lightSource10.getY(), 0.01F);
      assertEquals(46, lightSource10.getColor());
      assertNull(lightSource10.getDiameter());
      
      lightSourceArray1[6] = lightSource10;
      LightSource lightSource11 = new LightSource(0.0F, 0.0F, 3094.0688F, (-2872));
      assertFalse(lightSource11.equals((Object)lightSource4));
      assertFalse(lightSource11.equals((Object)lightSource6));
      assertFalse(lightSource11.equals((Object)lightSource7));
      assertFalse(lightSource11.equals((Object)lightSource5));
      assertFalse(lightSource11.equals((Object)lightSource8));
      assertFalse(lightSource11.equals((Object)lightSource3));
      assertFalse(lightSource11.equals((Object)lightSource9));
      assertFalse(lightSource11.equals((Object)lightSource0));
      assertFalse(lightSource11.equals((Object)lightSource10));
      assertFalse(lightSource11.equals((Object)lightSource1));
      assertFalse(lightSource11.equals((Object)lightSource2));
      assertNotNull(lightSource11);
      assertEquals(0.0F, lightSource11.getX(), 0.01F);
      assertEquals(3094.0688F, lightSource11.getZ(), 0.01F);
      assertEquals((-2872), lightSource11.getColor());
      assertNull(lightSource11.getDiameter());
      assertEquals(0.0F, lightSource11.getY(), 0.01F);
      
      lightSourceArray1[7] = lightSource11;
      LightSource lightSource12 = new LightSource((-1589.899F), 1.0F, 0.0F, (-1775));
      assertFalse(lightSource12.equals((Object)lightSource10));
      assertFalse(lightSource12.equals((Object)lightSource11));
      assertFalse(lightSource12.equals((Object)lightSource3));
      assertFalse(lightSource12.equals((Object)lightSource9));
      assertFalse(lightSource12.equals((Object)lightSource8));
      assertFalse(lightSource12.equals((Object)lightSource4));
      assertFalse(lightSource12.equals((Object)lightSource6));
      assertFalse(lightSource12.equals((Object)lightSource0));
      assertFalse(lightSource12.equals((Object)lightSource5));
      assertFalse(lightSource12.equals((Object)lightSource7));
      assertFalse(lightSource12.equals((Object)lightSource1));
      assertFalse(lightSource12.equals((Object)lightSource2));
      assertNotNull(lightSource12);
      assertNull(lightSource12.getDiameter());
      assertEquals((-1775), lightSource12.getColor());
      assertEquals(0.0F, lightSource12.getZ(), 0.01F);
      assertEquals((-1589.899F), lightSource12.getX(), 0.01F);
      assertEquals(1.0F, lightSource12.getY(), 0.01F);
      
      lightSourceArray1[8] = lightSource12;
      BigDecimal bigDecimal1 = new BigDecimal(0L);
      assertTrue(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      assertEquals((byte)0, bigDecimal1.byteValue());
      assertEquals((short)0, bigDecimal1.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray1, long1, float1, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0.3926991F, 0L, 0.3926991F, 0L, true, lightSourceArray1, "", (float[][]) null, (String) null, true, true, false, bigDecimal1, bigDecimal1, "");
      assertEquals(9, stringArray1.length);
      assertEquals(9, lightSourceArray1.length);
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertTrue(bigDecimal1.equals((Object)bigDecimal0));
      assertTrue(long1.equals((Object)long0));
      assertEquals((float)float1, (float)float0, 0.01F);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(catalogLight0);
      assertEquals((byte)0, bigDecimal1.byteValue());
      assertEquals((short)0, bigDecimal1.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray2 = catalogLight0.getLightSources();
      assertEquals(9, stringArray1.length);
      assertEquals(9, lightSourceArray2.length);
      assertEquals(9, lightSourceArray1.length);
      assertNotSame(stringArray1, stringArray0);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertNotSame(lightSourceArray2, lightSourceArray0);
      assertNotSame(lightSourceArray2, lightSourceArray1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray1, lightSourceArray2);
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertTrue(bigDecimal1.equals((Object)bigDecimal0));
      assertFalse(lightSourceArray2.equals((Object)lightSourceArray0));
      assertFalse(lightSourceArray2.equals((Object)lightSourceArray1));
      assertTrue(long1.equals((Object)long0));
      assertEquals((float)float1, (float)float0, 0.01F);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray2);
      assertEquals((byte)0, bigDecimal1.byteValue());
      assertEquals((short)0, bigDecimal1.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray1.length);
      assertEquals(9, lightSourceArray1.length);
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertTrue(bigDecimal1.equals((Object)bigDecimal0));
      assertTrue(long1.equals((Object)long0));
      assertEquals((float)float1, (float)float0, 0.01F);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray2));
      assertNotNull(homeLight0);
      assertEquals((byte)0, bigDecimal1.byteValue());
      assertEquals((short)0, bigDecimal1.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      String string0 = homeLight0.getStaircaseCutOutShape();
      assertEquals(9, stringArray1.length);
      assertEquals(9, lightSourceArray1.length);
      assertNotSame(stringArray1, stringArray0);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray1, lightSourceArray2);
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertTrue(bigDecimal1.equals((Object)bigDecimal0));
      assertTrue(long1.equals((Object)long0));
      assertEquals((float)float1, (float)float0, 0.01F);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray2));
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals((byte)0, bigDecimal1.byteValue());
      assertEquals((short)0, bigDecimal1.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[2] = null;
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[12];
      float float1 = 1.0F;
      float float2 = (-41.318325F);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(12, lightSourceArray0.length);
      assertNotEquals((float)float0, (float)float2, 0.01F);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(8, stringArray0.length);
      assertEquals(12, lightSourceArray0.length);
      assertEquals(12, lightSourceArray1.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotEquals((float)float0, (float)float2, 0.01F);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(12, lightSourceArray0.length);
      assertNotEquals((float)float0, (float)float2, 0.01F);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      
      // Undeclared exception!
      try { 
        homeLight0.setDepth(2.0F);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[2] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      lightSourceArray0[6] = lightSourceArray0[4];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      
      homeLight0.setDepth(2.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(2.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      
      homeLight0.setAngle(1.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(2.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      
      homeLight0.setDepth((-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-19.779608F), homeLight0.getDepth(), 0.01F);
      
      HomePieceOfFurniture.SortableProperty[] homePieceOfFurniture_SortablePropertyArray0 = HomePieceOfFurniture.SortableProperty.values();
      assertEquals(19, homePieceOfFurniture_SortablePropertyArray0.length);
      assertNotNull(homePieceOfFurniture_SortablePropertyArray0);
      
      homeLight0.setModelMirrored(false);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-19.779608F), homeLight0.getDepth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      String string0 = resourceURLContent0.getJAREntryName();
      assertEquals("com/eteks/sweethome3d/model/", string0);
      assertNotNull(string0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      lightSourceArray0[3] = lightSourceArray0[2];
      lightSourceArray0[4] = lightSourceArray0[2];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      
      homeLight0.setDescription("");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      
      float float1 = new Long(0L);
      assertEquals(0L, float1, 0.01F);
      
      homeLight0.setNameYOffset(4.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(long0.equals((Object)float1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(4.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      
      Level level0 = new Level("", 2637.65F, 2637.65F, 0L);
      assertNotNull(level0);
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      assertEquals(2637.65F, level0.getElevation(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals(2637.65F, level0.getFloorThickness(), 0.01F);
      assertEquals("", level0.getName());
      
      HomeLight homeLight1 = new HomeLight(homeLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertTrue(long0.equals((Object)float1));
      assertNotNull(homeLight1);
      assertEquals(4.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getShininess());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals("", homeLight1.getDescription());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getName());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(4.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      
      homeLight1.setNameYOffset(0L);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertTrue(long0.equals((Object)float1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getShininess());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals("", homeLight1.getDescription());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getName());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(4.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      
      homeLight1.setNameVisible(true);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertTrue(long0.equals((Object)float1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertTrue(homeLight1.isNameVisible());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getShininess());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals("", homeLight1.getDescription());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getName());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(4.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      
      BigDecimal bigDecimal1 = homeLight1.getValueAddedTaxPercentage();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight1, homeLight0);
      assertSame(bigDecimal1, bigDecimal0);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertTrue(long0.equals((Object)float1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertNotNull(bigDecimal1);
      assertTrue(homeLight1.isNameVisible());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getShininess());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals("", homeLight1.getDescription());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getName());
      assertEquals((byte)0, bigDecimal1.byteValue());
      assertEquals((short)0, bigDecimal1.shortValue());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(4.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      
      boolean boolean1 = homeLight0.isTopRightPointAt(1650.289F, (-0.2F), 2148.8296F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertTrue(long0.equals((Object)float1));
      assertFalse(boolean1 == boolean0);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(4.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeLight1.getModel();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight1, homeLight0);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertSame(resourceURLContent1, resourceURLContent0);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertTrue(long0.equals((Object)float1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertNotNull(resourceURLContent1);
      assertTrue(homeLight1.isNameVisible());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getShininess());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals("", homeLight1.getDescription());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getName());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent1.isMultiPartResource());
      assertTrue(resourceURLContent1.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(4.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "com.eteks.sweethome3d.model.CatalogLight";
      stringArray0[6] = null;
      stringArray0[7] = "";
      stringArray0[8] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource((-487.1F), (-487.1F), 1.0F, 791);
      assertNotNull(lightSource0);
      assertNull(lightSource0.getDiameter());
      assertEquals(791, lightSource0.getColor());
      assertEquals((-487.1F), lightSource0.getY(), 0.01F);
      assertEquals(1.0F, lightSource0.getZ(), 0.01F);
      assertEquals((-487.1F), lightSource0.getX(), 0.01F);
      
      lightSourceArray0[0] = lightSource0;
      LightSource lightSource1 = new LightSource((-487.1F), 2.0F, 0.0F, 791);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(2.0F, lightSource1.getY(), 0.01F);
      assertEquals(791, lightSource1.getColor());
      assertEquals(0.0F, lightSource1.getZ(), 0.01F);
      assertNull(lightSource1.getDiameter());
      assertEquals((-487.1F), lightSource1.getX(), 0.01F);
      
      lightSourceArray0[1] = lightSource1;
      LightSource lightSource2 = new LightSource(0.0F, (-1999.1F), 0.3926991F, (-2872));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertNotNull(lightSource2);
      assertEquals(0.0F, lightSource2.getX(), 0.01F);
      assertEquals((-2872), lightSource2.getColor());
      assertEquals(0.3926991F, lightSource2.getZ(), 0.01F);
      assertNull(lightSource2.getDiameter());
      assertEquals((-1999.1F), lightSource2.getY(), 0.01F);
      
      lightSourceArray0[2] = lightSource2;
      LightSource lightSource3 = new LightSource((-185.9665F), 0.3926991F, 791, 46);
      assertFalse(lightSource3.equals((Object)lightSource0));
      assertFalse(lightSource3.equals((Object)lightSource1));
      assertFalse(lightSource3.equals((Object)lightSource2));
      assertNotNull(lightSource3);
      assertEquals((-185.9665F), lightSource3.getX(), 0.01F);
      assertEquals(0.3926991F, lightSource3.getY(), 0.01F);
      assertEquals(46, lightSource3.getColor());
      assertNull(lightSource3.getDiameter());
      assertEquals(791.0F, lightSource3.getZ(), 0.01F);
      
      lightSourceArray0[3] = lightSource3;
      LightSource lightSource4 = new LightSource(46, (-1999.1F), 1.0F, 20);
      assertFalse(lightSource4.equals((Object)lightSource0));
      assertFalse(lightSource4.equals((Object)lightSource1));
      assertFalse(lightSource4.equals((Object)lightSource2));
      assertFalse(lightSource4.equals((Object)lightSource3));
      assertNotNull(lightSource4);
      assertEquals(20, lightSource4.getColor());
      assertEquals(1.0F, lightSource4.getZ(), 0.01F);
      assertEquals(46.0F, lightSource4.getX(), 0.01F);
      assertNull(lightSource4.getDiameter());
      assertEquals((-1999.1F), lightSource4.getY(), 0.01F);
      
      lightSourceArray0[4] = lightSource4;
      LightSource lightSource5 = new LightSource((-1999.1F), (-1999.1F), 0.0F, 20);
      assertFalse(lightSource5.equals((Object)lightSource2));
      assertFalse(lightSource5.equals((Object)lightSource3));
      assertFalse(lightSource5.equals((Object)lightSource0));
      assertFalse(lightSource5.equals((Object)lightSource1));
      assertFalse(lightSource5.equals((Object)lightSource4));
      assertNotNull(lightSource5);
      assertEquals((-1999.1F), lightSource5.getX(), 0.01F);
      assertEquals((-1999.1F), lightSource5.getY(), 0.01F);
      assertEquals(20, lightSource5.getColor());
      assertEquals(0.0F, lightSource5.getZ(), 0.01F);
      assertNull(lightSource5.getDiameter());
      
      lightSourceArray0[5] = lightSource5;
      LightSource lightSource6 = new LightSource(0L, 0.0F, 0.0F, 46);
      assertFalse(lightSource6.equals((Object)lightSource4));
      assertFalse(lightSource6.equals((Object)lightSource3));
      assertFalse(lightSource6.equals((Object)lightSource0));
      assertFalse(lightSource6.equals((Object)lightSource1));
      assertFalse(lightSource6.equals((Object)lightSource2));
      assertFalse(lightSource6.equals((Object)lightSource5));
      assertNotNull(lightSource6);
      assertEquals(0.0F, lightSource6.getY(), 0.01F);
      assertEquals(0.0F, lightSource6.getX(), 0.01F);
      assertEquals(0.0F, lightSource6.getZ(), 0.01F);
      assertNull(lightSource6.getDiameter());
      assertEquals(46, lightSource6.getColor());
      
      lightSourceArray0[6] = lightSource6;
      LightSource lightSource7 = new LightSource(0.0F, 0.0F, 3094.0688F, (-2872));
      assertFalse(lightSource7.equals((Object)lightSource6));
      assertFalse(lightSource7.equals((Object)lightSource5));
      assertFalse(lightSource7.equals((Object)lightSource4));
      assertFalse(lightSource7.equals((Object)lightSource2));
      assertFalse(lightSource7.equals((Object)lightSource3));
      assertFalse(lightSource7.equals((Object)lightSource0));
      assertFalse(lightSource7.equals((Object)lightSource1));
      assertNotNull(lightSource7);
      assertEquals(0.0F, lightSource7.getY(), 0.01F);
      assertEquals((-2872), lightSource7.getColor());
      assertEquals(0.0F, lightSource7.getX(), 0.01F);
      assertEquals(3094.0688F, lightSource7.getZ(), 0.01F);
      assertNull(lightSource7.getDiameter());
      
      lightSourceArray0[7] = lightSource7;
      LightSource lightSource8 = new LightSource((-1589.899F), 1.0F, 0.0F, (-1775));
      assertFalse(lightSource8.equals((Object)lightSource6));
      assertFalse(lightSource8.equals((Object)lightSource0));
      assertFalse(lightSource8.equals((Object)lightSource1));
      assertFalse(lightSource8.equals((Object)lightSource2));
      assertFalse(lightSource8.equals((Object)lightSource7));
      assertFalse(lightSource8.equals((Object)lightSource5));
      assertFalse(lightSource8.equals((Object)lightSource4));
      assertFalse(lightSource8.equals((Object)lightSource3));
      assertNotNull(lightSource8);
      assertEquals(1.0F, lightSource8.getY(), 0.01F);
      assertEquals(0.0F, lightSource8.getZ(), 0.01F);
      assertEquals((-1775), lightSource8.getColor());
      assertEquals((-1589.899F), lightSource8.getX(), 0.01F);
      assertNull(lightSource8.getDiameter());
      
      lightSourceArray0[8] = lightSource8;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0.3926991F, 0L, 0.3926991F, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, false, bigDecimal0, bigDecimal0, "");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      homeLight0.setNameXOffset(46);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(46.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[4] = "";
      stringArray0[5] = "com.eteks.sweethome3d.model.CatalogLight";
      stringArray0[7] = "";
      stringArray0[4] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource((-487.1F), (-1999.1F), 0.3926991F, (-2872));
      assertNotNull(lightSource0);
      assertEquals((-1999.1F), lightSource0.getY(), 0.01F);
      assertEquals((-2872), lightSource0.getColor());
      assertEquals(0.3926991F, lightSource0.getZ(), 0.01F);
      assertEquals((-487.1F), lightSource0.getX(), 0.01F);
      assertNull(lightSource0.getDiameter());
      
      lightSourceArray0[2] = lightSource0;
      LightSource lightSource1 = new LightSource((-2872), (-1999.1F), 1.0F, 20);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals((-2872.0F), lightSource1.getX(), 0.01F);
      assertEquals(20, lightSource1.getColor());
      assertEquals((-1999.1F), lightSource1.getY(), 0.01F);
      assertNull(lightSource1.getDiameter());
      assertEquals(1.0F, lightSource1.getZ(), 0.01F);
      
      LightSource lightSource2 = new LightSource((-1999.1F), (-1999.1F), 0.0F, 20);
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertNotNull(lightSource2);
      assertEquals((-1999.1F), lightSource2.getX(), 0.01F);
      assertEquals((-1999.1F), lightSource2.getY(), 0.01F);
      assertNull(lightSource2.getDiameter());
      assertEquals(0.0F, lightSource2.getZ(), 0.01F);
      assertEquals(20, lightSource2.getColor());
      
      LightSource lightSource3 = new LightSource((-487.1F), (-2872), 0L, 20);
      assertFalse(lightSource3.equals((Object)lightSource0));
      assertFalse(lightSource3.equals((Object)lightSource1));
      assertFalse(lightSource3.equals((Object)lightSource2));
      assertNotNull(lightSource3);
      assertEquals(20, lightSource3.getColor());
      assertNull(lightSource3.getDiameter());
      assertEquals(0.0F, lightSource3.getZ(), 0.01F);
      assertEquals((-487.1F), lightSource3.getX(), 0.01F);
      assertEquals((-2872.0F), lightSource3.getY(), 0.01F);
      
      lightSourceArray0[6] = lightSource3;
      LightSource lightSource4 = new LightSource(0.0F, (-0.3003764F), 3094.0688F, (-2872));
      assertFalse(lightSource4.equals((Object)lightSource3));
      assertFalse(lightSource4.equals((Object)lightSource1));
      assertFalse(lightSource4.equals((Object)lightSource0));
      assertFalse(lightSource4.equals((Object)lightSource2));
      assertNotNull(lightSource4);
      assertNull(lightSource4.getDiameter());
      assertEquals((-0.3003764F), lightSource4.getY(), 0.01F);
      assertEquals(0.0F, lightSource4.getX(), 0.01F);
      assertEquals(3094.0688F, lightSource4.getZ(), 0.01F);
      assertEquals((-2872), lightSource4.getColor());
      
      lightSourceArray0[7] = lightSource4;
      lightSourceArray0[8] = lightSourceArray0[1];
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0.3926991F, 0L, 0.3926991F, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, stringArray0[6]);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      homeLight0.setNameAngle((-35.592735F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(2.1063766F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      String[] stringArray0 = new String[8];
      Long long0 = new Long(1L);
      assertEquals(1L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 1L);
      assertEquals(1.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 1L, 1L, 1L, 1L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      
      LightSource[] lightSourceArray1 = homeLight0.getLightSources();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      
      HomeLight homeLight1 = new HomeLight(homeLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(1.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight1.getY(), 0.01F);
      assertEquals(0.5F, homeLight1.getX(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals(1.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertTrue(homeLight1.isMovable());
      assertEquals(1.0F, homeLight1.getHeight(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(1.0F, homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getName());
      assertFalse(homeLight1.isNameVisible());
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      boolean boolean1 = homeLight0.isPointAt(1L, 1L, 1L);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      
      boolean boolean2 = homeLight1.isBottomLeftPointAt(1L, 1L, 1L);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(1.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight1.getY(), 0.01F);
      assertEquals(0.5F, homeLight1.getX(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals(1.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertTrue(homeLight1.isMovable());
      assertEquals(1.0F, homeLight1.getHeight(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(1.0F, homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getName());
      assertFalse(homeLight1.isNameVisible());
      
      float float1 = homeLight1.getGroundElevation();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertEquals(1.0F, float1, 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(1.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight1.getY(), 0.01F);
      assertEquals(0.5F, homeLight1.getX(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals(1.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertTrue(homeLight1.isMovable());
      assertEquals(1.0F, homeLight1.getHeight(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(1.0F, homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getName());
      assertFalse(homeLight1.isNameVisible());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      float float1 = Float.sum(2.0F, 2.0F);
      assertEquals(4.0F, float1, 0.01F);
      
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertNotNull(lightSource0);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      assertEquals(0.0F, lightSource0.getZ(), 0.01F);
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      
      lightSourceArray0[2] = lightSource0;
      LightSource lightSource1 = new LightSource(791, 0L, 791, 791);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(791, lightSource1.getColor());
      assertEquals(791.0F, lightSource1.getX(), 0.01F);
      assertEquals(791.0F, lightSource1.getZ(), 0.01F);
      assertNull(lightSource1.getDiameter());
      assertEquals(0.0F, lightSource1.getY(), 0.01F);
      
      lightSourceArray0[3] = lightSource1;
      lightSourceArray0[4] = lightSource1;
      lightSourceArray0[6] = lightSource1;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertNotNull(catalogLight0);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertNotNull(lightSourceArray1);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      String string0 = resourceURLContent0.getJAREntryName();
      assertEquals("com/eteks/sweethome3d/model/", string0);
      assertNotNull(string0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean1 = homeLight0.isBottomRightPointAt(1.0F, 791, (-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(boolean1 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean1);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      boolean boolean2 = homeLight0.containsPoint(2.0F, 791, (-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean2);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      homeLight0.setDepth(2.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(2.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      homeLight0.setAngle(1.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(2.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getDescription());
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      homeLight0.setDepth((-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getDescription());
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals((-19.779608F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      float float2 = homeLight0.getGroundElevation();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotEquals(float2, float1, 0.01F);
      assertEquals(0.0F, float2, 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getDescription());
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals((-19.779608F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      boolean boolean3 = homeLight0.isTopLeftPointAt(1.0F, 0.0F, 1364.06F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertEquals((float)float0, (float)float2, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getDescription());
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals((-19.779608F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[7] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(328.95245F, 791, 2.0F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(2.0F, lightSource0.getZ(), 0.01F);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(328.95245F, lightSource0.getX(), 0.01F);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      
      lightSourceArray0[1] = lightSource0;
      LightSource lightSource1 = new LightSource(791, (-487.1F), 328.95245F, 791, float0);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(791, lightSource1.getColor());
      assertEquals(328.95245F, lightSource1.getZ(), 0.01F);
      assertEquals(0.0F, lightSource1.getDiameter(), 0.01F);
      assertEquals(791.0F, lightSource1.getX(), 0.01F);
      assertEquals((-487.1F), lightSource1.getY(), 0.01F);
      
      lightSourceArray0[2] = lightSource1;
      LightSource lightSource2 = new LightSource((-487.1F), 328.95245F, 791, 791);
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertNotNull(lightSource2);
      assertEquals(791, lightSource2.getColor());
      assertEquals(328.95245F, lightSource2.getY(), 0.01F);
      assertEquals((-487.1F), lightSource2.getX(), 0.01F);
      assertEquals(791.0F, lightSource2.getZ(), 0.01F);
      assertNull(lightSource2.getDiameter());
      
      lightSourceArray0[4] = lightSource1;
      LightSource lightSource3 = new LightSource(20, 328.95245F, 791, 20, float0);
      assertFalse(lightSource3.equals((Object)lightSource1));
      assertFalse(lightSource3.equals((Object)lightSource2));
      assertFalse(lightSource3.equals((Object)lightSource0));
      assertNotNull(lightSource3);
      assertEquals(791.0F, lightSource3.getZ(), 0.01F);
      assertEquals(20.0F, lightSource3.getX(), 0.01F);
      assertEquals(20, lightSource3.getColor());
      assertEquals(328.95245F, lightSource3.getY(), 0.01F);
      assertEquals(0.0F, lightSource3.getDiameter(), 0.01F);
      
      LightSource lightSource4 = new LightSource(2.0F, 20, 3094.0688F, 791);
      assertFalse(lightSource4.equals((Object)lightSource0));
      assertFalse(lightSource4.equals((Object)lightSource2));
      assertFalse(lightSource4.equals((Object)lightSource1));
      assertFalse(lightSource4.equals((Object)lightSource3));
      assertNotNull(lightSource4);
      assertEquals(791, lightSource4.getColor());
      assertNull(lightSource4.getDiameter());
      assertEquals(3094.0688F, lightSource4.getZ(), 0.01F);
      assertEquals(20.0F, lightSource4.getY(), 0.01F);
      assertEquals(2.0F, lightSource4.getX(), 0.01F);
      
      lightSourceArray0[7] = lightSource4;
      lightSourceArray0[8] = lightSource1;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 328.95245F, 0L, 328.95245F, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, false, bigDecimal0, bigDecimal0, "");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(328.95245F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(328.95245F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(328.95245F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(328.95245F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertEquals(328.95245F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(164.47623F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isMovable());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(328.95245F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      homeLight0.move(0.0F, 791);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(328.95245F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(328.95245F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertEquals(328.95245F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(164.47623F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isMovable());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals(791.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(328.95245F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean0 = homeLight0.isTopRightPointAt(0L, 0L, 20);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(boolean0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(328.95245F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(328.95245F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertEquals(328.95245F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(164.47623F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isMovable());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals(791.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(328.95245F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      homeLight0.setNameVisible(false);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(328.95245F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(328.95245F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertEquals(328.95245F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(164.47623F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isMovable());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals(791.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(328.95245F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeTexture homeTexture0 = homeLight0.getTexture();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNull(homeTexture0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(328.95245F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(328.95245F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertEquals(328.95245F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(164.47623F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isMovable());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals(791.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(328.95245F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      homeLight0.setNameStyle((TextStyle) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(328.95245F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(328.95245F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertEquals(328.95245F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(164.47623F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isMovable());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals(791.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(328.95245F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[7] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(332.69F, 791, 2.0F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(332.69F, lightSource0.getX(), 0.01F);
      assertEquals(2.0F, lightSource0.getZ(), 0.01F);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      
      lightSourceArray0[1] = lightSource0;
      LightSource lightSource1 = new LightSource((-2872), (-487.1F), 332.69F, (-2872), float0);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals((-2872.0F), lightSource1.getX(), 0.01F);
      assertEquals((-2872), lightSource1.getColor());
      assertEquals(332.69F, lightSource1.getZ(), 0.01F);
      assertEquals(0.0F, lightSource1.getDiameter(), 0.01F);
      assertEquals((-487.1F), lightSource1.getY(), 0.01F);
      
      lightSourceArray0[2] = lightSource1;
      LightSource lightSource2 = new LightSource((-487.1F), 332.69F, 791, 46);
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertNotNull(lightSource2);
      assertEquals((-487.1F), lightSource2.getX(), 0.01F);
      assertEquals(332.69F, lightSource2.getY(), 0.01F);
      assertEquals(46, lightSource2.getColor());
      assertNull(lightSource2.getDiameter());
      assertEquals(791.0F, lightSource2.getZ(), 0.01F);
      
      lightSourceArray0[3] = lightSource2;
      lightSourceArray0[4] = lightSource1;
      LightSource lightSource3 = new LightSource(20, 332.69F, 791, 20, float0);
      assertFalse(lightSource3.equals((Object)lightSource1));
      assertFalse(lightSource3.equals((Object)lightSource2));
      assertFalse(lightSource3.equals((Object)lightSource0));
      assertNotNull(lightSource3);
      assertEquals(791.0F, lightSource3.getZ(), 0.01F);
      assertEquals(20.0F, lightSource3.getX(), 0.01F);
      assertEquals(20, lightSource3.getColor());
      assertEquals(332.69F, lightSource3.getY(), 0.01F);
      assertEquals(0.0F, lightSource3.getDiameter(), 0.01F);
      
      LightSource lightSource4 = new LightSource(2.0F, 20, 3094.0688F, (-2872));
      assertFalse(lightSource4.equals((Object)lightSource3));
      assertFalse(lightSource4.equals((Object)lightSource0));
      assertFalse(lightSource4.equals((Object)lightSource2));
      assertFalse(lightSource4.equals((Object)lightSource1));
      assertNotNull(lightSource4);
      assertEquals(3094.0688F, lightSource4.getZ(), 0.01F);
      assertEquals((-2872), lightSource4.getColor());
      assertNull(lightSource4.getDiameter());
      assertEquals(2.0F, lightSource4.getX(), 0.01F);
      assertEquals(20.0F, lightSource4.getY(), 0.01F);
      
      lightSourceArray0[7] = lightSource4;
      lightSourceArray0[8] = lightSource1;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 332.69F, 0L, 332.69F, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, false, bigDecimal0, bigDecimal0, "");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(332.69F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals("", catalogLight0.getCurrency());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getId());
      assertEquals(332.69F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isTexturable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(332.69F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals("", catalogLight0.getCurrency());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getId());
      assertEquals(332.69F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isTexturable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isResizable());
      assertEquals(332.69F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(332.69F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals("", homeLight0.getCurrency());
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(166.345F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      homeLight0.move(0.0F, 46);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(332.69F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals("", catalogLight0.getCurrency());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getId());
      assertEquals(332.69F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isTexturable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isResizable());
      assertEquals(332.69F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(332.69F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals("", homeLight0.getCurrency());
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(46.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(166.345F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      homeLight0.setDescription("M2tH$P&m&x.[yz!#");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(332.69F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals("", catalogLight0.getCurrency());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getId());
      assertEquals(332.69F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isTexturable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("M2tH$P&m&x.[yz!#", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isResizable());
      assertEquals(332.69F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(332.69F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals("", homeLight0.getCurrency());
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(46.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(166.345F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[7] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(0.3926991F, 791, (-487.1F), 791, float0);
      assertNotNull(lightSource0);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      assertEquals(0.3926991F, lightSource0.getX(), 0.01F);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals((-487.1F), lightSource0.getZ(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      
      lightSourceArray0[1] = lightSource0;
      LightSource lightSource1 = new LightSource(791, (-487.1F), 0.3926991F, 791, float0);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(791, lightSource1.getColor());
      assertEquals(0.0F, lightSource1.getDiameter(), 0.01F);
      assertEquals(0.3926991F, lightSource1.getZ(), 0.01F);
      assertEquals(791.0F, lightSource1.getX(), 0.01F);
      assertEquals((-487.1F), lightSource1.getY(), 0.01F);
      
      lightSourceArray0[2] = lightSource1;
      LightSource lightSource2 = new LightSource((-487.1F), 0.3926991F, 791, 46);
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertNotNull(lightSource2);
      assertEquals(46, lightSource2.getColor());
      assertEquals((-487.1F), lightSource2.getX(), 0.01F);
      assertEquals(0.3926991F, lightSource2.getY(), 0.01F);
      assertEquals(791.0F, lightSource2.getZ(), 0.01F);
      assertNull(lightSource2.getDiameter());
      
      lightSourceArray0[3] = lightSource2;
      lightSourceArray0[4] = lightSource1;
      LightSource lightSource3 = new LightSource(20, 0.3926991F, 791, 20, float0);
      assertFalse(lightSource3.equals((Object)lightSource2));
      assertFalse(lightSource3.equals((Object)lightSource1));
      assertFalse(lightSource3.equals((Object)lightSource0));
      assertNotNull(lightSource3);
      assertEquals(20, lightSource3.getColor());
      assertEquals(20.0F, lightSource3.getX(), 0.01F);
      assertEquals(791.0F, lightSource3.getZ(), 0.01F);
      assertEquals(0.0F, lightSource3.getDiameter(), 0.01F);
      assertEquals(0.3926991F, lightSource3.getY(), 0.01F);
      
      LightSource lightSource4 = new LightSource(0.0F, 20, 3094.0688F, 791);
      assertFalse(lightSource4.equals((Object)lightSource2));
      assertFalse(lightSource4.equals((Object)lightSource1));
      assertFalse(lightSource4.equals((Object)lightSource0));
      assertFalse(lightSource4.equals((Object)lightSource3));
      assertNotNull(lightSource4);
      assertEquals(0.0F, lightSource4.getX(), 0.01F);
      assertEquals(20.0F, lightSource4.getY(), 0.01F);
      assertNull(lightSource4.getDiameter());
      assertEquals(3094.0688F, lightSource4.getZ(), 0.01F);
      assertEquals(791, lightSource4.getColor());
      
      lightSourceArray0[7] = lightSource4;
      lightSourceArray0[8] = lightSource1;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0.3926991F, 0L, 0.3926991F, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, "");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals("", homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      homeLight0.setDescription("M2tH$P&m&x.[yz!#");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("M2tH$P&m&x.[yz!#", homeLight0.getDescription());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals("", homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      boolean boolean0 = homeLight0.containsPoint(0.3926991F, 46.0F, 791);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(boolean0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("M2tH$P&m&x.[yz!#", homeLight0.getDescription());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals("", homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(0L, 0L, (-19.779608F), 46);
      assertNotNull(lightSource0);
      assertEquals((-19.779608F), lightSource0.getZ(), 0.01F);
      assertNull(lightSource0.getDiameter());
      assertEquals(0.0F, lightSource0.getX(), 0.01F);
      assertEquals(0.0F, lightSource0.getY(), 0.01F);
      assertEquals(46, lightSource0.getColor());
      
      lightSourceArray0[6] = lightSource0;
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      float float1 = Float.max((-2669.9358F), 46);
      assertEquals(46.0F, float1, 0.01F);
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertNotNull(catalogLight0);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      BigDecimal bigDecimal1 = bigDecimal0.stripTrailingZeros();
      assertSame(bigDecimal1, bigDecimal0);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotNull(bigDecimal1);
      assertEquals((byte)0, bigDecimal1.byteValue());
      assertEquals((short)0, bigDecimal1.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertNotNull(lightSourceArray1);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      boolean boolean1 = homeLight0.isBottomRightPointAt(1.0F, 1.0F, (-5.439064F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertFalse(boolean1 == boolean0);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean1);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      boolean boolean2 = homeLight0.isPointAt(1.0F, (-4375.3174F), 0.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean2);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      boolean boolean3 = homeLight0.isDoorOrWindow();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean3);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      BigDecimal bigDecimal2 = homeLight0.getValueAddedTaxPercentage();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(bigDecimal2, bigDecimal1);
      assertSame(bigDecimal2, bigDecimal0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal2);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(bigDecimal2);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((byte)0, bigDecimal2.byteValue());
      assertEquals((short)0, bigDecimal2.shortValue());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[8];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      
      homeLight0.setDescription("");
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      
      Long long1 = new Long(0L);
      assertTrue(long1.equals((Object)long0));
      assertEquals(0L, (long)long1);
      assertNotNull(long1);
      
      homeLight0.setAngle(0L);
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertTrue(long0.equals((Object)long1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      
      HomeLight homeLight1 = new HomeLight(homeLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertTrue(long0.equals((Object)long1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertNull(homeLight1.getCurrency());
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertTrue(homeLight1.isTexturable());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals("", homeLight1.getDescription());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      
      homeLight1.setVisible(true);
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertTrue(long0.equals((Object)long1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertNull(homeLight1.getCurrency());
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertTrue(homeLight1.isTexturable());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals("", homeLight1.getDescription());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      Long long0 = new Long((-55L));
      assertEquals((-55L), (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) (-55L));
      assertEquals((-55.0F), (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite((-55L));
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      String string0 = resourceURLContent0.getJAREntryName();
      assertEquals("com/eteks/sweethome3d/model/", string0);
      assertNotNull(string0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-55L), (-55L), (-55L), (-55L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCurrency());
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getName());
      assertEquals((-55.0F), homeLight1.getWidth(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertEquals((-55.0F), homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isNameVisible());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getCurrency());
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals((-55.0F), homeLight1.getElevation(), 0.01F);
      assertEquals((-55.0F), homeLight1.getHeight(), 0.01F);
      assertEquals((-27.5F), homeLight1.getX(), 0.01F);
      assertEquals((-27.5F), homeLight1.getY(), 0.01F);
      assertEquals((-55.0F), homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      homeLight0.setColor((Integer) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCurrency());
      
      homeLight1.setDescription("$?unP7lFk");
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getName());
      assertEquals((-55.0F), homeLight1.getWidth(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals("$?unP7lFk", homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertEquals((-55.0F), homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isNameVisible());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getCurrency());
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals((-55.0F), homeLight1.getElevation(), 0.01F);
      assertEquals((-55.0F), homeLight1.getHeight(), 0.01F);
      assertEquals((-27.5F), homeLight1.getX(), 0.01F);
      assertEquals((-27.5F), homeLight1.getY(), 0.01F);
      assertEquals((-55.0F), homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      
      HomeLight homeLight2 = (HomeLight)homeLight1.clone();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight2, homeLight1);
      assertNotSame(homeLight2, homeLight0);
      assertNotSame(homeLight0, homeLight2);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(homeLight1, homeLight2);
      assertFalse(homeLight2.equals((Object)homeLight1));
      assertFalse(homeLight2.equals((Object)homeLight0));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight2);
      assertEquals(0.0F, homeLight2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight2.getNameAngle(), 0.01F);
      assertNull(homeLight2.getStaircaseCutOutShape());
      assertNull(homeLight2.getCatalogId());
      assertTrue(homeLight2.isResizable());
      assertFalse(homeLight2.isDoorOrWindow());
      assertFalse(homeLight2.isModelMirrored());
      assertTrue(homeLight2.isTexturable());
      assertFalse(homeLight2.isBackFaceShown());
      assertEquals(0.0F, homeLight2.getAngle(), 0.01F);
      assertFalse(homeLight2.isNameVisible());
      assertNull(homeLight2.getName());
      assertEquals((-55.0F), homeLight2.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight2.getNameYOffset(), 0.01F);
      assertTrue(homeLight2.isVisible());
      assertEquals((-55.0F), homeLight2.getGroundElevation(), 0.01F);
      assertNull(homeLight2.getColor());
      assertTrue(homeLight2.isDeformable());
      assertEquals((-55.0F), homeLight2.getDepth(), 0.01F);
      assertNull(homeLight2.getShininess());
      assertTrue(homeLight2.isMovable());
      assertEquals((-27.5F), homeLight2.getX(), 0.01F);
      assertEquals((-27.5F), homeLight2.getY(), 0.01F);
      assertEquals("$?unP7lFk", homeLight2.getDescription());
      assertEquals(0.5F, homeLight2.getPower(), 0.01F);
      assertEquals((-55.0F), homeLight2.getElevation(), 0.01F);
      assertNull(homeLight2.getCurrency());
      assertEquals((-55.0F), homeLight2.getWidth(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getName());
      assertEquals((-55.0F), homeLight1.getWidth(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals("$?unP7lFk", homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertEquals((-55.0F), homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isNameVisible());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getCurrency());
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals((-55.0F), homeLight1.getElevation(), 0.01F);
      assertEquals((-55.0F), homeLight1.getHeight(), 0.01F);
      assertEquals((-27.5F), homeLight1.getX(), 0.01F);
      assertEquals((-27.5F), homeLight1.getY(), 0.01F);
      assertEquals((-55.0F), homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(0.0F, lightSource0.getZ(), 0.01F);
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource1 = new LightSource(0L, 0.0F, (-19.779608F), 791);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertNull(lightSource1.getDiameter());
      assertEquals((-19.779608F), lightSource1.getZ(), 0.01F);
      assertEquals(791, lightSource1.getColor());
      assertEquals(0.0F, lightSource1.getX(), 0.01F);
      assertEquals(0.0F, lightSource1.getY(), 0.01F);
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isMovable());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight1);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(homeLight1.isMovable());
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      
      homeLight1.setDescription("com.eteks.sweethome3d.tools.URLContent");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(homeLight1.isMovable());
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals("com.eteks.sweethome3d.tools.URLContent", homeLight1.getDescription());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      
      homeLight1.setWidth((-545.866F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals((-545.866F), homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(homeLight1.isMovable());
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals("com.eteks.sweethome3d.tools.URLContent", homeLight1.getDescription());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      
      homeLight1.setNameAngle((-1.0F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isMovable());
      assertEquals(5.2831855F, homeLight1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals((-545.866F), homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(homeLight1.isMovable());
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals("com.eteks.sweethome3d.tools.URLContent", homeLight1.getDescription());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      
      homeLight0.setAngle(0L);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isMovable());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      
      boolean boolean1 = homeLight0.containsPoint((-545.866F), 791.0F, 0.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(boolean1 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean1);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isMovable());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[6] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "com.eteks.sweethome3d.model.CatalogLight";
      stringArray0[6] = null;
      stringArray0[7] = "";
      stringArray0[8] = "";
      Long long0 = new Long((-3135L));
      assertEquals((-3135L), (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) (-3135L));
      assertEquals((-3135.0F), (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource((-487.1F), (-487.1F), 1.0F, 791);
      assertNotNull(lightSource0);
      assertEquals(791, lightSource0.getColor());
      assertEquals((-487.1F), lightSource0.getX(), 0.01F);
      assertNull(lightSource0.getDiameter());
      assertEquals(1.0F, lightSource0.getZ(), 0.01F);
      assertEquals((-487.1F), lightSource0.getY(), 0.01F);
      
      lightSourceArray0[0] = lightSource0;
      LightSource lightSource1 = new LightSource((-487.1F), 2.0F, 0.0F, 791);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(0.0F, lightSource1.getZ(), 0.01F);
      assertEquals(2.0F, lightSource1.getY(), 0.01F);
      assertEquals(791, lightSource1.getColor());
      assertEquals((-487.1F), lightSource1.getX(), 0.01F);
      assertNull(lightSource1.getDiameter());
      
      lightSourceArray0[1] = lightSource1;
      LightSource lightSource2 = new LightSource(0.0F, (-1999.1F), 0.3926991F, (-2872));
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertNotNull(lightSource2);
      assertEquals((-2872), lightSource2.getColor());
      assertEquals(0.3926991F, lightSource2.getZ(), 0.01F);
      assertNull(lightSource2.getDiameter());
      assertEquals((-1999.1F), lightSource2.getY(), 0.01F);
      assertEquals(0.0F, lightSource2.getX(), 0.01F);
      
      lightSourceArray0[2] = lightSource2;
      LightSource lightSource3 = new LightSource((-185.9665F), 0.3926991F, 791, 46);
      assertFalse(lightSource3.equals((Object)lightSource1));
      assertFalse(lightSource3.equals((Object)lightSource0));
      assertFalse(lightSource3.equals((Object)lightSource2));
      assertNotNull(lightSource3);
      assertEquals(46, lightSource3.getColor());
      assertNull(lightSource3.getDiameter());
      assertEquals(791.0F, lightSource3.getZ(), 0.01F);
      assertEquals((-185.9665F), lightSource3.getX(), 0.01F);
      assertEquals(0.3926991F, lightSource3.getY(), 0.01F);
      
      lightSourceArray0[3] = lightSource3;
      LightSource lightSource4 = new LightSource(46, (-1999.1F), 1.0F, 20);
      assertFalse(lightSource4.equals((Object)lightSource1));
      assertFalse(lightSource4.equals((Object)lightSource2));
      assertFalse(lightSource4.equals((Object)lightSource0));
      assertFalse(lightSource4.equals((Object)lightSource3));
      assertNotNull(lightSource4);
      assertEquals(20, lightSource4.getColor());
      assertEquals(1.0F, lightSource4.getZ(), 0.01F);
      assertNull(lightSource4.getDiameter());
      assertEquals((-1999.1F), lightSource4.getY(), 0.01F);
      assertEquals(46.0F, lightSource4.getX(), 0.01F);
      
      lightSourceArray0[4] = lightSource1;
      LightSource lightSource5 = new LightSource((-1999.1F), (-1999.1F), 0.0F, 20);
      assertFalse(lightSource5.equals((Object)lightSource4));
      assertFalse(lightSource5.equals((Object)lightSource0));
      assertFalse(lightSource5.equals((Object)lightSource2));
      assertFalse(lightSource5.equals((Object)lightSource3));
      assertFalse(lightSource5.equals((Object)lightSource1));
      assertNotNull(lightSource5);
      assertEquals(0.0F, lightSource5.getZ(), 0.01F);
      assertEquals((-1999.1F), lightSource5.getX(), 0.01F);
      assertEquals((-1999.1F), lightSource5.getY(), 0.01F);
      assertNull(lightSource5.getDiameter());
      assertEquals(20, lightSource5.getColor());
      
      lightSourceArray0[5] = lightSource5;
      LightSource lightSource6 = new LightSource((-3135L), 0.0F, 0.0F, 46);
      assertFalse(lightSource6.equals((Object)lightSource1));
      assertFalse(lightSource6.equals((Object)lightSource0));
      assertFalse(lightSource6.equals((Object)lightSource4));
      assertFalse(lightSource6.equals((Object)lightSource2));
      assertFalse(lightSource6.equals((Object)lightSource5));
      assertFalse(lightSource6.equals((Object)lightSource3));
      assertNotNull(lightSource6);
      assertEquals(0.0F, lightSource6.getY(), 0.01F);
      assertEquals(0.0F, lightSource6.getZ(), 0.01F);
      assertEquals(46, lightSource6.getColor());
      assertEquals((-3135.0F), lightSource6.getX(), 0.01F);
      assertNull(lightSource6.getDiameter());
      
      lightSourceArray0[6] = lightSource6;
      LightSource lightSource7 = new LightSource(0.0F, 0.0F, 3094.0688F, (-2872));
      assertFalse(lightSource7.equals((Object)lightSource4));
      assertFalse(lightSource7.equals((Object)lightSource6));
      assertFalse(lightSource7.equals((Object)lightSource5));
      assertFalse(lightSource7.equals((Object)lightSource2));
      assertFalse(lightSource7.equals((Object)lightSource1));
      assertFalse(lightSource7.equals((Object)lightSource3));
      assertFalse(lightSource7.equals((Object)lightSource0));
      assertNotNull(lightSource7);
      assertEquals(3094.0688F, lightSource7.getZ(), 0.01F);
      assertEquals(0.0F, lightSource7.getY(), 0.01F);
      assertEquals(0.0F, lightSource7.getX(), 0.01F);
      assertNull(lightSource7.getDiameter());
      assertEquals((-2872), lightSource7.getColor());
      
      lightSourceArray0[7] = lightSource7;
      LightSource lightSource8 = new LightSource((-1589.899F), 1.0F, 0.0F, (-1775));
      assertFalse(lightSource8.equals((Object)lightSource2));
      assertFalse(lightSource8.equals((Object)lightSource5));
      assertFalse(lightSource8.equals((Object)lightSource4));
      assertFalse(lightSource8.equals((Object)lightSource7));
      assertFalse(lightSource8.equals((Object)lightSource6));
      assertFalse(lightSource8.equals((Object)lightSource0));
      assertFalse(lightSource8.equals((Object)lightSource1));
      assertFalse(lightSource8.equals((Object)lightSource3));
      assertNotNull(lightSource8);
      assertNull(lightSource8.getDiameter());
      assertEquals((-1589.899F), lightSource8.getX(), 0.01F);
      assertEquals((-1775), lightSource8.getColor());
      assertEquals(0.0F, lightSource8.getZ(), 0.01F);
      assertEquals(1.0F, lightSource8.getY(), 0.01F);
      
      lightSourceArray0[8] = lightSource8;
      BigDecimal bigDecimal0 = new BigDecimal((-3135L));
      assertNotNull(bigDecimal0);
      assertEquals((byte) (-63), bigDecimal0.byteValue());
      assertEquals((short) (-3135), bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0.3926991F, (-3135L), 0.3926991F, (-3135L), true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, false, bigDecimal0, bigDecimal0, "");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((byte) (-63), bigDecimal0.byteValue());
      assertEquals((short) (-3135), bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-3135.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-3135.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-3135.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isTexturable());
      assertEquals((-3135L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((byte) (-63), bigDecimal0.byteValue());
      assertEquals((short) (-3135), bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-3135.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-3135.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-3135.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isTexturable());
      assertEquals((-3135L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((byte) (-63), bigDecimal0.byteValue());
      assertEquals((short) (-3135), bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-3135.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-3135.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-3135.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isTexturable());
      assertEquals((-3135L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertEquals((-1567.5F), homeLight0.getY(), 0.01F);
      assertEquals((-3135.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-3135.0F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-3135.0F), homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      boolean boolean0 = homeLight0.isBottomRightPointAt((-1589.899F), 46, 0.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean0);
      assertEquals((byte) (-63), bigDecimal0.byteValue());
      assertEquals((short) (-3135), bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-3135.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-3135.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-3135.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isTexturable());
      assertEquals((-3135L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertEquals((-1567.5F), homeLight0.getY(), 0.01F);
      assertEquals((-3135.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-3135.0F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-3135.0F), homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[8];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      
      homeLight0.setDescription("");
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      
      homeLight0.setName((String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      
      homeLight0.setName((String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      
      homeLight0.setVisible(true);
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      
      boolean boolean1 = homeLight0.isPointAt((-767.67236F), (-767.67236F), 691.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[3] = "";
      Long long0 = new Long((-55L));
      assertEquals((-55L), (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) (-55L));
      assertEquals((-55.0F), (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[7];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      
      Long long1 = Long.valueOf(2518L);
      assertFalse(long1.equals((Object)long0));
      assertEquals(2518L, (long)long1);
      assertNotNull(long1);
      
      Float float1 = Float.valueOf(1.0F);
      assertNotEquals((float)float1, (float)float0, 0.01F);
      assertEquals(1.0F, (float)float1, 0.01F);
      assertNotNull(float1);
      
      Float float2 = Float.valueOf(0.0F);
      assertNotEquals((float)float2, (float)float1, 0.01F);
      assertNotEquals((float)float2, (float)float0, 0.01F);
      assertEquals(0.0F, (float)float2, 0.01F);
      assertNotNull(float2);
      
      Float float3 = Float.valueOf(0.0F);
      assertNotEquals((float)float3, (float)float0, 0.01F);
      assertNotEquals((float)float3, (float)float1, 0.01F);
      assertEquals((float)float3, (float)float2, 0.01F);
      assertEquals(0.0F, (float)float3, 0.01F);
      assertNotNull(float3);
      
      Float float4 = Float.valueOf(1.0F);
      assertEquals((float)float4, (float)float1, 0.01F);
      assertNotEquals((float)float4, (float)float0, 0.01F);
      assertNotEquals((float)float4, (float)float3, 0.01F);
      assertNotEquals((float)float4, (float)float2, 0.01F);
      assertEquals(1.0F, (float)float4, 0.01F);
      assertNotNull(float4);
      
      CatalogLight catalogLight0 = new CatalogLight("", "", ":ts&7{?4!Okz", "", stringArray0, long1, float4, resourceURLContent0, resourceURLContent0, resourceURLContent0, 2518L, 1.0F, 0.0F, 56.49F, true, lightSourceArray0, (String) null, (float[][]) null, "i@9p[z:tpCJH@BYE[p1", true, true, true, bigDecimal0, bigDecimal0, ":ts&7{?4!Okz");
      assertEquals(8, stringArray0.length);
      assertEquals(7, lightSourceArray0.length);
      assertFalse(long1.equals((Object)long0));
      assertEquals((float)float4, (float)float1, 0.01F);
      assertNotEquals((float)float4, (float)float0, 0.01F);
      assertNotEquals((float)float4, (float)float3, 0.01F);
      assertNotEquals((float)float4, (float)float2, 0.01F);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(56.49F, catalogLight0.getElevation(), 0.01F);
      assertEquals("", catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(":ts&7{?4!Okz", catalogLight0.getCurrency());
      assertEquals(2518.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(":ts&7{?4!Okz", catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(2518L, (long)catalogLight0.getCreationDate());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(7, lightSourceArray0.length);
      assertFalse(long1.equals((Object)long0));
      assertEquals((float)float4, (float)float1, 0.01F);
      assertNotEquals((float)float4, (float)float0, 0.01F);
      assertNotEquals((float)float4, (float)float3, 0.01F);
      assertNotEquals((float)float4, (float)float2, 0.01F);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(56.49F, catalogLight0.getElevation(), 0.01F);
      assertEquals("", catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(":ts&7{?4!Okz", catalogLight0.getCurrency());
      assertEquals(2518.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(":ts&7{?4!Okz", catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(2518L, (long)catalogLight0.getCreationDate());
      assertEquals(":ts&7{?4!Okz", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(56.49F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getColor());
      assertEquals(56.49F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(2518.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(1259.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isNameVisible());
      assertEquals("", homeLight0.getName());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(":ts&7{?4!Okz", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals("", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(7, lightSourceArray1.length);
      assertEquals(8, stringArray0.length);
      assertEquals(7, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertFalse(long1.equals((Object)long0));
      assertEquals((float)float4, (float)float1, 0.01F);
      assertNotEquals((float)float4, (float)float0, 0.01F);
      assertNotEquals((float)float4, (float)float3, 0.01F);
      assertNotEquals((float)float4, (float)float2, 0.01F);
      assertNotNull(lightSourceArray1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(56.49F, catalogLight0.getElevation(), 0.01F);
      assertEquals("", catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(":ts&7{?4!Okz", catalogLight0.getCurrency());
      assertEquals(2518.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(":ts&7{?4!Okz", catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(2518L, (long)catalogLight0.getCreationDate());
      
      HomeLight homeLight1 = new HomeLight(homeLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(7, lightSourceArray0.length);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(long1.equals((Object)long0));
      assertEquals((float)float4, (float)float1, 0.01F);
      assertNotEquals((float)float4, (float)float0, 0.01F);
      assertNotEquals((float)float4, (float)float3, 0.01F);
      assertNotEquals((float)float4, (float)float2, 0.01F);
      assertNotNull(homeLight1);
      assertEquals("", homeLight1.getName());
      assertEquals(1259.0F, homeLight1.getX(), 0.01F);
      assertEquals(56.49F, homeLight1.getElevation(), 0.01F);
      assertEquals("", homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertEquals(1.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight1.getY(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(2518.0F, homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertEquals(56.49F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(":ts&7{?4!Okz", homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(":ts&7{?4!Okz", homeLight1.getDescription());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(56.49F, catalogLight0.getElevation(), 0.01F);
      assertEquals("", catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(":ts&7{?4!Okz", catalogLight0.getCurrency());
      assertEquals(2518.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(":ts&7{?4!Okz", catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(2518L, (long)catalogLight0.getCreationDate());
      assertEquals(":ts&7{?4!Okz", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(56.49F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getColor());
      assertEquals(56.49F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(2518.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(1259.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isNameVisible());
      assertEquals("", homeLight0.getName());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(":ts&7{?4!Okz", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals("", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = homeLight0.isPointAt((-55L), 0.0F, 0.5F);
      assertEquals(8, stringArray0.length);
      assertEquals(7, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(long1.equals((Object)long0));
      assertEquals((float)float4, (float)float1, 0.01F);
      assertNotEquals((float)float4, (float)float0, 0.01F);
      assertNotEquals((float)float4, (float)float3, 0.01F);
      assertNotEquals((float)float4, (float)float2, 0.01F);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(boolean2);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(56.49F, catalogLight0.getElevation(), 0.01F);
      assertEquals("", catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(":ts&7{?4!Okz", catalogLight0.getCurrency());
      assertEquals(2518.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(":ts&7{?4!Okz", catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(2518L, (long)catalogLight0.getCreationDate());
      assertEquals(":ts&7{?4!Okz", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(56.49F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getColor());
      assertEquals(56.49F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(2518.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(1259.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isNameVisible());
      assertEquals("", homeLight0.getName());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(":ts&7{?4!Okz", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals("", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      
      boolean boolean3 = homeLight1.isBottomLeftPointAt(1.0F, 56.49F, 4190.83F);
      assertEquals(8, stringArray0.length);
      assertEquals(7, lightSourceArray0.length);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(long1.equals((Object)long0));
      assertEquals((float)float4, (float)float1, 0.01F);
      assertNotEquals((float)float4, (float)float0, 0.01F);
      assertNotEquals((float)float4, (float)float3, 0.01F);
      assertNotEquals((float)float4, (float)float2, 0.01F);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertTrue(boolean3);
      assertEquals("", homeLight1.getName());
      assertEquals(1259.0F, homeLight1.getX(), 0.01F);
      assertEquals(56.49F, homeLight1.getElevation(), 0.01F);
      assertEquals("", homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertEquals(1.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight1.getY(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(2518.0F, homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertEquals(56.49F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(":ts&7{?4!Okz", homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(":ts&7{?4!Okz", homeLight1.getDescription());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(56.49F, catalogLight0.getElevation(), 0.01F);
      assertEquals("", catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(":ts&7{?4!Okz", catalogLight0.getCurrency());
      assertEquals(2518.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(":ts&7{?4!Okz", catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(2518L, (long)catalogLight0.getCreationDate());
      assertEquals(":ts&7{?4!Okz", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(56.49F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getColor());
      assertEquals(56.49F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(2518.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(1259.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isNameVisible());
      assertEquals("", homeLight0.getName());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(":ts&7{?4!Okz", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals("", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      
      float float5 = homeLight0.getGroundElevation();
      assertEquals(8, stringArray0.length);
      assertEquals(7, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(long1.equals((Object)long0));
      assertEquals((float)float4, (float)float1, 0.01F);
      assertNotEquals((float)float4, (float)float0, 0.01F);
      assertNotEquals((float)float4, (float)float3, 0.01F);
      assertNotEquals((float)float4, (float)float2, 0.01F);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertEquals(56.49F, float5, 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(56.49F, catalogLight0.getElevation(), 0.01F);
      assertEquals("", catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(":ts&7{?4!Okz", catalogLight0.getCurrency());
      assertEquals(2518.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(":ts&7{?4!Okz", catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(2518L, (long)catalogLight0.getCreationDate());
      assertEquals(":ts&7{?4!Okz", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(56.49F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getColor());
      assertEquals(56.49F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(2518.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(1259.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isNameVisible());
      assertEquals("", homeLight0.getName());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(":ts&7{?4!Okz", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals("", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      String[] stringArray0 = new String[10];
      stringArray0[5] = null;
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[10];
      lightSourceArray0[3] = lightSourceArray0[1];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(10, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(10, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeLight0.getModel();
      assertEquals(10, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertSame(resourceURLContent1, resourceURLContent0);
      assertNotNull(resourceURLContent1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertTrue(resourceURLContent1.isMultiPartResource());
      assertTrue(resourceURLContent1.isJAREntry());
      
      homeLight0.setTexture((HomeTexture) null);
      assertEquals(10, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      HomeLight homeLight1 = new HomeLight(homeLight0);
      assertEquals(10, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isNameVisible());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      
      homeLight1.setNameXOffset(1.0F);
      assertEquals(10, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals(1.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isNameVisible());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      
      float float1 = homeLight1.getNameXOffset();
      assertEquals(10, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertEquals(1.0F, float1, 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals(1.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isNameVisible());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      
      boolean boolean1 = homeLight0.isNameCenterPointAt(1.0F, 477.0F, 0.0F);
      assertEquals(10, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(boolean1 == boolean0);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "com.eteks.sweethome3d.model.CatalogLight";
      stringArray0[6] = null;
      stringArray0[7] = "";
      stringArray0[8] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource((-487.1F), (-487.1F), 1.0F, 791);
      assertNotNull(lightSource0);
      assertEquals(791, lightSource0.getColor());
      assertEquals((-487.1F), lightSource0.getY(), 0.01F);
      assertEquals((-487.1F), lightSource0.getX(), 0.01F);
      assertEquals(1.0F, lightSource0.getZ(), 0.01F);
      assertNull(lightSource0.getDiameter());
      
      lightSourceArray0[0] = lightSource0;
      LightSource lightSource1 = new LightSource((-487.1F), 2.0F, 0.0F, 791);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(2.0F, lightSource1.getY(), 0.01F);
      assertEquals(791, lightSource1.getColor());
      assertEquals(0.0F, lightSource1.getZ(), 0.01F);
      assertNull(lightSource1.getDiameter());
      assertEquals((-487.1F), lightSource1.getX(), 0.01F);
      
      lightSourceArray0[1] = lightSource1;
      LightSource lightSource2 = new LightSource(0.0F, (-1999.1F), 0.3926991F, (-2872));
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertNotNull(lightSource2);
      assertEquals(0.0F, lightSource2.getX(), 0.01F);
      assertEquals((-2872), lightSource2.getColor());
      assertNull(lightSource2.getDiameter());
      assertEquals(0.3926991F, lightSource2.getZ(), 0.01F);
      assertEquals((-1999.1F), lightSource2.getY(), 0.01F);
      
      lightSourceArray0[2] = lightSource2;
      LightSource lightSource3 = new LightSource((-185.9665F), 0.3926991F, 791, 46);
      assertFalse(lightSource3.equals((Object)lightSource0));
      assertFalse(lightSource3.equals((Object)lightSource2));
      assertFalse(lightSource3.equals((Object)lightSource1));
      assertNotNull(lightSource3);
      assertEquals((-185.9665F), lightSource3.getX(), 0.01F);
      assertNull(lightSource3.getDiameter());
      assertEquals(791.0F, lightSource3.getZ(), 0.01F);
      assertEquals(0.3926991F, lightSource3.getY(), 0.01F);
      assertEquals(46, lightSource3.getColor());
      
      lightSourceArray0[3] = lightSource3;
      LightSource lightSource4 = new LightSource(46, (-1999.1F), 1.0F, 20);
      assertFalse(lightSource4.equals((Object)lightSource2));
      assertFalse(lightSource4.equals((Object)lightSource1));
      assertFalse(lightSource4.equals((Object)lightSource0));
      assertFalse(lightSource4.equals((Object)lightSource3));
      assertNotNull(lightSource4);
      assertEquals(20, lightSource4.getColor());
      assertEquals(46.0F, lightSource4.getX(), 0.01F);
      assertNull(lightSource4.getDiameter());
      assertEquals((-1999.1F), lightSource4.getY(), 0.01F);
      assertEquals(1.0F, lightSource4.getZ(), 0.01F);
      
      lightSourceArray0[4] = lightSource4;
      LightSource lightSource5 = new LightSource((-1999.1F), (-1999.1F), 0.0F, 20);
      assertFalse(lightSource5.equals((Object)lightSource3));
      assertFalse(lightSource5.equals((Object)lightSource4));
      assertFalse(lightSource5.equals((Object)lightSource0));
      assertFalse(lightSource5.equals((Object)lightSource2));
      assertFalse(lightSource5.equals((Object)lightSource1));
      assertNotNull(lightSource5);
      assertEquals((-1999.1F), lightSource5.getY(), 0.01F);
      assertEquals(20, lightSource5.getColor());
      assertNull(lightSource5.getDiameter());
      assertEquals(0.0F, lightSource5.getZ(), 0.01F);
      assertEquals((-1999.1F), lightSource5.getX(), 0.01F);
      
      lightSourceArray0[5] = lightSource5;
      LightSource lightSource6 = new LightSource(0L, 0.0F, 0.0F, 46);
      assertFalse(lightSource6.equals((Object)lightSource4));
      assertFalse(lightSource6.equals((Object)lightSource5));
      assertFalse(lightSource6.equals((Object)lightSource0));
      assertFalse(lightSource6.equals((Object)lightSource1));
      assertFalse(lightSource6.equals((Object)lightSource2));
      assertFalse(lightSource6.equals((Object)lightSource3));
      assertNotNull(lightSource6);
      assertEquals(0.0F, lightSource6.getY(), 0.01F);
      assertEquals(46, lightSource6.getColor());
      assertEquals(0.0F, lightSource6.getX(), 0.01F);
      assertEquals(0.0F, lightSource6.getZ(), 0.01F);
      assertNull(lightSource6.getDiameter());
      
      lightSourceArray0[6] = lightSource6;
      LightSource lightSource7 = new LightSource(0.0F, 0.0F, 3094.0688F, (-2872));
      assertFalse(lightSource7.equals((Object)lightSource1));
      assertFalse(lightSource7.equals((Object)lightSource5));
      assertFalse(lightSource7.equals((Object)lightSource2));
      assertFalse(lightSource7.equals((Object)lightSource4));
      assertFalse(lightSource7.equals((Object)lightSource6));
      assertFalse(lightSource7.equals((Object)lightSource3));
      assertFalse(lightSource7.equals((Object)lightSource0));
      assertNotNull(lightSource7);
      assertNull(lightSource7.getDiameter());
      assertEquals((-2872), lightSource7.getColor());
      assertEquals(3094.0688F, lightSource7.getZ(), 0.01F);
      assertEquals(0.0F, lightSource7.getX(), 0.01F);
      assertEquals(0.0F, lightSource7.getY(), 0.01F);
      
      lightSourceArray0[7] = lightSource7;
      LightSource lightSource8 = new LightSource((-1589.899F), 1.0F, 0.0F, (-1775));
      assertFalse(lightSource8.equals((Object)lightSource2));
      assertFalse(lightSource8.equals((Object)lightSource3));
      assertFalse(lightSource8.equals((Object)lightSource5));
      assertFalse(lightSource8.equals((Object)lightSource6));
      assertFalse(lightSource8.equals((Object)lightSource0));
      assertFalse(lightSource8.equals((Object)lightSource1));
      assertFalse(lightSource8.equals((Object)lightSource7));
      assertFalse(lightSource8.equals((Object)lightSource4));
      assertNotNull(lightSource8);
      assertEquals((-1775), lightSource8.getColor());
      assertEquals((-1589.899F), lightSource8.getX(), 0.01F);
      assertEquals(1.0F, lightSource8.getY(), 0.01F);
      assertEquals(0.0F, lightSource8.getZ(), 0.01F);
      assertNull(lightSource8.getDiameter());
      
      lightSourceArray0[8] = lightSource8;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0.3926991F, 0L, 0.3926991F, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, false, bigDecimal0, bigDecimal0, "");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals("", homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals("", homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isBackFaceShown());
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertNull(homeLight1.getName());
      assertFalse(homeLight1.isNameVisible());
      assertFalse(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertNull(homeLight1.getDescription());
      assertEquals(0.3926991F, homeLight1.getHeight(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertEquals("", homeLight1.getStaircaseCutOutShape());
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals("", homeLight1.getCurrency());
      assertEquals(0.19634955F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.3926991F, homeLight1.getWidth(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      homeLight1.setDescription("M2tH$P&m&x.[yz!#");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals("", homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isBackFaceShown());
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertNull(homeLight1.getName());
      assertFalse(homeLight1.isNameVisible());
      assertFalse(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.3926991F, homeLight1.getHeight(), 0.01F);
      assertEquals("M2tH$P&m&x.[yz!#", homeLight1.getDescription());
      assertTrue(homeLight1.isMovable());
      assertEquals("", homeLight1.getStaircaseCutOutShape());
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals("", homeLight1.getCurrency());
      assertEquals(0.19634955F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.3926991F, homeLight1.getWidth(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[2] = "";
      stringArray0[5] = null;
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[10];
      lightSourceArray0[3] = lightSourceArray0[1];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      
      boolean boolean0 = homeLight0.isBottomRightPointAt(0L, 89, (-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertFalse(boolean0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      
      boolean boolean1 = homeLight0.isNameCenterPointAt(0L, (-19.779608F), 0L);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      
      boolean boolean2 = homeLight0.isModelMirrored();
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      
      homeLight0.setName("");
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertEquals("", homeLight0.getName());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      
      float float1 = homeLight0.getGroundElevation();
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertEquals(0.0F, float1, 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertEquals("", homeLight0.getName());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[3] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(1.0F, 0, 0.0F, 0, float0);
      assertNotNull(lightSource0);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(0.0F, lightSource0.getY(), 0.01F);
      assertEquals(0, lightSource0.getColor());
      assertEquals(0.0F, lightSource0.getZ(), 0.01F);
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      
      lightSourceArray0[2] = lightSource0;
      LightSource lightSource1 = new LightSource(0, 0L, 0, 0);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(0, lightSource1.getColor());
      assertEquals(0.0F, lightSource1.getZ(), 0.01F);
      assertNull(lightSource1.getDiameter());
      assertEquals(0.0F, lightSource1.getY(), 0.01F);
      assertEquals(0.0F, lightSource1.getX(), 0.01F);
      
      lightSourceArray0[3] = lightSource1;
      lightSourceArray0[4] = lightSource1;
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource2 = new LightSource(0L, 0.0F, (-19.779608F), 0);
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertNotNull(lightSource2);
      assertNull(lightSource2.getDiameter());
      assertEquals(0, lightSource2.getColor());
      assertEquals(0.0F, lightSource2.getY(), 0.01F);
      assertEquals(0.0F, lightSource2.getX(), 0.01F);
      assertEquals((-19.779608F), lightSource2.getZ(), 0.01F);
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      homeLight0.setNameAngle(0.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      float float1 = homeLight0.getWidth();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals(0.0F, float1, 0.01F);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      float float2 = homeLight0.getDepth();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertEquals((float)float0, (float)float1, 0.01F);
      assertEquals(float2, float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals(0.0F, float2, 0.01F);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      homeLight0.addPropertyChangeListener((PropertyChangeListener) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertEquals((float)float0, (float)float1, 0.01F);
      assertEquals((float)float0, (float)float2, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      boolean boolean1 = homeLight0.intersectsRectangle(0.0F, 1.0F, 0.0F, (-1.0F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertEquals((float)float0, (float)float1, 0.01F);
      assertEquals((float)float0, (float)float2, 0.01F);
      assertFalse(boolean1 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      lightSourceArray0[7] = lightSourceArray0[2];
      lightSourceArray0[4] = lightSourceArray0[2];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      
      homeLight0.setDescription("");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      
      Long long1 = new Long(0L);
      assertTrue(long1.equals((Object)long0));
      assertEquals(0L, (long)long1);
      assertNotNull(long1);
      
      homeLight0.setNameYOffset(0L);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(long0.equals((Object)long1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      
      homeLight0.setNameVisible(true);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(long0.equals((Object)long1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isNameVisible());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      
      boolean boolean1 = homeLight0.isTopRightPointAt(1650.289F, 1650.289F, 2148.8F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(boolean1 == boolean0);
      assertTrue(long0.equals((Object)long1));
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isNameVisible());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeLight0.getModel();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(resourceURLContent1, resourceURLContent0);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertTrue(long0.equals((Object)long1));
      assertNotNull(resourceURLContent1);
      assertTrue(resourceURLContent1.isJAREntry());
      assertTrue(resourceURLContent1.isMultiPartResource());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isNameVisible());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-37);
      byteArray0[1] = (byte)126;
      byteArray0[2] = (byte) (-57);
      byteArray0[3] = (byte) (-23);
      byteArray0[4] = (byte)21;
      boolean boolean2 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertEquals(5, byteArray0.length);
      assertArrayEquals(new byte[] {(byte) (-37), (byte)126, (byte) (-57), (byte) (-23), (byte)21}, byteArray0);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      homeLight0.setDescription("");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertTrue(long0.equals((Object)long1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isNameVisible());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      
      HomeLight homeLight1 = (HomeLight)homeLight0.clone();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(homeLight0, homeLight1);
      assertTrue(long0.equals((Object)long1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(homeLight1.isNameVisible());
      assertFalse(homeLight1.isModelMirrored());
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals("", homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getCurrency());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isNameVisible());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[8];
      Long long0 = new Long(1L);
      assertEquals(1L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 1L);
      assertEquals(1.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 1L, 1L, 1L, 1L, false, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, false, false, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isMovable());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isDeformable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isMovable());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isDeformable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isMovable());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      
      LightSource[] lightSourceArray1 = homeLight0.getLightSources();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isMovable());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isDeformable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isMovable());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      
      HomeLight homeLight1 = new HomeLight(homeLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isMovable());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isDeformable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isMovable());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getShininess());
      assertEquals(1.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(1.0F, homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.5F, homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isTexturable());
      assertEquals(1.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight1.getWidth(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertFalse(homeLight1.isNameVisible());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isDeformable());
      assertFalse(homeLight1.isMovable());
      assertNull(homeLight1.getColor());
      assertNull(homeLight1.getCatalogId());
      assertEquals(1.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      boolean boolean2 = homeLight1.intersectsRectangle(299.84F, 299.84F, 1L, 299.84F);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      assertTrue(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isMovable());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isDeformable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isMovable());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getShininess());
      assertEquals(1.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(1.0F, homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.5F, homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isTexturable());
      assertEquals(1.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight1.getWidth(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertFalse(homeLight1.isNameVisible());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isDeformable());
      assertFalse(homeLight1.isMovable());
      assertNull(homeLight1.getColor());
      assertNull(homeLight1.getCatalogId());
      assertEquals(1.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      
      HomeLight homeLight2 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight2.equals((Object)homeLight0));
      assertFalse(homeLight2.equals((Object)homeLight1));
      assertNotNull(homeLight2);
      assertTrue(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isMovable());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isDeformable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(homeLight2.isNameVisible());
      assertNull(homeLight2.getCurrency());
      assertEquals(0.0F, homeLight2.getNameYOffset(), 0.01F);
      assertNull(homeLight2.getColor());
      assertFalse(homeLight2.isModelMirrored());
      assertFalse(homeLight2.isBackFaceShown());
      assertTrue(homeLight2.isVisible());
      assertFalse(homeLight2.isDeformable());
      assertEquals(1.0F, homeLight2.getGroundElevation(), 0.01F);
      assertFalse(homeLight2.isTexturable());
      assertEquals(0.0F, homeLight2.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight2.getX(), 0.01F);
      assertEquals(0.5F, homeLight2.getY(), 0.01F);
      assertEquals(1.0F, homeLight2.getWidth(), 0.01F);
      assertNull(homeLight2.getDescription());
      assertEquals(1.0F, homeLight2.getElevation(), 0.01F);
      assertFalse(homeLight2.isDoorOrWindow());
      assertNull(homeLight2.getName());
      assertEquals(1.0F, homeLight2.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight2.getPower(), 0.01F);
      assertNull(homeLight2.getCatalogId());
      assertEquals(0.0F, homeLight2.getNameXOffset(), 0.01F);
      assertTrue(homeLight2.isResizable());
      assertNull(homeLight2.getShininess());
      assertNull(homeLight2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight2.getNameAngle(), 0.01F);
      assertEquals(1.0F, homeLight2.getHeight(), 0.01F);
      assertFalse(homeLight2.isMovable());
      
      homeLight2.setModelMirrored(false);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight2, homeLight0);
      assertNotSame(homeLight2, homeLight1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight2.equals((Object)homeLight0));
      assertFalse(homeLight2.equals((Object)homeLight1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isMovable());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isDeformable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(homeLight2.isNameVisible());
      assertNull(homeLight2.getCurrency());
      assertEquals(0.0F, homeLight2.getNameYOffset(), 0.01F);
      assertNull(homeLight2.getColor());
      assertFalse(homeLight2.isModelMirrored());
      assertFalse(homeLight2.isBackFaceShown());
      assertTrue(homeLight2.isVisible());
      assertFalse(homeLight2.isDeformable());
      assertEquals(1.0F, homeLight2.getGroundElevation(), 0.01F);
      assertFalse(homeLight2.isTexturable());
      assertEquals(0.0F, homeLight2.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight2.getX(), 0.01F);
      assertEquals(0.5F, homeLight2.getY(), 0.01F);
      assertEquals(1.0F, homeLight2.getWidth(), 0.01F);
      assertNull(homeLight2.getDescription());
      assertEquals(1.0F, homeLight2.getElevation(), 0.01F);
      assertFalse(homeLight2.isDoorOrWindow());
      assertNull(homeLight2.getName());
      assertEquals(1.0F, homeLight2.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight2.getPower(), 0.01F);
      assertNull(homeLight2.getCatalogId());
      assertEquals(0.0F, homeLight2.getNameXOffset(), 0.01F);
      assertTrue(homeLight2.isResizable());
      assertNull(homeLight2.getShininess());
      assertNull(homeLight2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight2.getNameAngle(), 0.01F);
      assertEquals(1.0F, homeLight2.getHeight(), 0.01F);
      assertFalse(homeLight2.isMovable());
      
      BigDecimal bigDecimal1 = homeLight1.getPriceValueAddedTaxIncluded();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight2);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight2);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight2));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight2));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(bigDecimal1);
      assertEquals((short)2, bigDecimal1.shortValue());
      assertEquals((byte)2, bigDecimal1.byteValue());
      assertTrue(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isMovable());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isDeformable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isMovable());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getShininess());
      assertEquals(1.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(1.0F, homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.5F, homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isTexturable());
      assertEquals(1.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight1.getWidth(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertFalse(homeLight1.isNameVisible());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isDeformable());
      assertFalse(homeLight1.isMovable());
      assertNull(homeLight1.getColor());
      assertNull(homeLight1.getCatalogId());
      assertEquals(1.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "com.eteks.sweethome3d.model.CatalogLight";
      stringArray0[6] = null;
      stringArray0[7] = "";
      stringArray0[8] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource((-487.1F), (-487.1F), 1.0F, 791);
      assertNotNull(lightSource0);
      assertEquals(1.0F, lightSource0.getZ(), 0.01F);
      assertEquals((-487.1F), lightSource0.getX(), 0.01F);
      assertEquals((-487.1F), lightSource0.getY(), 0.01F);
      assertNull(lightSource0.getDiameter());
      assertEquals(791, lightSource0.getColor());
      
      lightSourceArray0[0] = lightSource0;
      LightSource lightSource1 = new LightSource((-487.1F), 2.0F, 0.0F, 791);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(0.0F, lightSource1.getZ(), 0.01F);
      assertEquals((-487.1F), lightSource1.getX(), 0.01F);
      assertEquals(2.0F, lightSource1.getY(), 0.01F);
      assertNull(lightSource1.getDiameter());
      assertEquals(791, lightSource1.getColor());
      
      lightSourceArray0[1] = lightSource1;
      LightSource lightSource2 = new LightSource(0.0F, (-1999.1F), 0.3926991F, (-2872));
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertNotNull(lightSource2);
      assertEquals((-2872), lightSource2.getColor());
      assertEquals((-1999.1F), lightSource2.getY(), 0.01F);
      assertNull(lightSource2.getDiameter());
      assertEquals(0.3926991F, lightSource2.getZ(), 0.01F);
      assertEquals(0.0F, lightSource2.getX(), 0.01F);
      
      lightSourceArray0[2] = lightSource2;
      LightSource lightSource3 = new LightSource((-185.9665F), 0.3926991F, 791, 46);
      assertFalse(lightSource3.equals((Object)lightSource0));
      assertFalse(lightSource3.equals((Object)lightSource1));
      assertFalse(lightSource3.equals((Object)lightSource2));
      assertNotNull(lightSource3);
      assertNull(lightSource3.getDiameter());
      assertEquals(0.3926991F, lightSource3.getY(), 0.01F);
      assertEquals(791.0F, lightSource3.getZ(), 0.01F);
      assertEquals((-185.9665F), lightSource3.getX(), 0.01F);
      assertEquals(46, lightSource3.getColor());
      
      lightSourceArray0[3] = lightSource3;
      LightSource lightSource4 = new LightSource(46, (-1999.1F), 1.0F, 20);
      assertFalse(lightSource4.equals((Object)lightSource3));
      assertFalse(lightSource4.equals((Object)lightSource2));
      assertFalse(lightSource4.equals((Object)lightSource0));
      assertFalse(lightSource4.equals((Object)lightSource1));
      assertNotNull(lightSource4);
      assertEquals(1.0F, lightSource4.getZ(), 0.01F);
      assertEquals((-1999.1F), lightSource4.getY(), 0.01F);
      assertNull(lightSource4.getDiameter());
      assertEquals(20, lightSource4.getColor());
      assertEquals(46.0F, lightSource4.getX(), 0.01F);
      
      lightSourceArray0[4] = lightSource4;
      LightSource lightSource5 = new LightSource((-1999.1F), (-1999.1F), 0.0F, 20);
      assertFalse(lightSource5.equals((Object)lightSource0));
      assertFalse(lightSource5.equals((Object)lightSource2));
      assertFalse(lightSource5.equals((Object)lightSource1));
      assertFalse(lightSource5.equals((Object)lightSource3));
      assertFalse(lightSource5.equals((Object)lightSource4));
      assertNotNull(lightSource5);
      assertEquals(20, lightSource5.getColor());
      assertEquals((-1999.1F), lightSource5.getY(), 0.01F);
      assertEquals((-1999.1F), lightSource5.getX(), 0.01F);
      assertNull(lightSource5.getDiameter());
      assertEquals(0.0F, lightSource5.getZ(), 0.01F);
      
      lightSourceArray0[5] = lightSource5;
      LightSource lightSource6 = new LightSource(0L, 0.0F, 0.0F, 46);
      assertFalse(lightSource6.equals((Object)lightSource0));
      assertFalse(lightSource6.equals((Object)lightSource2));
      assertFalse(lightSource6.equals((Object)lightSource3));
      assertFalse(lightSource6.equals((Object)lightSource5));
      assertFalse(lightSource6.equals((Object)lightSource4));
      assertFalse(lightSource6.equals((Object)lightSource1));
      assertNotNull(lightSource6);
      assertNull(lightSource6.getDiameter());
      assertEquals(0.0F, lightSource6.getZ(), 0.01F);
      assertEquals(0.0F, lightSource6.getX(), 0.01F);
      assertEquals(0.0F, lightSource6.getY(), 0.01F);
      assertEquals(46, lightSource6.getColor());
      
      lightSourceArray0[6] = lightSource6;
      LightSource lightSource7 = new LightSource(0.0F, 0.0F, 3094.0688F, (-2872));
      assertFalse(lightSource7.equals((Object)lightSource3));
      assertFalse(lightSource7.equals((Object)lightSource2));
      assertFalse(lightSource7.equals((Object)lightSource1));
      assertFalse(lightSource7.equals((Object)lightSource5));
      assertFalse(lightSource7.equals((Object)lightSource0));
      assertFalse(lightSource7.equals((Object)lightSource6));
      assertFalse(lightSource7.equals((Object)lightSource4));
      assertNotNull(lightSource7);
      assertEquals((-2872), lightSource7.getColor());
      assertEquals(0.0F, lightSource7.getX(), 0.01F);
      assertEquals(0.0F, lightSource7.getY(), 0.01F);
      assertEquals(3094.0688F, lightSource7.getZ(), 0.01F);
      assertNull(lightSource7.getDiameter());
      
      lightSourceArray0[7] = lightSource7;
      LightSource lightSource8 = new LightSource((-1589.899F), 1.0F, 0.0F, (-1775));
      assertFalse(lightSource8.equals((Object)lightSource5));
      assertFalse(lightSource8.equals((Object)lightSource3));
      assertFalse(lightSource8.equals((Object)lightSource2));
      assertFalse(lightSource8.equals((Object)lightSource4));
      assertFalse(lightSource8.equals((Object)lightSource0));
      assertFalse(lightSource8.equals((Object)lightSource6));
      assertFalse(lightSource8.equals((Object)lightSource7));
      assertFalse(lightSource8.equals((Object)lightSource1));
      assertNotNull(lightSource8);
      assertEquals((-1775), lightSource8.getColor());
      assertEquals(1.0F, lightSource8.getY(), 0.01F);
      assertEquals(0.0F, lightSource8.getZ(), 0.01F);
      assertNull(lightSource8.getDiameter());
      assertEquals((-1589.899F), lightSource8.getX(), 0.01F);
      
      lightSourceArray0[8] = lightSource8;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0.3926991F, 0L, 0.3926991F, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, false, bigDecimal0, bigDecimal0, "");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean0 = homeLight0.isBottomRightPointAt((-1589.899F), 46, 0.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      float float1 = 0.0F;
      float float2 = (-4004.3623F);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotEquals((float)float0, (float)float2, 0.01F);
      assertEquals((float)float0, (float)float1, 0.01F);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotEquals((float)float0, (float)float2, 0.01F);
      assertEquals((float)float0, (float)float1, 0.01F);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      
      // Undeclared exception!
      try { 
        homeLight0.setWidth(198.68F);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      
      homeLight0.setDescription("");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      
      homeLight0.setDescription("[}I;)sb1wdg: -");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("[}I;)sb1wdg: -", homeLight0.getDescription());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      
      BigDecimal bigDecimal1 = homeLight0.getPriceValueAddedTaxIncluded();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertSame(bigDecimal1, bigDecimal0);
      assertNotNull(bigDecimal1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("[}I;)sb1wdg: -", homeLight0.getDescription());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals((short)0, bigDecimal1.shortValue());
      assertEquals((byte)0, bigDecimal1.byteValue());
      
      boolean boolean1 = homeLight0.isNameCenterPointAt(0L, 3.4028235E38F, 3.4028235E38F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("[}I;)sb1wdg: -", homeLight0.getDescription());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[3] = "";
      Long long0 = new Long((-55L));
      assertEquals((-55L), (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) (-55L));
      assertEquals((-55.0F), (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-55L), (-55L), (-55L), (-55L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isTexturable());
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isTexturable());
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-55.0F), homeLight1.getDepth(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isBackFaceShown());
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertFalse(homeLight1.isModelMirrored());
      assertEquals((-55.0F), homeLight1.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals((-55.0F), homeLight1.getElevation(), 0.01F);
      assertEquals((-55.0F), homeLight1.getWidth(), 0.01F);
      assertEquals((-27.5F), homeLight1.getY(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getName());
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getShininess());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals((-55.0F), homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      
      homeLight0.move(296.0F, (-55L));
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isTexturable());
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(268.5F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-82.5F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      
      homeLight0.setTexture((HomeTexture) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isTexturable());
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(268.5F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-82.5F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      HomeLight homeLight2 = new HomeLight(homeLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight2.equals((Object)homeLight0));
      assertFalse(homeLight2.equals((Object)homeLight1));
      assertNotNull(homeLight2);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isTexturable());
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(268.5F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-82.5F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-55.0F), homeLight2.getGroundElevation(), 0.01F);
      assertTrue(homeLight2.isVisible());
      assertTrue(homeLight2.isDeformable());
      assertEquals(0.0F, homeLight2.getNameYOffset(), 0.01F);
      assertNull(homeLight2.getCatalogId());
      assertNull(homeLight2.getStaircaseCutOutShape());
      assertEquals((-82.5F), homeLight2.getY(), 0.01F);
      assertTrue(homeLight2.isResizable());
      assertEquals(0.5F, homeLight2.getPower(), 0.01F);
      assertNull(homeLight2.getShininess());
      assertEquals(0.0F, homeLight2.getNameAngle(), 0.01F);
      assertNull(homeLight2.getCurrency());
      assertEquals((-55.0F), homeLight2.getWidth(), 0.01F);
      assertEquals((-55.0F), homeLight2.getElevation(), 0.01F);
      assertTrue(homeLight2.isMovable());
      assertEquals((-55.0F), homeLight2.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight2.getAngle(), 0.01F);
      assertNull(homeLight2.getDescription());
      assertEquals(268.5F, homeLight2.getX(), 0.01F);
      assertEquals(0.0F, homeLight2.getNameXOffset(), 0.01F);
      assertNull(homeLight2.getColor());
      assertEquals((-55.0F), homeLight2.getDepth(), 0.01F);
      assertFalse(homeLight2.isModelMirrored());
      assertFalse(homeLight2.isBackFaceShown());
      assertFalse(homeLight2.isDoorOrWindow());
      assertTrue(homeLight2.isTexturable());
      assertNull(homeLight2.getName());
      assertFalse(homeLight2.isNameVisible());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[3] = "";
      Long long0 = new Long((-55L));
      assertEquals((-55L), (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) (-55L));
      assertEquals((-55.0F), (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite((-55L));
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-55L), (-55L), (-55L), (-55L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      
      boolean boolean1 = homeLight0.isPointAt((-55L), (-55L), (-55L));
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      
      boolean boolean2 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2);
      
      Level level0 = new Level((String) null, 0.0F, 0.0F, 3411.4739F);
      assertNotNull(level0);
      assertNull(level0.getName());
      assertTrue(level0.isVisible());
      assertEquals(0.0F, level0.getElevation(), 0.01F);
      assertEquals(3411.4739F, level0.getHeight(), 0.01F);
      assertEquals(0.0F, level0.getFloorThickness(), 0.01F);
      
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", (PropertyChangeListener) null);
      assertNotNull(propertyChangeListenerProxy0);
      assertEquals("", propertyChangeListenerProxy0.getPropertyName());
      
      level0.addPropertyChangeListener(propertyChangeListenerProxy0);
      assertNull(level0.getName());
      assertTrue(level0.isVisible());
      assertEquals(0.0F, level0.getElevation(), 0.01F);
      assertEquals(3411.4739F, level0.getHeight(), 0.01F);
      assertEquals(0.0F, level0.getFloorThickness(), 0.01F);
      assertEquals("", propertyChangeListenerProxy0.getPropertyName());
      
      boolean boolean3 = homeLight0.isAtLevel(level0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(level0.getName());
      assertTrue(level0.isVisible());
      assertEquals(0.0F, level0.getElevation(), 0.01F);
      assertEquals(3411.4739F, level0.getHeight(), 0.01F);
      assertEquals(0.0F, level0.getFloorThickness(), 0.01F);
      
      float[][] floatArray0 = homeLight0.getModelRotation();
      assertEquals(8, stringArray0.length);
      assertEquals(3, floatArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(floatArray0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      
      homeLight0.setName("");
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals("", homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      
      homeLight0.setX(0L);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals("", homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      
      homeLight0.setVisible(false);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isVisible());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals("", homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      
      homeLight0.setDescription("");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      
      boolean boolean1 = homeLight0.isBottomRightPointAt(0L, 0L, 0L);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      
      String string0 = resourceURLContent0.getJAREntryName();
      assertEquals("com/eteks/sweethome3d/model/", string0);
      assertNotNull(string0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      homeLight0.setDescription("com/eteks/sweethome3d/model/");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals("com/eteks/sweethome3d/model/", homeLight0.getDescription());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      
      BigDecimal bigDecimal1 = homeLight0.getPriceValueAddedTaxIncluded();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertSame(bigDecimal1, bigDecimal0);
      assertNotNull(bigDecimal1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals("com/eteks/sweethome3d/model/", homeLight0.getDescription());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((byte)0, bigDecimal1.byteValue());
      assertEquals((short)0, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getDescription());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getDescription());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isResizable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      
      homeLight0.setName("");
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getDescription());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isResizable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      
      homeLight0.setName("");
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getDescription());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isResizable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      
      homeLight0.setVisible(true);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getDescription());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isResizable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      
      boolean boolean1 = homeLight0.isPointAt((-1115.29F), 0L, 0L);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getDescription());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isResizable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[5] = null;
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(791, lightSource0.getColor());
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(0.0F, lightSource0.getZ(), 0.01F);
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSourceArray0[1];
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource1 = new LightSource(0L, 0.0F, (-19.779608F), 46);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(0.0F, lightSource1.getY(), 0.01F);
      assertNull(lightSource1.getDiameter());
      assertEquals(0.0F, lightSource1.getX(), 0.01F);
      assertEquals(46, lightSource1.getColor());
      assertEquals((-19.779608F), lightSource1.getZ(), 0.01F);
      
      lightSourceArray0[6] = lightSource1;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getId());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getId());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getId());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      boolean boolean0 = homeLight0.isBottomRightPointAt(1.0F, 46, (-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getId());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      homeLight0.setElevation(9.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getId());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(9.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertEquals(9.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      homeLight0.setMovable(false);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getId());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(9.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertEquals(9.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isMovable());
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      boolean boolean2 = homeLight0.isDeformable();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(boolean2);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getId());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(9.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertEquals(9.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isMovable());
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      String string0 = resourceURLContent0.getJAREntryName();
      assertEquals("com/eteks/sweethome3d/model/", string0);
      assertNotNull(string0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      lightSourceArray0[3] = lightSourceArray0[2];
      lightSourceArray0[4] = lightSourceArray0[2];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      
      homeLight0.setDescription("");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      
      Long long1 = new Long(0L);
      assertTrue(long1.equals((Object)long0));
      assertEquals(0L, (long)long1);
      assertNotNull(long1);
      
      homeLight0.setNameYOffset(0L);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(long0.equals((Object)long1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      
      Level level0 = new Level("", 2637.65F, 2637.65F, 0L);
      assertNotNull(level0);
      assertEquals(2637.65F, level0.getElevation(), 0.01F);
      assertEquals("", level0.getName());
      assertEquals(2637.65F, level0.getFloorThickness(), 0.01F);
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      assertTrue(level0.isVisible());
      
      homeLight0.setNameVisible(true);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(long0.equals((Object)long1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isNameVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      
      BigDecimal bigDecimal1 = homeLight0.getValueAddedTaxPercentage();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(bigDecimal1, bigDecimal0);
      assertSame(bigDecimal0, bigDecimal1);
      assertTrue(long0.equals((Object)long1));
      assertNotNull(bigDecimal1);
      assertEquals((byte)0, bigDecimal1.byteValue());
      assertEquals((short)0, bigDecimal1.shortValue());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isNameVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight1, homeLight0);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertTrue(long0.equals((Object)long1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isResizable());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals("", homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertTrue(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isNameVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      
      boolean boolean1 = homeLight1.isNameCenterPointAt(0L, 1761.0F, 0L);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight1, homeLight0);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertTrue(long0.equals((Object)long1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(boolean1 == boolean0);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(boolean1);
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isResizable());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals("", homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertTrue(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isNameVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      
      boolean boolean2 = homeLight0.isModelMirrored();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertTrue(long0.equals((Object)long1));
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(boolean2);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isNameVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      
      homeLight0.setName("\"UG8,EVz%SzY%!QZ");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertTrue(long0.equals((Object)long1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals("\"UG8,EVz%SzY%!QZ", homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isNameVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      
      boolean boolean3 = homeLight0.isNameVisible();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertTrue(long0.equals((Object)long1));
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertTrue(boolean3);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals("\"UG8,EVz%SzY%!QZ", homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isNameVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(791, (-487.1F), 0.3926991F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals((-487.1F), lightSource0.getY(), 0.01F);
      assertEquals(0.3926991F, lightSource0.getZ(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      assertEquals(791.0F, lightSource0.getX(), 0.01F);
      
      lightSourceArray0[2] = lightSource0;
      LightSource lightSource1 = new LightSource((-487.1F), 0.3926991F, 791, 46);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(0.3926991F, lightSource1.getY(), 0.01F);
      assertNull(lightSource1.getDiameter());
      assertEquals(791.0F, lightSource1.getZ(), 0.01F);
      assertEquals((-487.1F), lightSource1.getX(), 0.01F);
      assertEquals(46, lightSource1.getColor());
      
      lightSourceArray0[3] = lightSource1;
      lightSourceArray0[4] = lightSource0;
      LightSource lightSource2 = new LightSource(20, 0.3926991F, 791, 20, float0);
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertNotNull(lightSource2);
      assertEquals(0.0F, lightSource2.getDiameter(), 0.01F);
      assertEquals(0.3926991F, lightSource2.getY(), 0.01F);
      assertEquals(791.0F, lightSource2.getZ(), 0.01F);
      assertEquals(20.0F, lightSource2.getX(), 0.01F);
      assertEquals(20, lightSource2.getColor());
      
      LightSource lightSource3 = new LightSource(0.0F, 20, 3094.0688F, 791);
      assertFalse(lightSource3.equals((Object)lightSource2));
      assertFalse(lightSource3.equals((Object)lightSource1));
      assertFalse(lightSource3.equals((Object)lightSource0));
      assertNotNull(lightSource3);
      assertEquals(791, lightSource3.getColor());
      assertNull(lightSource3.getDiameter());
      assertEquals(20.0F, lightSource3.getY(), 0.01F);
      assertEquals(3094.0688F, lightSource3.getZ(), 0.01F);
      assertEquals(0.0F, lightSource3.getX(), 0.01F);
      
      lightSourceArray0[7] = lightSource3;
      lightSourceArray0[8] = lightSource0;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0.3926991F, 0L, 0.3926991F, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, stringArray0[7]);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      homeLight0.setDescription("M2tH$P&m&x.[yz!#");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("M2tH$P&m&x.[yz!#", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      float float1 = homeLight0.getNameXOffset();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(0.0F, float1, 0.01F);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("M2tH$P&m&x.[yz!#", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      homeLight0.setNameYOffset(2137.7644F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((float)float0, (float)float1, 0.01F);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(2137.7644F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("M2tH$P&m&x.[yz!#", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      Level level0 = new Level("i\"x", 0.0F, 0.0F, 0.0F);
      assertNotNull(level0);
      assertEquals(0.0F, level0.getFloorThickness(), 0.01F);
      assertEquals("i\"x", level0.getName());
      assertEquals(0.0F, level0.getElevation(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("i\"x", propertyChangeListener0);
      assertNotNull(propertyChangeListenerProxy0);
      assertEquals("i\"x", propertyChangeListenerProxy0.getPropertyName());
      
      level0.addPropertyChangeListener(propertyChangeListenerProxy0);
      assertEquals(0.0F, level0.getFloorThickness(), 0.01F);
      assertEquals("i\"x", level0.getName());
      assertEquals(0.0F, level0.getElevation(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      assertEquals("i\"x", propertyChangeListenerProxy0.getPropertyName());
      
      homeLight0.setLevel(level0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((float)float0, (float)float1, 0.01F);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(2137.7644F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("M2tH$P&m&x.[yz!#", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals(0.0F, level0.getFloorThickness(), 0.01F);
      assertEquals("i\"x", level0.getName());
      assertEquals(0.0F, level0.getElevation(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals(0.0F, level0.getHeight(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(0.0F, lightSource0.getZ(), 0.01F);
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      
      lightSourceArray0[2] = lightSource0;
      LightSource lightSource1 = new LightSource(791, 0L, 791, 46);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(791.0F, lightSource1.getX(), 0.01F);
      assertNull(lightSource1.getDiameter());
      assertEquals(791.0F, lightSource1.getZ(), 0.01F);
      assertEquals(0.0F, lightSource1.getY(), 0.01F);
      assertEquals(46, lightSource1.getColor());
      
      lightSourceArray0[3] = lightSource1;
      lightSourceArray0[4] = lightSource1;
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource2 = new LightSource(0L, 0.0F, (-19.779608F), 46);
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertNotNull(lightSource2);
      assertEquals((-19.779608F), lightSource2.getZ(), 0.01F);
      assertEquals(0.0F, lightSource2.getX(), 0.01F);
      assertEquals(0.0F, lightSource2.getY(), 0.01F);
      assertEquals(46, lightSource2.getColor());
      assertNull(lightSource2.getDiameter());
      
      lightSourceArray0[6] = lightSource2;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      boolean boolean1 = homeLight0.isBottomRightPointAt(1.0F, 46, (-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(boolean1 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      boolean boolean2 = homeLight0.containsPoint(2.0F, 46, (-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean2);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[2] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      assertEquals(0.0F, lightSource0.getZ(), 0.01F);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      
      lightSourceArray0[2] = lightSource0;
      LightSource lightSource1 = new LightSource(791, 0L, 791, 791);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(0.0F, lightSource1.getY(), 0.01F);
      assertEquals(791.0F, lightSource1.getX(), 0.01F);
      assertEquals(791.0F, lightSource1.getZ(), 0.01F);
      assertEquals(791, lightSource1.getColor());
      assertNull(lightSource1.getDiameter());
      
      lightSourceArray0[3] = lightSource1;
      lightSourceArray0[4] = lightSource1;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource1;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getName());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getName());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean1 = homeLight0.isBottomRightPointAt(1.0F, 791, (-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(boolean1 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean2 = homeLight0.containsPoint(2.0F, 791, (-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean2);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      homeLight0.setDepth(2.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(2.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      homeLight0.setAngle(1.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(2.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      homeLight0.setDepth((-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals((-19.779608F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      float float1 = Float.sum(2.0F, 2.0F);
      assertEquals(4.0F, float1, 0.01F);
      
      LightSource lightSource0 = new LightSource(0L, 791, 0.0F, 791, float0);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertNotNull(lightSource0);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(0.0F, lightSource0.getX(), 0.01F);
      assertEquals(0.0F, lightSource0.getZ(), 0.01F);
      
      lightSourceArray0[2] = lightSource0;
      LightSource lightSource1 = new LightSource(791, 0L, 791, 791);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(791.0F, lightSource1.getZ(), 0.01F);
      assertEquals(791.0F, lightSource1.getX(), 0.01F);
      assertEquals(791, lightSource1.getColor());
      assertNull(lightSource1.getDiameter());
      assertEquals(0.0F, lightSource1.getY(), 0.01F);
      
      lightSourceArray0[3] = lightSource1;
      lightSourceArray0[4] = lightSource1;
      lightSourceArray0[6] = lightSource1;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertNotNull(catalogLight0);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertNotNull(lightSourceArray1);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      BigDecimal bigDecimal1 = bigDecimal0.movePointLeft(791);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      assertEquals((byte)0, bigDecimal1.byteValue());
      assertEquals((short)0, bigDecimal1.shortValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      boolean boolean1 = homeLight0.isBottomRightPointAt(0L, 791, (-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(boolean1 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertFalse(boolean1);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      boolean boolean2 = homeLight0.containsPoint(2.0F, 791, (-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertFalse(boolean2);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      homeLight0.setDepth(2.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(2.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      homeLight0.setAngle(0L);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(2.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      homeLight0.setDepth((-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals((-19.779608F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      float float2 = homeLight0.getGroundElevation();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotEquals(float2, float1, 0.01F);
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertEquals(0.0F, float2, 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals((-19.779608F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      homeLight0.setMovable(true);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertEquals((float)float0, (float)float2, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals((-19.779608F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      boolean boolean3 = homeLight0.isMovable();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertEquals((float)float0, (float)float2, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertTrue(boolean3);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals((-19.779608F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      assertEquals(0.0F, lightSource0.getZ(), 0.01F);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      
      lightSourceArray0[2] = lightSource0;
      LightSource lightSource1 = new LightSource(791, 0L, 791, 46);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(46, lightSource1.getColor());
      assertEquals(0.0F, lightSource1.getY(), 0.01F);
      assertNull(lightSource1.getDiameter());
      assertEquals(791.0F, lightSource1.getX(), 0.01F);
      assertEquals(791.0F, lightSource1.getZ(), 0.01F);
      
      lightSourceArray0[3] = lightSource1;
      lightSourceArray0[4] = lightSource1;
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource2 = new LightSource(0L, 0.0F, (-19.779608F), 46);
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertNotNull(lightSource2);
      assertEquals(0.0F, lightSource2.getY(), 0.01F);
      assertEquals(0.0F, lightSource2.getX(), 0.01F);
      assertEquals(46, lightSource2.getColor());
      assertEquals((-19.779608F), lightSource2.getZ(), 0.01F);
      assertNull(lightSource2.getDiameter());
      
      lightSourceArray0[6] = lightSource2;
      float float1 = Float.max((-2669.9358F), 46);
      assertEquals(46.0F, float1, 0.01F);
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertNotNull(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertNotNull(lightSourceArray1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isTexturable());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean0 = homeLight0.isBottomRightPointAt(1.0F, 46, (-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isTexturable());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean1 = homeLight0.isPointAt(0L, 0.0F, 0.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(boolean1 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(boolean1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isTexturable());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean2 = homeLight0.isNameCenterPointAt(0L, 7.5F, 41.0798F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(boolean2);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isTexturable());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[5] = null;
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(2.0F, 2.0F, 791, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(791, lightSource0.getColor());
      assertEquals(2.0F, lightSource0.getX(), 0.01F);
      assertEquals(2.0F, lightSource0.getY(), 0.01F);
      assertEquals(791.0F, lightSource0.getZ(), 0.01F);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      
      lightSourceArray0[1] = lightSource0;
      LightSource lightSource1 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(791, lightSource1.getColor());
      assertEquals(791.0F, lightSource1.getY(), 0.01F);
      assertEquals(0.0F, lightSource1.getDiameter(), 0.01F);
      assertEquals(0.0F, lightSource1.getZ(), 0.01F);
      assertEquals(1.0F, lightSource1.getX(), 0.01F);
      
      lightSourceArray0[2] = lightSource1;
      LightSource lightSource2 = new LightSource(791, 0L, 791, 46);
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertNotNull(lightSource2);
      assertEquals(46, lightSource2.getColor());
      assertEquals(0.0F, lightSource2.getY(), 0.01F);
      assertEquals(791.0F, lightSource2.getX(), 0.01F);
      assertEquals(791.0F, lightSource2.getZ(), 0.01F);
      assertNull(lightSource2.getDiameter());
      
      lightSourceArray0[4] = lightSource2;
      lightSourceArray0[5] = lightSource1;
      LightSource lightSource3 = new LightSource(0L, 0.0F, (-487.1F), 46);
      assertFalse(lightSource3.equals((Object)lightSource0));
      assertFalse(lightSource3.equals((Object)lightSource2));
      assertFalse(lightSource3.equals((Object)lightSource1));
      assertNotNull(lightSource3);
      assertEquals(46, lightSource3.getColor());
      assertEquals(0.0F, lightSource3.getX(), 0.01F);
      assertEquals(0.0F, lightSource3.getY(), 0.01F);
      assertNull(lightSource3.getDiameter());
      assertEquals((-487.1F), lightSource3.getZ(), 0.01F);
      
      lightSourceArray0[6] = lightSource3;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean0 = homeLight0.isBottomRightPointAt(1.0F, 46, (-487.1F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      homeLight0.setElevation(9.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(9.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(9.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      float float1 = homeLight0.getGroundElevation();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals(9.0F, float1, 0.01F);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(9.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(9.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[8];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getDescription());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      
      homeLight0.setDescription("");
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      
      Long long1 = new Long(0L);
      assertTrue(long1.equals((Object)long0));
      assertEquals(0L, (long)long1);
      assertNotNull(long1);
      
      homeLight0.setNameAngle(0L);
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertTrue(long0.equals((Object)long1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      
      homeLight0.setDescription("");
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertTrue(long0.equals((Object)long1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      
      BigDecimal bigDecimal1 = homeLight0.getPriceValueAddedTaxIncluded();
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertSame(bigDecimal1, bigDecimal0);
      assertTrue(long0.equals((Object)long1));
      assertNotNull(bigDecimal1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertEquals((short)0, bigDecimal1.shortValue());
      assertEquals((byte)0, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[3] = "";
      Long long0 = new Long((-11L));
      assertEquals((-11L), (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) (-11L));
      assertEquals((-11.0F), (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-11L), (-11L), (-11L), (-11L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getName());
      
      BigDecimal bigDecimal1 = bigDecimal0.stripTrailingZeros();
      assertSame(bigDecimal0, bigDecimal1);
      assertSame(bigDecimal1, bigDecimal0);
      assertNotNull(bigDecimal1);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((byte)1, bigDecimal1.byteValue());
      assertEquals((short)1, bigDecimal1.shortValue());
      
      LightSource[] lightSourceArray1 = homeLight0.getLightSources();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getName());
      
      HomeLight homeLight1 = new HomeLight(homeLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals((-11.0F), homeLight1.getGroundElevation(), 0.01F);
      assertNull(homeLight1.getName());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals((-5.5F), homeLight1.getX(), 0.01F);
      assertEquals((-5.5F), homeLight1.getY(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals((-11.0F), homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertEquals((-11.0F), homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertTrue(homeLight1.isDeformable());
      assertEquals((-11.0F), homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals((-11.0F), homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isDoorOrWindow());
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      homeLight0.setNameXOffset((-1.3961023F));
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-1.3961023F), homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getName());
      
      boolean boolean1 = homeLight0.isBottomLeftPointAt(429.44F, 599.1682F, 429.44F);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-1.3961023F), homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getName());
      
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeLight0.getModel();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(resourceURLContent1, resourceURLContent0);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertNotNull(resourceURLContent1);
      assertTrue(resourceURLContent1.isMultiPartResource());
      assertTrue(resourceURLContent1.isJAREntry());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-1.3961023F), homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getName());
      
      boolean boolean2 = homeLight1.isTopRightPointAt((-1.3961023F), (-1.3961023F), 429.44F);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(boolean2);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-1.3961023F), homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals((-11.0F), homeLight1.getGroundElevation(), 0.01F);
      assertNull(homeLight1.getName());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals((-5.5F), homeLight1.getX(), 0.01F);
      assertEquals((-5.5F), homeLight1.getY(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals((-11.0F), homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertEquals((-11.0F), homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertTrue(homeLight1.isDeformable());
      assertEquals((-11.0F), homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals((-11.0F), homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isDoorOrWindow());
      
      Level level0 = new Level("i\"x", 0.0F, 0.0F, 0.0F);
      assertNotNull(level0);
      assertTrue(level0.isVisible());
      assertEquals(0.0F, level0.getFloorThickness(), 0.01F);
      assertEquals(0.0F, level0.getElevation(), 0.01F);
      assertEquals("i\"x", level0.getName());
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("i\"x", propertyChangeListener0);
      assertNotNull(propertyChangeListenerProxy0);
      assertEquals("i\"x", propertyChangeListenerProxy0.getPropertyName());
      
      level0.addPropertyChangeListener(propertyChangeListenerProxy0);
      assertTrue(level0.isVisible());
      assertEquals(0.0F, level0.getFloorThickness(), 0.01F);
      assertEquals(0.0F, level0.getElevation(), 0.01F);
      assertEquals("i\"x", level0.getName());
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      assertEquals("i\"x", propertyChangeListenerProxy0.getPropertyName());
      
      boolean boolean3 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      
      boolean boolean4 = homeLight0.isAtLevel(level0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4 == boolean0);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean2);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(boolean4);
      assertTrue(level0.isVisible());
      assertEquals(0.0F, level0.getFloorThickness(), 0.01F);
      assertEquals(0.0F, level0.getElevation(), 0.01F);
      assertEquals("i\"x", level0.getName());
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-1.3961023F), homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getName());
      
      float float1 = homeLight0.getAngle();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertEquals(0.0F, float1, 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-1.3961023F), homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getName());
      
      float float2 = homeLight0.getNameXOffset();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotEquals(float2, float1, 0.01F);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertEquals((-1.3961023F), float2, 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-1.3961023F), homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getName());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(0.0F, lightSource0.getZ(), 0.01F);
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource1 = new LightSource(0L, 0.0F, (-19.779608F), 791);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(0.0F, lightSource1.getX(), 0.01F);
      assertEquals(0.0F, lightSource1.getY(), 0.01F);
      assertEquals(791, lightSource1.getColor());
      assertEquals((-19.779608F), lightSource1.getZ(), 0.01F);
      assertNull(lightSource1.getDiameter());
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getName());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getName());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getName());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getName());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      assertFalse(homeLight1.isBackFaceShown());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      homeLight1.setWidth((-545.866F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getName());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals((-545.866F), homeLight1.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      assertFalse(homeLight1.isBackFaceShown());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      homeLight1.setNameAngle((-1.0F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getName());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(5.2831855F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals((-545.866F), homeLight1.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      assertFalse(homeLight1.isBackFaceShown());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      homeLight0.setAngle(0L);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getName());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      homeLight0.setNameXOffset(0L);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getName());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", (PropertyChangeListener) null);
      assertNotNull(propertyChangeListenerProxy0);
      assertEquals("", propertyChangeListenerProxy0.getPropertyName());
      
      homeLight0.removePropertyChangeListener(propertyChangeListenerProxy0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getName());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals("", propertyChangeListenerProxy0.getPropertyName());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[3] = "";
      Long long0 = new Long((-55L));
      assertEquals((-55L), (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) (-55L));
      assertEquals((-55.0F), (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-55L), (-55L), (-55L), (-55L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals((-55.0F), homeLight1.getWidth(), 0.01F);
      assertNull(homeLight1.getName());
      assertEquals((-55.0F), homeLight1.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getShininess());
      assertEquals((-55.0F), homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertFalse(homeLight1.isNameVisible());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight1.getGroundElevation(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals((-27.5F), homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals((-27.5F), homeLight1.getX(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getColor());
      assertEquals((-55.0F), homeLight1.getDepth(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      HomeLight homeLight2 = new HomeLight(homeLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight2.equals((Object)homeLight1));
      assertFalse(homeLight2.equals((Object)homeLight0));
      assertNotNull(homeLight2);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertEquals((-55.0F), homeLight2.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight2.getAngle(), 0.01F);
      assertTrue(homeLight2.isTexturable());
      assertEquals((-55.0F), homeLight2.getWidth(), 0.01F);
      assertFalse(homeLight2.isBackFaceShown());
      assertNull(homeLight2.getName());
      assertEquals((-55.0F), homeLight2.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight2.getPower(), 0.01F);
      assertFalse(homeLight2.isModelMirrored());
      assertNull(homeLight2.getCatalogId());
      assertNull(homeLight2.getColor());
      assertEquals(0.0F, homeLight2.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight2.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight2.getX(), 0.01F);
      assertEquals((-27.5F), homeLight2.getY(), 0.01F);
      assertTrue(homeLight2.isVisible());
      assertEquals((-55.0F), homeLight2.getElevation(), 0.01F);
      assertNull(homeLight2.getCurrency());
      assertTrue(homeLight2.isMovable());
      assertFalse(homeLight2.isNameVisible());
      assertEquals(0.0F, homeLight2.getNameAngle(), 0.01F);
      assertNull(homeLight2.getStaircaseCutOutShape());
      assertNull(homeLight2.getDescription());
      assertFalse(homeLight2.isDoorOrWindow());
      assertNull(homeLight2.getShininess());
      assertTrue(homeLight2.isDeformable());
      assertTrue(homeLight2.isResizable());
      assertEquals(0.0F, homeLight2.getNameXOffset(), 0.01F);
      
      float float1 = homeLight0.getNameXOffset();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight0, homeLight2);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight0.equals((Object)homeLight2));
      assertEquals(0.0F, float1, 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[7] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(332.69F, 791, 2.0F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(2.0F, lightSource0.getZ(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(332.69F, lightSource0.getX(), 0.01F);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      
      lightSourceArray0[1] = lightSource0;
      LightSource lightSource1 = new LightSource((-2872), (-487.1F), 332.69F, (-2872), float0);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(0.0F, lightSource1.getDiameter(), 0.01F);
      assertEquals((-2872), lightSource1.getColor());
      assertEquals(332.69F, lightSource1.getZ(), 0.01F);
      assertEquals((-487.1F), lightSource1.getY(), 0.01F);
      assertEquals((-2872.0F), lightSource1.getX(), 0.01F);
      
      lightSourceArray0[2] = lightSource1;
      LightSource lightSource2 = new LightSource((-487.1F), 332.69F, 791, 46);
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertNotNull(lightSource2);
      assertEquals(46, lightSource2.getColor());
      assertEquals(791.0F, lightSource2.getZ(), 0.01F);
      assertEquals(332.69F, lightSource2.getY(), 0.01F);
      assertEquals((-487.1F), lightSource2.getX(), 0.01F);
      assertNull(lightSource2.getDiameter());
      
      lightSourceArray0[3] = lightSource2;
      lightSourceArray0[4] = lightSource1;
      LightSource lightSource3 = new LightSource(20, 332.69F, 791, 20, float0);
      assertFalse(lightSource3.equals((Object)lightSource1));
      assertFalse(lightSource3.equals((Object)lightSource0));
      assertFalse(lightSource3.equals((Object)lightSource2));
      assertNotNull(lightSource3);
      assertEquals(20.0F, lightSource3.getX(), 0.01F);
      assertEquals(332.69F, lightSource3.getY(), 0.01F);
      assertEquals(791.0F, lightSource3.getZ(), 0.01F);
      assertEquals(0.0F, lightSource3.getDiameter(), 0.01F);
      assertEquals(20, lightSource3.getColor());
      
      LightSource lightSource4 = new LightSource(2.0F, 20, 3094.0688F, (-2872));
      assertFalse(lightSource4.equals((Object)lightSource0));
      assertFalse(lightSource4.equals((Object)lightSource2));
      assertFalse(lightSource4.equals((Object)lightSource3));
      assertFalse(lightSource4.equals((Object)lightSource1));
      assertNotNull(lightSource4);
      assertNull(lightSource4.getDiameter());
      assertEquals(3094.0688F, lightSource4.getZ(), 0.01F);
      assertEquals(2.0F, lightSource4.getX(), 0.01F);
      assertEquals(20.0F, lightSource4.getY(), 0.01F);
      assertEquals((-2872), lightSource4.getColor());
      
      lightSourceArray0[7] = lightSource4;
      lightSourceArray0[8] = lightSource1;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 332.69F, 0L, 332.69F, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, false, bigDecimal0, bigDecimal0, "");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals("", catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(332.69F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(332.69F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals("", catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(332.69F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(332.69F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(332.69F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals(332.69F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(166.345F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      homeLight0.move(0.0F, 46);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals("", catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(332.69F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(332.69F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(332.69F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals(332.69F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(46.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(166.345F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      Float float1 = homeLight0.getShininess();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNull(float1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals("", catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(332.69F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(332.69F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(332.69F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals(332.69F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(46.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(166.345F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      lightSourceArray0[3] = lightSourceArray0[2];
      lightSourceArray0[4] = lightSourceArray0[2];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, false, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, false, false, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDeformable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDeformable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      
      homeLight0.setDescription("");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDeformable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      
      Long long1 = new Long(0L);
      assertTrue(long1.equals((Object)long0));
      assertEquals(0L, (long)long1);
      assertNotNull(long1);
      
      homeLight0.setNameYOffset(0L);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(long0.equals((Object)long1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDeformable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      
      Level level0 = new Level("", 2637.65F, 2637.65F, 0L);
      assertNotNull(level0);
      assertTrue(level0.isVisible());
      assertEquals(2637.65F, level0.getFloorThickness(), 0.01F);
      assertEquals("", level0.getName());
      assertEquals(2637.65F, level0.getElevation(), 0.01F);
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      
      homeLight0.setNameVisible(true);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(long0.equals((Object)long1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDeformable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isNameVisible());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getName());
      
      BigDecimal bigDecimal1 = new BigDecimal(0L);
      assertTrue(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      assertEquals((byte)0, bigDecimal1.byteValue());
      assertEquals((short)0, bigDecimal1.shortValue());
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertTrue(long0.equals((Object)long1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertTrue(bigDecimal0.equals((Object)bigDecimal1));
      assertNotNull(homeLight1);
      assertFalse(homeLight1.isDeformable());
      assertNull(homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals("", homeLight1.getDescription());
      assertFalse(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertTrue(homeLight1.isNameVisible());
      assertTrue(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDeformable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isNameVisible());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getName());
      
      homeLight1.setNameYOffset(0.3926991F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertTrue(long0.equals((Object)long1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertTrue(bigDecimal0.equals((Object)bigDecimal1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.isDeformable());
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.3926991F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals("", homeLight1.getDescription());
      assertFalse(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertTrue(homeLight1.isNameVisible());
      assertTrue(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDeformable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isNameVisible());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getName());
      
      homeLight0.setNameVisible(false);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertTrue(long0.equals((Object)long1));
      assertTrue(bigDecimal0.equals((Object)bigDecimal1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDeformable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      
      BigDecimal bigDecimal2 = homeLight1.getValueAddedTaxPercentage();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight1, homeLight0);
      assertSame(bigDecimal2, bigDecimal0);
      assertNotSame(bigDecimal2, bigDecimal1);
      assertSame(bigDecimal0, bigDecimal2);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertTrue(long0.equals((Object)long1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertTrue(bigDecimal2.equals((Object)bigDecimal1));
      assertTrue(bigDecimal0.equals((Object)bigDecimal1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertNotNull(bigDecimal2);
      assertFalse(homeLight1.isDeformable());
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.3926991F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals("", homeLight1.getDescription());
      assertFalse(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertTrue(homeLight1.isNameVisible());
      assertEquals((short)0, bigDecimal2.shortValue());
      assertEquals((byte)0, bigDecimal2.byteValue());
      assertTrue(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDeformable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      
      boolean boolean1 = homeLight1.isTopRightPointAt((-11.0F), (-11.0F), 0.3926991F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight1, homeLight0);
      assertSame(bigDecimal0, bigDecimal2);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertTrue(long0.equals((Object)long1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(boolean1 == boolean0);
      assertTrue(bigDecimal0.equals((Object)bigDecimal1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(boolean1);
      assertFalse(homeLight1.isDeformable());
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.3926991F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals("", homeLight1.getDescription());
      assertFalse(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertTrue(homeLight1.isNameVisible());
      assertTrue(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDeformable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      
      HomeLight homeLight2 = new HomeLight(homeLight1);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(long0.equals((Object)long1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(homeLight2.equals((Object)homeLight1));
      assertFalse(homeLight2.equals((Object)homeLight0));
      assertTrue(bigDecimal0.equals((Object)bigDecimal1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertNotNull(homeLight2);
      assertFalse(homeLight1.isDeformable());
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.3926991F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals("", homeLight1.getDescription());
      assertFalse(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertTrue(homeLight1.isNameVisible());
      assertTrue(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertFalse(homeLight2.isModelMirrored());
      assertFalse(homeLight2.isBackFaceShown());
      assertFalse(homeLight2.isDoorOrWindow());
      assertEquals(0.0F, homeLight2.getAngle(), 0.01F);
      assertTrue(homeLight2.isNameVisible());
      assertNull(homeLight2.getCurrency());
      assertNull(homeLight2.getCatalogId());
      assertNull(homeLight2.getColor());
      assertNull(homeLight2.getShininess());
      assertTrue(homeLight2.isResizable());
      assertNull(homeLight2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight2.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight2.getHeight(), 0.01F);
      assertNull(homeLight2.getName());
      assertEquals(0.5F, homeLight2.getPower(), 0.01F);
      assertFalse(homeLight2.isMovable());
      assertTrue(homeLight2.isVisible());
      assertEquals(0.0F, homeLight2.getWidth(), 0.01F);
      assertFalse(homeLight2.isDeformable());
      assertEquals(0.0F, homeLight2.getElevation(), 0.01F);
      assertEquals("", homeLight2.getDescription());
      assertEquals(0.0F, homeLight2.getDepth(), 0.01F);
      assertFalse(homeLight2.isTexturable());
      assertEquals(0.0F, homeLight2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight2.getY(), 0.01F);
      assertEquals(0.3926991F, homeLight2.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight2.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight2.getX(), 0.01F);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDeformable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeLight2.getModel();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(homeLight1, homeLight2);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertNotSame(homeLight2, homeLight1);
      assertNotSame(homeLight2, homeLight0);
      assertSame(resourceURLContent1, resourceURLContent0);
      assertSame(bigDecimal0, bigDecimal2);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight0, homeLight2);
      assertTrue(long0.equals((Object)long1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(homeLight1.equals((Object)homeLight2));
      assertFalse(homeLight2.equals((Object)homeLight1));
      assertFalse(homeLight2.equals((Object)homeLight0));
      assertTrue(bigDecimal0.equals((Object)bigDecimal1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight0.equals((Object)homeLight2));
      assertNotNull(resourceURLContent1);
      assertFalse(homeLight1.isDeformable());
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.3926991F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals("", homeLight1.getDescription());
      assertFalse(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertTrue(homeLight1.isNameVisible());
      assertTrue(resourceURLContent0.isJAREntry());
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertFalse(homeLight2.isModelMirrored());
      assertFalse(homeLight2.isBackFaceShown());
      assertFalse(homeLight2.isDoorOrWindow());
      assertEquals(0.0F, homeLight2.getAngle(), 0.01F);
      assertTrue(homeLight2.isNameVisible());
      assertNull(homeLight2.getCurrency());
      assertNull(homeLight2.getCatalogId());
      assertNull(homeLight2.getColor());
      assertNull(homeLight2.getShininess());
      assertTrue(homeLight2.isResizable());
      assertNull(homeLight2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight2.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight2.getHeight(), 0.01F);
      assertNull(homeLight2.getName());
      assertEquals(0.5F, homeLight2.getPower(), 0.01F);
      assertFalse(homeLight2.isMovable());
      assertTrue(homeLight2.isVisible());
      assertEquals(0.0F, homeLight2.getWidth(), 0.01F);
      assertFalse(homeLight2.isDeformable());
      assertEquals(0.0F, homeLight2.getElevation(), 0.01F);
      assertEquals("", homeLight2.getDescription());
      assertEquals(0.0F, homeLight2.getDepth(), 0.01F);
      assertFalse(homeLight2.isTexturable());
      assertEquals(0.0F, homeLight2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight2.getY(), 0.01F);
      assertEquals(0.3926991F, homeLight2.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight2.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight2.getX(), 0.01F);
      assertFalse(resourceURLContent1.isMultiPartResource());
      assertTrue(resourceURLContent1.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDeformable());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      String string0 = resourceURLContent0.getJAREntryName();
      assertEquals("com/eteks/sweethome3d/model/", string0);
      assertNotNull(string0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      lightSourceArray0[3] = lightSourceArray0[2];
      lightSourceArray0[4] = lightSourceArray0[2];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      
      homeLight0.setWidth(0L);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      
      homeLight0.setNameAngle(0.3926991F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals(0.3926991F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      
      homeLight0.setAngle((-545.866F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.7710939F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals(0.3926991F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      
      boolean boolean1 = homeLight0.containsPoint((-545.866F), (-545.866F), 0.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(boolean1 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.7710939F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals(0.3926991F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      
      boolean boolean2 = homeLight0.isTopLeftPointAt((-2033.0F), 166.35F, 166.35F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean2);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.7710939F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals(0.3926991F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[2] = "";
      stringArray0[5] = null;
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[10];
      lightSourceArray0[3] = lightSourceArray0[1];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, "", "", (String) null, stringArray0, long0, (Float) null, resourceURLContent0, resourceURLContent0, resourceURLContent0, 472.4373F, (-21.21027F), 472.4373F, 1554.9221F, false, lightSourceArray0, "", (float[][]) null, "", true, true, true, bigDecimal0, bigDecimal0, stringArray0[5]);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getInformation());
      assertEquals(1554.9221F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isTexturable());
      assertEquals("", catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(472.4373F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isMovable());
      assertEquals((-21.21027F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals("", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(472.4373F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getInformation());
      assertEquals(1554.9221F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isTexturable());
      assertEquals("", catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(472.4373F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isMovable());
      assertEquals((-21.21027F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals("", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(472.4373F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(1554.9221F, homeLight0.getElevation(), 0.01F);
      assertEquals(472.4373F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertEquals(472.4373F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(1554.9221F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals("", homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(236.21864F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-21.21027F), homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals((-10.605135F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      
      boolean boolean0 = homeLight0.isBottomRightPointAt(0.0F, (-21.21027F), (-1.0F));
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertFalse(boolean0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getInformation());
      assertEquals(1554.9221F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isTexturable());
      assertEquals("", catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(472.4373F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isMovable());
      assertEquals((-21.21027F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals("", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(472.4373F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(1554.9221F, homeLight0.getElevation(), 0.01F);
      assertEquals(472.4373F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertEquals(472.4373F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(1554.9221F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals("", homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(236.21864F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-21.21027F), homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals((-10.605135F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      
      String string0 = resourceURLContent0.getJAREntryName();
      assertEquals("com/eteks/sweethome3d/model/", string0);
      assertNotNull(string0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "editorSubFolder");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      homeLight0.setMovable(true);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getInformation());
      assertEquals(1554.9221F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getGrade());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isTexturable());
      assertEquals("", catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(472.4373F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isMovable());
      assertEquals((-21.21027F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals("", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(472.4373F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(1554.9221F, homeLight0.getElevation(), 0.01F);
      assertEquals(472.4373F, homeLight0.getWidth(), 0.01F);
      assertEquals(472.4373F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(1554.9221F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals("", homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(236.21864F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-21.21027F), homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals((-10.605135F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[2] = "";
      stringArray0[5] = null;
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[10];
      lightSourceArray0[3] = lightSourceArray0[1];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      
      boolean boolean0 = homeLight0.isBottomRightPointAt(0L, 89, (-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertFalse(boolean0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      
      boolean boolean1 = homeLight0.isNameCenterPointAt(0L, (-177.8038F), 0L);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      
      boolean boolean2 = homeLight0.isModelMirrored();
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      
      homeLight0.setShininess(float0);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getShininess(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      
      Float float1 = homeLight0.getShininess();
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertEquals(0.0F, (float)float1, 0.01F);
      assertNotNull(float1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getShininess(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[5] = null;
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(0.0F, lightSource0.getZ(), 0.01F);
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      
      lightSourceArray0[2] = lightSource0;
      LightSource lightSource1 = new LightSource(791, 0L, 791, 46);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(791.0F, lightSource1.getX(), 0.01F);
      assertEquals(791.0F, lightSource1.getZ(), 0.01F);
      assertNull(lightSource1.getDiameter());
      assertEquals(46, lightSource1.getColor());
      assertEquals(0.0F, lightSource1.getY(), 0.01F);
      
      lightSourceArray0[4] = lightSource1;
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource2 = new LightSource(0L, 0.0F, (-479.5861F), 46);
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertNotNull(lightSource2);
      assertEquals(0.0F, lightSource2.getX(), 0.01F);
      assertEquals(0.0F, lightSource2.getY(), 0.01F);
      assertNull(lightSource2.getDiameter());
      assertEquals(46, lightSource2.getColor());
      assertEquals((-479.5861F), lightSource2.getZ(), 0.01F);
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      boolean boolean0 = homeLight0.isBottomRightPointAt(1.0F, 46, (-479.5861F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      homeLight0.setElevation(9.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals(9.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(9.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      boolean boolean1 = homeLight0.isBottomLeftPointAt(0.0F, 46, (-2347.2F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertTrue(boolean1 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals(9.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(9.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      Level level0 = homeLight0.getLevel();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNull(level0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals(9.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(9.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      homeLight0.setColor((Integer) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals(9.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(9.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[8];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, (BigDecimal) null, (BigDecimal) null, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      
      homeLight0.setDescription("");
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      
      Long long1 = new Long(0L);
      assertTrue(long1.equals((Object)long0));
      assertEquals(0L, (long)long1);
      assertNotNull(long1);
      
      homeLight0.setNameAngle(0L);
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertTrue(long0.equals((Object)long1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      
      homeLight0.setDescription("");
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertTrue(long0.equals((Object)long1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      
      homeLight0.setDescription("");
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertTrue(long0.equals((Object)long1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      
      BigDecimal bigDecimal1 = homeLight0.getPriceValueAddedTaxIncluded();
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertTrue(long0.equals((Object)long1));
      assertNull(bigDecimal1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[2] = null;
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[8];
      String string0 = resourceURLContent0.getJAREntryName();
      assertEquals("com/eteks/sweethome3d/model/", string0);
      assertNotNull(string0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight("com/eteks/sweethome3d/model/", "", "=wYqX", stringArray0[2], stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 2502.705F, (-1082.7676F), (-1.0F), true, lightSourceArray0, "J#5'~`hZ*~*w~x", (float[][]) null, "", true, true, true, bigDecimal0, (BigDecimal) null, "=wYqX");
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertEquals("com/eteks/sweethome3d/model/", catalogLight0.getId());
      assertEquals((-1.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals("", catalogLight0.getCreator());
      assertNull(catalogLight0.getColor());
      assertEquals((-1082.7676F), catalogLight0.getHeight(), 0.01F);
      assertEquals("=wYqX", catalogLight0.getCurrency());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getInformation());
      assertEquals("J#5'~`hZ*~*w~x", catalogLight0.getStaircaseCutOutShape());
      assertEquals("=wYqX", catalogLight0.getDescription());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals(2502.705F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertEquals("com/eteks/sweethome3d/model/", catalogLight0.getId());
      assertEquals((-1.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals("", catalogLight0.getCreator());
      assertNull(catalogLight0.getColor());
      assertEquals((-1082.7676F), catalogLight0.getHeight(), 0.01F);
      assertEquals("=wYqX", catalogLight0.getCurrency());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getInformation());
      assertEquals("J#5'~`hZ*~*w~x", catalogLight0.getStaircaseCutOutShape());
      assertEquals("=wYqX", catalogLight0.getDescription());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals(2502.705F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals(1251.3525F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals("=wYqX", homeLight0.getCurrency());
      assertEquals(2502.705F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals("J#5'~`hZ*~*w~x", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-1082.7676F), homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals("com/eteks/sweethome3d/model/", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-1.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals("=wYqX", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals((-1.0F), homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      
      LightSource[] lightSourceArray1 = homeLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertEquals(8, lightSourceArray1.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertEquals("com/eteks/sweethome3d/model/", catalogLight0.getId());
      assertEquals((-1.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals("", catalogLight0.getCreator());
      assertNull(catalogLight0.getColor());
      assertEquals((-1082.7676F), catalogLight0.getHeight(), 0.01F);
      assertEquals("=wYqX", catalogLight0.getCurrency());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getInformation());
      assertEquals("J#5'~`hZ*~*w~x", catalogLight0.getStaircaseCutOutShape());
      assertEquals("=wYqX", catalogLight0.getDescription());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals(2502.705F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals(1251.3525F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals("=wYqX", homeLight0.getCurrency());
      assertEquals(2502.705F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals("J#5'~`hZ*~*w~x", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-1082.7676F), homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals("com/eteks/sweethome3d/model/", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-1.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals("=wYqX", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals((-1.0F), homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertEquals("com/eteks/sweethome3d/model/", catalogLight0.getId());
      assertEquals((-1.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals("", catalogLight0.getCreator());
      assertNull(catalogLight0.getColor());
      assertEquals((-1082.7676F), catalogLight0.getHeight(), 0.01F);
      assertEquals("=wYqX", catalogLight0.getCurrency());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getInformation());
      assertEquals("J#5'~`hZ*~*w~x", catalogLight0.getStaircaseCutOutShape());
      assertEquals("=wYqX", catalogLight0.getDescription());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals(2502.705F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals(1251.3525F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals("=wYqX", homeLight0.getCurrency());
      assertEquals(2502.705F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals("J#5'~`hZ*~*w~x", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-1082.7676F), homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals("com/eteks/sweethome3d/model/", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-1.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals("=wYqX", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals((-1.0F), homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertEquals("=wYqX", homeLight1.getDescription());
      assertEquals(1251.3525F, homeLight1.getY(), 0.01F);
      assertEquals("", homeLight1.getName());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(2502.705F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals("=wYqX", homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals((-1.0F), homeLight1.getElevation(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals("J#5'~`hZ*~*w~x", homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals("com/eteks/sweethome3d/model/", homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertEquals((-1.0F), homeLight1.getGroundElevation(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isDeformable());
      assertEquals((-1082.7676F), homeLight1.getHeight(), 0.01F);
      
      Level level0 = new Level("com/eteks/sweethome3d/model/", 2502.705F, (-1.0F), (-1082.7676F));
      assertNotNull(level0);
      assertEquals(2502.705F, level0.getElevation(), 0.01F);
      assertEquals((-1.0F), level0.getFloorThickness(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals((-1082.7676F), level0.getHeight(), 0.01F);
      assertEquals("com/eteks/sweethome3d/model/", level0.getName());
      
      boolean boolean1 = homeLight1.isTopLeftPointAt(769.21F, 3300.6946F, 769.21F);
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(boolean1 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertEquals("com/eteks/sweethome3d/model/", catalogLight0.getId());
      assertEquals((-1.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals("", catalogLight0.getCreator());
      assertNull(catalogLight0.getColor());
      assertEquals((-1082.7676F), catalogLight0.getHeight(), 0.01F);
      assertEquals("=wYqX", catalogLight0.getCurrency());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getInformation());
      assertEquals("J#5'~`hZ*~*w~x", catalogLight0.getStaircaseCutOutShape());
      assertEquals("=wYqX", catalogLight0.getDescription());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals(2502.705F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals(1251.3525F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals("=wYqX", homeLight0.getCurrency());
      assertEquals(2502.705F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals("J#5'~`hZ*~*w~x", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-1082.7676F), homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals("com/eteks/sweethome3d/model/", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-1.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals("=wYqX", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals((-1.0F), homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertEquals("=wYqX", homeLight1.getDescription());
      assertEquals(1251.3525F, homeLight1.getY(), 0.01F);
      assertEquals("", homeLight1.getName());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(2502.705F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals("=wYqX", homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals((-1.0F), homeLight1.getElevation(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals("J#5'~`hZ*~*w~x", homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals("com/eteks/sweethome3d/model/", homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertEquals((-1.0F), homeLight1.getGroundElevation(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isDeformable());
      assertEquals((-1082.7676F), homeLight1.getHeight(), 0.01F);
      
      homeLight1.setDescription("axez?(:nM");
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertEquals("com/eteks/sweethome3d/model/", catalogLight0.getId());
      assertEquals((-1.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals("", catalogLight0.getCreator());
      assertNull(catalogLight0.getColor());
      assertEquals((-1082.7676F), catalogLight0.getHeight(), 0.01F);
      assertEquals("=wYqX", catalogLight0.getCurrency());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getInformation());
      assertEquals("J#5'~`hZ*~*w~x", catalogLight0.getStaircaseCutOutShape());
      assertEquals("=wYqX", catalogLight0.getDescription());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals(2502.705F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals(1251.3525F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals("=wYqX", homeLight0.getCurrency());
      assertEquals(2502.705F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals("J#5'~`hZ*~*w~x", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-1082.7676F), homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals("com/eteks/sweethome3d/model/", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-1.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals("=wYqX", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals((-1.0F), homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertEquals("axez?(:nM", homeLight1.getDescription());
      assertEquals(1251.3525F, homeLight1.getY(), 0.01F);
      assertEquals("", homeLight1.getName());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(2502.705F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals("=wYqX", homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals((-1.0F), homeLight1.getElevation(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals("J#5'~`hZ*~*w~x", homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals("com/eteks/sweethome3d/model/", homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertEquals((-1.0F), homeLight1.getGroundElevation(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isDeformable());
      assertEquals((-1082.7676F), homeLight1.getHeight(), 0.01F);
      
      BigDecimal bigDecimal1 = homeLight0.getValueAddedTax();
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertNull(bigDecimal1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertEquals("com/eteks/sweethome3d/model/", catalogLight0.getId());
      assertEquals((-1.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals("", catalogLight0.getCreator());
      assertNull(catalogLight0.getColor());
      assertEquals((-1082.7676F), catalogLight0.getHeight(), 0.01F);
      assertEquals("=wYqX", catalogLight0.getCurrency());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getInformation());
      assertEquals("J#5'~`hZ*~*w~x", catalogLight0.getStaircaseCutOutShape());
      assertEquals("=wYqX", catalogLight0.getDescription());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals(2502.705F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals(1251.3525F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals("=wYqX", homeLight0.getCurrency());
      assertEquals(2502.705F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals("J#5'~`hZ*~*w~x", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-1082.7676F), homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals("com/eteks/sweethome3d/model/", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-1.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals("=wYqX", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals((-1.0F), homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      
      float float1 = homeLight0.getAngle();
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertEquals(0.0F, float1, 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertEquals("com/eteks/sweethome3d/model/", catalogLight0.getId());
      assertEquals((-1.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals("", catalogLight0.getCreator());
      assertNull(catalogLight0.getColor());
      assertEquals((-1082.7676F), catalogLight0.getHeight(), 0.01F);
      assertEquals("=wYqX", catalogLight0.getCurrency());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getInformation());
      assertEquals("J#5'~`hZ*~*w~x", catalogLight0.getStaircaseCutOutShape());
      assertEquals("=wYqX", catalogLight0.getDescription());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals(2502.705F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals(1251.3525F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals("=wYqX", homeLight0.getCurrency());
      assertEquals(2502.705F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals("J#5'~`hZ*~*w~x", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-1082.7676F), homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals("com/eteks/sweethome3d/model/", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-1.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals("=wYqX", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals((-1.0F), homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[2] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(1.0F, 791, 21.33163F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      assertEquals(21.33163F, lightSource0.getZ(), 0.01F);
      
      lightSourceArray0[2] = lightSource0;
      LightSource lightSource1 = new LightSource(791, 0L, 791, 791);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(0.0F, lightSource1.getY(), 0.01F);
      assertNull(lightSource1.getDiameter());
      assertEquals(791, lightSource1.getColor());
      assertEquals(791.0F, lightSource1.getX(), 0.01F);
      assertEquals(791.0F, lightSource1.getZ(), 0.01F);
      
      lightSourceArray0[3] = lightSource1;
      lightSourceArray0[4] = lightSource1;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource1;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean1 = homeLight0.isBottomRightPointAt(1.0F, 791, (-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(boolean1 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean2 = homeLight0.containsPoint(2.0F, 791, (-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean2);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean3 = homeLight0.isBottomLeftPointAt((-2347.2F), (-2347.2F), (-2347.2F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean3);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      
      homeLight0.setName("");
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals("", homeLight0.getName());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      
      homeLight0.setShininess(float0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals("", homeLight0.getName());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getShininess(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      String string0 = resourceURLContent0.getJAREntryName();
      assertEquals("com/eteks/sweethome3d/model/", string0);
      assertNotNull(string0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      
      Long long1 = Long.valueOf(687L);
      assertFalse(long1.equals((Object)long0));
      assertEquals(687L, (long)long1);
      assertNotNull(long1);
      
      CatalogLight catalogLight0 = new CatalogLight("", (String) null, "", "com.eteks.sweethome3d.model.HomePieceOfFurniture$4", stringArray0, long1, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 687L, 0L, 687L, true, lightSourceArray0, "", (float[][]) null, "", true, true, true, bigDecimal0, bigDecimal0, "");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(long1.equals((Object)long0));
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(687.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(687L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(687.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$4", catalogLight0.getInformation());
      assertEquals("", catalogLight0.getId());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(long1.equals((Object)long0));
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(687.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(687L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(687.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$4", catalogLight0.getInformation());
      assertEquals("", catalogLight0.getId());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals("", homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(343.5F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isDeformable());
      assertEquals(687.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(687.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(687.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals("", homeLight0.getCatalogId());
      
      homeLight0.setDescription("");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(long1.equals((Object)long0));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(687.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(687L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(687.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$4", catalogLight0.getInformation());
      assertEquals("", catalogLight0.getId());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals("", homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(343.5F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isDeformable());
      assertEquals(687.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(687.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(687.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals("", homeLight0.getCatalogId());
      
      Long long2 = new Long(687L);
      assertTrue(long2.equals((Object)long1));
      assertFalse(long2.equals((Object)long0));
      assertEquals(687L, (long)long2);
      assertNotNull(long2);
      
      homeLight0.setNameYOffset(687L);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(long1.equals((Object)long0));
      assertTrue(long1.equals((Object)long2));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(687.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(687L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(687.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$4", catalogLight0.getInformation());
      assertEquals("", catalogLight0.getId());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertNull(homeLight0.getColor());
      assertEquals(687.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals("", homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(343.5F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isDeformable());
      assertEquals(687.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(687.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(687.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getCatalogId());
      
      Level level0 = new Level("", 0L, 823.272F, 1631.126F);
      assertNotNull(level0);
      assertEquals(1631.126F, level0.getHeight(), 0.01F);
      assertEquals("", level0.getName());
      assertEquals(823.272F, level0.getFloorThickness(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals(0.0F, level0.getElevation(), 0.01F);
      
      homeLight0.setNameVisible(true);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(long1.equals((Object)long0));
      assertTrue(long1.equals((Object)long2));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(687.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(687L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(687.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$4", catalogLight0.getInformation());
      assertEquals("", catalogLight0.getId());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertNull(homeLight0.getColor());
      assertEquals(687.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals("", homeLight0.getCurrency());
      assertTrue(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(343.5F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isDeformable());
      assertEquals(687.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(687.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(687.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getCatalogId());
      
      BigDecimal bigDecimal1 = homeLight0.getValueAddedTaxPercentage();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(bigDecimal1, bigDecimal0);
      assertSame(bigDecimal0, bigDecimal1);
      assertFalse(long1.equals((Object)long0));
      assertTrue(long1.equals((Object)long2));
      assertNotNull(bigDecimal1);
      assertEquals((short)1, bigDecimal1.shortValue());
      assertEquals((byte)1, bigDecimal1.byteValue());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(687.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(687L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(687.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$4", catalogLight0.getInformation());
      assertEquals("", catalogLight0.getId());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertNull(homeLight0.getColor());
      assertEquals(687.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals("", homeLight0.getCurrency());
      assertTrue(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(343.5F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isDeformable());
      assertEquals(687.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(687.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(687.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getCatalogId());
      
      boolean boolean1 = homeLight0.isTopRightPointAt(1631.126F, (-0.2F), 1.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertFalse(boolean1 == boolean0);
      assertFalse(long1.equals((Object)long0));
      assertTrue(long1.equals((Object)long2));
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(687.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(687L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(687.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$4", catalogLight0.getInformation());
      assertEquals("", catalogLight0.getId());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertNull(homeLight0.getColor());
      assertEquals(687.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals("", homeLight0.getCurrency());
      assertTrue(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(343.5F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isDeformable());
      assertEquals(687.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(687.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(687.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getCatalogId());
      
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeLight0.getModel();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(resourceURLContent1, resourceURLContent0);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertSame(bigDecimal0, bigDecimal1);
      assertFalse(long1.equals((Object)long0));
      assertTrue(long1.equals((Object)long2));
      assertNotNull(resourceURLContent1);
      assertTrue(resourceURLContent1.isJAREntry());
      assertTrue(resourceURLContent1.isMultiPartResource());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(687.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(687L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(687.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$4", catalogLight0.getInformation());
      assertEquals("", catalogLight0.getId());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertNull(homeLight0.getColor());
      assertEquals(687.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals("", homeLight0.getCurrency());
      assertTrue(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(343.5F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isDeformable());
      assertEquals(687.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(687.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(687.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getCatalogId());
      
      BigDecimal bigDecimal2 = homeLight0.getPrice();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(bigDecimal2, bigDecimal0);
      assertSame(bigDecimal2, bigDecimal1);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertSame(bigDecimal0, bigDecimal2);
      assertSame(bigDecimal0, bigDecimal1);
      assertFalse(long1.equals((Object)long0));
      assertTrue(long1.equals((Object)long2));
      assertNotNull(bigDecimal2);
      assertEquals((short)1, bigDecimal2.shortValue());
      assertEquals((byte)1, bigDecimal2.byteValue());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(687.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(687L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(687.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$4", catalogLight0.getInformation());
      assertEquals("", catalogLight0.getId());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertNull(homeLight0.getColor());
      assertEquals(687.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals("", homeLight0.getCurrency());
      assertTrue(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(343.5F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isDeformable());
      assertEquals(687.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(687.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(687.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getCatalogId());
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(0.0F, lightSource0.getZ(), 0.01F);
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      
      lightSourceArray0[2] = lightSource0;
      LightSource lightSource1 = new LightSource(791, 0L, 791, 791);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertNull(lightSource1.getDiameter());
      assertEquals(791.0F, lightSource1.getX(), 0.01F);
      assertEquals(791.0F, lightSource1.getZ(), 0.01F);
      assertEquals(0.0F, lightSource1.getY(), 0.01F);
      assertEquals(791, lightSource1.getColor());
      
      lightSourceArray0[3] = lightSource1;
      lightSourceArray0[4] = lightSource1;
      lightSourceArray0[5] = lightSource0;
      lightSourceArray0[6] = lightSource1;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean1 = homeLight0.isBottomRightPointAt(1.0F, 791, (-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(boolean1 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean2 = homeLight0.containsPoint(2.0F, 791, (-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean2);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight1 = (HomeLight)homeLight0.clone();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight1.getName());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertFalse(homeLight1.isModelMirrored());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean3 = homeLight1.isDoorOrWindow();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean3);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight1.getName());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertFalse(homeLight1.isModelMirrored());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.HEIGHT;
      Comparator<HomePieceOfFurniture> comparator0 = HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      assertNotNull(comparator0);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "com.eteks.sweethome3d.model.CatalogLight";
      stringArray0[6] = null;
      stringArray0[7] = "";
      stringArray0[8] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource((-487.1F), (-487.1F), 1.0F, 791);
      assertNotNull(lightSource0);
      assertNull(lightSource0.getDiameter());
      assertEquals((-487.1F), lightSource0.getX(), 0.01F);
      assertEquals((-487.1F), lightSource0.getY(), 0.01F);
      assertEquals(1.0F, lightSource0.getZ(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      
      lightSourceArray0[0] = lightSource0;
      LightSource lightSource1 = new LightSource((-487.1F), 2.0F, 0.0F, 791);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertNull(lightSource1.getDiameter());
      assertEquals(791, lightSource1.getColor());
      assertEquals(2.0F, lightSource1.getY(), 0.01F);
      assertEquals(0.0F, lightSource1.getZ(), 0.01F);
      assertEquals((-487.1F), lightSource1.getX(), 0.01F);
      
      lightSourceArray0[1] = lightSource1;
      LightSource lightSource2 = new LightSource(0.0F, (-1999.1F), 0.3926991F, (-2872));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertNotNull(lightSource2);
      assertNull(lightSource2.getDiameter());
      assertEquals((-2872), lightSource2.getColor());
      assertEquals((-1999.1F), lightSource2.getY(), 0.01F);
      assertEquals(0.3926991F, lightSource2.getZ(), 0.01F);
      assertEquals(0.0F, lightSource2.getX(), 0.01F);
      
      lightSourceArray0[2] = lightSource2;
      LightSource lightSource3 = new LightSource((-185.9665F), 0.3926991F, 791, 46);
      assertFalse(lightSource3.equals((Object)lightSource2));
      assertFalse(lightSource3.equals((Object)lightSource0));
      assertFalse(lightSource3.equals((Object)lightSource1));
      assertNotNull(lightSource3);
      assertEquals(46, lightSource3.getColor());
      assertEquals(791.0F, lightSource3.getZ(), 0.01F);
      assertEquals((-185.9665F), lightSource3.getX(), 0.01F);
      assertNull(lightSource3.getDiameter());
      assertEquals(0.3926991F, lightSource3.getY(), 0.01F);
      
      lightSourceArray0[3] = lightSource3;
      LightSource lightSource4 = new LightSource(46, (-1999.1F), 1.0F, 20);
      assertFalse(lightSource4.equals((Object)lightSource3));
      assertFalse(lightSource4.equals((Object)lightSource0));
      assertFalse(lightSource4.equals((Object)lightSource2));
      assertFalse(lightSource4.equals((Object)lightSource1));
      assertNotNull(lightSource4);
      assertNull(lightSource4.getDiameter());
      assertEquals(20, lightSource4.getColor());
      assertEquals(46.0F, lightSource4.getX(), 0.01F);
      assertEquals(1.0F, lightSource4.getZ(), 0.01F);
      assertEquals((-1999.1F), lightSource4.getY(), 0.01F);
      
      lightSourceArray0[4] = lightSource4;
      LightSource lightSource5 = new LightSource((-1999.1F), (-1999.1F), 0.0F, 20);
      assertFalse(lightSource5.equals((Object)lightSource4));
      assertFalse(lightSource5.equals((Object)lightSource2));
      assertFalse(lightSource5.equals((Object)lightSource1));
      assertFalse(lightSource5.equals((Object)lightSource0));
      assertFalse(lightSource5.equals((Object)lightSource3));
      assertNotNull(lightSource5);
      assertEquals((-1999.1F), lightSource5.getY(), 0.01F);
      assertEquals((-1999.1F), lightSource5.getX(), 0.01F);
      assertNull(lightSource5.getDiameter());
      assertEquals(0.0F, lightSource5.getZ(), 0.01F);
      assertEquals(20, lightSource5.getColor());
      
      lightSourceArray0[5] = lightSource5;
      LightSource lightSource6 = new LightSource(0L, 0.0F, 0.0F, 46);
      assertFalse(lightSource6.equals((Object)lightSource3));
      assertFalse(lightSource6.equals((Object)lightSource1));
      assertFalse(lightSource6.equals((Object)lightSource5));
      assertFalse(lightSource6.equals((Object)lightSource4));
      assertFalse(lightSource6.equals((Object)lightSource2));
      assertFalse(lightSource6.equals((Object)lightSource0));
      assertNotNull(lightSource6);
      assertEquals(0.0F, lightSource6.getY(), 0.01F);
      assertEquals(46, lightSource6.getColor());
      assertNull(lightSource6.getDiameter());
      assertEquals(0.0F, lightSource6.getX(), 0.01F);
      assertEquals(0.0F, lightSource6.getZ(), 0.01F);
      
      lightSourceArray0[6] = lightSource6;
      LightSource lightSource7 = new LightSource(0.0F, 0.0F, 3094.0688F, (-2872));
      assertFalse(lightSource7.equals((Object)lightSource3));
      assertFalse(lightSource7.equals((Object)lightSource0));
      assertFalse(lightSource7.equals((Object)lightSource2));
      assertFalse(lightSource7.equals((Object)lightSource4));
      assertFalse(lightSource7.equals((Object)lightSource5));
      assertFalse(lightSource7.equals((Object)lightSource1));
      assertFalse(lightSource7.equals((Object)lightSource6));
      assertNotNull(lightSource7);
      assertNull(lightSource7.getDiameter());
      assertEquals(3094.0688F, lightSource7.getZ(), 0.01F);
      assertEquals((-2872), lightSource7.getColor());
      assertEquals(0.0F, lightSource7.getX(), 0.01F);
      assertEquals(0.0F, lightSource7.getY(), 0.01F);
      
      lightSourceArray0[7] = lightSource7;
      LightSource lightSource8 = new LightSource((-1589.899F), 1.0F, 0.0F, (-1775));
      assertFalse(lightSource8.equals((Object)lightSource1));
      assertFalse(lightSource8.equals((Object)lightSource3));
      assertFalse(lightSource8.equals((Object)lightSource0));
      assertFalse(lightSource8.equals((Object)lightSource7));
      assertFalse(lightSource8.equals((Object)lightSource5));
      assertFalse(lightSource8.equals((Object)lightSource6));
      assertFalse(lightSource8.equals((Object)lightSource4));
      assertFalse(lightSource8.equals((Object)lightSource2));
      assertNotNull(lightSource8);
      assertEquals((-1589.899F), lightSource8.getX(), 0.01F);
      assertNull(lightSource8.getDiameter());
      assertEquals(1.0F, lightSource8.getY(), 0.01F);
      assertEquals(0.0F, lightSource8.getZ(), 0.01F);
      assertEquals((-1775), lightSource8.getColor());
      
      lightSourceArray0[8] = lightSource8;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0.3926991F, 0L, 0.3926991F, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, false, bigDecimal0, bigDecimal0, "");
      assertEquals(9, lightSourceArray0.length);
      assertEquals(9, stringArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, lightSourceArray0.length);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(9, stringArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals("", homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isTexturable());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(9, lightSourceArray0.length);
      assertEquals(9, stringArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals("", homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertNull(homeLight1.getName());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.3926991F, homeLight1.getWidth(), 0.01F);
      assertEquals(0.19634955F, homeLight1.getX(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getColor());
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertEquals("", homeLight1.getCurrency());
      assertFalse(homeLight1.isNameVisible());
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertEquals(0.3926991F, homeLight1.getHeight(), 0.01F);
      assertEquals("", homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertFalse(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      boolean boolean0 = homeLight1.isBackFaceShown();
      assertEquals(9, lightSourceArray0.length);
      assertEquals(9, stringArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(boolean0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals("", homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertNull(homeLight1.getName());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.3926991F, homeLight1.getWidth(), 0.01F);
      assertEquals(0.19634955F, homeLight1.getX(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getColor());
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertEquals("", homeLight1.getCurrency());
      assertFalse(homeLight1.isNameVisible());
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertEquals(0.3926991F, homeLight1.getHeight(), 0.01F);
      assertEquals("", homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertFalse(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      String[] stringArray0 = new String[13];
      stringArray0[1] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(13, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(13, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      
      homeLight0.setName("");
      assertEquals(13, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals("", homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      assertNotNull(propertyChangeListenerProxy0);
      assertNull(propertyChangeListenerProxy0.getPropertyName());
      
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.HomePieceOfFurniture$7", propertyChangeListenerProxy0);
      assertFalse(propertyChangeListenerProxy1.equals((Object)propertyChangeListenerProxy0));
      assertNotNull(propertyChangeListenerProxy1);
      assertNull(propertyChangeListenerProxy0.getPropertyName());
      assertEquals("com.eteks.sweethome3d.model.HomePieceOfFurniture$7", propertyChangeListenerProxy1.getPropertyName());
      
      Level level0 = new Level("i\"x", 0.0F, 0.0F, 0.0F);
      assertNotNull(level0);
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      assertEquals("i\"x", level0.getName());
      assertEquals(0.0F, level0.getElevation(), 0.01F);
      assertEquals(0.0F, level0.getFloorThickness(), 0.01F);
      assertTrue(level0.isVisible());
      
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("i\"x", propertyChangeListener1);
      assertFalse(propertyChangeListenerProxy2.equals((Object)propertyChangeListenerProxy0));
      assertFalse(propertyChangeListenerProxy2.equals((Object)propertyChangeListenerProxy1));
      assertNotNull(propertyChangeListenerProxy2);
      assertEquals("i\"x", propertyChangeListenerProxy2.getPropertyName());
      
      level0.addPropertyChangeListener(propertyChangeListenerProxy2);
      assertNotSame(propertyChangeListenerProxy2, propertyChangeListenerProxy0);
      assertNotSame(propertyChangeListenerProxy2, propertyChangeListenerProxy1);
      assertFalse(propertyChangeListenerProxy2.equals((Object)propertyChangeListenerProxy0));
      assertFalse(propertyChangeListenerProxy2.equals((Object)propertyChangeListenerProxy1));
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      assertEquals("i\"x", level0.getName());
      assertEquals(0.0F, level0.getElevation(), 0.01F);
      assertEquals(0.0F, level0.getFloorThickness(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals("i\"x", propertyChangeListenerProxy2.getPropertyName());
      
      level0.addPropertyChangeListener(propertyChangeListenerProxy2);
      assertNotSame(propertyChangeListenerProxy2, propertyChangeListenerProxy0);
      assertNotSame(propertyChangeListenerProxy2, propertyChangeListenerProxy1);
      assertFalse(propertyChangeListenerProxy2.equals((Object)propertyChangeListenerProxy0));
      assertFalse(propertyChangeListenerProxy2.equals((Object)propertyChangeListenerProxy1));
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      assertEquals("i\"x", level0.getName());
      assertEquals(0.0F, level0.getElevation(), 0.01F);
      assertEquals(0.0F, level0.getFloorThickness(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals("i\"x", propertyChangeListenerProxy2.getPropertyName());
      
      float[][] floatArray0 = homeLight0.getModelRotation();
      assertEquals(13, stringArray0.length);
      assertEquals(3, floatArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(floatArray0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals("", homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(13, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertFalse(homeLight1.isResizable());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getCurrency());
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals("", homeLight1.getName());
      assertFalse(homeLight1.isNameVisible());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals("", homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      
      boolean boolean1 = homeLight1.isTopRightPointAt(0L, 0.0F, 0.0F);
      assertEquals(13, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(boolean1 == boolean0);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(boolean1);
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertFalse(homeLight1.isResizable());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getCurrency());
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals("", homeLight1.getName());
      assertFalse(homeLight1.isNameVisible());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals("", homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[5] = null;
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(2.0F, 2.0F, 791, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(2.0F, lightSource0.getY(), 0.01F);
      assertEquals(791.0F, lightSource0.getZ(), 0.01F);
      assertEquals(2.0F, lightSource0.getX(), 0.01F);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      
      lightSourceArray0[1] = lightSource0;
      LightSource lightSource1 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(0.0F, lightSource1.getDiameter(), 0.01F);
      assertEquals(0.0F, lightSource1.getZ(), 0.01F);
      assertEquals(791.0F, lightSource1.getY(), 0.01F);
      assertEquals(791, lightSource1.getColor());
      assertEquals(1.0F, lightSource1.getX(), 0.01F);
      
      lightSourceArray0[2] = lightSource1;
      LightSource lightSource2 = new LightSource(791, 0L, 791, 46);
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertNotNull(lightSource2);
      assertEquals(0.0F, lightSource2.getY(), 0.01F);
      assertEquals(46, lightSource2.getColor());
      assertNull(lightSource2.getDiameter());
      assertEquals(791.0F, lightSource2.getX(), 0.01F);
      assertEquals(791.0F, lightSource2.getZ(), 0.01F);
      
      lightSourceArray0[4] = lightSource2;
      lightSourceArray0[5] = lightSource1;
      LightSource lightSource3 = new LightSource(0L, 0.0F, (-487.1F), 46);
      assertFalse(lightSource3.equals((Object)lightSource2));
      assertFalse(lightSource3.equals((Object)lightSource1));
      assertFalse(lightSource3.equals((Object)lightSource0));
      assertNotNull(lightSource3);
      assertEquals(46, lightSource3.getColor());
      assertEquals(0.0F, lightSource3.getY(), 0.01F);
      assertEquals(0.0F, lightSource3.getX(), 0.01F);
      assertEquals((-487.1F), lightSource3.getZ(), 0.01F);
      assertNull(lightSource3.getDiameter());
      
      lightSourceArray0[6] = lightSource3;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean0 = homeLight0.isBottomRightPointAt(1.0F, 46, (-487.1F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      homeLight0.setElevation(9.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(9.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isResizable());
      assertEquals(9.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean1 = homeLight0.isBottomLeftPointAt(0.0F, 46, (-2347.2F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertTrue(boolean1 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(9.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isResizable());
      assertEquals(9.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isResizable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      
      homeLight0.setName("");
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isResizable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      
      homeLight0.setShininess((Float) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isResizable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      
      homeLight0.setVisible(false);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isResizable());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isVisible());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      
      homeLight0.setDescription("ELEVATION");
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isResizable());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isVisible());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals("ELEVATION", homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      
      String string0 = homeLight0.getName();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals("", string0);
      assertNotNull(string0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isResizable());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isVisible());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals("ELEVATION", homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[3] = "";
      Long long0 = new Long((-55L));
      assertEquals((-55L), (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) (-55L));
      assertEquals((-55.0F), (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[16];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-55L), (-55L), (-55L), (-55L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(16, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      
      URL uRL0 = resourceURLContent0.getJAREntryURL();
      assertNotNull(uRL0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals("", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(16, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getColor());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      
      boolean boolean1 = homeLight0.isTopLeftPointAt(3.4028235E38F, (-55L), 3.4028235E38F);
      assertEquals(8, stringArray0.length);
      assertEquals(16, lightSourceArray0.length);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getColor());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      
      BigDecimal bigDecimal1 = homeLight0.getPriceValueAddedTaxIncluded();
      assertEquals(8, stringArray0.length);
      assertEquals(16, lightSourceArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getColor());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((short)2, bigDecimal1.shortValue());
      assertEquals((byte)2, bigDecimal1.byteValue());
      
      boolean boolean2 = homeLight0.isTopRightPointAt(42.44F, (-55L), (-3169.796F));
      assertEquals(8, stringArray0.length);
      assertEquals(16, lightSourceArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getColor());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      assertNotNull(resourceURLContent0);
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      lightSourceArray0[4] = lightSourceArray0[2];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, false, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, false, false, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isMovable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isMovable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isMovable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isMovable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      
      HomeLight homeLight1 = new HomeLight(homeLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isMovable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isMovable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isModelMirrored());
      assertNull(homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertFalse(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertFalse(homeLight1.isMovable());
      assertFalse(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      
      LightSource[] lightSourceArray2 = catalogLight0.getLightSources();
      assertEquals(9, lightSourceArray2.length);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray2, lightSourceArray1);
      assertNotSame(lightSourceArray2, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray2);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray2.equals((Object)lightSourceArray1));
      assertFalse(lightSourceArray2.equals((Object)lightSourceArray0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(lightSourceArray2);
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isMovable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      boolean boolean2 = homeLight0.isBottomLeftPointAt(264.256F, (-947.66644F), 0.0F);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray2);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray2));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(boolean2);
      assertFalse(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isMovable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isMovable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      
      int int0 = Float.floatToIntBits(1664.9F);
      assertEquals(1154489549, int0);
      
      // Undeclared exception!
      try { 
        homeLight0.setShininess((Float) 1664.9F);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't texturable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      assertEquals(0.0F, lightSource0.getZ(), 0.01F);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      
      lightSourceArray0[2] = lightSource0;
      LightSource lightSource1 = new LightSource(791, 0L, 791, 46);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(0.0F, lightSource1.getY(), 0.01F);
      assertEquals(46, lightSource1.getColor());
      assertEquals(791.0F, lightSource1.getZ(), 0.01F);
      assertNull(lightSource1.getDiameter());
      assertEquals(791.0F, lightSource1.getX(), 0.01F);
      
      lightSourceArray0[3] = lightSource1;
      lightSourceArray0[4] = lightSource1;
      LightSource lightSource2 = new LightSource(0L, 0.0F, (-19.779608F), 46);
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertNotNull(lightSource2);
      assertEquals(0.0F, lightSource2.getX(), 0.01F);
      assertEquals(0.0F, lightSource2.getY(), 0.01F);
      assertNull(lightSource2.getDiameter());
      assertEquals(46, lightSource2.getColor());
      assertEquals((-19.779608F), lightSource2.getZ(), 0.01F);
      
      lightSourceArray0[6] = lightSource2;
      float float1 = Float.max((-2669.9358F), 46);
      assertEquals(46.0F, float1, 0.01F);
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertNotNull(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertNotNull(lightSourceArray1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean0 = homeLight0.isBottomRightPointAt(1.0F, 46, (-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean1 = homeLight0.isPointAt(0L, 0.0F, 0.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(boolean1 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(boolean1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeLight0.getPlanIcon();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(resourceURLContent1, resourceURLContent0);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(resourceURLContent1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(resourceURLContent1.isMultiPartResource());
      assertTrue(resourceURLContent1.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      
      homeLight0.setDescription("");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      
      Long long1 = new Long(0L);
      assertTrue(long1.equals((Object)long0));
      assertEquals(0L, (long)long1);
      assertNotNull(long1);
      
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.Level", propertyChangeListener0);
      assertNotNull(propertyChangeListenerProxy0);
      assertEquals("com.eteks.sweethome3d.model.Level", propertyChangeListenerProxy0.getPropertyName());
      
      homeLight0.removePropertyChangeListener(propertyChangeListenerProxy0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(long0.equals((Object)long1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals("com.eteks.sweethome3d.model.Level", propertyChangeListenerProxy0.getPropertyName());
      
      Level level0 = new Level((String) null, 3411.4739F, 1470.5F, (-1.3961023F));
      assertNotNull(level0);
      assertEquals(1470.5F, level0.getFloorThickness(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals((-1.3961023F), level0.getHeight(), 0.01F);
      assertNull(level0.getName());
      assertEquals(3411.4739F, level0.getElevation(), 0.01F);
      
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, (PropertyChangeListener) null);
      assertFalse(propertyChangeListenerProxy1.equals((Object)propertyChangeListenerProxy0));
      assertNotNull(propertyChangeListenerProxy1);
      assertNull(propertyChangeListenerProxy1.getPropertyName());
      
      level0.addPropertyChangeListener((PropertyChangeListener) null);
      assertEquals(1470.5F, level0.getFloorThickness(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals((-1.3961023F), level0.getHeight(), 0.01F);
      assertNull(level0.getName());
      assertEquals(3411.4739F, level0.getElevation(), 0.01F);
      
      boolean boolean1 = homeLight0.isAtLevel(level0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(long0.equals((Object)long1));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(1470.5F, level0.getFloorThickness(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals((-1.3961023F), level0.getHeight(), 0.01F);
      assertNull(level0.getName());
      assertEquals(3411.4739F, level0.getElevation(), 0.01F);
      
      float[][] floatArray0 = homeLight0.getModelRotation();
      assertEquals(9, stringArray0.length);
      assertEquals(3, floatArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(long0.equals((Object)long1));
      assertNotNull(floatArray0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      String string0 = resourceURLContent0.getJAREntryName();
      assertEquals("com/eteks/sweethome3d/model/", string0);
      assertNotNull(string0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      lightSourceArray0[3] = lightSourceArray0[2];
      lightSourceArray0[4] = lightSourceArray0[2];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight1);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      assertFalse(homeLight1.isBackFaceShown());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      
      BigDecimal bigDecimal1 = homeLight1.getPriceValueAddedTaxIncluded();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertSame(bigDecimal1, bigDecimal0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(bigDecimal1);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals((short)0, bigDecimal1.shortValue());
      assertEquals((byte)0, bigDecimal1.byteValue());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      
      homeLight0.setWidth(1665.1937F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(1665.1937F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      
      homeLight0.setNameAngle(1665.1937F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertEquals(0.14961918F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(1665.1937F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      
      homeLight0.setAngle(0.5F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.5F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertEquals(0.14961918F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(1665.1937F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      
      homeLight1.setNameXOffset(0L);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.5F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertEquals(0.14961918F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(1665.1937F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      assertFalse(homeLight1.isBackFaceShown());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      
      homeLight0.setNameYOffset((-260.3F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.5F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertEquals(0.14961918F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(1665.1937F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-260.3F), homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      
      homeLight0.setName("");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals("", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.5F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertEquals(0.14961918F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(1665.1937F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-260.3F), homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(791, lightSource0.getColor());
      assertEquals(0.0F, lightSource0.getZ(), 0.01F);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      
      lightSourceArray0[2] = lightSource0;
      LightSource lightSource1 = new LightSource(791, 0L, 791, 791);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(791.0F, lightSource1.getZ(), 0.01F);
      assertEquals(791.0F, lightSource1.getX(), 0.01F);
      assertEquals(0.0F, lightSource1.getY(), 0.01F);
      assertNull(lightSource1.getDiameter());
      assertEquals(791, lightSource1.getColor());
      
      lightSourceArray0[3] = lightSource1;
      lightSourceArray0[4] = lightSource1;
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource2 = new LightSource(0L, 0.0F, (-19.779608F), 791);
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertNotNull(lightSource2);
      assertEquals((-19.779608F), lightSource2.getZ(), 0.01F);
      assertEquals(0.0F, lightSource2.getY(), 0.01F);
      assertEquals(0.0F, lightSource2.getX(), 0.01F);
      assertEquals(791, lightSource2.getColor());
      assertNull(lightSource2.getDiameter());
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      Integer integer0 = Integer.valueOf(862);
      assertEquals(862, (int)integer0);
      assertNotNull(integer0);
      
      Integer integer1 = Integer.valueOf(862);
      assertTrue(integer1.equals((Object)integer0));
      assertEquals(862, (int)integer1);
      assertNotNull(integer1);
      
      Integer integer2 = Integer.valueOf(862);
      assertTrue(integer2.equals((Object)integer0));
      assertTrue(integer2.equals((Object)integer1));
      assertEquals(862, (int)integer2);
      assertNotNull(integer2);
      
      Integer integer3 = Integer.valueOf(862);
      assertTrue(integer3.equals((Object)integer1));
      assertTrue(integer3.equals((Object)integer2));
      assertTrue(integer3.equals((Object)integer0));
      assertEquals(862, (int)integer3);
      assertNotNull(integer3);
      
      homeLight0.setColor(integer3);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertTrue(integer3.equals((Object)integer1));
      assertTrue(integer3.equals((Object)integer2));
      assertTrue(integer3.equals((Object)integer0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals(862, (int)homeLight0.getColor());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      homeLight0.setNameAngle(0.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals(862, (int)homeLight0.getColor());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[3] = "";
      Long long0 = new Long((-11L));
      assertEquals((-11L), (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) (-11L));
      assertEquals((-11.0F), (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-11L), (-11L), (-11L), (-11L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getDescription());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      
      BigDecimal bigDecimal1 = bigDecimal0.stripTrailingZeros();
      assertSame(bigDecimal0, bigDecimal1);
      assertSame(bigDecimal1, bigDecimal0);
      assertNotNull(bigDecimal1);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((byte)1, bigDecimal1.byteValue());
      assertEquals((short)1, bigDecimal1.shortValue());
      
      LightSource[] lightSourceArray1 = homeLight0.getLightSources();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getDescription());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      
      HomeLight homeLight1 = new HomeLight(homeLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getDescription());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(homeLight1.isTexturable());
      assertEquals((-11.0F), homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals((-11.0F), homeLight1.getHeight(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertNull(homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getShininess());
      assertEquals((-11.0F), homeLight1.getElevation(), 0.01F);
      assertEquals((-11.0F), homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals((-5.5F), homeLight1.getY(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals((-5.5F), homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals((-11.0F), homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      assertFalse(homeLight1.isBackFaceShown());
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      homeLight0.setNameXOffset((-1.3961023F));
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getDescription());
      assertEquals((-1.3961023F), homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      
      boolean boolean1 = homeLight0.isBottomLeftPointAt(429.44F, 599.1682F, 429.44F);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getDescription());
      assertEquals((-1.3961023F), homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeLight0.getModel();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(resourceURLContent1, resourceURLContent0);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertNotNull(resourceURLContent1);
      assertTrue(resourceURLContent1.isMultiPartResource());
      assertTrue(resourceURLContent1.isJAREntry());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getDescription());
      assertEquals((-1.3961023F), homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      
      boolean boolean2 = homeLight1.isTopRightPointAt((-1.3961023F), (-1.3961023F), 429.44F);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(boolean2);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getDescription());
      assertEquals((-1.3961023F), homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(homeLight1.isTexturable());
      assertEquals((-11.0F), homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals((-11.0F), homeLight1.getHeight(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertNull(homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getShininess());
      assertEquals((-11.0F), homeLight1.getElevation(), 0.01F);
      assertEquals((-11.0F), homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals((-5.5F), homeLight1.getY(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals((-5.5F), homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals((-11.0F), homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      assertFalse(homeLight1.isBackFaceShown());
      
      String string0 = homeLight0.getName();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertNull(string0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getDescription());
      assertEquals((-1.3961023F), homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      
      boolean boolean3 = homeLight1.isAtLevel((Level) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertTrue(boolean3);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getDescription());
      assertEquals((-1.3961023F), homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(homeLight1.isTexturable());
      assertEquals((-11.0F), homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals((-11.0F), homeLight1.getHeight(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertNull(homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getShininess());
      assertEquals((-11.0F), homeLight1.getElevation(), 0.01F);
      assertEquals((-11.0F), homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals((-5.5F), homeLight1.getY(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals((-5.5F), homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals((-11.0F), homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      assertFalse(homeLight1.isBackFaceShown());
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      String string0 = resourceURLContent0.getJAREntryName();
      assertEquals("com/eteks/sweethome3d/model/", string0);
      assertNotNull(string0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      lightSourceArray0[3] = lightSourceArray0[2];
      lightSourceArray0[4] = lightSourceArray0[2];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      
      homeLight0.setDescription("");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals("", homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      
      float float1 = homeLight0.getNameXOffset();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(0.0F, float1, 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals("", homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      
      homeLight0.setNameYOffset(4.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((float)float0, (float)float1, 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertNull(homeLight0.getShininess());
      assertEquals(4.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals("", homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      
      Level level0 = new Level("M2tH$P&m&x.[yz!#", 0.0F, (-124.087F), 2637.65F);
      assertNotNull(level0);
      assertEquals(2637.65F, level0.getHeight(), 0.01F);
      assertEquals(0.0F, level0.getElevation(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals((-124.087F), level0.getFloorThickness(), 0.01F);
      assertEquals("M2tH$P&m&x.[yz!#", level0.getName());
      
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("U\"x", propertyChangeListener0);
      assertNotNull(propertyChangeListenerProxy0);
      assertEquals("U\"x", propertyChangeListenerProxy0.getPropertyName());
      
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      assertFalse(propertyChangeListenerProxy1.equals((Object)propertyChangeListenerProxy0));
      assertNotNull(propertyChangeListenerProxy1);
      assertEquals("U\"x", propertyChangeListenerProxy0.getPropertyName());
      assertEquals("", propertyChangeListenerProxy1.getPropertyName());
      
      level0.addPropertyChangeListener(propertyChangeListenerProxy0);
      assertNotSame(propertyChangeListenerProxy0, propertyChangeListenerProxy1);
      assertFalse(propertyChangeListenerProxy0.equals((Object)propertyChangeListenerProxy1));
      assertEquals(2637.65F, level0.getHeight(), 0.01F);
      assertEquals(0.0F, level0.getElevation(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals((-124.087F), level0.getFloorThickness(), 0.01F);
      assertEquals("M2tH$P&m&x.[yz!#", level0.getName());
      assertEquals("U\"x", propertyChangeListenerProxy0.getPropertyName());
      
      homeLight0.setLevel(level0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((float)float0, (float)float1, 0.01F);
      assertEquals(2637.65F, level0.getHeight(), 0.01F);
      assertEquals(0.0F, level0.getElevation(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals((-124.087F), level0.getFloorThickness(), 0.01F);
      assertEquals("M2tH$P&m&x.[yz!#", level0.getName());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertNull(homeLight0.getShininess());
      assertEquals(4.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals("", homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      
      homeLight0.setDepth(0L);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((float)float0, (float)float1, 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertNull(homeLight0.getShininess());
      assertEquals(4.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals("", homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      Long long0 = new Long((-55L));
      assertEquals((-55L), (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) (-55L));
      assertEquals((-55.0F), (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite((-55L));
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      String string0 = resourceURLContent0.getJAREntryName();
      assertEquals("com/eteks/sweethome3d/model/", string0);
      assertNotNull(string0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-55L), (-55L), (-55L), (-55L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals((-55.0F), homeLight1.getDepth(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals((-55.0F), homeLight1.getElevation(), 0.01F);
      assertEquals((-55.0F), homeLight1.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getCurrency());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals((-27.5F), homeLight1.getY(), 0.01F);
      assertEquals((-27.5F), homeLight1.getX(), 0.01F);
      assertEquals((-55.0F), homeLight1.getGroundElevation(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertNull(homeLight1.getShininess());
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals((-55.0F), homeLight1.getHeight(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      
      homeLight1.setNameXOffset(21.124857F);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals((-55.0F), homeLight1.getDepth(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals((-55.0F), homeLight1.getElevation(), 0.01F);
      assertEquals((-55.0F), homeLight1.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getCurrency());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals((-27.5F), homeLight1.getY(), 0.01F);
      assertEquals((-27.5F), homeLight1.getX(), 0.01F);
      assertEquals((-55.0F), homeLight1.getGroundElevation(), 0.01F);
      assertEquals(21.124857F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertNull(homeLight1.getShininess());
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      assertEquals((-55.0F), homeLight1.getHeight(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      
      BigDecimal bigDecimal1 = homeLight1.getValueAddedTax();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertSame(bigDecimal1, bigDecimal0);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(bigDecimal1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isModifiable());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals((-55.0F), homeLight1.getDepth(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals((-55.0F), homeLight1.getElevation(), 0.01F);
      assertEquals((-55.0F), homeLight1.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getCurrency());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals((-27.5F), homeLight1.getY(), 0.01F);
      assertEquals((-27.5F), homeLight1.getX(), 0.01F);
      assertEquals((-55.0F), homeLight1.getGroundElevation(), 0.01F);
      assertEquals(21.124857F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertNull(homeLight1.getShininess());
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      assertEquals((-55.0F), homeLight1.getHeight(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals((byte)1, bigDecimal1.byteValue());
      assertEquals((short)1, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[3] = "";
      Long long0 = new Long((-55L));
      assertEquals((-55L), (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) (-55L));
      assertEquals((-55.0F), (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite((-55L));
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-55L), (-55L), (-55L), (-55L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals((-55.0F), homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertTrue(homeLight1.isMovable());
      assertEquals((-55.0F), homeLight1.getWidth(), 0.01F);
      assertEquals((-27.5F), homeLight1.getY(), 0.01F);
      assertEquals((-55.0F), homeLight1.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight1.getX(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getName());
      assertEquals((-55.0F), homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals((-55.0F), homeLight1.getHeight(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      
      boolean boolean1 = homeLight1.isTopRightPointAt((-55L), 2148.8F, (-55L));
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals((-55.0F), homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertTrue(homeLight1.isMovable());
      assertEquals((-55.0F), homeLight1.getWidth(), 0.01F);
      assertEquals((-27.5F), homeLight1.getY(), 0.01F);
      assertEquals((-55.0F), homeLight1.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight1.getX(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getName());
      assertEquals((-55.0F), homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals((-55.0F), homeLight1.getHeight(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeLight1.getModel();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertSame(resourceURLContent1, resourceURLContent0);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(resourceURLContent1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals((-55.0F), homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertTrue(homeLight1.isMovable());
      assertEquals((-55.0F), homeLight1.getWidth(), 0.01F);
      assertEquals((-27.5F), homeLight1.getY(), 0.01F);
      assertEquals((-55.0F), homeLight1.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight1.getX(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getName());
      assertEquals((-55.0F), homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals((-55.0F), homeLight1.getHeight(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertTrue(resourceURLContent1.isJAREntry());
      assertTrue(resourceURLContent1.isMultiPartResource());
      
      homeLight1.setDescription(";~=I^!RxzG84FJ4");
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals((-55.0F), homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertTrue(homeLight1.isMovable());
      assertEquals(";~=I^!RxzG84FJ4", homeLight1.getDescription());
      assertEquals((-55.0F), homeLight1.getWidth(), 0.01F);
      assertEquals((-27.5F), homeLight1.getY(), 0.01F);
      assertEquals((-55.0F), homeLight1.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight1.getX(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getName());
      assertEquals((-55.0F), homeLight1.getDepth(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals((-55.0F), homeLight1.getHeight(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      
      float[][] floatArray0 = homeLight0.getPoints();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(4, floatArray0.length);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertNotNull(floatArray0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      assertEquals(0.0F, lightSource0.getZ(), 0.01F);
      
      lightSourceArray0[2] = lightSource0;
      LightSource lightSource1 = new LightSource(791, 0L, 791, 791);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertNull(lightSource1.getDiameter());
      assertEquals(791.0F, lightSource1.getX(), 0.01F);
      assertEquals(0.0F, lightSource1.getY(), 0.01F);
      assertEquals(791.0F, lightSource1.getZ(), 0.01F);
      assertEquals(791, lightSource1.getColor());
      
      lightSourceArray0[3] = lightSource1;
      lightSourceArray0[4] = lightSource1;
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource2 = new LightSource(0L, 0.0F, (-19.779608F), 791);
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertNotNull(lightSource2);
      assertEquals(0.0F, lightSource2.getY(), 0.01F);
      assertEquals(0.0F, lightSource2.getX(), 0.01F);
      assertNull(lightSource2.getDiameter());
      assertEquals(791, lightSource2.getColor());
      assertEquals((-19.779608F), lightSource2.getZ(), 0.01F);
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isNameVisible());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      homeLight1.setWidth((-545.866F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals((-545.866F), homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isNameVisible());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      homeLight1.setNameAngle((-1.0F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(5.2831855F, homeLight1.getNameAngle(), 0.01F);
      assertEquals((-545.866F), homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isNameVisible());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      homeLight0.setAngle(0L);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      float float1 = homeLight1.getX();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals(0.0F, float1, 0.01F);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(5.2831855F, homeLight1.getNameAngle(), 0.01F);
      assertEquals((-545.866F), homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isNameVisible());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[8];
      stringArray0[2] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[12];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(12, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(8, stringArray0.length);
      assertEquals(12, lightSourceArray0.length);
      assertEquals(12, lightSourceArray1.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(12, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      
      homeLight0.setDepth(2.0F);
      assertEquals(8, stringArray0.length);
      assertEquals(12, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(2.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      
      homeLight0.setAngle(1.0F);
      assertEquals(8, stringArray0.length);
      assertEquals(12, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(2.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      
      homeLight0.setDepth((-41.318325F));
      assertEquals(8, stringArray0.length);
      assertEquals(12, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-41.318325F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      
      homeLight0.setModelMirrored(true);
      assertEquals(8, stringArray0.length);
      assertEquals(12, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-41.318325F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      
      homeLight0.setShininess((Float) null);
      assertEquals(8, stringArray0.length);
      assertEquals(12, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-41.318325F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long((-11L));
      assertEquals((-11L), (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) (-11L));
      assertEquals((-11.0F), (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite((-11L));
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      float float1 = Float.sum(894.80023F, 3094.0688F);
      assertEquals(3988.8691F, float1, 0.01F);
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-11L), (-11L), (-11L), (-11L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isResizable());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isResizable());
      assertFalse(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      
      BigDecimal bigDecimal1 = bigDecimal0.stripTrailingZeros();
      assertSame(bigDecimal0, bigDecimal1);
      assertSame(bigDecimal1, bigDecimal0);
      assertNotNull(bigDecimal1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((byte)0, bigDecimal1.byteValue());
      assertEquals((short)0, bigDecimal1.shortValue());
      
      LightSource[] lightSourceArray1 = homeLight0.getLightSources();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isResizable());
      assertFalse(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      
      HomeLight homeLight1 = new HomeLight(homeLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight1);
      assertTrue(homeLight1.isTexturable());
      assertEquals((-11.0F), homeLight1.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getColor());
      assertNull(homeLight1.getCatalogId());
      assertFalse(homeLight1.isResizable());
      assertEquals((-11.0F), homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals((-11.0F), homeLight1.getElevation(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals((-11.0F), homeLight1.getGroundElevation(), 0.01F);
      assertEquals((-5.5F), homeLight1.getY(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertNull(homeLight1.getName());
      assertEquals((-5.5F), homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertTrue(homeLight1.isVisible());
      assertEquals((-11.0F), homeLight1.getHeight(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isResizable());
      assertFalse(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      
      URL uRL0 = resourceURLContent0.getJAREntryURL();
      assertNotNull(uRL0);
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      boolean boolean1 = homeLight0.isBottomRightPointAt(1.0F, 1.0F, 1.0F);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(boolean1 == boolean0);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isResizable());
      assertFalse(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      
      boolean boolean2 = homeLight0.isPointAt(1.0F, 1.0F, (-11L));
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(boolean2);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isResizable());
      assertFalse(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      
      float float2 = homeLight1.getElevation();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotEquals(float2, float1, 0.01F);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertEquals((-11.0F), float2, 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals((-11.0F), homeLight1.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getColor());
      assertNull(homeLight1.getCatalogId());
      assertFalse(homeLight1.isResizable());
      assertEquals((-11.0F), homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals((-11.0F), homeLight1.getElevation(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals((-11.0F), homeLight1.getGroundElevation(), 0.01F);
      assertEquals((-5.5F), homeLight1.getY(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertNull(homeLight1.getName());
      assertEquals((-5.5F), homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertTrue(homeLight1.isVisible());
      assertEquals((-11.0F), homeLight1.getHeight(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isResizable());
      assertFalse(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "com.eteks.sweethome3d.model.CatalogLight";
      stringArray0[6] = null;
      stringArray0[7] = "";
      stringArray0[8] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource((-487.1F), (-487.1F), 1.0F, 791);
      assertNotNull(lightSource0);
      assertEquals(791, lightSource0.getColor());
      assertEquals(1.0F, lightSource0.getZ(), 0.01F);
      assertNull(lightSource0.getDiameter());
      assertEquals((-487.1F), lightSource0.getX(), 0.01F);
      assertEquals((-487.1F), lightSource0.getY(), 0.01F);
      
      lightSourceArray0[0] = lightSource0;
      LightSource lightSource1 = new LightSource((-487.1F), 2.0F, 0.0F, 791);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(791, lightSource1.getColor());
      assertNull(lightSource1.getDiameter());
      assertEquals((-487.1F), lightSource1.getX(), 0.01F);
      assertEquals(0.0F, lightSource1.getZ(), 0.01F);
      assertEquals(2.0F, lightSource1.getY(), 0.01F);
      
      lightSourceArray0[1] = lightSource1;
      LightSource lightSource2 = new LightSource(0.0F, (-1999.1F), 0.3926991F, (-2872));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertNotNull(lightSource2);
      assertEquals((-2872), lightSource2.getColor());
      assertEquals(0.0F, lightSource2.getX(), 0.01F);
      assertEquals(0.3926991F, lightSource2.getZ(), 0.01F);
      assertEquals((-1999.1F), lightSource2.getY(), 0.01F);
      assertNull(lightSource2.getDiameter());
      
      lightSourceArray0[2] = lightSource2;
      LightSource lightSource3 = new LightSource((-185.9665F), 0.3926991F, 791, 46);
      assertFalse(lightSource3.equals((Object)lightSource1));
      assertFalse(lightSource3.equals((Object)lightSource0));
      assertFalse(lightSource3.equals((Object)lightSource2));
      assertNotNull(lightSource3);
      assertEquals(0.3926991F, lightSource3.getY(), 0.01F);
      assertNull(lightSource3.getDiameter());
      assertEquals(46, lightSource3.getColor());
      assertEquals(791.0F, lightSource3.getZ(), 0.01F);
      assertEquals((-185.9665F), lightSource3.getX(), 0.01F);
      
      lightSourceArray0[3] = lightSource3;
      LightSource lightSource4 = new LightSource(46, (-1999.1F), 1.0F, 20);
      assertFalse(lightSource4.equals((Object)lightSource2));
      assertFalse(lightSource4.equals((Object)lightSource1));
      assertFalse(lightSource4.equals((Object)lightSource0));
      assertFalse(lightSource4.equals((Object)lightSource3));
      assertNotNull(lightSource4);
      assertEquals(20, lightSource4.getColor());
      assertEquals(1.0F, lightSource4.getZ(), 0.01F);
      assertEquals(46.0F, lightSource4.getX(), 0.01F);
      assertEquals((-1999.1F), lightSource4.getY(), 0.01F);
      assertNull(lightSource4.getDiameter());
      
      lightSourceArray0[4] = lightSource4;
      LightSource lightSource5 = new LightSource((-1999.1F), (-1999.1F), 0.0F, 20);
      assertFalse(lightSource5.equals((Object)lightSource2));
      assertFalse(lightSource5.equals((Object)lightSource0));
      assertFalse(lightSource5.equals((Object)lightSource4));
      assertFalse(lightSource5.equals((Object)lightSource3));
      assertFalse(lightSource5.equals((Object)lightSource1));
      assertNotNull(lightSource5);
      assertEquals(20, lightSource5.getColor());
      assertEquals(0.0F, lightSource5.getZ(), 0.01F);
      assertNull(lightSource5.getDiameter());
      assertEquals((-1999.1F), lightSource5.getX(), 0.01F);
      assertEquals((-1999.1F), lightSource5.getY(), 0.01F);
      
      lightSourceArray0[5] = lightSource5;
      LightSource lightSource6 = new LightSource(0L, 0.0F, 0.0F, 46);
      assertFalse(lightSource6.equals((Object)lightSource3));
      assertFalse(lightSource6.equals((Object)lightSource0));
      assertFalse(lightSource6.equals((Object)lightSource4));
      assertFalse(lightSource6.equals((Object)lightSource1));
      assertFalse(lightSource6.equals((Object)lightSource5));
      assertFalse(lightSource6.equals((Object)lightSource2));
      assertNotNull(lightSource6);
      assertEquals(46, lightSource6.getColor());
      assertEquals(0.0F, lightSource6.getZ(), 0.01F);
      assertEquals(0.0F, lightSource6.getX(), 0.01F);
      assertEquals(0.0F, lightSource6.getY(), 0.01F);
      assertNull(lightSource6.getDiameter());
      
      lightSourceArray0[6] = lightSource6;
      LightSource lightSource7 = new LightSource(0.0F, 0.0F, 3094.0688F, (-2872));
      assertFalse(lightSource7.equals((Object)lightSource3));
      assertFalse(lightSource7.equals((Object)lightSource0));
      assertFalse(lightSource7.equals((Object)lightSource4));
      assertFalse(lightSource7.equals((Object)lightSource1));
      assertFalse(lightSource7.equals((Object)lightSource5));
      assertFalse(lightSource7.equals((Object)lightSource6));
      assertFalse(lightSource7.equals((Object)lightSource2));
      assertNotNull(lightSource7);
      assertEquals(3094.0688F, lightSource7.getZ(), 0.01F);
      assertNull(lightSource7.getDiameter());
      assertEquals(0.0F, lightSource7.getX(), 0.01F);
      assertEquals(0.0F, lightSource7.getY(), 0.01F);
      assertEquals((-2872), lightSource7.getColor());
      
      lightSourceArray0[7] = lightSource7;
      LightSource lightSource8 = new LightSource((-1589.899F), 1.0F, 0.0F, (-1775));
      assertFalse(lightSource8.equals((Object)lightSource3));
      assertFalse(lightSource8.equals((Object)lightSource0));
      assertFalse(lightSource8.equals((Object)lightSource4));
      assertFalse(lightSource8.equals((Object)lightSource2));
      assertFalse(lightSource8.equals((Object)lightSource6));
      assertFalse(lightSource8.equals((Object)lightSource7));
      assertFalse(lightSource8.equals((Object)lightSource5));
      assertFalse(lightSource8.equals((Object)lightSource1));
      assertNotNull(lightSource8);
      assertEquals((-1589.899F), lightSource8.getX(), 0.01F);
      assertNull(lightSource8.getDiameter());
      assertEquals(0.0F, lightSource8.getZ(), 0.01F);
      assertEquals(1.0F, lightSource8.getY(), 0.01F);
      assertEquals((-1775), lightSource8.getColor());
      
      lightSourceArray0[8] = lightSource8;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0.3926991F, 0L, 0.3926991F, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, false, bigDecimal0, bigDecimal0, "");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getId());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals("", catalogLight0.getCurrency());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getId());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals("", catalogLight0.getCurrency());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getId());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals("", catalogLight0.getCurrency());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      homeLight0.setNameAngle(0.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getId());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals("", catalogLight0.getCurrency());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      String[] stringArray0 = new String[8];
      Long long0 = new Long(1L);
      assertEquals(1L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 1L);
      assertEquals(1.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 1L, 1L, 1L, 1L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isResizable());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isResizable());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      
      LightSource[] lightSourceArray1 = homeLight0.getLightSources();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isResizable());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      
      HomeLight homeLight1 = new HomeLight(homeLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isResizable());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals(1.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(1.0F, homeLight1.getWidth(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertEquals(0.5F, homeLight1.getX(), 0.01F);
      assertEquals(0.5F, homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isResizable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homeLight1.getGroundElevation(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertEquals(1.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(1.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isNameVisible());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      HomeLight homeLight2 = new HomeLight(homeLight1);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(homeLight2.equals((Object)homeLight0));
      assertFalse(homeLight2.equals((Object)homeLight1));
      assertNotNull(homeLight2);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isResizable());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals(1.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(1.0F, homeLight1.getWidth(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertEquals(0.5F, homeLight1.getX(), 0.01F);
      assertEquals(0.5F, homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isResizable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homeLight1.getGroundElevation(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertEquals(1.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(1.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isNameVisible());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight2.getNameXOffset(), 0.01F);
      assertEquals(1.0F, homeLight2.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight2.getAngle(), 0.01F);
      assertNull(homeLight2.getDescription());
      assertFalse(homeLight2.isDoorOrWindow());
      assertTrue(homeLight2.isTexturable());
      assertEquals(1.0F, homeLight2.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight2.getPower(), 0.01F);
      assertTrue(homeLight2.isMovable());
      assertEquals(0.5F, homeLight2.getY(), 0.01F);
      assertEquals(0.5F, homeLight2.getX(), 0.01F);
      assertEquals(1.0F, homeLight2.getDepth(), 0.01F);
      assertFalse(homeLight2.isResizable());
      assertEquals(0.0F, homeLight2.getNameAngle(), 0.01F);
      assertNull(homeLight2.getShininess());
      assertNull(homeLight2.getStaircaseCutOutShape());
      assertTrue(homeLight2.isVisible());
      assertTrue(homeLight2.isDeformable());
      assertEquals(0.0F, homeLight2.getNameYOffset(), 0.01F);
      assertEquals(1.0F, homeLight2.getHeight(), 0.01F);
      assertNull(homeLight2.getCurrency());
      assertEquals(1.0F, homeLight2.getWidth(), 0.01F);
      assertFalse(homeLight2.isBackFaceShown());
      assertNull(homeLight2.getCatalogId());
      assertNull(homeLight2.getColor());
      assertFalse(homeLight2.isNameVisible());
      assertNull(homeLight2.getName());
      assertFalse(homeLight2.isModelMirrored());
      
      // Undeclared exception!
      try { 
        homeLight2.setModelMirrored(true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[3] = "";
      Long long0 = new Long((-55L));
      assertEquals((-55L), (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) (-55L));
      assertEquals((-55.0F), (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-55L), (-55L), (-55L), (-55L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertEquals((-55.0F), homeLight1.getDepth(), 0.01F);
      assertEquals((-27.5F), homeLight1.getY(), 0.01F);
      assertEquals((-55.0F), homeLight1.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight1.getX(), 0.01F);
      assertEquals((-55.0F), homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals((-55.0F), homeLight1.getWidth(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getName());
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertEquals((-55.0F), homeLight1.getHeight(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      
      homeLight0.setTexture((HomeTexture) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      HomeLight homeLight2 = new HomeLight(homeLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight2.equals((Object)homeLight1));
      assertFalse(homeLight2.equals((Object)homeLight0));
      assertNotNull(homeLight2);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((-55.0F), homeLight2.getHeight(), 0.01F);
      assertTrue(homeLight2.isTexturable());
      assertEquals((-55.0F), homeLight2.getWidth(), 0.01F);
      assertFalse(homeLight2.isDoorOrWindow());
      assertNull(homeLight2.getDescription());
      assertEquals(0.0F, homeLight2.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight2.getPower(), 0.01F);
      assertNull(homeLight2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight2.getNameAngle(), 0.01F);
      assertTrue(homeLight2.isMovable());
      assertEquals(0.0F, homeLight2.getNameXOffset(), 0.01F);
      assertTrue(homeLight2.isVisible());
      assertTrue(homeLight2.isDeformable());
      assertNull(homeLight2.getShininess());
      assertTrue(homeLight2.isResizable());
      assertEquals((-27.5F), homeLight2.getX(), 0.01F);
      assertEquals((-27.5F), homeLight2.getY(), 0.01F);
      assertEquals((-55.0F), homeLight2.getGroundElevation(), 0.01F);
      assertNull(homeLight2.getCurrency());
      assertEquals((-55.0F), homeLight2.getElevation(), 0.01F);
      assertNull(homeLight2.getCatalogId());
      assertEquals((-55.0F), homeLight2.getDepth(), 0.01F);
      assertNull(homeLight2.getColor());
      assertFalse(homeLight2.isNameVisible());
      assertFalse(homeLight2.isBackFaceShown());
      assertNull(homeLight2.getName());
      assertEquals(0.0F, homeLight2.getNameYOffset(), 0.01F);
      assertFalse(homeLight2.isModelMirrored());
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      stringArray0[3] = "";
      Long long0 = new Long((-11L));
      assertEquals((-11L), (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) (-11L));
      assertEquals((-11.0F), (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite((-11L));
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      String string0 = resourceURLContent0.getJAREntryName();
      assertEquals("com/eteks/sweethome3d/model/", string0);
      assertNotNull(string0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      
      int int0 = Float.compare(0.0F, (-426.219F));
      assertEquals(1, int0);
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, "", (String) null, "[Ne21A*]o)a..J[:es", stringArray0, long0, (Float) (-426.219F), resourceURLContent0, resourceURLContent0, resourceURLContent0, (-11L), (-426.219F), (-1234.8397F), 1.8942798F, true, lightSourceArray0, "[Ne21A*]o)a..J[:es", (float[][]) null, "", false, true, false, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((-426.219F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(1.8942798F, catalogLight0.getElevation(), 0.01F);
      assertEquals("", catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-426.219F), catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("[Ne21A*]o)a..J[:es", catalogLight0.getStaircaseCutOutShape());
      assertEquals("[Ne21A*]o)a..J[:es", catalogLight0.getInformation());
      assertEquals("", catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-1234.8397F), catalogLight0.getHeight(), 0.01F);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((-426.219F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(1.8942798F, catalogLight0.getElevation(), 0.01F);
      assertEquals("", catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-426.219F), catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("[Ne21A*]o)a..J[:es", catalogLight0.getStaircaseCutOutShape());
      assertEquals("[Ne21A*]o)a..J[:es", catalogLight0.getInformation());
      assertEquals("", catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-1234.8397F), catalogLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(1.8942798F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals((-426.219F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals("[Ne21A*]o)a..J[:es", homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-1234.8397F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(1.8942798F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getName());
      assertEquals((-213.1095F), homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      
      LightSource[] lightSourceArray1 = homeLight0.getLightSources();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((-426.219F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(1.8942798F, catalogLight0.getElevation(), 0.01F);
      assertEquals("", catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-426.219F), catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("[Ne21A*]o)a..J[:es", catalogLight0.getStaircaseCutOutShape());
      assertEquals("[Ne21A*]o)a..J[:es", catalogLight0.getInformation());
      assertEquals("", catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-1234.8397F), catalogLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(1.8942798F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals((-426.219F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals("[Ne21A*]o)a..J[:es", homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-1234.8397F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(1.8942798F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getName());
      assertEquals((-213.1095F), homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((-426.219F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(1.8942798F, catalogLight0.getElevation(), 0.01F);
      assertEquals("", catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-426.219F), catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("[Ne21A*]o)a..J[:es", catalogLight0.getStaircaseCutOutShape());
      assertEquals("[Ne21A*]o)a..J[:es", catalogLight0.getInformation());
      assertEquals("", catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-1234.8397F), catalogLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(1.8942798F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals((-426.219F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals("[Ne21A*]o)a..J[:es", homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-1234.8397F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(1.8942798F, homeLight0.getElevation(), 0.01F);
      assertEquals("", homeLight0.getName());
      assertEquals((-213.1095F), homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertTrue(homeLight1.isMovable());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertEquals((-213.1095F), homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals("[Ne21A*]o)a..J[:es", homeLight1.getStaircaseCutOutShape());
      assertFalse(homeLight1.isResizable());
      assertEquals("", homeLight1.getName());
      assertEquals((-5.5F), homeLight1.getX(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertFalse(homeLight1.isTexturable());
      assertNull(homeLight1.getDescription());
      assertEquals(1.8942798F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(1.8942798F, homeLight1.getElevation(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertEquals((-426.219F), homeLight1.getDepth(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals((-11.0F), homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertFalse(homeLight1.isNameVisible());
      assertEquals((-1234.8397F), homeLight1.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getColor());
      
      // Undeclared exception!
      try { 
        homeLight0.setColor((Integer) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't texturable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[5] = null;
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource((-487.1F), 2.0F, 0.0F, 791);
      assertNotNull(lightSource0);
      assertEquals(0.0F, lightSource0.getZ(), 0.01F);
      assertEquals((-487.1F), lightSource0.getX(), 0.01F);
      assertNull(lightSource0.getDiameter());
      assertEquals(791, lightSource0.getColor());
      assertEquals(2.0F, lightSource0.getY(), 0.01F);
      
      lightSourceArray0[1] = lightSource0;
      LightSource lightSource1 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(0.0F, lightSource1.getDiameter(), 0.01F);
      assertEquals(791, lightSource1.getColor());
      assertEquals(1.0F, lightSource1.getX(), 0.01F);
      assertEquals(0.0F, lightSource1.getZ(), 0.01F);
      assertEquals(791.0F, lightSource1.getY(), 0.01F);
      
      lightSourceArray0[2] = lightSource1;
      LightSource lightSource2 = new LightSource(791, 0L, 791, 46);
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertNotNull(lightSource2);
      assertEquals(46, lightSource2.getColor());
      assertNull(lightSource2.getDiameter());
      assertEquals(791.0F, lightSource2.getX(), 0.01F);
      assertEquals(791.0F, lightSource2.getZ(), 0.01F);
      assertEquals(0.0F, lightSource2.getY(), 0.01F);
      
      lightSourceArray0[4] = lightSource2;
      lightSourceArray0[5] = lightSource1;
      LightSource lightSource3 = new LightSource(0L, 0.0F, 111.1966F, 46);
      assertFalse(lightSource3.equals((Object)lightSource1));
      assertFalse(lightSource3.equals((Object)lightSource2));
      assertFalse(lightSource3.equals((Object)lightSource0));
      assertNotNull(lightSource3);
      assertNull(lightSource3.getDiameter());
      assertEquals(0.0F, lightSource3.getX(), 0.01F);
      assertEquals(46, lightSource3.getColor());
      assertEquals(0.0F, lightSource3.getY(), 0.01F);
      assertEquals(111.1966F, lightSource3.getZ(), 0.01F);
      
      lightSourceArray0[6] = lightSource3;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean0 = homeLight0.isBottomRightPointAt(1.0F, 46, 111.1966F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      homeLight0.setElevation(9.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(9.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(9.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[7] = "";
      Long long0 = new Long((-6L));
      assertEquals((-6L), (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) (-6L));
      assertEquals((-6.0F), (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m<+h.ohqi%&?G");
      assertFalse(boolean0);
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource((-2886), (-487.1F), 328.95245F, (-2886), float0);
      assertNotNull(lightSource0);
      assertEquals((-2886.0F), lightSource0.getX(), 0.01F);
      assertEquals((-6.0F), lightSource0.getDiameter(), 0.01F);
      assertEquals((-2886), lightSource0.getColor());
      assertEquals(328.95245F, lightSource0.getZ(), 0.01F);
      assertEquals((-487.1F), lightSource0.getY(), 0.01F);
      
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[4] = lightSource0;
      LightSource lightSource1 = new LightSource(2.0F, 51, 3094.0688F, (-2886));
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(3094.0688F, lightSource1.getZ(), 0.01F);
      assertEquals((-2886), lightSource1.getColor());
      assertEquals(51.0F, lightSource1.getY(), 0.01F);
      assertNull(lightSource1.getDiameter());
      assertEquals(2.0F, lightSource1.getX(), 0.01F);
      
      lightSourceArray0[7] = lightSource1;
      lightSourceArray0[8] = lightSource0;
      BigDecimal bigDecimal0 = new BigDecimal((-6L));
      assertNotNull(bigDecimal0);
      assertEquals((short) (-6), bigDecimal0.shortValue());
      assertEquals((byte) (-6), bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 328.95245F, (-6L), 328.95245F, (-6L), true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, false, bigDecimal0, bigDecimal0, "");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-6.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isTexturable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals("", catalogLight0.getCurrency());
      assertEquals((-6.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals(328.95245F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-6L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals(328.95245F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-6.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short) (-6), bigDecimal0.shortValue());
      assertEquals((byte) (-6), bigDecimal0.byteValue());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-6.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isTexturable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals("", catalogLight0.getCurrency());
      assertEquals((-6.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals(328.95245F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-6L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals(328.95245F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-6.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals(164.47623F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals((-6.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(328.95245F, homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-6.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertEquals((-3.0F), homeLight0.getY(), 0.01F);
      assertEquals((-6.0F), homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertEquals(328.95245F, homeLight0.getWidth(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short) (-6), bigDecimal0.shortValue());
      assertEquals((byte) (-6), bigDecimal0.byteValue());
      
      boolean boolean1 = homeLight0.isDoorOrWindow();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-6.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isTexturable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals("", catalogLight0.getCurrency());
      assertEquals((-6.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals(328.95245F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-6L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals(328.95245F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-6.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals(164.47623F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals((-6.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(328.95245F, homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-6.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertEquals((-3.0F), homeLight0.getY(), 0.01F);
      assertEquals((-6.0F), homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertEquals(328.95245F, homeLight0.getWidth(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short) (-6), bigDecimal0.shortValue());
      assertEquals((byte) (-6), bigDecimal0.byteValue());
      
      TextStyle textStyle0 = new TextStyle(2514.55F);
      assertNotNull(textStyle0);
      assertFalse(textStyle0.isItalic());
      assertEquals(2514.55F, textStyle0.getFontSize(), 0.01F);
      assertFalse(textStyle0.isBold());
      
      homeLight0.setNameStyle(textStyle0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-6.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isTexturable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals("", catalogLight0.getCurrency());
      assertEquals((-6.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals(328.95245F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-6L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals(328.95245F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-6.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals(164.47623F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals((-6.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(328.95245F, homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-6.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertEquals((-3.0F), homeLight0.getY(), 0.01F);
      assertEquals((-6.0F), homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertEquals(328.95245F, homeLight0.getWidth(), 0.01F);
      assertFalse(textStyle0.isItalic());
      assertEquals(2514.55F, textStyle0.getFontSize(), 0.01F);
      assertFalse(textStyle0.isBold());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short) (-6), bigDecimal0.shortValue());
      assertEquals((byte) (-6), bigDecimal0.byteValue());
      
      float float1 = homeLight0.getGroundElevation();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((-6.0F), float1, 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-6.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isTexturable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals("", catalogLight0.getCurrency());
      assertEquals((-6.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals(328.95245F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-6L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals(328.95245F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-6.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals(164.47623F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals((-6.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(328.95245F, homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals((-6.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertEquals((-3.0F), homeLight0.getY(), 0.01F);
      assertEquals((-6.0F), homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertEquals(328.95245F, homeLight0.getWidth(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short) (-6), bigDecimal0.shortValue());
      assertEquals((byte) (-6), bigDecimal0.byteValue());
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      String[] stringArray0 = new String[9];
      Long long0 = new Long((-2L));
      assertEquals((-2L), (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) (-2L));
      assertEquals((-2.0F), (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[8];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-2L), (-2L), (-2L), (-2L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((-2.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-2.0F), catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-2L), (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-2.0F), catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-2.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-2.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((-2.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-2.0F), catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-2L), (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-2.0F), catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-2.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-2.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals((-2.0F), homeLight0.getHeight(), 0.01F);
      assertEquals((-2.0F), homeLight0.getElevation(), 0.01F);
      assertEquals((-1.0F), homeLight0.getX(), 0.01F);
      assertEquals((-1.0F), homeLight0.getY(), 0.01F);
      assertEquals((-2.0F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-2.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals((-2.0F), homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      
      homeLight0.setDescription("");
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((-2.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-2.0F), catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-2L), (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-2.0F), catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-2.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-2.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals((-2.0F), homeLight0.getHeight(), 0.01F);
      assertEquals((-2.0F), homeLight0.getElevation(), 0.01F);
      assertEquals((-1.0F), homeLight0.getX(), 0.01F);
      assertEquals((-1.0F), homeLight0.getY(), 0.01F);
      assertEquals((-2.0F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-2.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals("", homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals((-2.0F), homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      
      Long long1 = new Long((-2L));
      assertTrue(long1.equals((Object)long0));
      assertEquals((-2L), (long)long1);
      assertNotNull(long1);
      
      homeLight0.setNameAngle((-2L));
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertTrue(long0.equals((Object)long1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((-2.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-2.0F), catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-2L), (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-2.0F), catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-2.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-2.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(4.2831855F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertEquals((-2.0F), homeLight0.getHeight(), 0.01F);
      assertEquals((-2.0F), homeLight0.getElevation(), 0.01F);
      assertEquals((-1.0F), homeLight0.getX(), 0.01F);
      assertEquals((-1.0F), homeLight0.getY(), 0.01F);
      assertEquals((-2.0F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-2.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals("", homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals((-2.0F), homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      
      boolean boolean1 = homeLight0.isPointAt(42.44F, 0.5F, 860.215F);
      assertEquals(9, stringArray0.length);
      assertEquals(8, lightSourceArray0.length);
      assertTrue(long0.equals((Object)long1));
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((-2.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-2.0F), catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-2L), (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-2.0F), catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-2.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-2.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(4.2831855F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertEquals((-2.0F), homeLight0.getHeight(), 0.01F);
      assertEquals((-2.0F), homeLight0.getElevation(), 0.01F);
      assertEquals((-1.0F), homeLight0.getX(), 0.01F);
      assertEquals((-1.0F), homeLight0.getY(), 0.01F);
      assertEquals((-2.0F), homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals((-2.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals("", homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals((-2.0F), homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      Long long0 = new Long((-55L));
      assertEquals((-55L), (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) (-55L));
      assertEquals((-55.0F), (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite((-55L));
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = new BigDecimal((-55L));
      assertNotNull(bigDecimal0);
      assertEquals((byte) (-55), bigDecimal0.byteValue());
      assertEquals((short) (-55), bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-55L), (-55L), (-55L), (-55L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte) (-55), bigDecimal0.byteValue());
      assertEquals((short) (-55), bigDecimal0.shortValue());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getId());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte) (-55), bigDecimal0.byteValue());
      assertEquals((short) (-55), bigDecimal0.shortValue());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getId());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isMovable());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      
      Level level0 = new Level("axez?(:nM", (-55L), (-55L), (-55L));
      assertNotNull(level0);
      assertEquals((-55.0F), level0.getFloorThickness(), 0.01F);
      assertEquals("axez?(:nM", level0.getName());
      assertEquals((-55.0F), level0.getHeight(), 0.01F);
      assertEquals((-55.0F), level0.getElevation(), 0.01F);
      assertTrue(level0.isVisible());
      
      boolean boolean1 = homeLight0.isTopLeftPointAt(3.4028235E38F, (-55L), 3.4028235E38F);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte) (-55), bigDecimal0.byteValue());
      assertEquals((short) (-55), bigDecimal0.shortValue());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getId());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isMovable());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      
      BigDecimal bigDecimal1 = homeLight0.getValueAddedTax();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte) (-55), bigDecimal0.byteValue());
      assertEquals((short) (-55), bigDecimal0.shortValue());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getId());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isMovable());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((short)3025, bigDecimal1.shortValue());
      assertEquals((byte) (-47), bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[2] = "";
      stringArray0[5] = null;
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[10];
      lightSourceArray0[3] = lightSourceArray0[1];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      
      boolean boolean0 = homeLight0.isBottomRightPointAt(0L, 59, (-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertFalse(boolean0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      
      String string0 = resourceURLContent0.getJAREntryName();
      assertEquals("com/eteks/sweethome3d/model/", string0);
      assertNotNull(string0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      homeLight0.setMovable(false);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      
      homeLight0.setAngle((-2425.8118F));
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(5.7809463F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      
      // Undeclared exception!
      try { 
        homeLight0.setDepth((-19.779608F));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "com.eteks.sweethome3d.model.CatalogLight";
      stringArray0[6] = null;
      stringArray0[7] = "";
      stringArray0[8] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource((-487.1F), (-487.1F), 1.0F, 791);
      assertNotNull(lightSource0);
      assertEquals((-487.1F), lightSource0.getY(), 0.01F);
      assertEquals((-487.1F), lightSource0.getX(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      assertEquals(1.0F, lightSource0.getZ(), 0.01F);
      assertNull(lightSource0.getDiameter());
      
      lightSourceArray0[0] = lightSource0;
      LightSource lightSource1 = new LightSource((-487.1F), 2.0F, 0.0F, 791);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(2.0F, lightSource1.getY(), 0.01F);
      assertEquals(791, lightSource1.getColor());
      assertNull(lightSource1.getDiameter());
      assertEquals((-487.1F), lightSource1.getX(), 0.01F);
      assertEquals(0.0F, lightSource1.getZ(), 0.01F);
      
      lightSourceArray0[1] = lightSource1;
      LightSource lightSource2 = new LightSource(0.0F, (-1999.1F), 0.3926991F, (-2872));
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertNotNull(lightSource2);
      assertNull(lightSource2.getDiameter());
      assertEquals((-1999.1F), lightSource2.getY(), 0.01F);
      assertEquals((-2872), lightSource2.getColor());
      assertEquals(0.3926991F, lightSource2.getZ(), 0.01F);
      assertEquals(0.0F, lightSource2.getX(), 0.01F);
      
      lightSourceArray0[2] = lightSource2;
      LightSource lightSource3 = new LightSource((-185.9665F), 0.3926991F, 791, 46);
      assertFalse(lightSource3.equals((Object)lightSource0));
      assertFalse(lightSource3.equals((Object)lightSource1));
      assertFalse(lightSource3.equals((Object)lightSource2));
      assertNotNull(lightSource3);
      assertEquals(46, lightSource3.getColor());
      assertNull(lightSource3.getDiameter());
      assertEquals(791.0F, lightSource3.getZ(), 0.01F);
      assertEquals((-185.9665F), lightSource3.getX(), 0.01F);
      assertEquals(0.3926991F, lightSource3.getY(), 0.01F);
      
      lightSourceArray0[3] = lightSource3;
      LightSource lightSource4 = new LightSource(46, (-1999.1F), 1.0F, 20);
      assertFalse(lightSource4.equals((Object)lightSource2));
      assertFalse(lightSource4.equals((Object)lightSource3));
      assertFalse(lightSource4.equals((Object)lightSource0));
      assertFalse(lightSource4.equals((Object)lightSource1));
      assertNotNull(lightSource4);
      assertEquals((-1999.1F), lightSource4.getY(), 0.01F);
      assertEquals(46.0F, lightSource4.getX(), 0.01F);
      assertEquals(20, lightSource4.getColor());
      assertEquals(1.0F, lightSource4.getZ(), 0.01F);
      assertNull(lightSource4.getDiameter());
      
      lightSourceArray0[4] = lightSource4;
      LightSource lightSource5 = new LightSource((-1999.1F), (-1999.1F), 0.0F, 20);
      assertFalse(lightSource5.equals((Object)lightSource4));
      assertFalse(lightSource5.equals((Object)lightSource2));
      assertFalse(lightSource5.equals((Object)lightSource3));
      assertFalse(lightSource5.equals((Object)lightSource0));
      assertFalse(lightSource5.equals((Object)lightSource1));
      assertNotNull(lightSource5);
      assertEquals(20, lightSource5.getColor());
      assertEquals(0.0F, lightSource5.getZ(), 0.01F);
      assertNull(lightSource5.getDiameter());
      assertEquals((-1999.1F), lightSource5.getX(), 0.01F);
      assertEquals((-1999.1F), lightSource5.getY(), 0.01F);
      
      lightSourceArray0[5] = lightSource5;
      LightSource lightSource6 = new LightSource(0L, 0.0F, 0.0F, 46);
      assertFalse(lightSource6.equals((Object)lightSource0));
      assertFalse(lightSource6.equals((Object)lightSource4));
      assertFalse(lightSource6.equals((Object)lightSource3));
      assertFalse(lightSource6.equals((Object)lightSource1));
      assertFalse(lightSource6.equals((Object)lightSource2));
      assertFalse(lightSource6.equals((Object)lightSource5));
      assertNotNull(lightSource6);
      assertEquals(46, lightSource6.getColor());
      assertEquals(0.0F, lightSource6.getZ(), 0.01F);
      assertEquals(0.0F, lightSource6.getX(), 0.01F);
      assertEquals(0.0F, lightSource6.getY(), 0.01F);
      assertNull(lightSource6.getDiameter());
      
      lightSourceArray0[6] = lightSource6;
      LightSource lightSource7 = new LightSource(0.0F, 0.0F, 3094.0688F, (-2872));
      assertFalse(lightSource7.equals((Object)lightSource6));
      assertFalse(lightSource7.equals((Object)lightSource1));
      assertFalse(lightSource7.equals((Object)lightSource0));
      assertFalse(lightSource7.equals((Object)lightSource3));
      assertFalse(lightSource7.equals((Object)lightSource4));
      assertFalse(lightSource7.equals((Object)lightSource5));
      assertFalse(lightSource7.equals((Object)lightSource2));
      assertNotNull(lightSource7);
      assertEquals(0.0F, lightSource7.getY(), 0.01F);
      assertEquals(3094.0688F, lightSource7.getZ(), 0.01F);
      assertEquals((-2872), lightSource7.getColor());
      assertNull(lightSource7.getDiameter());
      assertEquals(0.0F, lightSource7.getX(), 0.01F);
      
      lightSourceArray0[7] = lightSource7;
      LightSource lightSource8 = new LightSource((-1589.899F), 1.0F, 0.0F, (-1775));
      assertFalse(lightSource8.equals((Object)lightSource2));
      assertFalse(lightSource8.equals((Object)lightSource7));
      assertFalse(lightSource8.equals((Object)lightSource1));
      assertFalse(lightSource8.equals((Object)lightSource3));
      assertFalse(lightSource8.equals((Object)lightSource6));
      assertFalse(lightSource8.equals((Object)lightSource0));
      assertFalse(lightSource8.equals((Object)lightSource4));
      assertFalse(lightSource8.equals((Object)lightSource5));
      assertNotNull(lightSource8);
      assertNull(lightSource8.getDiameter());
      assertEquals((-1589.899F), lightSource8.getX(), 0.01F);
      assertEquals(1.0F, lightSource8.getY(), 0.01F);
      assertEquals((-1775), lightSource8.getColor());
      assertEquals(0.0F, lightSource8.getZ(), 0.01F);
      
      lightSourceArray0[8] = lightSource8;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0.3926991F, 0L, 0.3926991F, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, false, bigDecimal0, bigDecimal0, "");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.3926991F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertFalse(homeLight1.isTexturable());
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isDoorOrWindow());
      assertNull(homeLight1.getName());
      assertFalse(homeLight1.isNameVisible());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals("", homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.19634955F, homeLight1.getX(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertEquals(0.3926991F, homeLight1.getWidth(), 0.01F);
      assertEquals("", homeLight1.getCurrency());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      homeLight1.setY(0.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.3926991F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertFalse(homeLight1.isTexturable());
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isDoorOrWindow());
      assertNull(homeLight1.getName());
      assertFalse(homeLight1.isNameVisible());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals("", homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.19634955F, homeLight1.getX(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertEquals(0.3926991F, homeLight1.getWidth(), 0.01F);
      assertEquals("", homeLight1.getCurrency());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[2] = "";
      stringArray0[5] = null;
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[10];
      lightSourceArray0[3] = lightSourceArray0[1];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      
      boolean boolean0 = homeLight0.isBottomRightPointAt(0L, 59, (-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertFalse(boolean0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      
      boolean boolean1 = homeLight0.isNameCenterPointAt(0L, (-177.8038F), 3.4028235E38F);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      
      boolean boolean2 = homeLight0.isModelMirrored();
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      
      homeLight0.setName((String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      
      boolean boolean3 = homeLight0.isNameVisible();
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      
      boolean boolean4 = homeLight0.isResizable();
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean0);
      assertFalse(boolean4 == boolean1);
      assertFalse(boolean4);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      
      boolean boolean5 = homeLight0.isVisible();
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertFalse(boolean5 == boolean3);
      assertFalse(boolean5 == boolean0);
      assertTrue(boolean5 == boolean1);
      assertFalse(boolean5 == boolean2);
      assertFalse(boolean5 == boolean4);
      assertTrue(boolean5);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      
      float[][] floatArray0 = homeLight0.getPoints();
      assertEquals(9, stringArray0.length);
      assertEquals(4, floatArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotNull(floatArray0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isResizable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[3] = "";
      Long long0 = new Long((-55L));
      assertEquals((-55L), (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) (-55L));
      assertEquals((-55.0F), (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite((-55L));
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-55L), (-55L), (-55L), (-55L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-55.0F), homeLight1.getGroundElevation(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertEquals((-27.5F), homeLight1.getY(), 0.01F);
      assertEquals((-27.5F), homeLight1.getX(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertEquals((-55.0F), homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertEquals((-55.0F), homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertEquals((-55.0F), homeLight1.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertNull(homeLight1.getDescription());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals((-55.0F), homeLight1.getDepth(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      
      Level level0 = new Level("axez?(:nM", (-55L), (-55L), (-55L));
      assertNotNull(level0);
      assertTrue(level0.isVisible());
      assertEquals((-55.0F), level0.getHeight(), 0.01F);
      assertEquals((-55.0F), level0.getElevation(), 0.01F);
      assertEquals("axez?(:nM", level0.getName());
      assertEquals((-55.0F), level0.getFloorThickness(), 0.01F);
      
      boolean boolean1 = homeLight1.containsPoint(0.3926991F, (-55L), (-55L));
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-55.0F), homeLight1.getGroundElevation(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertEquals((-27.5F), homeLight1.getY(), 0.01F);
      assertEquals((-27.5F), homeLight1.getX(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertEquals((-55.0F), homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertEquals((-55.0F), homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertEquals((-55.0F), homeLight1.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertNull(homeLight1.getDescription());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals((-55.0F), homeLight1.getDepth(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      
      boolean boolean2 = homeLight0.isTopLeftPointAt(3.4028235E38F, (-55L), 3.4028235E38F);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      
      homeLight1.setDescription("");
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-55.0F), homeLight1.getGroundElevation(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertEquals((-27.5F), homeLight1.getY(), 0.01F);
      assertEquals((-27.5F), homeLight1.getX(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertEquals((-55.0F), homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertEquals((-55.0F), homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertEquals((-55.0F), homeLight1.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals("", homeLight1.getDescription());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals((-55.0F), homeLight1.getDepth(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      
      BigDecimal bigDecimal1 = homeLight1.getValueAddedTax();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(bigDecimal1, bigDecimal0);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(bigDecimal1);
      assertEquals((byte)1, bigDecimal1.byteValue());
      assertEquals((short)1, bigDecimal1.shortValue());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-55.0F), homeLight1.getGroundElevation(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertEquals((-27.5F), homeLight1.getY(), 0.01F);
      assertEquals((-27.5F), homeLight1.getX(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertEquals((-55.0F), homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertEquals((-55.0F), homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertEquals((-55.0F), homeLight1.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals("", homeLight1.getDescription());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals((-55.0F), homeLight1.getDepth(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      
      homeLight0.setModelMirrored(true);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long((-11L));
      assertEquals((-11L), (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) (-11L));
      assertEquals((-11.0F), (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite((-11L));
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-11L), (-11L), (-11L), (-11L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      
      BigDecimal bigDecimal1 = bigDecimal0.stripTrailingZeros();
      assertSame(bigDecimal0, bigDecimal1);
      assertSame(bigDecimal1, bigDecimal0);
      assertNotNull(bigDecimal1);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((byte)1, bigDecimal1.byteValue());
      assertEquals((short)1, bigDecimal1.shortValue());
      
      LightSource[] lightSourceArray1 = homeLight0.getLightSources();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      
      HomeLight homeLight1 = new HomeLight(homeLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isVisible());
      assertEquals((-11.0F), homeLight1.getHeight(), 0.01F);
      assertEquals((-11.0F), homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getColor());
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getCurrency());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals((-5.5F), homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals((-11.0F), homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals((-11.0F), homeLight1.getGroundElevation(), 0.01F);
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals((-5.5F), homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getDescription());
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals((-11.0F), homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      boolean boolean2 = homeLight0.isPointAt(1.0F, 1.0F, (-11L));
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(boolean2);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      
      boolean boolean3 = homeLight1.isBottomLeftPointAt(1.0F, 1.0F, 1.0F);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(boolean3);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isVisible());
      assertEquals((-11.0F), homeLight1.getHeight(), 0.01F);
      assertEquals((-11.0F), homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getColor());
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getCurrency());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals((-5.5F), homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals((-11.0F), homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals((-11.0F), homeLight1.getGroundElevation(), 0.01F);
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals((-5.5F), homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getDescription());
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals((-11.0F), homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      
      homeLight0.setNameVisible(false);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      
      int int0 = Float.compare(701.9F, 701.9F);
      assertEquals(0, int0);
      
      CatalogLight catalogLight0 = new CatalogLight("", "", "rC\"i", "", stringArray0, long0, (Float) 701.9F, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0, 701.9F, 0.0F, 0.0F, false, lightSourceArray0, "rC\"i", (float[][]) null, "GKir", true, true, false, bigDecimal0, bigDecimal0, "`y/Q4~t[7qRj");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals("", catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isTexturable());
      assertEquals("`y/Q4~t[7qRj", catalogLight0.getCurrency());
      assertEquals(701.9F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals("GKir", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("rC\"i", catalogLight0.getStaircaseCutOutShape());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isMovable());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(701.9F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("rC\"i", catalogLight0.getDescription());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals("", catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isTexturable());
      assertEquals("`y/Q4~t[7qRj", catalogLight0.getCurrency());
      assertEquals(701.9F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals("GKir", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("rC\"i", catalogLight0.getStaircaseCutOutShape());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isMovable());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(701.9F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("rC\"i", catalogLight0.getDescription());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("rC\"i", homeLight0.getDescription());
      assertEquals("", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("`y/Q4~t[7qRj", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("rC\"i", homeLight0.getStaircaseCutOutShape());
      assertFalse(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(701.9F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getColor());
      assertEquals("", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertEquals(350.95F, homeLight0.getY(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      
      Level level0 = new Level("axez?(:nM", 0.0F, 701.9F, 0.3926991F);
      assertNotNull(level0);
      assertTrue(level0.isVisible());
      assertEquals("axez?(:nM", level0.getName());
      assertEquals(0.0F, level0.getElevation(), 0.01F);
      assertEquals(0.3926991F, level0.getHeight(), 0.01F);
      assertEquals(701.9F, level0.getFloorThickness(), 0.01F);
      
      boolean boolean1 = homeLight0.isTopLeftPointAt(0L, 701.9F, 0.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals("", catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isTexturable());
      assertEquals("`y/Q4~t[7qRj", catalogLight0.getCurrency());
      assertEquals(701.9F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals("GKir", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("rC\"i", catalogLight0.getStaircaseCutOutShape());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isMovable());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(701.9F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("rC\"i", catalogLight0.getDescription());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("rC\"i", homeLight0.getDescription());
      assertEquals("", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("`y/Q4~t[7qRj", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("rC\"i", homeLight0.getStaircaseCutOutShape());
      assertFalse(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(701.9F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getColor());
      assertEquals("", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertEquals(350.95F, homeLight0.getY(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      
      BigDecimal bigDecimal1 = homeLight0.getValueAddedTax();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertSame(bigDecimal1, bigDecimal0);
      assertNotNull(bigDecimal1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals("", catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isTexturable());
      assertEquals("`y/Q4~t[7qRj", catalogLight0.getCurrency());
      assertEquals(701.9F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals("GKir", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("rC\"i", catalogLight0.getStaircaseCutOutShape());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isMovable());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(701.9F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("rC\"i", catalogLight0.getDescription());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("rC\"i", homeLight0.getDescription());
      assertEquals("", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("`y/Q4~t[7qRj", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("rC\"i", homeLight0.getStaircaseCutOutShape());
      assertFalse(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(701.9F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getColor());
      assertEquals("", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertEquals(350.95F, homeLight0.getY(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((byte)1, bigDecimal1.byteValue());
      assertEquals((short)1, bigDecimal1.shortValue());
      
      String string0 = homeLight0.getDescription();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertEquals("rC\"i", string0);
      assertNotNull(string0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals("", catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isTexturable());
      assertEquals("`y/Q4~t[7qRj", catalogLight0.getCurrency());
      assertEquals(701.9F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals("GKir", catalogLight0.getCreator());
      assertEquals("", catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals("rC\"i", catalogLight0.getStaircaseCutOutShape());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isMovable());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(701.9F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals("rC\"i", catalogLight0.getDescription());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals("rC\"i", homeLight0.getDescription());
      assertEquals("", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("`y/Q4~t[7qRj", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("rC\"i", homeLight0.getStaircaseCutOutShape());
      assertFalse(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(701.9F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getColor());
      assertEquals("", homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertEquals(350.95F, homeLight0.getY(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      stringArray0[3] = "";
      Long long0 = new Long((-55L));
      assertEquals((-55L), (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) (-55L));
      assertEquals((-55.0F), (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite((-55L));
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      String string0 = resourceURLContent0.getJAREntryName();
      assertEquals("com/eteks/sweethome3d/model/", string0);
      assertNotNull(string0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-55L), (-55L), (-55L), (-55L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      
      LightSource[] lightSourceArray1 = homeLight0.getLightSources();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertNull(homeLight1.getName());
      assertEquals((-55.0F), homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertTrue(homeLight1.isDeformable());
      assertEquals((-55.0F), homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals((-55.0F), homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isNameVisible());
      assertEquals((-55.0F), homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals((-27.5F), homeLight1.getY(), 0.01F);
      assertEquals((-27.5F), homeLight1.getX(), 0.01F);
      assertEquals((-55.0F), homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      
      Level level0 = new Level("axez?(:nM", (-55L), (-55L), (-55L));
      assertNotNull(level0);
      assertEquals((-55.0F), level0.getHeight(), 0.01F);
      assertEquals((-55.0F), level0.getElevation(), 0.01F);
      assertEquals("axez?(:nM", level0.getName());
      assertEquals((-55.0F), level0.getFloorThickness(), 0.01F);
      assertTrue(level0.isVisible());
      
      boolean boolean1 = homeLight0.isTopLeftPointAt(177.8038F, (-55L), 3.4028235E38F);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(boolean1 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      
      homeLight1.setDescription("");
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertNull(homeLight1.getName());
      assertEquals((-55.0F), homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertTrue(homeLight1.isDeformable());
      assertEquals((-55.0F), homeLight1.getHeight(), 0.01F);
      assertEquals("", homeLight1.getDescription());
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals((-55.0F), homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isNameVisible());
      assertEquals((-55.0F), homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals((-27.5F), homeLight1.getY(), 0.01F);
      assertEquals((-27.5F), homeLight1.getX(), 0.01F);
      assertEquals((-55.0F), homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      
      BigDecimal bigDecimal1 = homeLight1.getValueAddedTax();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(bigDecimal1, bigDecimal0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(bigDecimal1);
      assertEquals((byte)1, bigDecimal1.byteValue());
      assertEquals((short)1, bigDecimal1.shortValue());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertNull(homeLight1.getName());
      assertEquals((-55.0F), homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertTrue(homeLight1.isDeformable());
      assertEquals((-55.0F), homeLight1.getHeight(), 0.01F);
      assertEquals("", homeLight1.getDescription());
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals((-55.0F), homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isNameVisible());
      assertEquals((-55.0F), homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals((-27.5F), homeLight1.getY(), 0.01F);
      assertEquals((-27.5F), homeLight1.getX(), 0.01F);
      assertEquals((-55.0F), homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      
      float float1 = homeLight1.getAngle();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertEquals(0.0F, float1, 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertNull(homeLight1.getName());
      assertEquals((-55.0F), homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertTrue(homeLight1.isDeformable());
      assertEquals((-55.0F), homeLight1.getHeight(), 0.01F);
      assertEquals("", homeLight1.getDescription());
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals((-55.0F), homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isNameVisible());
      assertEquals((-55.0F), homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals((-27.5F), homeLight1.getY(), 0.01F);
      assertEquals((-27.5F), homeLight1.getX(), 0.01F);
      assertEquals((-55.0F), homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getCatalogId());
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[5] = null;
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[10];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      assertEquals(0.0F, lightSource0.getZ(), 0.01F);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSourceArray0[1];
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource1 = new LightSource(0L, 0.0F, (-19.779608F), 46);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(46, lightSource1.getColor());
      assertEquals((-19.779608F), lightSource1.getZ(), 0.01F);
      assertEquals(0.0F, lightSource1.getY(), 0.01F);
      assertEquals(0.0F, lightSource1.getX(), 0.01F);
      assertNull(lightSource1.getDiameter());
      
      lightSourceArray0[6] = lightSource1;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray1.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean0 = homeLight0.isBottomRightPointAt(1.0F, 46, (-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      homeLight0.setElevation(9.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(9.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(9.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      homeLight0.setMovable(false);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(9.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(9.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isMovable());
      assertFalse(homeLight0.isResizable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      BigDecimal bigDecimal1 = homeLight0.getValueAddedTax();
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertSame(bigDecimal1, bigDecimal0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(bigDecimal1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(9.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(9.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isMovable());
      assertFalse(homeLight0.isResizable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((short)0, bigDecimal1.shortValue());
      assertEquals((byte)0, bigDecimal1.byteValue());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[5] = null;
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(2.0F, 2.0F, 791, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(2.0F, lightSource0.getY(), 0.01F);
      assertEquals(2.0F, lightSource0.getX(), 0.01F);
      assertEquals(791.0F, lightSource0.getZ(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      
      lightSourceArray0[1] = lightSource0;
      LightSource lightSource1 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(791, lightSource1.getColor());
      assertEquals(1.0F, lightSource1.getX(), 0.01F);
      assertEquals(791.0F, lightSource1.getY(), 0.01F);
      assertEquals(0.0F, lightSource1.getZ(), 0.01F);
      assertEquals(0.0F, lightSource1.getDiameter(), 0.01F);
      
      lightSourceArray0[2] = lightSource1;
      LightSource lightSource2 = new LightSource(791, 0L, 791, 46);
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertNotNull(lightSource2);
      assertEquals(46, lightSource2.getColor());
      assertEquals(791.0F, lightSource2.getZ(), 0.01F);
      assertEquals(0.0F, lightSource2.getY(), 0.01F);
      assertEquals(791.0F, lightSource2.getX(), 0.01F);
      assertNull(lightSource2.getDiameter());
      
      lightSourceArray0[4] = lightSource2;
      lightSourceArray0[5] = lightSource1;
      LightSource lightSource3 = new LightSource(0L, 0.0F, (-487.1F), 46);
      assertFalse(lightSource3.equals((Object)lightSource0));
      assertFalse(lightSource3.equals((Object)lightSource2));
      assertFalse(lightSource3.equals((Object)lightSource1));
      assertNotNull(lightSource3);
      assertEquals((-487.1F), lightSource3.getZ(), 0.01F);
      assertNull(lightSource3.getDiameter());
      assertEquals(46, lightSource3.getColor());
      assertEquals(0.0F, lightSource3.getX(), 0.01F);
      assertEquals(0.0F, lightSource3.getY(), 0.01F);
      
      lightSourceArray0[6] = lightSource3;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean0 = homeLight0.isBottomRightPointAt(1.0F, 46, (-487.1F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      homeLight0.setElevation(9.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(homeLight0.getColor());
      assertEquals(9.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(9.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      String string0 = homeLight0.getStaircaseCutOutShape();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNull(string0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(homeLight0.getColor());
      assertEquals(9.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(9.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[2] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      lightSourceArray0[6] = lightSourceArray0[4];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      
      homeLight0.setDescription("1a\"E-ts1_");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("1a\"E-ts1_", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      
      float float1 = homeLight0.getNameXOffset();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(0.0F, float1, 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("1a\"E-ts1_", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      
      homeLight0.setNameYOffset((-1.0F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((float)float0, (float)float1, 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals((-1.0F), homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("1a\"E-ts1_", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      
      Level level0 = new Level("1a\"E-ts1_", 0L, (-1.0F), (-384.573F));
      assertNotNull(level0);
      assertEquals("1a\"E-ts1_", level0.getName());
      assertEquals((-1.0F), level0.getFloorThickness(), 0.01F);
      assertEquals(0.0F, level0.getElevation(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals((-384.573F), level0.getHeight(), 0.01F);
      
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      assertNotNull(propertyChangeListenerProxy0);
      assertEquals("", propertyChangeListenerProxy0.getPropertyName());
      
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      assertFalse(propertyChangeListenerProxy1.equals((Object)propertyChangeListenerProxy0));
      assertNotNull(propertyChangeListenerProxy1);
      assertEquals("", propertyChangeListenerProxy0.getPropertyName());
      assertNull(propertyChangeListenerProxy1.getPropertyName());
      
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      assertFalse(propertyChangeListenerProxy0.equals((Object)propertyChangeListenerProxy1));
      assertFalse(propertyChangeListenerProxy2.equals((Object)propertyChangeListenerProxy0));
      assertFalse(propertyChangeListenerProxy2.equals((Object)propertyChangeListenerProxy1));
      assertNotNull(propertyChangeListenerProxy2);
      assertEquals("", propertyChangeListenerProxy0.getPropertyName());
      assertEquals("", propertyChangeListenerProxy2.getPropertyName());
      
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.tools.OperatingSystem$1", propertyChangeListenerProxy2);
      assertFalse(propertyChangeListenerProxy0.equals((Object)propertyChangeListenerProxy1));
      assertFalse(propertyChangeListenerProxy0.equals((Object)propertyChangeListenerProxy2));
      assertFalse(propertyChangeListenerProxy2.equals((Object)propertyChangeListenerProxy0));
      assertFalse(propertyChangeListenerProxy2.equals((Object)propertyChangeListenerProxy1));
      assertFalse(propertyChangeListenerProxy3.equals((Object)propertyChangeListenerProxy1));
      assertFalse(propertyChangeListenerProxy3.equals((Object)propertyChangeListenerProxy0));
      assertFalse(propertyChangeListenerProxy3.equals((Object)propertyChangeListenerProxy2));
      assertNotNull(propertyChangeListenerProxy3);
      assertEquals("", propertyChangeListenerProxy0.getPropertyName());
      assertEquals("", propertyChangeListenerProxy2.getPropertyName());
      assertEquals("com.eteks.sweethome3d.tools.OperatingSystem$1", propertyChangeListenerProxy3.getPropertyName());
      
      level0.addPropertyChangeListener(propertyChangeListenerProxy1);
      assertNotSame(propertyChangeListenerProxy0, propertyChangeListenerProxy1);
      assertNotSame(propertyChangeListenerProxy0, propertyChangeListenerProxy3);
      assertNotSame(propertyChangeListenerProxy0, propertyChangeListenerProxy2);
      assertNotSame(propertyChangeListenerProxy1, propertyChangeListenerProxy0);
      assertNotSame(propertyChangeListenerProxy1, propertyChangeListenerProxy3);
      assertNotSame(propertyChangeListenerProxy1, propertyChangeListenerProxy2);
      assertFalse(propertyChangeListenerProxy0.equals((Object)propertyChangeListenerProxy1));
      assertFalse(propertyChangeListenerProxy0.equals((Object)propertyChangeListenerProxy3));
      assertFalse(propertyChangeListenerProxy0.equals((Object)propertyChangeListenerProxy2));
      assertFalse(propertyChangeListenerProxy1.equals((Object)propertyChangeListenerProxy0));
      assertFalse(propertyChangeListenerProxy1.equals((Object)propertyChangeListenerProxy3));
      assertFalse(propertyChangeListenerProxy1.equals((Object)propertyChangeListenerProxy2));
      assertEquals("1a\"E-ts1_", level0.getName());
      assertEquals((-1.0F), level0.getFloorThickness(), 0.01F);
      assertEquals(0.0F, level0.getElevation(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals((-384.573F), level0.getHeight(), 0.01F);
      assertEquals("", propertyChangeListenerProxy0.getPropertyName());
      assertNull(propertyChangeListenerProxy1.getPropertyName());
      
      homeLight0.setLevel(level0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((float)float0, (float)float1, 0.01F);
      assertEquals("1a\"E-ts1_", level0.getName());
      assertEquals((-1.0F), level0.getFloorThickness(), 0.01F);
      assertEquals(0.0F, level0.getElevation(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals((-384.573F), level0.getHeight(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals((-1.0F), homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("1a\"E-ts1_", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      
      boolean boolean1 = homeLight0.isTopLeftPointAt(2.0F, (-2725.77F), 3.4028235E38F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((float)float0, (float)float1, 0.01F);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals((-1.0F), homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("1a\"E-ts1_", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      
      boolean boolean2 = homeLight0.isNameCenterPointAt((-1.0F), 3.4028235E38F, 1921.258F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((float)float0, (float)float1, 0.01F);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals((-1.0F), homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("1a\"E-ts1_", homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      String[] stringArray0 = new String[8];
      Long long0 = new Long(1L);
      assertEquals(1L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 1L);
      assertEquals(1.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 1L, 1L, 1L, 1L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getDescription());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      
      LightSource[] lightSourceArray1 = homeLight0.getLightSources();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      
      String string0 = resourceURLContent0.getJAREntryName();
      assertEquals("com/eteks/sweethome3d/model/", string0);
      assertNotNull(string0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      homeLight0.setDepth(1.0F);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      
      homeLight0.setAngle(1.0F);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      
      homeLight0.setDepth((-2309.2F));
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-2309.2F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      
      homeLight0.setShininess((Float) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-2309.2F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      
      boolean boolean0 = homeLight0.isVisible();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(boolean0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-2309.2F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      
      float float1 = homeLight0.getGroundElevation();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals(1.0F, float1, 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-2309.2F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      
      float float2 = homeLight0.getElevation();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertEquals(float2, float1, 0.01F);
      assertEquals((float)float0, (float)float1, 0.01F);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals(1.0F, float2, 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isProportional());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-2309.2F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(1.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      String[] stringArray0 = new String[8];
      Long long0 = new Long((-11L));
      assertEquals((-11L), (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) (-11L));
      assertEquals((-11.0F), (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-11L), (-11L), (-11L), (-11L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      
      homeLight0.setDepth((-4329.6655F));
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-4329.6655F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      
      homeLight0.setAngle((-11L));
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(1.5663706F, homeLight0.getAngle(), 0.01F);
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-4329.6655F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      
      homeLight0.setDepth((-4329.6655F));
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(1.5663706F, homeLight0.getAngle(), 0.01F);
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-4329.6655F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      
      homeLight0.setVisible(false);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(1.5663706F, homeLight0.getAngle(), 0.01F);
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-4329.6655F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isVisible());
      
      Float float1 = Float.valueOf((-1250.7452F));
      assertNotEquals((float)float1, (float)float0, 0.01F);
      assertEquals((-1250.7452F), (float)float1, 0.01F);
      assertNotNull(float1);
      
      Float float2 = Float.valueOf((-1250.7452F));
      assertNotEquals((float)float2, (float)float0, 0.01F);
      assertEquals((float)float2, (float)float1, 0.01F);
      assertEquals((-1250.7452F), (float)float2, 0.01F);
      assertNotNull(float2);
      
      homeLight0.setShininess(float2);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotEquals((float)float0, (float)float2, 0.01F);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertNotEquals((float)float2, (float)float0, 0.01F);
      assertEquals((float)float2, (float)float1, 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(1.5663706F, homeLight0.getAngle(), 0.01F);
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-4329.6655F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-1250.7452F), homeLight0.getShininess(), 0.01F);
      assertFalse(homeLight0.isVisible());
      
      boolean boolean0 = homeLight0.isVisible();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotEquals((float)float0, (float)float2, 0.01F);
      assertNotEquals((float)float0, (float)float1, 0.01F);
      assertFalse(boolean0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(1.5663706F, homeLight0.getAngle(), 0.01F);
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-4329.6655F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-1250.7452F), homeLight0.getShininess(), 0.01F);
      assertFalse(homeLight0.isVisible());
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      stringArray0[3] = "";
      Long long0 = new Long((-11L));
      assertEquals((-11L), (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) (-11L));
      assertEquals((-11.0F), (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-11L), (-11L), (-11L), (-11L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(homeLight0.getDescription());
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      
      LightSource[] lightSourceArray1 = homeLight0.getLightSources();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(homeLight0.getDescription());
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      
      HomeLight homeLight1 = new HomeLight(homeLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(homeLight0.getDescription());
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight1.isNameVisible());
      assertEquals((-11.0F), homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals((-11.0F), homeLight1.getElevation(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals((-11.0F), homeLight1.getWidth(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals((-11.0F), homeLight1.getGroundElevation(), 0.01F);
      assertNull(homeLight1.getName());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertEquals((-5.5F), homeLight1.getX(), 0.01F);
      assertEquals((-5.5F), homeLight1.getY(), 0.01F);
      assertEquals((-11.0F), homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isDeformable());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      homeLight0.setMovable(true);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(homeLight0.getDescription());
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      
      boolean boolean1 = homeLight0.isPointAt((-11L), (-11L), (-11L));
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(homeLight0.getDescription());
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      
      boolean boolean2 = homeLight1.isBottomLeftPointAt((-11L), (-11L), (-11L));
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(boolean2);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(homeLight0.getDescription());
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight1.isNameVisible());
      assertEquals((-11.0F), homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals((-11.0F), homeLight1.getElevation(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals((-11.0F), homeLight1.getWidth(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals((-11.0F), homeLight1.getGroundElevation(), 0.01F);
      assertNull(homeLight1.getName());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertEquals((-5.5F), homeLight1.getX(), 0.01F);
      assertEquals((-5.5F), homeLight1.getY(), 0.01F);
      assertEquals((-11.0F), homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isDeformable());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      
      homeLight0.setName("");
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals("", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      
      homeLight0.setVisible(false);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals("", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[5] = null;
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[10];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      assertEquals(0.0F, lightSource0.getZ(), 0.01F);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSourceArray0[1];
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource1 = new LightSource(0L, 0.0F, (-19.779608F), 46);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertNull(lightSource1.getDiameter());
      assertEquals(0.0F, lightSource1.getY(), 0.01F);
      assertEquals((-19.779608F), lightSource1.getZ(), 0.01F);
      assertEquals(46, lightSource1.getColor());
      assertEquals(0.0F, lightSource1.getX(), 0.01F);
      
      lightSourceArray0[6] = lightSource1;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray1.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      boolean boolean0 = homeLight0.isBottomRightPointAt(1.0F, 46, (-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      homeLight0.setMovable(false);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      String string0 = homeLight0.getCatalogId();
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNull(string0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isResizable());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      // Undeclared exception!
      try { 
        homeLight0.setWidth(3.4028235E38F);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      String string0 = resourceURLContent0.getJAREntryName();
      assertEquals("com/eteks/sweethome3d/model/", string0);
      assertNotNull(string0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      lightSourceArray0[3] = lightSourceArray0[2];
      lightSourceArray0[4] = lightSourceArray0[2];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      
      String string1 = "M2tH$P&m&x.[yz!#";
      homeLight0.setDescription("");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      
      float float1 = homeLight0.getNameXOffset();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(0.0F, float1, 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      
      homeLight0.setNameYOffset(4.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((float)float0, (float)float1, 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(4.0F, homeLight0.getNameYOffset(), 0.01F);
      
      String string2 = "i\"x";
      float float2 = 0.0F;
      float float3 = (-124.087F);
      FurnitureCategory furnitureCategory0 = new FurnitureCategory("(/\"|KCfE_q{_");
      assertNotNull(furnitureCategory0);
      assertEquals(0, furnitureCategory0.getFurnitureCount());
      assertEquals("(/\"|KCfE_q{_", furnitureCategory0.getName());
      
      Sash[] sashArray0 = new Sash[7];
      Sash sash0 = mock(Sash.class, new ViolatedAssumptionAnswer());
      sashArray0[0] = sash0;
      sashArray0[1] = sash0;
      sashArray0[2] = sash0;
      sashArray0[3] = sash0;
      sashArray0[4] = sash0;
      sashArray0[5] = sash0;
      sashArray0[6] = sash0;
      BigDecimal bigDecimal1 = new BigDecimal(41.0798F);
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      assertEquals((byte)41, bigDecimal1.byteValue());
      assertEquals((short)41, bigDecimal1.shortValue());
      
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("", "pJ'.]s7TNn))z", "Application Data", (Content) null, (Content) null, (Content) null, 1207.3622F, 1207.3622F, 1207.3622F, 1207.3622F, false, 1207.3622F, 41.0798F, sashArray0, (float[][]) null, "VALUE_ADDED_TAX_PERCENTAGE", false, true, false, bigDecimal1, bigDecimal1, (String) null);
      assertEquals(7, sashArray0.length);
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(catalogDoorOrWindow0);
      assertEquals((byte)41, bigDecimal1.byteValue());
      assertEquals((short)41, bigDecimal1.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("pJ'.]s7TNn))z", catalogDoorOrWindow0.getName());
      assertEquals(1207.3622F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(41.0798F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(1207.3622F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("Application Data", catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(1207.3622F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(1207.3622F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(1207.3622F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("VALUE_ADDED_TAX_PERCENTAGE", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      assertEquals(7, sashArray0.length);
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(homeDoorOrWindow0);
      assertEquals((byte)41, bigDecimal1.byteValue());
      assertEquals((short)41, bigDecimal1.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("pJ'.]s7TNn))z", catalogDoorOrWindow0.getName());
      assertEquals(1207.3622F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(41.0798F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(1207.3622F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("Application Data", catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(1207.3622F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(1207.3622F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(1207.3622F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("VALUE_ADDED_TAX_PERCENTAGE", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(41.0798F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("Application Data", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(1207.3622F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1207.3622F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(603.6811F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("pJ'.]s7TNn))z", homeDoorOrWindow0.getName());
      assertEquals(603.6811F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(1207.3622F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(1207.3622F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(1207.3622F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isTexturable());
      assertEquals(1207.3622F, homeDoorOrWindow0.getDepth(), 0.01F);
      
      HomeDoorOrWindow homeDoorOrWindow1 = (HomeDoorOrWindow)homeDoorOrWindow0.clone();
      assertEquals(7, sashArray0.length);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertNotNull(homeDoorOrWindow1);
      assertEquals((byte)41, bigDecimal1.byteValue());
      assertEquals((short)41, bigDecimal1.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("pJ'.]s7TNn))z", catalogDoorOrWindow0.getName());
      assertEquals(1207.3622F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(41.0798F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(1207.3622F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("Application Data", catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(1207.3622F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(1207.3622F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(1207.3622F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("VALUE_ADDED_TAX_PERCENTAGE", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(41.0798F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("Application Data", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(1207.3622F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1207.3622F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(603.6811F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("pJ'.]s7TNn))z", homeDoorOrWindow0.getName());
      assertEquals(603.6811F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(1207.3622F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(1207.3622F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(1207.3622F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isTexturable());
      assertEquals(1207.3622F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow1.isTexturable());
      assertEquals(1207.3622F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertEquals("pJ'.]s7TNn))z", homeDoorOrWindow1.getName());
      assertEquals(1207.3622F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals(603.6811F, homeDoorOrWindow1.getX(), 0.01F);
      assertEquals(603.6811F, homeDoorOrWindow1.getY(), 0.01F);
      assertEquals("Application Data", homeDoorOrWindow1.getDescription());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertEquals(1207.3622F, homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertEquals("", homeDoorOrWindow1.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals(1207.3622F, homeDoorOrWindow1.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow1.isVisible());
      assertEquals(1207.3622F, homeDoorOrWindow1.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow1.getCurrency());
      assertFalse(homeDoorOrWindow1.isResizable());
      assertFalse(homeDoorOrWindow1.isMovable());
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertNull(homeDoorOrWindow1.getShininess());
      assertEquals(1207.3622F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals(41.0798F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      
      Content content0 = homeDoorOrWindow1.getPlanIcon();
      assertEquals(7, sashArray0.length);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertNotSame(homeDoorOrWindow0, homeDoorOrWindow1);
      assertNotSame(homeDoorOrWindow1, homeDoorOrWindow0);
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertFalse(homeDoorOrWindow0.equals((Object)homeDoorOrWindow1));
      assertFalse(homeDoorOrWindow1.equals((Object)homeDoorOrWindow0));
      assertNull(content0);
      assertEquals((byte)41, bigDecimal1.byteValue());
      assertEquals((short)41, bigDecimal1.shortValue());
      assertFalse(catalogDoorOrWindow0.isBackFaceShown());
      assertEquals("pJ'.]s7TNn))z", catalogDoorOrWindow0.getName());
      assertEquals(1207.3622F, catalogDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isModifiable());
      assertTrue(catalogDoorOrWindow0.isProportional());
      assertEquals(41.0798F, catalogDoorOrWindow0.getWallDistance(), 0.01F);
      assertEquals(1207.3622F, catalogDoorOrWindow0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow0.getIconYaw(), 0.01F);
      assertEquals("Application Data", catalogDoorOrWindow0.getDescription());
      assertFalse(catalogDoorOrWindow0.isTexturable());
      assertEquals("", catalogDoorOrWindow0.getId());
      assertEquals(1207.3622F, catalogDoorOrWindow0.getHeight(), 0.01F);
      assertTrue(catalogDoorOrWindow0.isDeformable());
      assertEquals(1207.3622F, catalogDoorOrWindow0.getWallThickness(), 0.01F);
      assertFalse(catalogDoorOrWindow0.isResizable());
      assertNull(catalogDoorOrWindow0.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow0.getGrade());
      assertNull(catalogDoorOrWindow0.getCreationDate());
      assertEquals(1207.3622F, catalogDoorOrWindow0.getWidth(), 0.01F);
      assertEquals("VALUE_ADDED_TAX_PERCENTAGE", catalogDoorOrWindow0.getCreator());
      assertTrue(catalogDoorOrWindow0.isDoorOrWindow());
      assertNull(catalogDoorOrWindow0.getColor());
      assertNull(catalogDoorOrWindow0.getCurrency());
      assertNull(catalogDoorOrWindow0.getInformation());
      assertFalse(catalogDoorOrWindow0.isMovable());
      assertEquals(41.0798F, homeDoorOrWindow0.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow0.isDoorOrWindow());
      assertEquals("", homeDoorOrWindow0.getCatalogId());
      assertEquals("Application Data", homeDoorOrWindow0.getDescription());
      assertEquals(0.0F, homeDoorOrWindow0.getNameAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isResizable());
      assertNull(homeDoorOrWindow0.getStaircaseCutOutShape());
      assertEquals(1207.3622F, homeDoorOrWindow0.getWidth(), 0.01F);
      assertEquals(1207.3622F, homeDoorOrWindow0.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow0.getShininess());
      assertEquals(0.0F, homeDoorOrWindow0.getNameYOffset(), 0.01F);
      assertNull(homeDoorOrWindow0.getCurrency());
      assertFalse(homeDoorOrWindow0.isMovable());
      assertEquals(603.6811F, homeDoorOrWindow0.getY(), 0.01F);
      assertFalse(homeDoorOrWindow0.isModelMirrored());
      assertFalse(homeDoorOrWindow0.isBackFaceShown());
      assertEquals("pJ'.]s7TNn))z", homeDoorOrWindow0.getName());
      assertEquals(603.6811F, homeDoorOrWindow0.getX(), 0.01F);
      assertEquals(1207.3622F, homeDoorOrWindow0.getWallThickness(), 0.01F);
      assertEquals(1207.3622F, homeDoorOrWindow0.getGroundElevation(), 0.01F);
      assertNull(homeDoorOrWindow0.getColor());
      assertTrue(homeDoorOrWindow0.isDeformable());
      assertTrue(homeDoorOrWindow0.isVisible());
      assertEquals(1207.3622F, homeDoorOrWindow0.getElevation(), 0.01F);
      assertFalse(homeDoorOrWindow0.isBoundToWall());
      assertEquals(0.0F, homeDoorOrWindow0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow0.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow0.isNameVisible());
      assertFalse(homeDoorOrWindow0.isTexturable());
      assertEquals(1207.3622F, homeDoorOrWindow0.getDepth(), 0.01F);
      assertFalse(homeDoorOrWindow1.isTexturable());
      assertEquals(1207.3622F, homeDoorOrWindow1.getElevation(), 0.01F);
      assertEquals(0.0F, homeDoorOrWindow1.getAngle(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBackFaceShown());
      assertEquals("pJ'.]s7TNn))z", homeDoorOrWindow1.getName());
      assertEquals(1207.3622F, homeDoorOrWindow1.getGroundElevation(), 0.01F);
      assertEquals(603.6811F, homeDoorOrWindow1.getX(), 0.01F);
      assertEquals(603.6811F, homeDoorOrWindow1.getY(), 0.01F);
      assertEquals("Application Data", homeDoorOrWindow1.getDescription());
      assertFalse(homeDoorOrWindow1.isModelMirrored());
      assertEquals(1207.3622F, homeDoorOrWindow1.getWallThickness(), 0.01F);
      assertNull(homeDoorOrWindow1.getColor());
      assertEquals("", homeDoorOrWindow1.getCatalogId());
      assertEquals(0.0F, homeDoorOrWindow1.getNameYOffset(), 0.01F);
      assertFalse(homeDoorOrWindow1.isBoundToWall());
      assertEquals(1207.3622F, homeDoorOrWindow1.getWidth(), 0.01F);
      assertTrue(homeDoorOrWindow1.isVisible());
      assertEquals(1207.3622F, homeDoorOrWindow1.getHeight(), 0.01F);
      assertNull(homeDoorOrWindow1.getCurrency());
      assertFalse(homeDoorOrWindow1.isResizable());
      assertFalse(homeDoorOrWindow1.isMovable());
      assertFalse(homeDoorOrWindow1.isNameVisible());
      assertEquals(0.0F, homeDoorOrWindow1.getNameAngle(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDoorOrWindow());
      assertNull(homeDoorOrWindow1.getShininess());
      assertEquals(1207.3622F, homeDoorOrWindow1.getDepth(), 0.01F);
      assertNull(homeDoorOrWindow1.getStaircaseCutOutShape());
      assertEquals(41.0798F, homeDoorOrWindow1.getWallDistance(), 0.01F);
      assertTrue(homeDoorOrWindow1.isDeformable());
      assertEquals(0.0F, homeDoorOrWindow1.getNameXOffset(), 0.01F);
      
      CatalogDoorOrWindow catalogDoorOrWindow1 = new CatalogDoorOrWindow("8R56\"vE,.X!9)<3JP~9", "", "(/\"|KCfE_q{_", (Content) null, (Content) null, (Content) null, 2.1063766F, 2.0F, 41.0798F, 2.1063766F, true, 0.3926991F, 2.0F, sashArray0, (float[][]) null, "/li&&P14ZxI.", false, false, false, (BigDecimal) null, (BigDecimal) null);
      assertEquals(7, sashArray0.length);
      assertFalse(catalogDoorOrWindow1.equals((Object)catalogDoorOrWindow0));
      assertNotNull(catalogDoorOrWindow1);
      assertEquals(41.0798F, catalogDoorOrWindow1.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow1.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow1.getName());
      assertEquals("8R56\"vE,.X!9)<3JP~9", catalogDoorOrWindow1.getId());
      assertTrue(catalogDoorOrWindow1.isMovable());
      assertEquals(2.1063766F, catalogDoorOrWindow1.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow1.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow1.getGrade());
      assertNull(catalogDoorOrWindow1.getInformation());
      assertFalse(catalogDoorOrWindow1.isModifiable());
      assertNull(catalogDoorOrWindow1.getCreationDate());
      assertNull(catalogDoorOrWindow1.getCurrency());
      assertTrue(catalogDoorOrWindow1.isDoorOrWindow());
      assertEquals("(/\"|KCfE_q{_", catalogDoorOrWindow1.getDescription());
      assertEquals("/li&&P14ZxI.", catalogDoorOrWindow1.getCreator());
      assertTrue(catalogDoorOrWindow1.isProportional());
      assertEquals(0.3926991F, catalogDoorOrWindow1.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow1.getColor());
      assertFalse(catalogDoorOrWindow1.isTexturable());
      assertFalse(catalogDoorOrWindow1.isResizable());
      assertFalse(catalogDoorOrWindow1.isDeformable());
      assertFalse(catalogDoorOrWindow1.isBackFaceShown());
      assertEquals(2.0F, catalogDoorOrWindow1.getDepth(), 0.01F);
      assertEquals(2.1063766F, catalogDoorOrWindow1.getWidth(), 0.01F);
      assertEquals(2.0F, catalogDoorOrWindow1.getWallDistance(), 0.01F);
      
      int int0 = furnitureCategory0.getIndexOfPieceOfFurniture(catalogDoorOrWindow1);
      assertEquals(7, sashArray0.length);
      assertNotSame(catalogDoorOrWindow1, catalogDoorOrWindow0);
      assertFalse(catalogDoorOrWindow1.equals((Object)catalogDoorOrWindow0));
      assertEquals((-1), int0);
      assertEquals(41.0798F, catalogDoorOrWindow1.getHeight(), 0.01F);
      assertEquals(0.3926991F, catalogDoorOrWindow1.getIconYaw(), 0.01F);
      assertEquals("", catalogDoorOrWindow1.getName());
      assertEquals("8R56\"vE,.X!9)<3JP~9", catalogDoorOrWindow1.getId());
      assertTrue(catalogDoorOrWindow1.isMovable());
      assertEquals(2.1063766F, catalogDoorOrWindow1.getElevation(), 0.01F);
      assertNull(catalogDoorOrWindow1.getStaircaseCutOutShape());
      assertNull(catalogDoorOrWindow1.getGrade());
      assertNull(catalogDoorOrWindow1.getInformation());
      assertFalse(catalogDoorOrWindow1.isModifiable());
      assertNull(catalogDoorOrWindow1.getCreationDate());
      assertNull(catalogDoorOrWindow1.getCurrency());
      assertTrue(catalogDoorOrWindow1.isDoorOrWindow());
      assertEquals("(/\"|KCfE_q{_", catalogDoorOrWindow1.getDescription());
      assertEquals("/li&&P14ZxI.", catalogDoorOrWindow1.getCreator());
      assertTrue(catalogDoorOrWindow1.isProportional());
      assertEquals(0.3926991F, catalogDoorOrWindow1.getWallThickness(), 0.01F);
      assertNull(catalogDoorOrWindow1.getColor());
      assertFalse(catalogDoorOrWindow1.isTexturable());
      assertFalse(catalogDoorOrWindow1.isResizable());
      assertFalse(catalogDoorOrWindow1.isDeformable());
      assertFalse(catalogDoorOrWindow1.isBackFaceShown());
      assertEquals(2.0F, catalogDoorOrWindow1.getDepth(), 0.01F);
      assertEquals(2.1063766F, catalogDoorOrWindow1.getWidth(), 0.01F);
      assertEquals(2.0F, catalogDoorOrWindow1.getWallDistance(), 0.01F);
      assertEquals(0, furnitureCategory0.getFurnitureCount());
      assertEquals("(/\"|KCfE_q{_", furnitureCategory0.getName());
      
      // Undeclared exception!
      try { 
        furnitureCategory0.delete(catalogDoorOrWindow1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // (/\"|KCfE_q{_ doesn't contain piece 
         //
         verifyException("com.eteks.sweethome3d.model.FurnitureCategory", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "com.eteks.sweethome3d.model.CatalogLight";
      stringArray0[6] = null;
      stringArray0[7] = "";
      stringArray0[4] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource((-487.1F), (-487.1F), 1.0F, 791);
      assertNotNull(lightSource0);
      assertEquals(1.0F, lightSource0.getZ(), 0.01F);
      assertEquals((-487.1F), lightSource0.getY(), 0.01F);
      assertEquals((-487.1F), lightSource0.getX(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      assertNull(lightSource0.getDiameter());
      
      lightSourceArray0[0] = lightSource0;
      LightSource lightSource1 = new LightSource((-487.1F), (-487.1F), 0L, 791, float0);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(791, lightSource1.getColor());
      assertEquals((-487.1F), lightSource1.getX(), 0.01F);
      assertEquals(0.0F, lightSource1.getDiameter(), 0.01F);
      assertEquals(0.0F, lightSource1.getZ(), 0.01F);
      assertEquals((-487.1F), lightSource1.getY(), 0.01F);
      
      lightSourceArray0[1] = lightSource1;
      LightSource lightSource2 = new LightSource(0.0F, (-1999.1F), 0.3926991F, (-2872));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertNotNull(lightSource2);
      assertEquals((-1999.1F), lightSource2.getY(), 0.01F);
      assertNull(lightSource2.getDiameter());
      assertEquals(0.3926991F, lightSource2.getZ(), 0.01F);
      assertEquals(0.0F, lightSource2.getX(), 0.01F);
      assertEquals((-2872), lightSource2.getColor());
      
      lightSourceArray0[2] = lightSource2;
      LightSource lightSource3 = new LightSource((-185.9665F), 0.3926991F, 791, (-2872));
      assertFalse(lightSource3.equals((Object)lightSource1));
      assertFalse(lightSource3.equals((Object)lightSource0));
      assertFalse(lightSource3.equals((Object)lightSource2));
      assertNotNull(lightSource3);
      assertEquals((-185.9665F), lightSource3.getX(), 0.01F);
      assertEquals(0.3926991F, lightSource3.getY(), 0.01F);
      assertEquals((-2872), lightSource3.getColor());
      assertEquals(791.0F, lightSource3.getZ(), 0.01F);
      assertNull(lightSource3.getDiameter());
      
      lightSourceArray0[3] = lightSource3;
      LightSource lightSource4 = new LightSource((-2872), (-1999.1F), 1.0F, 20);
      assertFalse(lightSource4.equals((Object)lightSource0));
      assertFalse(lightSource4.equals((Object)lightSource3));
      assertFalse(lightSource4.equals((Object)lightSource2));
      assertFalse(lightSource4.equals((Object)lightSource1));
      assertNotNull(lightSource4);
      assertEquals((-1999.1F), lightSource4.getY(), 0.01F);
      assertNull(lightSource4.getDiameter());
      assertEquals(1.0F, lightSource4.getZ(), 0.01F);
      assertEquals(20, lightSource4.getColor());
      assertEquals((-2872.0F), lightSource4.getX(), 0.01F);
      
      lightSourceArray0[4] = lightSource4;
      LightSource lightSource5 = new LightSource((-1999.1F), (-1999.1F), 0.0F, 20);
      assertFalse(lightSource5.equals((Object)lightSource3));
      assertFalse(lightSource5.equals((Object)lightSource4));
      assertFalse(lightSource5.equals((Object)lightSource2));
      assertFalse(lightSource5.equals((Object)lightSource0));
      assertFalse(lightSource5.equals((Object)lightSource1));
      assertNotNull(lightSource5);
      assertEquals((-1999.1F), lightSource5.getY(), 0.01F);
      assertEquals((-1999.1F), lightSource5.getX(), 0.01F);
      assertNull(lightSource5.getDiameter());
      assertEquals(0.0F, lightSource5.getZ(), 0.01F);
      assertEquals(20, lightSource5.getColor());
      
      LightSource lightSource6 = new LightSource(0.0F, (-185.9665F), (-185.9665F), 20, float0);
      assertFalse(lightSource6.equals((Object)lightSource5));
      assertFalse(lightSource6.equals((Object)lightSource4));
      assertFalse(lightSource6.equals((Object)lightSource3));
      assertFalse(lightSource6.equals((Object)lightSource2));
      assertFalse(lightSource6.equals((Object)lightSource0));
      assertFalse(lightSource6.equals((Object)lightSource1));
      assertNotNull(lightSource6);
      assertEquals(0.0F, lightSource6.getX(), 0.01F);
      assertEquals(0.0F, lightSource6.getDiameter(), 0.01F);
      assertEquals((-185.9665F), lightSource6.getY(), 0.01F);
      assertEquals(20, lightSource6.getColor());
      assertEquals((-185.9665F), lightSource6.getZ(), 0.01F);
      
      lightSourceArray0[6] = lightSource6;
      LightSource lightSource7 = new LightSource(0.0F, (-0.3003764F), 3094.0688F, (-2872));
      assertFalse(lightSource7.equals((Object)lightSource1));
      assertFalse(lightSource7.equals((Object)lightSource0));
      assertFalse(lightSource7.equals((Object)lightSource5));
      assertFalse(lightSource7.equals((Object)lightSource4));
      assertFalse(lightSource7.equals((Object)lightSource3));
      assertFalse(lightSource7.equals((Object)lightSource6));
      assertFalse(lightSource7.equals((Object)lightSource2));
      assertNotNull(lightSource7);
      assertEquals((-0.3003764F), lightSource7.getY(), 0.01F);
      assertEquals(0.0F, lightSource7.getX(), 0.01F);
      assertEquals(3094.0688F, lightSource7.getZ(), 0.01F);
      assertEquals((-2872), lightSource7.getColor());
      assertNull(lightSource7.getDiameter());
      
      lightSourceArray0[7] = lightSource7;
      LightSource lightSource8 = new LightSource((-1589.899F), 1.0F, (-1999.1F), (-1775));
      assertFalse(lightSource8.equals((Object)lightSource1));
      assertFalse(lightSource8.equals((Object)lightSource0));
      assertFalse(lightSource8.equals((Object)lightSource2));
      assertFalse(lightSource8.equals((Object)lightSource7));
      assertFalse(lightSource8.equals((Object)lightSource3));
      assertFalse(lightSource8.equals((Object)lightSource5));
      assertFalse(lightSource8.equals((Object)lightSource4));
      assertFalse(lightSource8.equals((Object)lightSource6));
      assertNotNull(lightSource8);
      assertEquals((-1589.899F), lightSource8.getX(), 0.01F);
      assertEquals((-1775), lightSource8.getColor());
      assertNull(lightSource8.getDiameter());
      assertEquals((-1999.1F), lightSource8.getZ(), 0.01F);
      assertEquals(1.0F, lightSource8.getY(), 0.01F);
      
      lightSourceArray0[8] = lightSource8;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0.3926991F, 0L, 0.3926991F, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, stringArray0[6]);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      homeLight0.setNameAngle(20);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getCurrency());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(1.150444F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[5] = null;
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[10];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      assertEquals(0.0F, lightSource0.getZ(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSourceArray0[1];
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource1 = new LightSource(0L, 0.0F, (-19.779608F), 46);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(46, lightSource1.getColor());
      assertEquals((-19.779608F), lightSource1.getZ(), 0.01F);
      assertEquals(0.0F, lightSource1.getX(), 0.01F);
      assertEquals(0.0F, lightSource1.getY(), 0.01F);
      assertNull(lightSource1.getDiameter());
      
      lightSourceArray0[6] = lightSource1;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray1.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      boolean boolean0 = homeLight0.isBottomRightPointAt(1.0F, 46, (-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      homeLight0.setElevation(9.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(9.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertEquals(9.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      homeLight0.setMovable(false);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(9.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertEquals(9.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      String string0 = homeLight0.getCatalogId();
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNull(string0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getColor());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(9.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertEquals(9.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "com.eteks.sweethome3d.model.CatalogLight";
      stringArray0[6] = null;
      stringArray0[7] = "";
      stringArray0[8] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource((-487.1F), (-487.1F), 1.0F, 791);
      assertNotNull(lightSource0);
      assertEquals((-487.1F), lightSource0.getX(), 0.01F);
      assertEquals((-487.1F), lightSource0.getY(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      assertEquals(1.0F, lightSource0.getZ(), 0.01F);
      assertNull(lightSource0.getDiameter());
      
      lightSourceArray0[0] = lightSource0;
      LightSource lightSource1 = new LightSource((-487.1F), 2.0F, 0.0F, 791);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(2.0F, lightSource1.getY(), 0.01F);
      assertEquals(791, lightSource1.getColor());
      assertEquals((-487.1F), lightSource1.getX(), 0.01F);
      assertNull(lightSource1.getDiameter());
      assertEquals(0.0F, lightSource1.getZ(), 0.01F);
      
      lightSourceArray0[1] = lightSource1;
      LightSource lightSource2 = new LightSource(0.0F, (-1999.1F), 0.3926991F, (-2872));
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertNotNull(lightSource2);
      assertNull(lightSource2.getDiameter());
      assertEquals((-2872), lightSource2.getColor());
      assertEquals((-1999.1F), lightSource2.getY(), 0.01F);
      assertEquals(0.3926991F, lightSource2.getZ(), 0.01F);
      assertEquals(0.0F, lightSource2.getX(), 0.01F);
      
      lightSourceArray0[2] = lightSource2;
      LightSource lightSource3 = new LightSource((-185.9665F), 0.3926991F, 791, 46);
      assertFalse(lightSource3.equals((Object)lightSource0));
      assertFalse(lightSource3.equals((Object)lightSource2));
      assertFalse(lightSource3.equals((Object)lightSource1));
      assertNotNull(lightSource3);
      assertNull(lightSource3.getDiameter());
      assertEquals(0.3926991F, lightSource3.getY(), 0.01F);
      assertEquals((-185.9665F), lightSource3.getX(), 0.01F);
      assertEquals(791.0F, lightSource3.getZ(), 0.01F);
      assertEquals(46, lightSource3.getColor());
      
      lightSourceArray0[3] = lightSource3;
      LightSource lightSource4 = new LightSource(46, (-1999.1F), 1.0F, 20);
      assertFalse(lightSource4.equals((Object)lightSource0));
      assertFalse(lightSource4.equals((Object)lightSource3));
      assertFalse(lightSource4.equals((Object)lightSource2));
      assertFalse(lightSource4.equals((Object)lightSource1));
      assertNotNull(lightSource4);
      assertEquals((-1999.1F), lightSource4.getY(), 0.01F);
      assertNull(lightSource4.getDiameter());
      assertEquals(20, lightSource4.getColor());
      assertEquals(46.0F, lightSource4.getX(), 0.01F);
      assertEquals(1.0F, lightSource4.getZ(), 0.01F);
      
      lightSourceArray0[4] = lightSource4;
      LightSource lightSource5 = new LightSource((-1999.1F), (-1999.1F), 0.0F, 20);
      assertFalse(lightSource5.equals((Object)lightSource4));
      assertFalse(lightSource5.equals((Object)lightSource0));
      assertFalse(lightSource5.equals((Object)lightSource3));
      assertFalse(lightSource5.equals((Object)lightSource1));
      assertFalse(lightSource5.equals((Object)lightSource2));
      assertNotNull(lightSource5);
      assertNull(lightSource5.getDiameter());
      assertEquals((-1999.1F), lightSource5.getY(), 0.01F);
      assertEquals((-1999.1F), lightSource5.getX(), 0.01F);
      assertEquals(20, lightSource5.getColor());
      assertEquals(0.0F, lightSource5.getZ(), 0.01F);
      
      lightSourceArray0[5] = lightSource5;
      LightSource lightSource6 = new LightSource(0L, 0.0F, 0.0F, 46);
      assertFalse(lightSource6.equals((Object)lightSource0));
      assertFalse(lightSource6.equals((Object)lightSource5));
      assertFalse(lightSource6.equals((Object)lightSource3));
      assertFalse(lightSource6.equals((Object)lightSource4));
      assertFalse(lightSource6.equals((Object)lightSource1));
      assertFalse(lightSource6.equals((Object)lightSource2));
      assertNotNull(lightSource6);
      assertEquals(46, lightSource6.getColor());
      assertEquals(0.0F, lightSource6.getZ(), 0.01F);
      assertNull(lightSource6.getDiameter());
      assertEquals(0.0F, lightSource6.getY(), 0.01F);
      assertEquals(0.0F, lightSource6.getX(), 0.01F);
      
      lightSourceArray0[6] = lightSource6;
      LightSource lightSource7 = new LightSource(0.0F, 0.0F, 3094.0688F, (-2872));
      assertFalse(lightSource7.equals((Object)lightSource5));
      assertFalse(lightSource7.equals((Object)lightSource2));
      assertFalse(lightSource7.equals((Object)lightSource6));
      assertFalse(lightSource7.equals((Object)lightSource1));
      assertFalse(lightSource7.equals((Object)lightSource0));
      assertFalse(lightSource7.equals((Object)lightSource3));
      assertFalse(lightSource7.equals((Object)lightSource4));
      assertNotNull(lightSource7);
      assertEquals(0.0F, lightSource7.getX(), 0.01F);
      assertEquals(0.0F, lightSource7.getY(), 0.01F);
      assertEquals(3094.0688F, lightSource7.getZ(), 0.01F);
      assertNull(lightSource7.getDiameter());
      assertEquals((-2872), lightSource7.getColor());
      
      lightSourceArray0[7] = lightSource7;
      LightSource lightSource8 = new LightSource((-1589.899F), 1.0F, 0.0F, (-1775));
      assertFalse(lightSource8.equals((Object)lightSource7));
      assertFalse(lightSource8.equals((Object)lightSource0));
      assertFalse(lightSource8.equals((Object)lightSource5));
      assertFalse(lightSource8.equals((Object)lightSource1));
      assertFalse(lightSource8.equals((Object)lightSource6));
      assertFalse(lightSource8.equals((Object)lightSource2));
      assertFalse(lightSource8.equals((Object)lightSource3));
      assertFalse(lightSource8.equals((Object)lightSource4));
      assertNotNull(lightSource8);
      assertEquals((-1775), lightSource8.getColor());
      assertEquals((-1589.899F), lightSource8.getX(), 0.01F);
      assertEquals(1.0F, lightSource8.getY(), 0.01F);
      assertEquals(0.0F, lightSource8.getZ(), 0.01F);
      assertNull(lightSource8.getDiameter());
      
      lightSourceArray0[8] = lightSource8;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0.3926991F, 0L, 0.3926991F, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, false, bigDecimal0, bigDecimal0, "");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals("", catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals("", catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals("", catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isNameVisible());
      assertEquals("", homeLight0.getCurrency());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals("", catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isNameVisible());
      assertEquals("", homeLight0.getCurrency());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.3926991F, homeLight1.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeLight1.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isTexturable());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isNameVisible());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertNull(homeLight1.getName());
      assertTrue(homeLight1.isMovable());
      assertTrue(homeLight1.isResizable());
      assertEquals("", homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertEquals(0.19634955F, homeLight1.getX(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertEquals("", homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      boolean boolean0 = homeLight1.isModelMirrored();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals("", catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getName());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isNameVisible());
      assertEquals("", homeLight0.getCurrency());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.3926991F, homeLight1.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeLight1.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isTexturable());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isNameVisible());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertNull(homeLight1.getName());
      assertTrue(homeLight1.isMovable());
      assertTrue(homeLight1.isResizable());
      assertEquals("", homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertEquals(0.19634955F, homeLight1.getX(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertEquals("", homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[7] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(0.3926991F, 791, 2.0F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      assertEquals(0.3926991F, lightSource0.getX(), 0.01F);
      assertEquals(2.0F, lightSource0.getZ(), 0.01F);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      
      lightSourceArray0[1] = lightSource0;
      LightSource lightSource1 = new LightSource(791, (-487.1F), 0.3926991F, 791, float0);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(0.3926991F, lightSource1.getZ(), 0.01F);
      assertEquals(791, lightSource1.getColor());
      assertEquals((-487.1F), lightSource1.getY(), 0.01F);
      assertEquals(0.0F, lightSource1.getDiameter(), 0.01F);
      assertEquals(791.0F, lightSource1.getX(), 0.01F);
      
      lightSourceArray0[2] = lightSource1;
      LightSource lightSource2 = new LightSource((-487.1F), 0.3926991F, 791, 46);
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertNotNull(lightSource2);
      assertEquals(791.0F, lightSource2.getZ(), 0.01F);
      assertNull(lightSource2.getDiameter());
      assertEquals(46, lightSource2.getColor());
      assertEquals((-487.1F), lightSource2.getX(), 0.01F);
      assertEquals(0.3926991F, lightSource2.getY(), 0.01F);
      
      lightSourceArray0[3] = lightSource2;
      lightSourceArray0[4] = lightSource1;
      LightSource lightSource3 = new LightSource(20, 0.3926991F, 791, 20, float0);
      assertFalse(lightSource3.equals((Object)lightSource1));
      assertFalse(lightSource3.equals((Object)lightSource0));
      assertFalse(lightSource3.equals((Object)lightSource2));
      assertNotNull(lightSource3);
      assertEquals(791.0F, lightSource3.getZ(), 0.01F);
      assertEquals(20.0F, lightSource3.getX(), 0.01F);
      assertEquals(20, lightSource3.getColor());
      assertEquals(0.3926991F, lightSource3.getY(), 0.01F);
      assertEquals(0.0F, lightSource3.getDiameter(), 0.01F);
      
      LightSource lightSource4 = new LightSource(0.0F, 20, 3094.0688F, 791);
      assertFalse(lightSource4.equals((Object)lightSource2));
      assertFalse(lightSource4.equals((Object)lightSource3));
      assertFalse(lightSource4.equals((Object)lightSource0));
      assertFalse(lightSource4.equals((Object)lightSource1));
      assertNotNull(lightSource4);
      assertEquals(20.0F, lightSource4.getY(), 0.01F);
      assertEquals(0.0F, lightSource4.getX(), 0.01F);
      assertEquals(3094.0688F, lightSource4.getZ(), 0.01F);
      assertNull(lightSource4.getDiameter());
      assertEquals(791, lightSource4.getColor());
      
      lightSourceArray0[7] = lightSource4;
      lightSourceArray0[8] = lightSource1;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0.3926991F, 0L, 0.3926991F, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, "");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      homeLight0.setDescription("M2tH$P&m&x.[yz!#");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals("M2tH$P&m&x.[yz!#", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      float float1 = homeLight0.getNameXOffset();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(0.0F, float1, 0.01F);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals("M2tH$P&m&x.[yz!#", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      homeLight0.setNameYOffset(2137.7644F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((float)float0, (float)float1, 0.01F);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(2137.7644F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals("M2tH$P&m&x.[yz!#", homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "com.eteks.sweethome3d.model.CatalogLight";
      stringArray0[6] = null;
      stringArray0[7] = "";
      stringArray0[8] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource((-487.1F), (-487.1F), 1.0F, 791);
      assertNotNull(lightSource0);
      assertEquals(1.0F, lightSource0.getZ(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      assertNull(lightSource0.getDiameter());
      assertEquals((-487.1F), lightSource0.getY(), 0.01F);
      assertEquals((-487.1F), lightSource0.getX(), 0.01F);
      
      lightSourceArray0[0] = lightSource0;
      LightSource lightSource1 = new LightSource((-487.1F), 2.0F, 0.0F, 791);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(0.0F, lightSource1.getZ(), 0.01F);
      assertEquals(2.0F, lightSource1.getY(), 0.01F);
      assertEquals(791, lightSource1.getColor());
      assertEquals((-487.1F), lightSource1.getX(), 0.01F);
      assertNull(lightSource1.getDiameter());
      
      lightSourceArray0[1] = lightSource1;
      LightSource lightSource2 = new LightSource(0.0F, (-1999.1F), 0.3926991F, (-2872));
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertNotNull(lightSource2);
      assertEquals((-2872), lightSource2.getColor());
      assertEquals(0.3926991F, lightSource2.getZ(), 0.01F);
      assertEquals(0.0F, lightSource2.getX(), 0.01F);
      assertNull(lightSource2.getDiameter());
      assertEquals((-1999.1F), lightSource2.getY(), 0.01F);
      
      lightSourceArray0[2] = lightSource2;
      LightSource lightSource3 = new LightSource((-185.9665F), 0.3926991F, 791, 46);
      assertFalse(lightSource3.equals((Object)lightSource1));
      assertFalse(lightSource3.equals((Object)lightSource2));
      assertFalse(lightSource3.equals((Object)lightSource0));
      assertNotNull(lightSource3);
      assertEquals(46, lightSource3.getColor());
      assertEquals(791.0F, lightSource3.getZ(), 0.01F);
      assertEquals((-185.9665F), lightSource3.getX(), 0.01F);
      assertNull(lightSource3.getDiameter());
      assertEquals(0.3926991F, lightSource3.getY(), 0.01F);
      
      lightSourceArray0[3] = lightSource3;
      LightSource lightSource4 = new LightSource(46, (-1999.1F), 1.0F, 20);
      assertFalse(lightSource4.equals((Object)lightSource0));
      assertFalse(lightSource4.equals((Object)lightSource3));
      assertFalse(lightSource4.equals((Object)lightSource1));
      assertFalse(lightSource4.equals((Object)lightSource2));
      assertNotNull(lightSource4);
      assertEquals((-1999.1F), lightSource4.getY(), 0.01F);
      assertEquals(46.0F, lightSource4.getX(), 0.01F);
      assertEquals(20, lightSource4.getColor());
      assertEquals(1.0F, lightSource4.getZ(), 0.01F);
      assertNull(lightSource4.getDiameter());
      
      lightSourceArray0[4] = lightSource4;
      LightSource lightSource5 = new LightSource((-1999.1F), (-1999.1F), 0.0F, 20);
      assertFalse(lightSource5.equals((Object)lightSource4));
      assertFalse(lightSource5.equals((Object)lightSource0));
      assertFalse(lightSource5.equals((Object)lightSource3));
      assertFalse(lightSource5.equals((Object)lightSource1));
      assertFalse(lightSource5.equals((Object)lightSource2));
      assertNotNull(lightSource5);
      assertEquals(0.0F, lightSource5.getZ(), 0.01F);
      assertEquals(20, lightSource5.getColor());
      assertEquals((-1999.1F), lightSource5.getY(), 0.01F);
      assertNull(lightSource5.getDiameter());
      assertEquals((-1999.1F), lightSource5.getX(), 0.01F);
      
      lightSourceArray0[5] = lightSource5;
      LightSource lightSource6 = new LightSource(0L, 0.0F, 0.0F, 46);
      assertFalse(lightSource6.equals((Object)lightSource2));
      assertFalse(lightSource6.equals((Object)lightSource1));
      assertFalse(lightSource6.equals((Object)lightSource5));
      assertFalse(lightSource6.equals((Object)lightSource0));
      assertFalse(lightSource6.equals((Object)lightSource3));
      assertFalse(lightSource6.equals((Object)lightSource4));
      assertNotNull(lightSource6);
      assertEquals(0.0F, lightSource6.getZ(), 0.01F);
      assertNull(lightSource6.getDiameter());
      assertEquals(0.0F, lightSource6.getY(), 0.01F);
      assertEquals(46, lightSource6.getColor());
      assertEquals(0.0F, lightSource6.getX(), 0.01F);
      
      lightSourceArray0[6] = lightSource6;
      LightSource lightSource7 = new LightSource(0.0F, 0.0F, 3094.0688F, (-2872));
      assertFalse(lightSource7.equals((Object)lightSource6));
      assertFalse(lightSource7.equals((Object)lightSource5));
      assertFalse(lightSource7.equals((Object)lightSource1));
      assertFalse(lightSource7.equals((Object)lightSource2));
      assertFalse(lightSource7.equals((Object)lightSource3));
      assertFalse(lightSource7.equals((Object)lightSource0));
      assertFalse(lightSource7.equals((Object)lightSource4));
      assertNotNull(lightSource7);
      assertEquals(0.0F, lightSource7.getX(), 0.01F);
      assertEquals(0.0F, lightSource7.getY(), 0.01F);
      assertEquals((-2872), lightSource7.getColor());
      assertEquals(3094.0688F, lightSource7.getZ(), 0.01F);
      assertNull(lightSource7.getDiameter());
      
      lightSourceArray0[7] = lightSource7;
      LightSource lightSource8 = new LightSource((-1589.899F), 1.0F, 0.0F, (-1775));
      assertFalse(lightSource8.equals((Object)lightSource2));
      assertFalse(lightSource8.equals((Object)lightSource5));
      assertFalse(lightSource8.equals((Object)lightSource1));
      assertFalse(lightSource8.equals((Object)lightSource6));
      assertFalse(lightSource8.equals((Object)lightSource0));
      assertFalse(lightSource8.equals((Object)lightSource4));
      assertFalse(lightSource8.equals((Object)lightSource3));
      assertFalse(lightSource8.equals((Object)lightSource7));
      assertNotNull(lightSource8);
      assertEquals(0.0F, lightSource8.getZ(), 0.01F);
      assertEquals((-1589.899F), lightSource8.getX(), 0.01F);
      assertNull(lightSource8.getDiameter());
      assertEquals((-1775), lightSource8.getColor());
      assertEquals(1.0F, lightSource8.getY(), 0.01F);
      
      lightSourceArray0[8] = lightSource8;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0.3926991F, 0L, 0.3926991F, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, false, bigDecimal0, bigDecimal0, "");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.3926991F, homeLight1.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertFalse(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertEquals("", homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isMovable());
      assertTrue(homeLight1.isResizable());
      assertEquals("", homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.19634955F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertNull(homeLight1.getName());
      assertFalse(homeLight1.isNameVisible());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean0 = homeLight1.isVisible();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(boolean0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isProportional());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.3926991F, homeLight1.getHeight(), 0.01F);
      assertEquals(0.3926991F, homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertFalse(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertEquals("", homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isMovable());
      assertTrue(homeLight1.isResizable());
      assertEquals("", homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.19634955F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertNull(homeLight1.getName());
      assertFalse(homeLight1.isNameVisible());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[3] = "";
      Long long0 = new Long((-55L));
      assertEquals((-55L), (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) (-55L));
      assertEquals((-55.0F), (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite((-55L));
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-55L), (-55L), (-55L), (-55L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight1.getCurrency());
      assertEquals((-55.0F), homeLight1.getElevation(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertFalse(homeLight1.isNameVisible());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals((-55.0F), homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertFalse(homeLight1.isModelMirrored());
      assertEquals((-27.5F), homeLight1.getY(), 0.01F);
      assertEquals((-27.5F), homeLight1.getX(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getColor());
      assertNull(homeLight1.getCatalogId());
      assertEquals((-55.0F), homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals((-55.0F), homeLight1.getWidth(), 0.01F);
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getShininess());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals((-55.0F), homeLight1.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      
      homeLight0.setColor((Integer) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
      
      homeLight0.setDescription((String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getDescription());
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[2] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      lightSourceArray0[6] = lightSourceArray0[4];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isTexturable());
      assertTrue(homeLight1.isResizable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertTrue(homeLight1.isMovable());
      assertFalse(homeLight1.isModelMirrored());
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getColor());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      
      boolean boolean1 = homeLight1.isBottomRightPointAt(2.0F, 0.0F, 0.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isTexturable());
      assertTrue(homeLight1.isResizable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertTrue(homeLight1.isMovable());
      assertFalse(homeLight1.isModelMirrored());
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getColor());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      
      boolean boolean2 = homeLight0.isPointAt((-2619.104F), (-1761.0F), (-4215.3F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(boolean2);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      
      boolean boolean3 = homeLight1.isNameCenterPointAt(1.0F, (-1.0F), 0L);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(boolean3);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isTexturable());
      assertTrue(homeLight1.isResizable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertTrue(homeLight1.isMovable());
      assertFalse(homeLight1.isModelMirrored());
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getColor());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      
      boolean boolean4 = homeLight0.isModelMirrored();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean1);
      assertFalse(boolean4 == boolean0);
      assertTrue(boolean4 == boolean3);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(boolean4);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      
      homeLight0.setName((String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      
      boolean boolean5 = homeLight1.isNameVisible();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertTrue(boolean5 == boolean2);
      assertTrue(boolean5 == boolean1);
      assertTrue(boolean5 == boolean3);
      assertFalse(boolean5 == boolean0);
      assertTrue(boolean5 == boolean4);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(boolean5);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isTexturable());
      assertTrue(homeLight1.isResizable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertTrue(homeLight1.isMovable());
      assertFalse(homeLight1.isModelMirrored());
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getColor());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[2] = "";
      stringArray0[5] = null;
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[10];
      lightSourceArray0[3] = lightSourceArray0[1];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      
      boolean boolean0 = homeLight0.isBottomRightPointAt(0L, 89, (-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertFalse(boolean0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      
      boolean boolean1 = homeLight0.isNameCenterPointAt(0L, (-177.8038F), 0L);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      
      boolean boolean2 = homeLight0.isModelMirrored();
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      
      homeLight0.setName((String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      
      boolean boolean3 = homeLight0.isNameVisible();
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isMovable());
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getColor());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      
      // Undeclared exception!
      try { 
        homeLight0.setModelMirrored(true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      String string0 = resourceURLContent0.getJAREntryName();
      assertEquals("com/eteks/sweethome3d/model/", string0);
      assertNotNull(string0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      lightSourceArray0[3] = lightSourceArray0[2];
      lightSourceArray0[4] = lightSourceArray0[2];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      
      homeLight0.setDescription("");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      
      float float1 = homeLight0.getNameXOffset();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(0.0F, float1, 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      
      homeLight0.setNameYOffset(4.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((float)float0, (float)float1, 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(4.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      
      homeLight0.setNameVisible(true);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((float)float0, (float)float1, 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(4.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      
      BigDecimal bigDecimal1 = homeLight0.getValueAddedTaxPercentage();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(bigDecimal1, bigDecimal0);
      assertSame(bigDecimal0, bigDecimal1);
      assertEquals((float)float0, (float)float1, 0.01F);
      assertNotNull(bigDecimal1);
      assertEquals((byte)0, bigDecimal1.byteValue());
      assertEquals((short)0, bigDecimal1.shortValue());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(4.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      
      boolean boolean1 = homeLight0.isTopRightPointAt(4.0F, 783.5F, 783.5F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(bigDecimal0, bigDecimal1);
      assertFalse(boolean1 == boolean0);
      assertEquals((float)float0, (float)float1, 0.01F);
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(4.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeLight0.getModel();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(resourceURLContent1, resourceURLContent0);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertSame(bigDecimal0, bigDecimal1);
      assertEquals((float)float0, (float)float1, 0.01F);
      assertNotNull(resourceURLContent1);
      assertTrue(resourceURLContent1.isJAREntry());
      assertTrue(resourceURLContent1.isMultiPartResource());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals("", homeLight0.getDescription());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(4.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = null;
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[7];
      long long1 = Long.remainderUnsigned(1107L, 373L);
      assertEquals(361L, long1);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      LightSource lightSource0 = new LightSource(791, 0L, 791, 46);
      assertNotNull(lightSource0);
      assertEquals(46, lightSource0.getColor());
      assertEquals(791.0F, lightSource0.getX(), 0.01F);
      assertEquals(791.0F, lightSource0.getZ(), 0.01F);
      assertNull(lightSource0.getDiameter());
      assertEquals(0.0F, lightSource0.getY(), 0.01F);
      
      lightSourceArray0[4] = lightSource0;
      LightSource lightSource1 = new LightSource(0L, 0.0F, (-19.779608F), 46);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertNull(lightSource1.getDiameter());
      assertEquals((-19.779608F), lightSource1.getZ(), 0.01F);
      assertEquals(0.0F, lightSource1.getX(), 0.01F);
      assertEquals(46, lightSource1.getColor());
      assertEquals(0.0F, lightSource1.getY(), 0.01F);
      
      lightSourceArray0[6] = lightSource1;
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(7, lightSourceArray0.length);
      assertFalse(long0.equals((Object)long1));
      assertNotNull(catalogLight0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(7, lightSourceArray1.length);
      assertEquals(7, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertFalse(long0.equals((Object)long1));
      assertNotNull(lightSourceArray1);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(7, lightSourceArray0.length);
      assertFalse(long0.equals((Object)long1));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      BigDecimal bigDecimal1 = homeLight0.getPriceValueAddedTaxIncluded();
      assertEquals(9, stringArray0.length);
      assertEquals(7, lightSourceArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertFalse(long0.equals((Object)long1));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(bigDecimal1);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals((short)2, bigDecimal1.shortValue());
      assertEquals((byte)2, bigDecimal1.byteValue());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(9, stringArray0.length);
      assertEquals(7, lightSourceArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(long0.equals((Object)long1));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight1);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertFalse(homeLight1.isNameVisible());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertTrue(homeLight1.isTexturable());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight2 = (HomeLight)homeLight0.clone();
      assertEquals(9, stringArray0.length);
      assertEquals(7, lightSourceArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight0, homeLight2);
      assertNotSame(homeLight2, homeLight1);
      assertNotSame(homeLight2, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(long0.equals((Object)long1));
      assertFalse(homeLight2.equals((Object)homeLight1));
      assertFalse(homeLight2.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight2);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight2.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight2.getGroundElevation(), 0.01F);
      assertTrue(homeLight2.isTexturable());
      assertFalse(homeLight2.isModelMirrored());
      assertFalse(homeLight2.isBackFaceShown());
      assertNull(homeLight2.getName());
      assertFalse(homeLight2.isNameVisible());
      assertEquals(0.0F, homeLight2.getNameAngle(), 0.01F);
      assertNull(homeLight2.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight2.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight2.getElevation(), 0.01F);
      assertTrue(homeLight2.isDeformable());
      assertEquals(0.0F, homeLight2.getWidth(), 0.01F);
      assertTrue(homeLight2.isResizable());
      assertNull(homeLight2.getDescription());
      assertFalse(homeLight2.isDoorOrWindow());
      assertEquals(0.0F, homeLight2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight2.getX(), 0.01F);
      assertEquals(0.0F, homeLight2.getY(), 0.01F);
      assertTrue(homeLight2.isVisible());
      assertEquals(0.0F, homeLight2.getHeight(), 0.01F);
      assertNull(homeLight2.getShininess());
      assertTrue(homeLight2.isMovable());
      assertEquals(0.5F, homeLight2.getPower(), 0.01F);
      assertNull(homeLight2.getCurrency());
      assertEquals(0.0F, homeLight2.getNameYOffset(), 0.01F);
      assertNull(homeLight2.getCatalogId());
      assertNull(homeLight2.getColor());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean0 = homeLight1.isDoorOrWindow();
      assertEquals(9, stringArray0.length);
      assertEquals(7, lightSourceArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight0, homeLight2);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(homeLight1, homeLight2);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight0.equals((Object)homeLight2));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(homeLight1.equals((Object)homeLight2));
      assertFalse(long0.equals((Object)long1));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertFalse(homeLight1.isNameVisible());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isBackFaceShown());
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertTrue(homeLight1.isTexturable());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      homeLight0.setWidth(0L);
      assertEquals(9, stringArray0.length);
      assertEquals(7, lightSourceArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight0, homeLight2);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight0.equals((Object)homeLight2));
      assertFalse(long0.equals((Object)long1));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isNameVisible());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "com.eteks.sweethome3d.model.CatalogLight";
      stringArray0[6] = null;
      stringArray0[7] = "";
      stringArray0[8] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource((-487.1F), (-487.1F), 1.0F, 791);
      assertNotNull(lightSource0);
      assertEquals(1.0F, lightSource0.getZ(), 0.01F);
      assertEquals((-487.1F), lightSource0.getX(), 0.01F);
      assertEquals((-487.1F), lightSource0.getY(), 0.01F);
      assertNull(lightSource0.getDiameter());
      assertEquals(791, lightSource0.getColor());
      
      lightSourceArray0[0] = lightSource0;
      LightSource lightSource1 = new LightSource((-487.1F), 2.0F, 0.0F, 791);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals((-487.1F), lightSource1.getX(), 0.01F);
      assertEquals(0.0F, lightSource1.getZ(), 0.01F);
      assertNull(lightSource1.getDiameter());
      assertEquals(791, lightSource1.getColor());
      assertEquals(2.0F, lightSource1.getY(), 0.01F);
      
      lightSourceArray0[1] = lightSource1;
      LightSource lightSource2 = new LightSource(0.0F, (-1999.1F), 0.3926991F, (-2872));
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertNotNull(lightSource2);
      assertEquals((-1999.1F), lightSource2.getY(), 0.01F);
      assertEquals(0.0F, lightSource2.getX(), 0.01F);
      assertEquals((-2872), lightSource2.getColor());
      assertEquals(0.3926991F, lightSource2.getZ(), 0.01F);
      assertNull(lightSource2.getDiameter());
      
      lightSourceArray0[2] = lightSource2;
      LightSource lightSource3 = new LightSource((-185.9665F), 0.3926991F, 791, 46);
      assertFalse(lightSource3.equals((Object)lightSource1));
      assertFalse(lightSource3.equals((Object)lightSource2));
      assertFalse(lightSource3.equals((Object)lightSource0));
      assertNotNull(lightSource3);
      assertEquals(46, lightSource3.getColor());
      assertEquals(0.3926991F, lightSource3.getY(), 0.01F);
      assertEquals(791.0F, lightSource3.getZ(), 0.01F);
      assertEquals((-185.9665F), lightSource3.getX(), 0.01F);
      assertNull(lightSource3.getDiameter());
      
      lightSourceArray0[3] = lightSource3;
      LightSource lightSource4 = new LightSource(46, (-1999.1F), 1.0F, 20);
      assertFalse(lightSource4.equals((Object)lightSource1));
      assertFalse(lightSource4.equals((Object)lightSource2));
      assertFalse(lightSource4.equals((Object)lightSource0));
      assertFalse(lightSource4.equals((Object)lightSource3));
      assertNotNull(lightSource4);
      assertEquals(46.0F, lightSource4.getX(), 0.01F);
      assertEquals((-1999.1F), lightSource4.getY(), 0.01F);
      assertEquals(20, lightSource4.getColor());
      assertEquals(1.0F, lightSource4.getZ(), 0.01F);
      assertNull(lightSource4.getDiameter());
      
      lightSourceArray0[4] = lightSource4;
      LightSource lightSource5 = new LightSource((-1999.1F), (-1999.1F), 0.0F, 20);
      assertFalse(lightSource5.equals((Object)lightSource0));
      assertFalse(lightSource5.equals((Object)lightSource2));
      assertFalse(lightSource5.equals((Object)lightSource1));
      assertFalse(lightSource5.equals((Object)lightSource3));
      assertFalse(lightSource5.equals((Object)lightSource4));
      assertNotNull(lightSource5);
      assertEquals(20, lightSource5.getColor());
      assertEquals((-1999.1F), lightSource5.getY(), 0.01F);
      assertEquals(0.0F, lightSource5.getZ(), 0.01F);
      assertEquals((-1999.1F), lightSource5.getX(), 0.01F);
      assertNull(lightSource5.getDiameter());
      
      lightSourceArray0[5] = lightSource5;
      LightSource lightSource6 = new LightSource(0L, 0.0F, 0.0F, 46);
      assertFalse(lightSource6.equals((Object)lightSource3));
      assertFalse(lightSource6.equals((Object)lightSource0));
      assertFalse(lightSource6.equals((Object)lightSource5));
      assertFalse(lightSource6.equals((Object)lightSource1));
      assertFalse(lightSource6.equals((Object)lightSource4));
      assertFalse(lightSource6.equals((Object)lightSource2));
      assertNotNull(lightSource6);
      assertEquals(46, lightSource6.getColor());
      assertEquals(0.0F, lightSource6.getX(), 0.01F);
      assertEquals(0.0F, lightSource6.getZ(), 0.01F);
      assertNull(lightSource6.getDiameter());
      assertEquals(0.0F, lightSource6.getY(), 0.01F);
      
      lightSourceArray0[6] = lightSource6;
      LightSource lightSource7 = new LightSource(0.0F, 0.0F, 3094.0688F, (-2872));
      assertFalse(lightSource7.equals((Object)lightSource3));
      assertFalse(lightSource7.equals((Object)lightSource4));
      assertFalse(lightSource7.equals((Object)lightSource1));
      assertFalse(lightSource7.equals((Object)lightSource6));
      assertFalse(lightSource7.equals((Object)lightSource2));
      assertFalse(lightSource7.equals((Object)lightSource5));
      assertFalse(lightSource7.equals((Object)lightSource0));
      assertNotNull(lightSource7);
      assertNull(lightSource7.getDiameter());
      assertEquals(0.0F, lightSource7.getY(), 0.01F);
      assertEquals(0.0F, lightSource7.getX(), 0.01F);
      assertEquals((-2872), lightSource7.getColor());
      assertEquals(3094.0688F, lightSource7.getZ(), 0.01F);
      
      lightSourceArray0[7] = lightSource7;
      LightSource lightSource8 = new LightSource((-1589.899F), 1.0F, 0.0F, (-1775));
      assertFalse(lightSource8.equals((Object)lightSource1));
      assertFalse(lightSource8.equals((Object)lightSource4));
      assertFalse(lightSource8.equals((Object)lightSource0));
      assertFalse(lightSource8.equals((Object)lightSource5));
      assertFalse(lightSource8.equals((Object)lightSource3));
      assertFalse(lightSource8.equals((Object)lightSource7));
      assertFalse(lightSource8.equals((Object)lightSource2));
      assertFalse(lightSource8.equals((Object)lightSource6));
      assertNotNull(lightSource8);
      assertNull(lightSource8.getDiameter());
      assertEquals(1.0F, lightSource8.getY(), 0.01F);
      assertEquals(0.0F, lightSource8.getZ(), 0.01F);
      assertEquals((-1775), lightSource8.getColor());
      assertEquals((-1589.899F), lightSource8.getX(), 0.01F);
      
      lightSourceArray0[8] = lightSource8;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0.3926991F, 0L, 0.3926991F, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, false, bigDecimal0, bigDecimal0, "");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      homeLight0.setDepth((-1115.29F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isDeformable());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getId());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.3926991F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.19634955F, homeLight0.getX(), 0.01F);
      assertEquals(0.3926991F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals((-1115.29F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[3] = "";
      Long long0 = new Long((-11L));
      assertEquals((-11L), (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) (-11L));
      assertEquals((-11.0F), (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-11L), (-11L), (-11L), (-11L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getName());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getDescription());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      
      BigDecimal bigDecimal1 = bigDecimal0.stripTrailingZeros();
      assertSame(bigDecimal0, bigDecimal1);
      assertSame(bigDecimal1, bigDecimal0);
      assertNotNull(bigDecimal1);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((short)1, bigDecimal1.shortValue());
      assertEquals((byte)1, bigDecimal1.byteValue());
      
      LightSource[] lightSourceArray1 = homeLight0.getLightSources();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getDescription());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      
      HomeLight homeLight1 = new HomeLight(homeLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getDescription());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals((-5.5F), homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals((-11.0F), homeLight1.getWidth(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getCurrency());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertEquals((-11.0F), homeLight1.getHeight(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertEquals((-11.0F), homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertEquals((-11.0F), homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals((-5.5F), homeLight1.getX(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals((-11.0F), homeLight1.getDepth(), 0.01F);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      homeLight0.setNameXOffset((-1.3961023F));
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-1.3961023F), homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      
      homeLight0.setHeight(2.0F);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(2.0F, homeLight0.getHeight(), 0.01F);
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-1.3961023F), homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      
      boolean boolean1 = homeLight0.isBottomLeftPointAt(429.44F, 599.1682F, 429.44F);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertFalse(boolean1 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(2.0F, homeLight0.getHeight(), 0.01F);
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-1.3961023F), homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      
      boolean boolean2 = homeLight1.isTopRightPointAt((-1.3961023F), (-1.3961023F), 429.44F);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(boolean2);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getName());
      assertEquals(2.0F, homeLight0.getHeight(), 0.01F);
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-1.3961023F), homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertEquals((-5.5F), homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals((-11.0F), homeLight1.getWidth(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getCurrency());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isVisible());
      assertEquals((-11.0F), homeLight1.getHeight(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertEquals((-11.0F), homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertEquals((-11.0F), homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals((-5.5F), homeLight1.getX(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertEquals((-11.0F), homeLight1.getDepth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isModelMirrored());
      
      homeLight0.setVisible(true);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isModelMirrored());
      
      homeLight0.setNameAngle(0.0F);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isModelMirrored());
      
      homeLight0.setMovable(true);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getCurrency());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isModelMirrored());
      
      // Undeclared exception!
      try { 
        homeLight0.setHeight((-4004.3623F));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      String string0 = resourceURLContent0.getJAREntryName();
      assertEquals("com/eteks/sweethome3d/model/", string0);
      assertNotNull(string0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      lightSourceArray0[3] = lightSourceArray0[2];
      lightSourceArray0[4] = lightSourceArray0[2];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      
      homeLight0.setDescription("");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isNameVisible());
      assertEquals("", homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      
      float float1 = homeLight0.getNameXOffset();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(0.0F, float1, 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isNameVisible());
      assertEquals("", homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      
      homeLight0.setNameYOffset(4.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((float)float0, (float)float1, 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isNameVisible());
      assertEquals("", homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(4.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      
      Level level0 = new Level("", 2637.65F, 2637.65F, 0L);
      assertNotNull(level0);
      assertEquals(2637.65F, level0.getElevation(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals(2637.65F, level0.getFloorThickness(), 0.01F);
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      assertEquals("", level0.getName());
      
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("OC;'75y[^3h?S", propertyChangeListener0);
      assertNotNull(propertyChangeListenerProxy0);
      assertEquals("OC;'75y[^3h?S", propertyChangeListenerProxy0.getPropertyName());
      
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("OC;'75y[^3h?S", propertyChangeListenerProxy0);
      assertFalse(propertyChangeListenerProxy1.equals((Object)propertyChangeListenerProxy0));
      assertNotNull(propertyChangeListenerProxy1);
      assertEquals("OC;'75y[^3h?S", propertyChangeListenerProxy0.getPropertyName());
      assertEquals("OC;'75y[^3h?S", propertyChangeListenerProxy1.getPropertyName());
      
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("3700-", propertyChangeListenerProxy1);
      assertFalse(propertyChangeListenerProxy0.equals((Object)propertyChangeListenerProxy1));
      assertFalse(propertyChangeListenerProxy1.equals((Object)propertyChangeListenerProxy0));
      assertFalse(propertyChangeListenerProxy2.equals((Object)propertyChangeListenerProxy1));
      assertFalse(propertyChangeListenerProxy2.equals((Object)propertyChangeListenerProxy0));
      assertNotNull(propertyChangeListenerProxy2);
      assertEquals("OC;'75y[^3h?S", propertyChangeListenerProxy0.getPropertyName());
      assertEquals("OC;'75y[^3h?S", propertyChangeListenerProxy1.getPropertyName());
      assertEquals("3700-", propertyChangeListenerProxy2.getPropertyName());
      
      level0.addPropertyChangeListener(propertyChangeListenerProxy0);
      assertNotSame(propertyChangeListenerProxy0, propertyChangeListenerProxy2);
      assertNotSame(propertyChangeListenerProxy0, propertyChangeListenerProxy1);
      assertFalse(propertyChangeListenerProxy0.equals((Object)propertyChangeListenerProxy2));
      assertFalse(propertyChangeListenerProxy0.equals((Object)propertyChangeListenerProxy1));
      assertEquals(2637.65F, level0.getElevation(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals(2637.65F, level0.getFloorThickness(), 0.01F);
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      assertEquals("", level0.getName());
      assertEquals("OC;'75y[^3h?S", propertyChangeListenerProxy0.getPropertyName());
      
      homeLight0.setLevel(level0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((float)float0, (float)float1, 0.01F);
      assertEquals(2637.65F, level0.getElevation(), 0.01F);
      assertTrue(level0.isVisible());
      assertEquals(2637.65F, level0.getFloorThickness(), 0.01F);
      assertEquals(0.0F, level0.getHeight(), 0.01F);
      assertEquals("", level0.getName());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(2637.65F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isNameVisible());
      assertEquals("", homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(4.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      
      float float2 = homeLight0.getNameAngle();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((float)float0, (float)float1, 0.01F);
      assertEquals(float2, float1, 0.01F);
      assertEquals(0.0F, float2, 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(2637.65F, homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertFalse(homeLight0.isNameVisible());
      assertEquals("", homeLight0.getDescription());
      assertNull(homeLight0.getName());
      assertEquals(4.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[3] = "";
      Long long0 = new Long((-55L));
      assertEquals((-55L), (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) (-55L));
      assertEquals((-55.0F), (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      int int0 = Long.compareUnsigned((-3067L), (-3067L));
      assertEquals(0, int0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-55L), (-55L), (-55L), (-55L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      
      boolean boolean1 = homeLight0.isTopLeftPointAt(3.4028235E38F, (-55L), 3.4028235E38F);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      
      BigDecimal bigDecimal1 = homeLight0.getPriceValueAddedTaxIncluded();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
      assertEquals((byte)2, bigDecimal1.byteValue());
      assertEquals((short)2, bigDecimal1.shortValue());
      
      Float float1 = homeLight0.getShininess();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertNull(float1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((-55.0F), catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertEquals((-55L), (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-55.0F), catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals((-55.0F), catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-55.0F), catalogLight0.getDepth(), 0.01F);
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals((-55.0F), catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isTexturable());
      assertEquals((-55.0F), homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals((-55.0F), homeLight0.getWidth(), 0.01F);
      assertEquals((-55.0F), homeLight0.getHeight(), 0.01F);
      assertEquals((-55.0F), homeLight0.getGroundElevation(), 0.01F);
      assertEquals((-27.5F), homeLight0.getX(), 0.01F);
      assertEquals((-27.5F), homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals((-55.0F), homeLight0.getDepth(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = null;
      stringArray0[3] = "";
      stringArray0[5] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      assertEquals(0.0F, lightSource0.getZ(), 0.01F);
      
      lightSourceArray0[2] = lightSource0;
      LightSource lightSource1 = new LightSource(791, 0L, 791, 46);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(46, lightSource1.getColor());
      assertEquals(0.0F, lightSource1.getY(), 0.01F);
      assertEquals(791.0F, lightSource1.getX(), 0.01F);
      assertNull(lightSource1.getDiameter());
      assertEquals(791.0F, lightSource1.getZ(), 0.01F);
      
      lightSourceArray0[3] = lightSource1;
      lightSourceArray0[4] = lightSource1;
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource2 = new LightSource(0L, 0.0F, (-19.779608F), 46);
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertNotNull(lightSource2);
      assertEquals((-19.779608F), lightSource2.getZ(), 0.01F);
      assertNull(lightSource2.getDiameter());
      assertEquals(0.0F, lightSource2.getY(), 0.01F);
      assertEquals(46, lightSource2.getColor());
      assertEquals(0.0F, lightSource2.getX(), 0.01F);
      
      lightSourceArray0[6] = lightSource2;
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      BigDecimal bigDecimal1 = homeLight0.getPriceValueAddedTaxIncluded();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(bigDecimal1);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals((short)2, bigDecimal1.shortValue());
      assertEquals((byte)2, bigDecimal1.byteValue());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight1);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isNameVisible());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      homeLight1.setAngle(2.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals(2.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertNull(homeLight1.getColor());
      assertFalse(homeLight1.isModelMirrored());
      assertFalse(homeLight1.isNameVisible());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeLight0.getModel();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight1);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertSame(resourceURLContent1, resourceURLContent0);
      assertFalse(bigDecimal0.equals((Object)bigDecimal1));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(resourceURLContent1);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent1.isJAREntry());
      assertTrue(resourceURLContent1.isMultiPartResource());
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      
      HomeLight homeLight1 = new HomeLight(homeLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isResizable());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getColor());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getDescription());
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      
      HomeLight homeLight2 = homeLight0.clone();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight0, homeLight2);
      assertNotSame(homeLight2, homeLight1);
      assertNotSame(homeLight2, homeLight0);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight2.equals((Object)homeLight1));
      assertFalse(homeLight2.equals((Object)homeLight0));
      assertNotNull(homeLight2);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight2.getDescription());
      assertEquals(0.0F, homeLight2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight2.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight2.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight2.getNameAngle(), 0.01F);
      assertNull(homeLight2.getStaircaseCutOutShape());
      assertNull(homeLight2.getCatalogId());
      assertEquals(0.0F, homeLight2.getGroundElevation(), 0.01F);
      assertTrue(homeLight2.isResizable());
      assertTrue(homeLight2.isMovable());
      assertNull(homeLight2.getShininess());
      assertEquals(0.0F, homeLight2.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight2.getPower(), 0.01F);
      assertEquals(0.0F, homeLight2.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight2.getWidth(), 0.01F);
      assertNull(homeLight2.getCurrency());
      assertTrue(homeLight2.isVisible());
      assertTrue(homeLight2.isDeformable());
      assertNull(homeLight2.getColor());
      assertEquals(0.0F, homeLight2.getY(), 0.01F);
      assertFalse(homeLight2.isDoorOrWindow());
      assertEquals(0.0F, homeLight2.getX(), 0.01F);
      assertTrue(homeLight2.isTexturable());
      assertFalse(homeLight2.isModelMirrored());
      assertFalse(homeLight2.isBackFaceShown());
      assertEquals(0.0F, homeLight2.getAngle(), 0.01F);
      assertNull(homeLight2.getName());
      assertFalse(homeLight2.isNameVisible());
      
      homeLight2.setWidth(1400.8629F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight0, homeLight2);
      assertNotSame(homeLight2, homeLight1);
      assertNotSame(homeLight2, homeLight0);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight0.equals((Object)homeLight2));
      assertFalse(homeLight2.equals((Object)homeLight1));
      assertFalse(homeLight2.equals((Object)homeLight0));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight2.getDescription());
      assertEquals(0.0F, homeLight2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight2.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight2.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight2.getNameAngle(), 0.01F);
      assertNull(homeLight2.getStaircaseCutOutShape());
      assertNull(homeLight2.getCatalogId());
      assertEquals(0.0F, homeLight2.getGroundElevation(), 0.01F);
      assertTrue(homeLight2.isResizable());
      assertTrue(homeLight2.isMovable());
      assertNull(homeLight2.getShininess());
      assertEquals(0.0F, homeLight2.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight2.getPower(), 0.01F);
      assertEquals(0.0F, homeLight2.getNameYOffset(), 0.01F);
      assertNull(homeLight2.getCurrency());
      assertTrue(homeLight2.isVisible());
      assertTrue(homeLight2.isDeformable());
      assertNull(homeLight2.getColor());
      assertEquals(0.0F, homeLight2.getY(), 0.01F);
      assertEquals(1400.8629F, homeLight2.getWidth(), 0.01F);
      assertFalse(homeLight2.isDoorOrWindow());
      assertEquals(0.0F, homeLight2.getX(), 0.01F);
      assertTrue(homeLight2.isTexturable());
      assertFalse(homeLight2.isModelMirrored());
      assertFalse(homeLight2.isBackFaceShown());
      assertEquals(0.0F, homeLight2.getAngle(), 0.01F);
      assertNull(homeLight2.getName());
      assertFalse(homeLight2.isNameVisible());
      
      HomeLight homeLight3 = new HomeLight(homeLight2);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight0.equals((Object)homeLight2));
      assertFalse(homeLight2.equals((Object)homeLight1));
      assertFalse(homeLight2.equals((Object)homeLight0));
      assertFalse(homeLight3.equals((Object)homeLight2));
      assertFalse(homeLight3.equals((Object)homeLight1));
      assertFalse(homeLight3.equals((Object)homeLight0));
      assertNotNull(homeLight3);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight2.getDescription());
      assertEquals(0.0F, homeLight2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight2.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight2.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight2.getNameAngle(), 0.01F);
      assertNull(homeLight2.getStaircaseCutOutShape());
      assertNull(homeLight2.getCatalogId());
      assertEquals(0.0F, homeLight2.getGroundElevation(), 0.01F);
      assertTrue(homeLight2.isResizable());
      assertTrue(homeLight2.isMovable());
      assertNull(homeLight2.getShininess());
      assertEquals(0.0F, homeLight2.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight2.getPower(), 0.01F);
      assertEquals(0.0F, homeLight2.getNameYOffset(), 0.01F);
      assertNull(homeLight2.getCurrency());
      assertTrue(homeLight2.isVisible());
      assertTrue(homeLight2.isDeformable());
      assertNull(homeLight2.getColor());
      assertEquals(0.0F, homeLight2.getY(), 0.01F);
      assertEquals(1400.8629F, homeLight2.getWidth(), 0.01F);
      assertFalse(homeLight2.isDoorOrWindow());
      assertEquals(0.0F, homeLight2.getX(), 0.01F);
      assertTrue(homeLight2.isTexturable());
      assertFalse(homeLight2.isModelMirrored());
      assertFalse(homeLight2.isBackFaceShown());
      assertEquals(0.0F, homeLight2.getAngle(), 0.01F);
      assertNull(homeLight2.getName());
      assertFalse(homeLight2.isNameVisible());
      assertNull(homeLight3.getCatalogId());
      assertNull(homeLight3.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight3.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight3.getPower(), 0.01F);
      assertNull(homeLight3.getShininess());
      assertTrue(homeLight3.isResizable());
      assertEquals(0.0F, homeLight3.getDepth(), 0.01F);
      assertNull(homeLight3.getName());
      assertTrue(homeLight3.isMovable());
      assertEquals(0.0F, homeLight3.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight3.getNameYOffset(), 0.01F);
      assertNull(homeLight3.getColor());
      assertFalse(homeLight3.isModelMirrored());
      assertTrue(homeLight3.isTexturable());
      assertNull(homeLight3.getCurrency());
      assertFalse(homeLight3.isNameVisible());
      assertFalse(homeLight3.isBackFaceShown());
      assertEquals(0.0F, homeLight3.getElevation(), 0.01F);
      assertTrue(homeLight3.isDeformable());
      assertTrue(homeLight3.isVisible());
      assertEquals(0.0F, homeLight3.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight3.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight3.getX(), 0.01F);
      assertEquals(0.0F, homeLight3.getGroundElevation(), 0.01F);
      assertNull(homeLight3.getDescription());
      assertFalse(homeLight3.isDoorOrWindow());
      assertEquals(0.0F, homeLight3.getY(), 0.01F);
      assertEquals(1400.8629F, homeLight3.getWidth(), 0.01F);
      
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeLight1.getModel();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertNotSame(homeLight0, homeLight3);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight0, homeLight2);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(homeLight1, homeLight2);
      assertNotSame(homeLight1, homeLight3);
      assertSame(resourceURLContent1, resourceURLContent0);
      assertFalse(homeLight0.equals((Object)homeLight3));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight0.equals((Object)homeLight2));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(homeLight1.equals((Object)homeLight2));
      assertFalse(homeLight1.equals((Object)homeLight3));
      assertNotNull(resourceURLContent1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isDeformable());
      assertTrue(homeLight1.isResizable());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getCatalogId());
      assertNull(homeLight1.getColor());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertTrue(homeLight1.isMovable());
      assertNull(homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getDescription());
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(resourceURLContent1.isMultiPartResource());
      assertTrue(resourceURLContent1.isJAREntry());
      
      homeLight3.setDescription((String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertNotSame(homeLight0, homeLight3);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight0, homeLight2);
      assertNotSame(homeLight2, homeLight1);
      assertNotSame(homeLight2, homeLight0);
      assertNotSame(homeLight2, homeLight3);
      assertNotSame(homeLight3, homeLight2);
      assertNotSame(homeLight3, homeLight1);
      assertNotSame(homeLight3, homeLight0);
      assertFalse(homeLight0.equals((Object)homeLight3));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight0.equals((Object)homeLight2));
      assertFalse(homeLight2.equals((Object)homeLight1));
      assertFalse(homeLight2.equals((Object)homeLight0));
      assertFalse(homeLight2.equals((Object)homeLight3));
      assertFalse(homeLight3.equals((Object)homeLight2));
      assertFalse(homeLight3.equals((Object)homeLight1));
      assertFalse(homeLight3.equals((Object)homeLight0));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight2.getDescription());
      assertEquals(0.0F, homeLight2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight2.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight2.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight2.getNameAngle(), 0.01F);
      assertNull(homeLight2.getStaircaseCutOutShape());
      assertNull(homeLight2.getCatalogId());
      assertEquals(0.0F, homeLight2.getGroundElevation(), 0.01F);
      assertTrue(homeLight2.isResizable());
      assertTrue(homeLight2.isMovable());
      assertNull(homeLight2.getShininess());
      assertEquals(0.0F, homeLight2.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight2.getPower(), 0.01F);
      assertEquals(0.0F, homeLight2.getNameYOffset(), 0.01F);
      assertNull(homeLight2.getCurrency());
      assertTrue(homeLight2.isVisible());
      assertTrue(homeLight2.isDeformable());
      assertNull(homeLight2.getColor());
      assertEquals(0.0F, homeLight2.getY(), 0.01F);
      assertEquals(1400.8629F, homeLight2.getWidth(), 0.01F);
      assertFalse(homeLight2.isDoorOrWindow());
      assertEquals(0.0F, homeLight2.getX(), 0.01F);
      assertTrue(homeLight2.isTexturable());
      assertFalse(homeLight2.isModelMirrored());
      assertFalse(homeLight2.isBackFaceShown());
      assertEquals(0.0F, homeLight2.getAngle(), 0.01F);
      assertNull(homeLight2.getName());
      assertFalse(homeLight2.isNameVisible());
      assertNull(homeLight3.getCatalogId());
      assertNull(homeLight3.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight3.getNameAngle(), 0.01F);
      assertEquals(0.5F, homeLight3.getPower(), 0.01F);
      assertNull(homeLight3.getShininess());
      assertTrue(homeLight3.isResizable());
      assertEquals(0.0F, homeLight3.getDepth(), 0.01F);
      assertNull(homeLight3.getName());
      assertTrue(homeLight3.isMovable());
      assertEquals(0.0F, homeLight3.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight3.getNameYOffset(), 0.01F);
      assertNull(homeLight3.getColor());
      assertFalse(homeLight3.isModelMirrored());
      assertTrue(homeLight3.isTexturable());
      assertNull(homeLight3.getCurrency());
      assertFalse(homeLight3.isNameVisible());
      assertFalse(homeLight3.isBackFaceShown());
      assertEquals(0.0F, homeLight3.getElevation(), 0.01F);
      assertTrue(homeLight3.isDeformable());
      assertTrue(homeLight3.isVisible());
      assertEquals(0.0F, homeLight3.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight3.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight3.getX(), 0.01F);
      assertEquals(0.0F, homeLight3.getGroundElevation(), 0.01F);
      assertNull(homeLight3.getDescription());
      assertFalse(homeLight3.isDoorOrWindow());
      assertEquals(0.0F, homeLight3.getY(), 0.01F);
      assertEquals(1400.8629F, homeLight3.getWidth(), 0.01F);
      
      BigDecimal bigDecimal1 = homeLight2.getPriceValueAddedTaxIncluded();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertSame(bigDecimal1, bigDecimal0);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight3);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight0, homeLight2);
      assertNotSame(homeLight2, homeLight1);
      assertNotSame(homeLight2, homeLight0);
      assertNotSame(homeLight2, homeLight3);
      assertFalse(homeLight0.equals((Object)homeLight3));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight0.equals((Object)homeLight2));
      assertFalse(homeLight2.equals((Object)homeLight1));
      assertFalse(homeLight2.equals((Object)homeLight0));
      assertFalse(homeLight2.equals((Object)homeLight3));
      assertNotNull(bigDecimal1);
      assertEquals((byte)0, bigDecimal1.byteValue());
      assertEquals((short)0, bigDecimal1.shortValue());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getId());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getColor());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(catalogLight0.isProportional());
      assertTrue(catalogLight0.isResizable());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertNull(homeLight2.getDescription());
      assertEquals(0.0F, homeLight2.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight2.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight2.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight2.getNameAngle(), 0.01F);
      assertNull(homeLight2.getStaircaseCutOutShape());
      assertNull(homeLight2.getCatalogId());
      assertEquals(0.0F, homeLight2.getGroundElevation(), 0.01F);
      assertTrue(homeLight2.isResizable());
      assertTrue(homeLight2.isMovable());
      assertNull(homeLight2.getShininess());
      assertEquals(0.0F, homeLight2.getHeight(), 0.01F);
      assertEquals(0.5F, homeLight2.getPower(), 0.01F);
      assertEquals(0.0F, homeLight2.getNameYOffset(), 0.01F);
      assertNull(homeLight2.getCurrency());
      assertTrue(homeLight2.isVisible());
      assertTrue(homeLight2.isDeformable());
      assertNull(homeLight2.getColor());
      assertEquals(0.0F, homeLight2.getY(), 0.01F);
      assertEquals(1400.8629F, homeLight2.getWidth(), 0.01F);
      assertFalse(homeLight2.isDoorOrWindow());
      assertEquals(0.0F, homeLight2.getX(), 0.01F);
      assertTrue(homeLight2.isTexturable());
      assertFalse(homeLight2.isModelMirrored());
      assertFalse(homeLight2.isBackFaceShown());
      assertEquals(0.0F, homeLight2.getAngle(), 0.01F);
      assertNull(homeLight2.getName());
      assertFalse(homeLight2.isNameVisible());
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[7] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(332.69F, 791, 2.0F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      assertEquals(2.0F, lightSource0.getZ(), 0.01F);
      assertEquals(332.69F, lightSource0.getX(), 0.01F);
      
      lightSourceArray0[1] = lightSource0;
      LightSource lightSource1 = new LightSource((-2872), (-487.1F), 332.69F, (-2872), float0);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals(0.0F, lightSource1.getDiameter(), 0.01F);
      assertEquals((-2872.0F), lightSource1.getX(), 0.01F);
      assertEquals((-487.1F), lightSource1.getY(), 0.01F);
      assertEquals(332.69F, lightSource1.getZ(), 0.01F);
      assertEquals((-2872), lightSource1.getColor());
      
      lightSourceArray0[2] = lightSource1;
      LightSource lightSource2 = new LightSource((-487.1F), 332.69F, 791, 46);
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertNotNull(lightSource2);
      assertEquals(46, lightSource2.getColor());
      assertNull(lightSource2.getDiameter());
      assertEquals(332.69F, lightSource2.getY(), 0.01F);
      assertEquals((-487.1F), lightSource2.getX(), 0.01F);
      assertEquals(791.0F, lightSource2.getZ(), 0.01F);
      
      lightSourceArray0[3] = lightSource2;
      lightSourceArray0[4] = lightSource1;
      LightSource lightSource3 = new LightSource(20, 332.69F, 791, 20, float0);
      assertFalse(lightSource3.equals((Object)lightSource1));
      assertFalse(lightSource3.equals((Object)lightSource2));
      assertFalse(lightSource3.equals((Object)lightSource0));
      assertNotNull(lightSource3);
      assertEquals(20.0F, lightSource3.getX(), 0.01F);
      assertEquals(20, lightSource3.getColor());
      assertEquals(0.0F, lightSource3.getDiameter(), 0.01F);
      assertEquals(332.69F, lightSource3.getY(), 0.01F);
      assertEquals(791.0F, lightSource3.getZ(), 0.01F);
      
      LightSource lightSource4 = new LightSource(2.0F, 20, 3094.0688F, (-2872));
      assertFalse(lightSource4.equals((Object)lightSource3));
      assertFalse(lightSource4.equals((Object)lightSource0));
      assertFalse(lightSource4.equals((Object)lightSource2));
      assertFalse(lightSource4.equals((Object)lightSource1));
      assertNotNull(lightSource4);
      assertEquals((-2872), lightSource4.getColor());
      assertEquals(3094.0688F, lightSource4.getZ(), 0.01F);
      assertNull(lightSource4.getDiameter());
      assertEquals(20.0F, lightSource4.getY(), 0.01F);
      assertEquals(2.0F, lightSource4.getX(), 0.01F);
      
      lightSourceArray0[7] = lightSource4;
      lightSourceArray0[8] = lightSource1;
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 332.69F, 0L, 332.69F, 0L, true, lightSourceArray0, "", (float[][]) null, (String) null, true, true, false, bigDecimal0, bigDecimal0, "");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(332.69F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(332.69F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getName());
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(332.69F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(332.69F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getName());
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(332.69F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(332.69F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(166.345F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      homeLight0.setDescription("M2tH$P&m&x.[yz!#");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(332.69F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(332.69F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getName());
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals("M2tH$P&m&x.[yz!#", homeLight0.getDescription());
      assertEquals(332.69F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(332.69F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(166.345F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean0 = homeLight0.intersectsRectangle(1.150444F, 1.150444F, 0.3926991F, 1.150444F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(boolean0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isResizable());
      assertEquals("", catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isProportional());
      assertEquals(332.69F, catalogLight0.getWidth(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertEquals(332.69F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getName());
      assertEquals("", catalogLight0.getCurrency());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals("", homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals("", homeLight0.getCurrency());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals("M2tH$P&m&x.[yz!#", homeLight0.getDescription());
      assertEquals(332.69F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isResizable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(332.69F, homeLight0.getHeight(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(166.345F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[5] = null;
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[10];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      assertEquals(0.0F, lightSource0.getZ(), 0.01F);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      
      lightSourceArray0[2] = lightSource0;
      lightSourceArray0[3] = lightSourceArray0[1];
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource1 = new LightSource(0L, 0.0F, (-19.779608F), 46);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals((-19.779608F), lightSource1.getZ(), 0.01F);
      assertEquals(0.0F, lightSource1.getY(), 0.01F);
      assertEquals(46, lightSource1.getColor());
      assertEquals(0.0F, lightSource1.getX(), 0.01F);
      assertNull(lightSource1.getDiameter());
      
      lightSourceArray0[6] = lightSource1;
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray1.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean0 = homeLight0.isBottomRightPointAt(1.0F, 46, (-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean0);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      homeLight0.setElevation(9.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertFalse(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(9.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(9.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      homeLight0.setMovable(false);
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertFalse(homeLight0.isResizable());
      assertFalse(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(9.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(9.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      boolean boolean2 = homeLight0.isTopLeftPointAt(46.0F, (-3885.4F), (-19.779608F));
      assertEquals(9, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean2);
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertNull(catalogLight0.getName());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertNull(catalogLight0.getId());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertFalse(homeLight0.isResizable());
      assertFalse(homeLight0.isMovable());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getName());
      assertNull(homeLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertEquals(9.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(9.0F, homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      String[] stringArray0 = new String[8];
      Long long0 = new Long(1L);
      assertEquals(1L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 1L);
      assertEquals(1.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 1L, 1L, 1L, 1L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getColor());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getColor());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isMovable());
      
      HomeLight homeLight1 = new HomeLight(homeLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getColor());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isMovable());
      assertEquals(1.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals(1.0F, homeLight1.getGroundElevation(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertNull(homeLight1.getCatalogId());
      assertEquals(1.0F, homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isMovable());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(1.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals(1.0F, homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getColor());
      assertTrue(homeLight1.isDeformable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.5F, homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.5F, homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      HomeLight homeLight2 = new HomeLight(homeLight1);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(homeLight2.equals((Object)homeLight0));
      assertFalse(homeLight2.equals((Object)homeLight1));
      assertNotNull(homeLight2);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getColor());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isMovable());
      assertEquals(1.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals(1.0F, homeLight1.getGroundElevation(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertNull(homeLight1.getCatalogId());
      assertEquals(1.0F, homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isMovable());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(1.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals(1.0F, homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getColor());
      assertTrue(homeLight1.isDeformable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.5F, homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.5F, homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      assertEquals(1.0F, homeLight2.getElevation(), 0.01F);
      assertNull(homeLight2.getDescription());
      assertEquals(0.0F, homeLight2.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight2.getDepth(), 0.01F);
      assertNull(homeLight2.getName());
      assertTrue(homeLight2.isResizable());
      assertEquals(0.0F, homeLight2.getNameAngle(), 0.01F);
      assertFalse(homeLight2.isDoorOrWindow());
      assertNull(homeLight2.getStaircaseCutOutShape());
      assertTrue(homeLight2.isTexturable());
      assertNull(homeLight2.getShininess());
      assertEquals(1.0F, homeLight2.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight2.getY(), 0.01F);
      assertEquals(0.5F, homeLight2.getX(), 0.01F);
      assertEquals(0.0F, homeLight2.getNameXOffset(), 0.01F);
      assertTrue(homeLight2.isDeformable());
      assertTrue(homeLight2.isVisible());
      assertEquals(1.0F, homeLight2.getHeight(), 0.01F);
      assertNull(homeLight2.getCurrency());
      assertEquals(1.0F, homeLight2.getWidth(), 0.01F);
      assertFalse(homeLight2.isNameVisible());
      assertTrue(homeLight2.isMovable());
      assertNull(homeLight2.getColor());
      assertFalse(homeLight2.isBackFaceShown());
      assertFalse(homeLight2.isModelMirrored());
      assertEquals(0.5F, homeLight2.getPower(), 0.01F);
      assertEquals(0.0F, homeLight2.getNameYOffset(), 0.01F);
      assertNull(homeLight2.getCatalogId());
      
      homeLight2.setModelMirrored(true);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight2);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(homeLight1, homeLight2);
      assertNotSame(homeLight2, homeLight0);
      assertNotSame(homeLight2, homeLight1);
      assertFalse(homeLight0.equals((Object)homeLight2));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(homeLight1.equals((Object)homeLight2));
      assertFalse(homeLight2.equals((Object)homeLight0));
      assertFalse(homeLight2.equals((Object)homeLight1));
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getColor());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isMovable());
      assertEquals(1.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals(1.0F, homeLight1.getGroundElevation(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertNull(homeLight1.getCatalogId());
      assertEquals(1.0F, homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isMovable());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(1.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals(1.0F, homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getColor());
      assertTrue(homeLight1.isDeformable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.5F, homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.5F, homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      assertEquals(1.0F, homeLight2.getElevation(), 0.01F);
      assertNull(homeLight2.getDescription());
      assertEquals(0.0F, homeLight2.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight2.getDepth(), 0.01F);
      assertNull(homeLight2.getName());
      assertTrue(homeLight2.isResizable());
      assertEquals(0.0F, homeLight2.getNameAngle(), 0.01F);
      assertFalse(homeLight2.isDoorOrWindow());
      assertNull(homeLight2.getStaircaseCutOutShape());
      assertTrue(homeLight2.isTexturable());
      assertNull(homeLight2.getShininess());
      assertEquals(1.0F, homeLight2.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight2.getY(), 0.01F);
      assertEquals(0.5F, homeLight2.getX(), 0.01F);
      assertEquals(0.0F, homeLight2.getNameXOffset(), 0.01F);
      assertTrue(homeLight2.isDeformable());
      assertTrue(homeLight2.isVisible());
      assertEquals(1.0F, homeLight2.getHeight(), 0.01F);
      assertNull(homeLight2.getCurrency());
      assertEquals(1.0F, homeLight2.getWidth(), 0.01F);
      assertFalse(homeLight2.isNameVisible());
      assertTrue(homeLight2.isMovable());
      assertNull(homeLight2.getColor());
      assertFalse(homeLight2.isBackFaceShown());
      assertEquals(0.5F, homeLight2.getPower(), 0.01F);
      assertTrue(homeLight2.isModelMirrored());
      assertEquals(0.0F, homeLight2.getNameYOffset(), 0.01F);
      assertNull(homeLight2.getCatalogId());
      
      BigDecimal bigDecimal1 = homeLight2.getPriceValueAddedTaxIncluded();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(bigDecimal0, bigDecimal1);
      assertNotSame(homeLight0, homeLight2);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(homeLight1, homeLight2);
      assertNotSame(homeLight2, homeLight0);
      assertNotSame(homeLight2, homeLight1);
      assertNotSame(bigDecimal1, bigDecimal0);
      assertFalse(homeLight0.equals((Object)homeLight2));
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(homeLight1.equals((Object)homeLight2));
      assertFalse(homeLight2.equals((Object)homeLight0));
      assertFalse(homeLight2.equals((Object)homeLight1));
      assertFalse(bigDecimal1.equals((Object)bigDecimal0));
      assertNotNull(bigDecimal1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals(1.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isTexturable());
      assertTrue(catalogLight0.isResizable());
      assertTrue(catalogLight0.isDeformable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertEquals(1.0F, catalogLight0.getGrade(), 0.01F);
      assertEquals(1.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(1L, (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getColor());
      assertEquals(1.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isModifiable());
      assertEquals(1.0F, catalogLight0.getElevation(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertTrue(homeLight0.isDeformable());
      assertEquals(1.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(1.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertFalse(homeLight0.isModelMirrored());
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(1.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertEquals(1.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getX(), 0.01F);
      assertEquals(0.5F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertEquals(1.0F, homeLight0.getDepth(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCurrency());
      assertTrue(homeLight0.isMovable());
      assertEquals(1.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals(1.0F, homeLight1.getGroundElevation(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertNull(homeLight1.getCatalogId());
      assertEquals(1.0F, homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isResizable());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isMovable());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(1.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals(1.0F, homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getColor());
      assertTrue(homeLight1.isDeformable());
      assertFalse(homeLight1.isDoorOrWindow());
      assertEquals(0.5F, homeLight1.getX(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.5F, homeLight1.getY(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      assertEquals(1.0F, homeLight2.getElevation(), 0.01F);
      assertNull(homeLight2.getDescription());
      assertEquals(0.0F, homeLight2.getAngle(), 0.01F);
      assertEquals(1.0F, homeLight2.getDepth(), 0.01F);
      assertNull(homeLight2.getName());
      assertTrue(homeLight2.isResizable());
      assertEquals(0.0F, homeLight2.getNameAngle(), 0.01F);
      assertFalse(homeLight2.isDoorOrWindow());
      assertNull(homeLight2.getStaircaseCutOutShape());
      assertTrue(homeLight2.isTexturable());
      assertNull(homeLight2.getShininess());
      assertEquals(1.0F, homeLight2.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight2.getY(), 0.01F);
      assertEquals(0.5F, homeLight2.getX(), 0.01F);
      assertEquals(0.0F, homeLight2.getNameXOffset(), 0.01F);
      assertTrue(homeLight2.isDeformable());
      assertTrue(homeLight2.isVisible());
      assertEquals(1.0F, homeLight2.getHeight(), 0.01F);
      assertNull(homeLight2.getCurrency());
      assertEquals(1.0F, homeLight2.getWidth(), 0.01F);
      assertFalse(homeLight2.isNameVisible());
      assertTrue(homeLight2.isMovable());
      assertNull(homeLight2.getColor());
      assertFalse(homeLight2.isBackFaceShown());
      assertEquals(0.5F, homeLight2.getPower(), 0.01F);
      assertTrue(homeLight2.isModelMirrored());
      assertEquals(0.0F, homeLight2.getNameYOffset(), 0.01F);
      assertNull(homeLight2.getCatalogId());
      assertEquals((byte)2, bigDecimal1.byteValue());
      assertEquals((short)2, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      String[] stringArray0 = new String[8];
      Long long0 = new Long((-11L));
      assertEquals((-11L), (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) (-11L));
      assertEquals((-11.0F), (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      assertNotNull(bigDecimal0);
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, (-11L), (-11L), (-11L), (-11L), true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(homeLight0.getShininess());
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      boolean boolean1 = homeLight0.isModelMirrored();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(homeLight0.getShininess());
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isBackFaceShown());
      
      homeLight0.setName("Z{<v");
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(homeLight0.getShininess());
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals("Z{<v", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
      
      float float1 = homeLight0.getGroundElevation();
      assertEquals(8, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals((-11.0F), float1, 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertEquals((short)1, bigDecimal0.shortValue());
      assertEquals((byte)1, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals((-11.0F), catalogLight0.getGrade(), 0.01F);
      assertEquals((-11.0F), catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals((-11.0F), catalogLight0.getElevation(), 0.01F);
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals((-11L), (long)catalogLight0.getCreationDate());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertTrue(catalogLight0.isMovable());
      assertNull(catalogLight0.getName());
      assertTrue(catalogLight0.isDeformable());
      assertEquals((-11.0F), catalogLight0.getWidth(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertTrue(catalogLight0.isResizable());
      assertEquals((-11.0F), catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getDescription());
      assertNull(homeLight0.getShininess());
      assertEquals((-11.0F), homeLight0.getElevation(), 0.01F);
      assertEquals((-11.0F), homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertTrue(homeLight0.isDeformable());
      assertEquals((-11.0F), homeLight0.getHeight(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals((-11.0F), homeLight0.getWidth(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertNull(homeLight0.getColor());
      assertEquals("Z{<v", homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals((-5.5F), homeLight0.getY(), 0.01F);
      assertEquals((-5.5F), homeLight0.getX(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isNameVisible());
      assertEquals((-11.0F), homeLight0.getGroundElevation(), 0.01F);
      assertFalse(homeLight0.isBackFaceShown());
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      HomePieceOfFurniture.Property[] homePieceOfFurniture_PropertyArray0 = HomePieceOfFurniture.Property.values();
      assertEquals(21, homePieceOfFurniture_PropertyArray0.length);
      assertNotNull(homePieceOfFurniture_PropertyArray0);
      
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[5] = null;
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(0.0F, lightSource0.getZ(), 0.01F);
      
      lightSourceArray0[2] = lightSource0;
      LightSource lightSource1 = new LightSource(791, 0L, 791, 46);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertNull(lightSource1.getDiameter());
      assertEquals(791.0F, lightSource1.getZ(), 0.01F);
      assertEquals(0.0F, lightSource1.getY(), 0.01F);
      assertEquals(46, lightSource1.getColor());
      assertEquals(791.0F, lightSource1.getX(), 0.01F);
      
      lightSourceArray0[4] = lightSource1;
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource2 = new LightSource(0L, 0.0F, (-479.5861F), 46);
      assertFalse(lightSource2.equals((Object)lightSource1));
      assertFalse(lightSource2.equals((Object)lightSource0));
      assertNotNull(lightSource2);
      assertEquals(0.0F, lightSource2.getX(), 0.01F);
      assertEquals(0.0F, lightSource2.getY(), 0.01F);
      assertEquals((-479.5861F), lightSource2.getZ(), 0.01F);
      assertEquals(46, lightSource2.getColor());
      assertNull(lightSource2.getDiameter());
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, false, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      boolean boolean0 = homeLight0.isBottomRightPointAt(1.0F, 46, (-479.5861F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      homeLight0.setElevation(9.0F);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(9.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(9.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      boolean boolean1 = homeLight0.isBottomLeftPointAt(0.0F, 46, (-2347.2F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertTrue(boolean1 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(9.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(9.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      Float float1 = homeLight0.getShininess();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNull(float1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(9.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(9.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
      
      HomeLight homeLight1 = (HomeLight)homeLight0.clone();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight1);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertTrue(catalogLight0.isDeformable());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals("", catalogLight0.getInformation());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertNull(catalogLight0.getCreator());
      assertNull(catalogLight0.getName());
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isResizable());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertTrue(homeLight0.isVisible());
      assertNull(homeLight0.getShininess());
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertFalse(homeLight0.isResizable());
      assertFalse(homeLight0.isNameVisible());
      assertNull(homeLight0.getName());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(9.0F, homeLight0.getElevation(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertEquals(9.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getColor());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isBackFaceShown());
      assertNull(homeLight1.getName());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertEquals(9.0F, homeLight1.getElevation(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isDoorOrWindow());
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertFalse(homeLight1.isResizable());
      assertEquals(9.0F, homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertTrue(homeLight1.isMovable());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertFalse(homeLight1.isModelMirrored());
      assertNull(homeLight1.getColor());
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertTrue(resourceURLContent0.isJAREntry());
      assertTrue(resourceURLContent0.isMultiPartResource());
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      String[] stringArray0 = new String[10];
      stringArray0[5] = null;
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[10];
      lightSourceArray0[3] = lightSourceArray0[1];
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(10, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(10, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertNotNull(homeLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeLight0.getModel();
      assertEquals(10, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertSame(resourceURLContent1, resourceURLContent0);
      assertNotNull(resourceURLContent1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertTrue(resourceURLContent1.isJAREntry());
      assertTrue(resourceURLContent1.isMultiPartResource());
      
      homeLight0.setTexture((HomeTexture) null);
      assertEquals(10, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      HomeLight homeLight1 = new HomeLight(homeLight0);
      assertEquals(10, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertNotNull(homeLight1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isDeformable());
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      
      homeLight1.setY(0L);
      assertEquals(10, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isDeformable());
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
      
      float float1 = homeLight1.getNameXOffset();
      assertEquals(10, stringArray0.length);
      assertEquals(10, lightSourceArray0.length);
      assertSame(resourceURLContent0, resourceURLContent1);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertEquals(0.0F, float1, 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertTrue(catalogLight0.isMovable());
      assertFalse(catalogLight0.isBackFaceShown());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getCreator());
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertFalse(catalogLight0.isModifiable());
      assertTrue(catalogLight0.isResizable());
      assertFalse(homeLight0.isNameVisible());
      assertFalse(homeLight0.isBackFaceShown());
      assertTrue(homeLight0.isDeformable());
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertFalse(homeLight0.isModelMirrored());
      assertNull(homeLight0.getColor());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getCurrency());
      assertNull(homeLight0.getName());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertNull(homeLight0.getCatalogId());
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertNull(homeLight0.getShininess());
      assertTrue(homeLight0.isResizable());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertNull(homeLight0.getDescription());
      assertFalse(homeLight0.isDoorOrWindow());
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertNull(homeLight1.getColor());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isVisible());
      assertTrue(homeLight1.isResizable());
      assertTrue(homeLight1.isDeformable());
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertFalse(homeLight1.isBackFaceShown());
      assertFalse(homeLight1.isNameVisible());
      assertNull(homeLight1.getName());
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[3] = "";
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Float float0 = new Float((float) 0L);
      assertEquals(0.0F, (float)float0, 0.01F);
      assertNotNull(float0);
      
      boolean boolean0 = Float.isFinite(0L);
      assertTrue(boolean0);
      
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      assertNotNull(resourceURLContent0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      
      LightSource[] lightSourceArray0 = new LightSource[9];
      LightSource lightSource0 = new LightSource(1.0F, 791, 0.0F, 791, float0);
      assertNotNull(lightSource0);
      assertEquals(0.0F, lightSource0.getDiameter(), 0.01F);
      assertEquals(791, lightSource0.getColor());
      assertEquals(1.0F, lightSource0.getX(), 0.01F);
      assertEquals(0.0F, lightSource0.getZ(), 0.01F);
      assertEquals(791.0F, lightSource0.getY(), 0.01F);
      
      lightSourceArray0[4] = lightSourceArray0[2];
      lightSourceArray0[5] = lightSource0;
      LightSource lightSource1 = new LightSource(0L, 0.0F, (-19.779608F), 791);
      assertFalse(lightSource1.equals((Object)lightSource0));
      assertNotNull(lightSource1);
      assertEquals((-19.779608F), lightSource1.getZ(), 0.01F);
      assertEquals(0.0F, lightSource1.getX(), 0.01F);
      assertEquals(0.0F, lightSource1.getY(), 0.01F);
      assertNull(lightSource1.getDiameter());
      assertEquals(791, lightSource1.getColor());
      
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      assertNotNull(bigDecimal0);
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      
      CatalogLight catalogLight0 = new CatalogLight((String) null, (String) null, (String) null, "", stringArray0, long0, float0, resourceURLContent0, resourceURLContent0, resourceURLContent0, 0L, 0L, 0L, 0L, true, lightSourceArray0, stringArray0[7], (float[][]) null, (String) null, true, true, true, bigDecimal0, bigDecimal0, (String) null);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotNull(catalogLight0);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      
      LightSource[] lightSourceArray1 = catalogLight0.getLightSources();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertEquals(9, lightSourceArray1.length);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertNotSame(lightSourceArray1, lightSourceArray0);
      assertFalse(lightSourceArray1.equals((Object)lightSourceArray0));
      assertNotNull(lightSourceArray1);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      
      HomeLight homeLight0 = new HomeLight(catalogLight0);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight0);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      
      HomeLight homeLight1 = homeLight0.clone();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNotNull(homeLight1);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isNameVisible());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getColor());
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getName());
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertNull(homeLight1.getDescription());
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      
      homeLight1.setDescription("com.eteks.sweethome3d.tools.URLContent");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isNameVisible());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getColor());
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals("com.eteks.sweethome3d.tools.URLContent", homeLight1.getDescription());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getName());
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight1.getWidth(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      
      homeLight1.setWidth((-545.866F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertFalse(homeLight1.isNameVisible());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getColor());
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals("com.eteks.sweethome3d.tools.URLContent", homeLight1.getDescription());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertEquals(0.0F, homeLight1.getNameAngle(), 0.01F);
      assertNull(homeLight1.getName());
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals((-545.866F), homeLight1.getWidth(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      
      homeLight1.setNameAngle((-1.0F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(5.2831855F, homeLight1.getNameAngle(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getColor());
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals("com.eteks.sweethome3d.tools.URLContent", homeLight1.getDescription());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertEquals(0.0F, homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertNull(homeLight1.getName());
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals((-545.866F), homeLight1.getWidth(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      
      homeLight0.setAngle(0L);
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      
      homeLight1.setHeight((-1.0F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(5.2831855F, homeLight1.getNameAngle(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getColor());
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals("com.eteks.sweethome3d.tools.URLContent", homeLight1.getDescription());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertEquals((-1.0F), homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertNull(homeLight1.getName());
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals((-545.866F), homeLight1.getWidth(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      
      boolean boolean1 = homeLight1.isNameCenterPointAt((-19.779608F), 791, (-545.866F));
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(boolean1 == boolean0);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean1);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(5.2831855F, homeLight1.getNameAngle(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getColor());
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals("com.eteks.sweethome3d.tools.URLContent", homeLight1.getDescription());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertEquals((-1.0F), homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertNull(homeLight1.getName());
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals((-545.866F), homeLight1.getWidth(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      
      boolean boolean2 = homeLight1.isModelMirrored();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(homeLight1, homeLight0);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(homeLight1.equals((Object)homeLight0));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertFalse(boolean2);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertNull(homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertEquals(0.0F, homeLight1.getX(), 0.01F);
      assertEquals(0.0F, homeLight1.getGroundElevation(), 0.01F);
      assertFalse(homeLight1.isDoorOrWindow());
      assertFalse(homeLight1.isModelMirrored());
      assertEquals(0.0F, homeLight1.getAngle(), 0.01F);
      assertTrue(homeLight1.isTexturable());
      assertEquals(5.2831855F, homeLight1.getNameAngle(), 0.01F);
      assertFalse(homeLight1.isNameVisible());
      assertFalse(homeLight1.isBackFaceShown());
      assertEquals(0.5F, homeLight1.getPower(), 0.01F);
      assertNull(homeLight1.getCurrency());
      assertNull(homeLight1.getColor());
      assertNull(homeLight1.getCatalogId());
      assertEquals(0.0F, homeLight1.getNameYOffset(), 0.01F);
      assertEquals("com.eteks.sweethome3d.tools.URLContent", homeLight1.getDescription());
      assertNull(homeLight1.getShininess());
      assertTrue(homeLight1.isResizable());
      assertEquals((-1.0F), homeLight1.getHeight(), 0.01F);
      assertNull(homeLight1.getStaircaseCutOutShape());
      assertNull(homeLight1.getName());
      assertTrue(homeLight1.isMovable());
      assertEquals(0.0F, homeLight1.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight1.getElevation(), 0.01F);
      assertTrue(homeLight1.isDeformable());
      assertEquals(0.0F, homeLight1.getDepth(), 0.01F);
      assertTrue(homeLight1.isVisible());
      assertEquals(0.0F, homeLight1.getY(), 0.01F);
      assertEquals((-545.866F), homeLight1.getWidth(), 0.01F);
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      
      homeLight0.setName("");
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals("", homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
      
      boolean boolean3 = homeLight0.isNameVisible();
      assertEquals(9, stringArray0.length);
      assertEquals(9, lightSourceArray0.length);
      assertNotSame(homeLight0, homeLight1);
      assertNotSame(lightSourceArray0, lightSourceArray1);
      assertFalse(homeLight0.equals((Object)homeLight1));
      assertFalse(lightSourceArray0.equals((Object)lightSourceArray1));
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3);
      assertNull(homeLight0.getDescription());
      assertEquals(0.0F, homeLight0.getElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getDepth(), 0.01F);
      assertEquals(0.0F, homeLight0.getGroundElevation(), 0.01F);
      assertEquals(0.0F, homeLight0.getNameXOffset(), 0.01F);
      assertEquals(0.0F, homeLight0.getY(), 0.01F);
      assertEquals(0.0F, homeLight0.getX(), 0.01F);
      assertTrue(homeLight0.isResizable());
      assertNull(homeLight0.getCatalogId());
      assertTrue(homeLight0.isMovable());
      assertNull(homeLight0.getShininess());
      assertEquals(0.0F, homeLight0.getNameAngle(), 0.01F);
      assertNull(homeLight0.getStaircaseCutOutShape());
      assertEquals(0.5F, homeLight0.getPower(), 0.01F);
      assertNull(homeLight0.getCurrency());
      assertEquals(0.0F, homeLight0.getHeight(), 0.01F);
      assertEquals(0.0F, homeLight0.getWidth(), 0.01F);
      assertTrue(homeLight0.isVisible());
      assertEquals(0.0F, homeLight0.getNameYOffset(), 0.01F);
      assertTrue(homeLight0.isDeformable());
      assertNull(homeLight0.getColor());
      assertFalse(homeLight0.isModelMirrored());
      assertFalse(homeLight0.isBackFaceShown());
      assertFalse(homeLight0.isDoorOrWindow());
      assertEquals("", homeLight0.getName());
      assertFalse(homeLight0.isNameVisible());
      assertEquals(0.0F, homeLight0.getAngle(), 0.01F);
      assertTrue(homeLight0.isTexturable());
      assertTrue(resourceURLContent0.isMultiPartResource());
      assertTrue(resourceURLContent0.isJAREntry());
      assertEquals((short)0, bigDecimal0.shortValue());
      assertEquals((byte)0, bigDecimal0.byteValue());
      assertFalse(catalogLight0.isBackFaceShown());
      assertEquals(0.0F, catalogLight0.getDepth(), 0.01F);
      assertEquals(0L, (long)catalogLight0.getCreationDate());
      assertTrue(catalogLight0.isDeformable());
      assertEquals("", catalogLight0.getInformation());
      assertFalse(catalogLight0.isModifiable());
      assertNull(catalogLight0.getColor());
      assertTrue(catalogLight0.isMovable());
      assertTrue(catalogLight0.isResizable());
      assertNull(catalogLight0.getStaircaseCutOutShape());
      assertEquals(0.0F, catalogLight0.getGrade(), 0.01F);
      assertTrue(catalogLight0.isProportional());
      assertEquals(0.3926991F, catalogLight0.getIconYaw(), 0.01F);
      assertTrue(catalogLight0.isTexturable());
      assertNull(catalogLight0.getName());
      assertNull(catalogLight0.getCreator());
      assertEquals(0.0F, catalogLight0.getElevation(), 0.01F);
      assertFalse(catalogLight0.isDoorOrWindow());
      assertNull(catalogLight0.getDescription());
      assertEquals(0.0F, catalogLight0.getHeight(), 0.01F);
      assertNull(catalogLight0.getId());
      assertEquals(0.0F, catalogLight0.getWidth(), 0.01F);
      assertNull(catalogLight0.getCurrency());
  }
}
