/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 18:03:12 GMT 2019
 */

package com.ib.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ib.client.Contract;
import com.ib.client.ContractDetails;
import com.ib.client.EWrapperMsgGenerator;
import com.ib.client.Execution;
import com.ib.client.Order;
import com.ib.client.OrderState;
import com.ib.client.UnderComp;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EWrapperMsgGenerator_ESTest extends EWrapperMsgGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      String string0 = EWrapperMsgGenerator.scannerData(659, 121, contractDetails0, (String) null, "com.ib.client.Order", "Z <5>Ms", "com.ib.client.TagValue");
      assertEquals("id = 659 rank=121 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName=null tradingClass=null distance=null benchmark=com.ib.client.Order projection=Z <5>Ms legsStr=com.ib.client.TagValue", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.realtimeBar(1069, 1069, 1069, 1069, 1069, 1069, 1L, 1L, (-1093));
      assertEquals("id=1069 time = 1069 open=1069.0 high=1069.0 low=1069.0 close=1069.0 volume=1 count=-1093 WAP=1.0", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.historicalData(2672, " firmQuoteOnly=", 0, 0.0, 0.0, (-898.0), (-874), 13, 0.0, true);
      assertEquals("id=2672 date =  firmQuoteOnly= open=0.0 high=0.0 low=0.0 close=-898.0 volume=-874 count=13 WAP=0.0 hasGaps=true", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateNewsBulletin(0, 3479, "7 a5qbDfP?m]N(*%_HP", "Y$dgj@HZaJBi3");
      assertEquals("MsgId=0 :: MsgType=3479 :: Origin=Y$dgj@HZaJBi3 :: Message=7 a5qbDfP?m]N(*%_HP", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepthL2(892, 13, "id=0  unknown= remaining=", 140, 140, (-1496), (-1496));
      assertEquals("updateMktDepth: 892 13 id=0  unknown= remaining= 140 140 -1496.0 -1496", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepth(334, 0, (-660), (-258), 0, 0);
      assertEquals("updateMktDepth: 334 0 -660 -258 0.0 0", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepth((-4472), (-4472), (-4472), (-542), 1.7976931348623157E308, (-542));
      assertEquals("updateMktDepth: -4472 -4472 -4472 -542 1.7976931348623157E308 -542", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Contract contract0 = new Contract();
      String string0 = EWrapperMsgGenerator.updatePortfolio(contract0, 0, 0, 708.0, 0.0, 0, 0, "8n8'#-H%C ");
      assertEquals("updatePortfolio: conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n0 0.0 708.0 0.0 0.0 0.0 8n8'#-H%C ", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateAccountValue(" comboLegsDescrip=", (String) null, "", "wN5C Q5B<fr{ep");
      assertEquals("updateAccountValue:  comboLegsDescrip= null  wN5C Q5B<fr{ep", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.orderStatus(109, "updateAccountTime: ", 8, 63, 0, (-2179), 1, 0, 8, "updateMktDepth: 63 0 id = -414 =============== end =============== 0 0 -414.0 1647");
      assertEquals("order status: orderId=109 clientId=8 permId=-2179 status=updateAccountTime:  filled=8 remaining=63 avgFillPrice=0.0 lastFillPrice=0.0 parent Id=1 whyHeld=updateMktDepth: 63 0 id = -414 =============== end =============== 0 0 -414.0 1647", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickEFP((-416), 358, (-1462.9432724), (String) null, (-1462.9432724), 0, (String) null, 0.0, 13);
      assertEquals("id=-416  unknown: basisPoints = -1462.9432724/null impliedFuture = -1462.9432724 holdDays = 0 futureExpiry = null dividendImpact = 0.0 dividends to expiry = 13.0", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickEFP(109, 0, 0, "", 1647, (-414), "reqId = -414 =============== end ===============", 0, 0);
      assertEquals("id=109  bidSize: basisPoints = 0.0/ impliedFuture = 1647.0 holdDays = -414 futureExpiry = reqId = -414 =============== end =============== dividendImpact = 0.0 dividends to expiry = 0.0", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickString((-1496), 892, (String) null);
      assertEquals("id=-1496  unknown=null", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickGeneric(109, (-660), 3603.2776633402973);
      assertEquals("id=109  unknown=3603.2776633402973", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-275), 13, 13, (-348.843990328), 0.0, 568.675819057292);
      assertEquals("id=-275  modelOptComp: vol = 13.0 delta = N/A: modelPrice = 0.0: pvDividend = 568.675819057292", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(25, 13, 2.0, 1, (-2377.69383981), 13);
      assertEquals("id=25  modelOptComp: vol = 2.0 delta = 1.0: modelPrice = N/A: pvDividend = 13.0", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickPrice((-394), 109, (-821.32699768), (-1));
      assertEquals("id=-394  unknown=-821.32699768  canAutoExecute", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickPrice(1, 0, 1265.780012, 63);
      assertEquals("id=1  bidSize=1265.780012  canAutoExecute", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.fundamentalData(712, " =============== end ===============");
      assertEquals("id  = 712 len = 36\n =============== end ===============", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.updatePortfolio((Contract) null, 218, 0.0, 0.0, 218, 0.0, 64.926213956, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.scannerData(616, 2146715323, (ContractDetails) null, "e(b?>><o", "Z.['.36r6=UP\"{UJO", " type=", "e(b?>><o");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Order order0 = new Order();
      Contract contract0 = new Contract();
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.openOrder(2, contract0, order0, (OrderState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Contract contract0 = new Contract();
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.execDetails((-1294), contract0, (Execution) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.deltaNeutralValidation(13, (UnderComp) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.contractMsg((Contract) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.bondContractDetails((-409), (ContractDetails) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Contract contract0 = new Contract();
      String string0 = EWrapperMsgGenerator.contractMsg(contract0);
      assertEquals("conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      order0.m_algoStrategy = "au*ctonVolum";
      Contract contract0 = new Contract();
      order0.m_algoParams = contract0.m_comboLegs;
      String string0 = EWrapperMsgGenerator.openOrder(Integer.MAX_VALUE, contract0, order0, orderState0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      order0.m_algoStrategy = "au*ctionVolum";
      Contract contract0 = new Contract();
      String string0 = EWrapperMsgGenerator.openOrder(1, contract0, order0, orderState0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Contract contract0 = new Contract();
      Order order0 = new Order();
      UnderComp underComp0 = new UnderComp();
      contract0.m_underComp = underComp0;
      OrderState orderState0 = new OrderState((String) null, (String) null, (String) null, "wl.23lV?rtx", 0, 1511.9312962, (-826.1947549358), " clientId=", (String) null);
      String string0 = EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      Contract contract0 = new Contract(98, (String) null, "BAG", "askPrice", 1343.5266389392843, (String) null, "au*ctionVolum", (String) null, "au*ctionVolum", (String) null, (Vector) null, "nIAZ7mc;Q-'0", false, "SpxGw", (String) null);
      contract0.m_comboLegsDescrip = " faPercentage=";
      String string0 = EWrapperMsgGenerator.openOrder(1, contract0, order0, orderState0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      Contract contract0 = new Contract(98, (String) null, "BAG", "askPrice", 1343.5266389392843, (String) null, "au*ctionVolum", (String) null, "au*ctionVolum", (String) null, (Vector) null, "nIAZ7mc;Q-'0", false, "SpxGw", (String) null);
      String string0 = EWrapperMsgGenerator.openOrder(1, contract0, order0, orderState0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(Integer.MAX_VALUE, 13, 0.0, 1.7976931348623157E308, 1.7976931348623157E308, 1.7976931348623157E308);
      assertEquals("id=2147483647  modelOptComp: vol = 0.0 delta = N/A: modelPrice = N/A: pvDividend = N/A", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(1114, 13, 13, (-2225.8810524), (-2202.4), (-2202.4));
      assertEquals("id=1114  modelOptComp: vol = 13.0 delta = N/A: modelPrice = N/A: pvDividend = N/A", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-1), 13, 0, 0.0, 13, 0);
      assertEquals("id=-1  modelOptComp: vol = 0.0 delta = 0.0: modelPrice = 13.0: pvDividend = 0.0", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(0, 0, 1.7976931348623157E308, 1.7976931348623157E308, '?', 1.7976931348623157E308);
      assertEquals("id=0  bidSize: vol = N/A delta = N/A", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(0, 1251, (-2138.702068900262), (-2138.702068900262), 0.0, (-228.902043353942));
      assertEquals("id=0  unknown: vol = N/A delta = N/A", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickPrice(Integer.MAX_VALUE, 0, 'n', 0);
      assertEquals("id=2147483647  bidSize=110.0  noAutoExecute", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      UnderComp underComp0 = new UnderComp();
      String string0 = EWrapperMsgGenerator.deltaNeutralValidation(1114, underComp0);
      assertEquals("id = 1114 underComp.conId =0 underComp.delta =0.0 underComp.price =0.0", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.fundamentalData(0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      String string0 = EWrapperMsgGenerator.contractDetails((-1182), contractDetails0);
      assertEquals("reqId = -1182 ===================================\n ---- Contract Details begin ----\nconid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\nmarketName = null\ntradingClass = null\nminTick = 0.0\nprice magnifier = 0\norderTypes = null\nvalidExchanges = null\nunderConId = 0\nlongName = null\ncontractMonth = null\nindustry = null\ncategory = null\nsubcategory = null\ntimeZoneId = null\ntradingHours = null\nliquidHours = null\n ---- Contract Details End ----\n", string0);
  }
}
