/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 23:57:14 GMT 2019
 */

package module;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Dialog;
import java.util.ArrayList;
import java.util.Collection;
import java.util.TreeSet;
import java.util.Vector;
import module.Kernel;
import module.Message;
import module.Module;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Kernel_ESTest extends Kernel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Kernel kernel0 = new Kernel();
      Vector<Module> vector0 = new Vector<Module>();
      Message message0 = new Message();
      kernel0.sendMessageNotify(vector0, message0);
      kernel0.start();
      kernel0.getKernel();
      try { 
        kernel0.unregister((Module) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // mod=null
         //
         verifyException("module.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Kernel kernel0 = new Kernel();
      kernel0.getKernel();
      Collection<Module> collection0 = null;
      String string0 = "dbK0";
      // Undeclared exception!
      try { 
        Dialog.ModalExclusionType.valueOf("QeJv3vIw9\"p|");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant java.awt.Dialog.ModalExclusionType.QeJv3vIw9\"p|
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Kernel kernel0 = new Kernel();
      try { 
        kernel0.register((Module) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // mod=null
         //
         verifyException("module.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Kernel kernel0 = new Kernel();
      kernel0.getThread();
      String string0 = "";
      try { 
        kernel0.unloadModule("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // mod=
         //
         verifyException("module.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Kernel kernel0 = new Kernel();
      String string0 = "module.Kernel";
      ArrayList<Module> arrayList0 = new ArrayList<Module>();
      Kernel[] kernelArray0 = new Kernel[6];
      kernelArray0[0] = kernel0;
      kernel0.getKernel();
      kernelArray0[1] = null;
      kernelArray0[2] = kernel0;
      kernelArray0[3] = kernel0;
      Kernel kernel1 = new Kernel();
      kernelArray0[4] = kernel1;
      kernel1.getKernel();
      kernelArray0[5] = null;
      arrayList0.toArray(kernelArray0);
      Message message0 = null;
      kernel0.sendMessageNotify(arrayList0, (Message) null);
      try { 
        kernel0.unloadModule("module.Kernel");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // mod=module.Kernel
         //
         verifyException("module.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Kernel kernel0 = new Kernel();
      kernel0.getKernel();
      String string0 = "";
      try { 
        kernel0.unloadModule((Module) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // mod=null
         //
         verifyException("module.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Kernel kernel0 = new Kernel();
      TreeSet<Module> treeSet0 = new TreeSet<Module>();
      int int0 = 192;
      Message message0 = new Message();
      try { 
        kernel0.sendMessage(message0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("module.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Kernel kernel0 = new Kernel();
      String string0 = "KERNEL REGISTERED: ";
      String string1 = "REGISTERED";
      try { 
        kernel0.unloadModule("KERNEL REGISTERED: ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // mod=KERNEL REGISTERED: 
         //
         verifyException("module.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Kernel kernel0 = new Kernel();
      String string0 = "MapCell[x=%f,y=%f,tile=%d,layer=%d]";
      try { 
        kernel0.loadModule("MapCell[x=%f,y=%f,tile=%d,layer=%d]");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // java.lang.ClassNotFoundException: MapCell[x=%f,y=%f,tile=%d,layer=%d]
         //
         verifyException("module.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Kernel kernel0 = new Kernel();
      kernel0.getKernel();
      String string0 = "";
      Object[] objectArray0 = new Object[7];
      kernel0.unsubscribe((Module) null);
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) "";
      try { 
        kernel0.request("", "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Requests are not implemented
         //
         verifyException("module.Kernel", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Kernel kernel0 = new Kernel();
      String string0 = "s";
      try { 
        kernel0.loadModule("N\"");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // java.lang.ClassNotFoundException: Class 'N\".class' should be in target project, but could not be found!
         //
         verifyException("module.Kernel", e);
      }
  }
}
