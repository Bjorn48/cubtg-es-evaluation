/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 20:09:33 GMT 2019
 */

package jigl.image.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jigl.image.ROI;
import jigl.image.types.BinaryImage;
import jigl.image.types.ComplexImage;
import jigl.image.types.GrayImage;
import jigl.image.types.ImageKernel;
import jigl.image.types.KernelType;
import jigl.image.types.MagnitudeImage;
import jigl.image.types.PowerImage;
import jigl.image.types.RealGrayImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BinaryImage_ESTest extends BinaryImage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[][] byteArray0 = new byte[2][2];
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      ROI rOI0 = new ROI();
      int[][] intArray0 = new int[0][8];
      GrayImage grayImage0 = new GrayImage(intArray0);
      BinaryImage binaryImage1 = new BinaryImage(grayImage0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.compliment();
      int int0 = 2336;
      ROI rOI0 = new ROI(0, 0, 1532, 2336);
      // Undeclared exception!
      try { 
        binaryImage0.set(0, 2336, (Byte) null, rOI0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.max();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      GrayImage grayImage0 = new GrayImage(0, 0, intArray0);
      BinaryImage binaryImage0 = new BinaryImage(grayImage0);
      binaryImage0.toString();
      ROI rOI0 = new ROI();
      ComplexImage complexImage0 = new ComplexImage(0, 2300);
      RealGrayImage realGrayImage0 = complexImage0.magnitudeImage();
      BinaryImage binaryImage1 = new BinaryImage(realGrayImage0);
      binaryImage1.count();
      int int0 = (-1);
      try { 
        Byte.valueOf("g{J'q%/U(m", 70);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // radix 70 greater than Character.MAX_RADIX
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(808, 808);
      // Undeclared exception!
      binaryImage0.compliment();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(8, 3, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GrayImage grayImage0 = new GrayImage(19, 19);
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(grayImage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.toString();
      binaryImage0.getData();
      // Undeclared exception!
      try { 
        binaryImage0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((GrayImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.toString();
      binaryImage0.copy();
      binaryImage0.copy();
      BinaryImage binaryImage1 = new BinaryImage(55, 55);
      binaryImage0.intersection(binaryImage1);
      binaryImage1.max();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = new BinaryImage();
      binaryImage0.copy();
      binaryImage1.getJavaImage();
      binaryImage1.getData();
      binaryImage1.intersection(binaryImage0);
      binaryImage0.Y();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.getJavaImage();
      byte[][] byteArray0 = new byte[1][6];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)8;
      byteArray0[0] = byteArray1;
      BinaryImage binaryImage1 = new BinaryImage(byteArray0);
      // Undeclared exception!
      try { 
        binaryImage1.intersection(binaryImage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[][] byteArray0 = new byte[2][2];
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      // Undeclared exception!
      try { 
        binaryImage0.intersection((BinaryImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(2869, 2869);
      // Undeclared exception!
      try { 
        binaryImage0.getData();
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(19, 19);
      binaryImage0.getJavaImage();
      binaryImage0.shift(19, 19);
      binaryImage0.Y();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(808, 808);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      // Undeclared exception!
      binaryImage1.difference(binaryImage0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      ROI rOI0 = new ROI();
      byte[][] byteArray0 = new byte[1][0];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)86;
      byteArray0[0] = byteArray1;
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage1.copy(rOI0);
      BinaryImage binaryImage2 = new BinaryImage(byteArray0);
      binaryImage2.shift((byte)86, (byte)86);
      binaryImage0.shift((byte)86, 2291);
      binaryImage1.intersection(binaryImage0);
      BinaryImage binaryImage3 = new BinaryImage();
      binaryImage0.difference(binaryImage1);
      // Undeclared exception!
      try { 
        binaryImage1.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      ROI rOI0 = new ROI();
      byte[][] byteArray0 = new byte[1][0];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)86;
      byteArray0[0] = byteArray1;
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage1.copy(rOI0);
      BinaryImage binaryImage2 = new BinaryImage(byteArray0);
      binaryImage1.intersection(binaryImage0);
      // Undeclared exception!
      try { 
        binaryImage0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.getJavaImage();
      byte[][] byteArray0 = new byte[7][6];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)8;
      byteArray0[0] = byteArray1;
      BinaryImage binaryImage1 = null;
      try {
        binaryImage1 = new BinaryImage(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.shift(0, 0);
      BinaryImage binaryImage1 = new BinaryImage(0, 0);
      Byte byte0 = new Byte((byte)12);
      MagnitudeImage magnitudeImage0 = new MagnitudeImage(93, 0);
      BinaryImage binaryImage2 = new BinaryImage(magnitudeImage0);
      Byte byte1 = new Byte((byte)96);
      BinaryImage binaryImage3 = new BinaryImage();
      // Undeclared exception!
      try { 
        binaryImage1.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(2, 2);
      BinaryImage binaryImage1 = binaryImage0.compliment();
      binaryImage1.getJavaImage();
      binaryImage0.compliment();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = binaryImage0.shift(1156, 0);
      binaryImage1.copy();
      BinaryImage binaryImage2 = new BinaryImage(binaryImage0);
      binaryImage2.shift(1156, 0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[][] byteArray0 = new byte[2][2];
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      binaryImage0.shift((-1), (-1));
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage0.getJavaImage();
      binaryImage1.count();
      binaryImage1.difference(binaryImage0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 8;
      intArray0[1] = 0;
      intArray0[2] = 0;
      GrayImage grayImage0 = new GrayImage(0, 0, intArray0);
      BinaryImage binaryImage0 = new BinaryImage(grayImage0);
      binaryImage0.toString();
      Byte byte0 = new Byte((byte)10);
      ROI rOI0 = new ROI();
      byte[][] byteArray0 = new byte[0][1];
      BinaryImage binaryImage1 = new BinaryImage(byteArray0);
      binaryImage1.intersection(binaryImage0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[][] byteArray0 = new byte[2][2];
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      binaryImage0.shift((-104), (-104));
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      // Undeclared exception!
      try { 
        binaryImage0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.count();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      KernelType kernelType0 = KernelType.LAPLACIAN;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      BinaryImage binaryImage0 = new BinaryImage(imageKernel0);
      // Undeclared exception!
      try { 
        binaryImage0.getData();
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      GrayImage grayImage0 = new GrayImage(0, 0, intArray0);
      BinaryImage binaryImage0 = new BinaryImage(grayImage0);
      binaryImage0.toString();
      ROI rOI0 = new ROI();
      GrayImage grayImage1 = new GrayImage(255, 0);
      BinaryImage binaryImage1 = new BinaryImage(grayImage1);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[][] byteArray0 = new byte[1][2];
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      ROI rOI0 = new ROI();
      binaryImage0.copy(rOI0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      byte[][] byteArray0 = new byte[1][1];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte) (-121);
      byteArray1[2] = (byte)69;
      byteArray1[3] = (byte)0;
      byteArray0[0] = byteArray1;
      BinaryImage binaryImage1 = new BinaryImage(byteArray0);
      BinaryImage binaryImage2 = new BinaryImage(binaryImage1);
      binaryImage1.difference(binaryImage2);
      // Undeclared exception!
      try { 
        binaryImage0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte) (-119);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-48);
      byteArray0[6] = (byte)63;
      BinaryImage binaryImage0 = new BinaryImage(0, 4, byteArray0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ImageKernel imageKernel0 = new ImageKernel((-1691.0F), 0);
      BinaryImage binaryImage0 = new BinaryImage(imageKernel0);
      binaryImage0.X();
      byte[][] byteArray0 = new byte[4][8];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)8;
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte) (-79);
      byteArray1[3] = (byte) (-41);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte)8;
      byteArray2[1] = (byte)8;
      byteArray2[2] = (byte)0;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[2];
      byteArray3[0] = (byte) (-79);
      byteArray3[1] = (byte)8;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[9];
      byteArray4[0] = (byte)2;
      byteArray4[1] = (byte)8;
      byteArray4[2] = (byte)8;
      byteArray4[3] = (byte)0;
      byteArray4[4] = (byte) (-41);
      byteArray4[5] = (byte) (-41);
      byteArray4[6] = (byte) (-79);
      byteArray4[7] = (byte)0;
      byteArray4[8] = (byte)0;
      byteArray0[3] = byteArray4;
      BinaryImage binaryImage1 = null;
      try {
        binaryImage1 = new BinaryImage(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.getData();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 0);
      binaryImage0.toString();
      binaryImage0.copy();
      int int0 = 0;
      int int1 = 0;
      // Undeclared exception!
      try { 
        binaryImage0.get(0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[][] byteArray0 = new byte[2][2];
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      BinaryImage binaryImage1 = binaryImage0.compliment();
      binaryImage0.getJavaImage();
      binaryImage1.count();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = new BinaryImage();
      GrayImage grayImage0 = new GrayImage(19, 19);
      BinaryImage binaryImage2 = null;
      try {
        binaryImage2 = new BinaryImage(grayImage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[][] byteArray0 = new byte[2][2];
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      binaryImage0.count();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[][] byteArray0 = new byte[2][2];
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte) (-8);
      byteArray1[1] = (byte) (-30);
      byteArray1[2] = (byte)16;
      byteArray1[3] = (byte)43;
      byteArray1[4] = (byte)21;
      byteArray1[5] = (byte)42;
      byteArray1[6] = (byte)4;
      byteArray1[7] = (byte)105;
      byteArray1[8] = (byte)4;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[9];
      byteArray2[0] = (byte) (-5);
      byteArray2[1] = (byte) (-8);
      byteArray2[2] = (byte)16;
      byteArray2[3] = (byte)4;
      byteArray2[4] = (byte)16;
      byteArray2[5] = (byte)112;
      byteArray2[6] = (byte)4;
      byteArray2[7] = (byte)43;
      byteArray2[8] = (byte)43;
      byteArray0[1] = byteArray2;
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage1.union(binaryImage0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.min();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      BinaryImage binaryImage0 = null;
      BinaryImage binaryImage1 = null;
      try {
        binaryImage1 = new BinaryImage((BinaryImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(808, 808);
      BinaryImage binaryImage1 = new BinaryImage();
      // Undeclared exception!
      try { 
        binaryImage0.union(binaryImage1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      ROI rOI0 = new ROI();
      byte[][] byteArray0 = new byte[1][0];
      byte[] byteArray1 = new byte[20];
      byteArray0[0] = byteArray1;
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage1.copy(rOI0);
      binaryImage1.shift(0, 0);
      BinaryImage binaryImage2 = new BinaryImage(binaryImage1);
      binaryImage0.union(binaryImage1);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.shift((-6), (-6));
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      ROI rOI0 = new ROI();
      byte[][] byteArray0 = new byte[1][0];
      byte byte0 = (byte)64;
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      BinaryImage binaryImage2 = new BinaryImage(1077, (byte)64);
      binaryImage2.toString();
      binaryImage2.getJavaImage();
      BinaryImage binaryImage3 = binaryImage2.union(binaryImage0);
      binaryImage1.getJavaImage();
      Byte byte1 = null;
      binaryImage2.clear(byte1);
      BinaryImage binaryImage4 = binaryImage3.compliment();
      int int0 = 65;
      int int1 = 4436;
      ROI rOI1 = new ROI(int0, intArray0[0], int1, byte0);
      binaryImage4.copy(rOI1);
      binaryImage4.compliment();
      int int2 = (-1058);
      binaryImage4.get(byte0, int2);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      ROI rOI0 = new ROI();
      byte[][] byteArray0 = new byte[1][0];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)86;
      byteArray0[0] = byteArray1;
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      binaryImage0.copy(rOI0);
      BinaryImage binaryImage1 = new BinaryImage(byteArray0);
      BinaryImage binaryImage2 = new BinaryImage(0, 0);
      BinaryImage binaryImage3 = new BinaryImage(0, (byte)86, byteArray1);
      binaryImage0.intersection(binaryImage0);
      BinaryImage binaryImage4 = new BinaryImage(binaryImage2);
      binaryImage0.difference(binaryImage0);
      // Undeclared exception!
      try { 
        binaryImage0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      ROI rOI0 = new ROI();
      byte[][] byteArray0 = new byte[1][0];
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      BinaryImage binaryImage2 = new BinaryImage(1077, (byte)64);
      // Undeclared exception!
      try { 
        binaryImage2.union(binaryImage0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[][] byteArray0 = new byte[0][8];
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        binaryImage0.copy(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.getJavaImage();
      binaryImage0.shift(0, (-1987));
      Byte.toUnsignedLong((byte) (-128));
      Byte.toUnsignedInt((byte) (-128));
      Byte byte0 = new Byte((byte) (-128));
      // Undeclared exception!
      try { 
        binaryImage0.set(2112, 3049, byte0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      ROI rOI0 = new ROI();
      byte[][] byteArray0 = new byte[1][0];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)86;
      byteArray0[0] = byteArray1;
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage1.copy(rOI0);
      binaryImage0.toString();
      Byte byte0 = new Byte((byte) (-32));
      BinaryImage binaryImage2 = new BinaryImage(binaryImage1);
      BinaryImage binaryImage3 = new BinaryImage(binaryImage2);
      binaryImage0.compliment();
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      int int0 = 0;
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      ROI rOI0 = new ROI();
      byte[][] byteArray0 = new byte[1][0];
      byte[] byteArray1 = new byte[20];
      byteArray0[0] = byteArray1;
      int int1 = 75;
      ImageKernel imageKernel0 = new ImageKernel(0.0F, 75);
      BinaryImage binaryImage0 = new BinaryImage(imageKernel0);
      Byte byte0 = new Byte((byte)4);
      binaryImage0.set(8, 3, byte0);
      // Undeclared exception!
      try { 
        binaryImage0.getData();
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      int int0 = (-543);
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((-543), (-543));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      byte[][] byteArray0 = new byte[1][0];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)86;
      byteArray0[0] = byteArray1;
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      BinaryImage binaryImage1 = new BinaryImage(byteArray0);
      BinaryImage binaryImage2 = new BinaryImage(0, 0);
      BinaryImage binaryImage3 = new BinaryImage(0, (byte)86, byteArray1);
      BinaryImage binaryImage4 = new BinaryImage(byteArray0);
      binaryImage2.intersection(binaryImage4);
      BinaryImage binaryImage5 = new BinaryImage(binaryImage3);
      // Undeclared exception!
      try { 
        binaryImage1.difference(binaryImage2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[][] byteArray0 = new byte[1][2];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte)24;
      byteArray1[3] = (byte)0;
      byteArray1[4] = (byte) (-98);
      byteArray1[5] = (byte)6;
      byteArray1[6] = (byte)82;
      byteArray1[7] = (byte)0;
      byteArray0[0] = byteArray1;
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      Byte byte0 = new Byte((byte)0);
      // Undeclared exception!
      try { 
        binaryImage0.clear(byte0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((-828), 0, byteArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((byte[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      byte[][] byteArray0 = new byte[2][2];
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      binaryImage0.intersection(binaryImage0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      PowerImage powerImage0 = new PowerImage(27, 52);
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(powerImage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = binaryImage0.shift(14, 14);
      BinaryImage binaryImage2 = new BinaryImage();
      binaryImage0.copy();
      binaryImage1.toString();
      binaryImage2.getData();
      binaryImage2.intersection(binaryImage0);
      binaryImage1.min();
      binaryImage0.copy();
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.shift(1508, (-1));
      BinaryImage binaryImage1 = new BinaryImage();
      binaryImage0.copy();
      binaryImage1.getData();
      BinaryImage binaryImage2 = new BinaryImage();
      binaryImage2.count();
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(2, 2);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage0.union(binaryImage1);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(808, 808);
      BinaryImage binaryImage1 = new BinaryImage(808, 808);
      // Undeclared exception!
      binaryImage0.union(binaryImage1);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.copy();
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      ROI rOI0 = new ROI();
      BinaryImage binaryImage0 = new BinaryImage(0, 0, (byte[]) null);
      binaryImage0.getData();
      binaryImage0.max();
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.toString();
      binaryImage0.difference(binaryImage0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      byte byte0 = (byte)60;
      ROI rOI0 = new ROI((-128), (byte)60, (-2037), 432);
      // Undeclared exception!
      try { 
        binaryImage0.copy(rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.getJavaImage();
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = (int) (byte)8;
      intArray0[2] = 0;
      intArray0[3] = (-2341);
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = (int) (byte)8;
      GrayImage grayImage0 = new GrayImage(128, 0, intArray0);
      BinaryImage binaryImage1 = new BinaryImage(grayImage0);
      binaryImage1.toString();
      ROI rOI0 = new ROI();
      byte[][] byteArray0 = new byte[2][8];
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)8;
      byteArray1[1] = (byte)8;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte)8;
      byteArray2[1] = (byte)8;
      byteArray2[2] = (byte)7;
      byteArray2[3] = (byte)8;
      byteArray2[4] = (byte)8;
      byteArray2[5] = (byte)8;
      byteArray2[6] = (byte)8;
      byteArray2[7] = (byte)8;
      byteArray0[1] = byteArray2;
      BinaryImage binaryImage2 = null;
      try {
        binaryImage2 = new BinaryImage(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      byte[][] byteArray0 = new byte[8][1];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[2];
      byteArray2[0] = (byte)0;
      byteArray2[1] = (byte)6;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[6];
      byteArray3[0] = (byte)6;
      byteArray3[1] = (byte)6;
      byteArray3[2] = (byte)0;
      byteArray3[3] = (byte)6;
      byteArray3[4] = (byte)6;
      byteArray3[5] = (byte)0;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[9];
      byteArray4[0] = (byte)0;
      byteArray4[1] = (byte)6;
      byteArray4[2] = (byte)0;
      byteArray4[3] = (byte)6;
      byteArray4[4] = (byte)6;
      byteArray4[5] = (byte)0;
      byteArray4[6] = (byte)0;
      byteArray4[7] = (byte)0;
      byteArray4[8] = (byte)0;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[5];
      byteArray5[0] = (byte)0;
      byteArray5[1] = (byte)0;
      byteArray5[2] = (byte)0;
      byteArray5[3] = (byte)6;
      byteArray5[4] = (byte)0;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[8];
      byteArray6[0] = (byte)0;
      byteArray6[1] = (byte)6;
      byteArray6[2] = (byte)0;
      byteArray6[3] = (byte)6;
      byteArray6[4] = (byte)0;
      byteArray6[5] = (byte)6;
      byteArray6[6] = (byte)6;
      byteArray6[7] = (byte)0;
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[2];
      byteArray7[0] = (byte)0;
      byteArray7[1] = (byte)6;
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[7];
      byteArray8[0] = (byte)0;
      byteArray8[1] = (byte)0;
      byteArray8[2] = (byte)1;
      byteArray8[3] = (byte) (-125);
      byteArray8[4] = (byte)6;
      byteArray8[5] = (byte)0;
      byteArray8[6] = (byte)0;
      byteArray0[7] = byteArray8;
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.intersection(binaryImage0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      Byte byte0 = new Byte((byte)2);
      Byte.toUnsignedLong((byte)2);
      // Undeclared exception!
      try { 
        binaryImage0.set((-98), 2620, byte0, (ROI) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 8;
      intArray0[1] = 0;
      intArray0[2] = 0;
      GrayImage grayImage0 = new GrayImage(0, 0, intArray0);
      BinaryImage binaryImage0 = new BinaryImage(grayImage0);
      binaryImage0.toString();
      Byte byte0 = new Byte((byte)10);
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        binaryImage0.set(8, 0, byte0, rOI0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.getJavaImage();
      byte byte0 = (byte)8;
      byte[] byteArray0 = new byte[1];
      int int0 = (-2454);
      Byte byte1 = new Byte((byte)8);
      // Undeclared exception!
      try { 
        binaryImage0.set((-2350), (-2454), byte1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(808, 808);
      Byte byte0 = new Byte((byte)90);
      // Undeclared exception!
      try { 
        binaryImage0.set(808, Integer.MAX_VALUE, byte0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2147483647
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        binaryImage0.copy(rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(808, 808);
      Byte byte0 = new Byte((byte) (-14));
      // Undeclared exception!
      try { 
        binaryImage0.set(808, 11, byte0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 808
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      byte[][] byteArray0 = new byte[2][2];
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte) (-8);
      byteArray1[0] = (byte) (-30);
      byteArray1[2] = (byte)16;
      byteArray1[3] = (byte)43;
      byteArray1[4] = (byte)21;
      byteArray1[5] = (byte)42;
      byteArray1[6] = (byte)4;
      byteArray1[7] = (byte)105;
      byteArray1[8] = (byte)4;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[9];
      byteArray2[0] = (byte) (-5);
      byteArray2[1] = (byte) (-8);
      byteArray2[2] = (byte)16;
      byteArray2[3] = (byte)4;
      byteArray2[4] = (byte)16;
      byteArray2[5] = (byte)112;
      byteArray2[6] = (byte)4;
      byteArray2[7] = (byte)43;
      byteArray2[8] = (byte)43;
      byteArray0[1] = byteArray2;
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage1.union(binaryImage0);
      BinaryImage binaryImage2 = binaryImage0.compliment();
      Byte byte0 = new Byte((byte)4);
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        binaryImage2.set((int) (byte)16, (int) (byte)16, byte0, rOI0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      ROI rOI0 = new ROI();
      byte[][] byteArray0 = new byte[1][0];
      byte[] byteArray1 = new byte[1];
      byteArray0[0] = byteArray1;
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage1.copy(rOI0);
      binaryImage1.shift((-32768), 0);
      ROI rOI1 = new ROI();
      BinaryImage binaryImage2 = null;
      try {
        binaryImage2 = new BinaryImage((byte[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      ROI rOI0 = new ROI();
      byte[][] byteArray0 = new byte[1][0];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)86;
      byteArray0[0] = byteArray1;
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage1.copy(rOI0);
      BinaryImage binaryImage2 = binaryImage0.shift(0, (-335));
      binaryImage2.toString();
      BinaryImage binaryImage3 = null;
      try {
        binaryImage3 = new BinaryImage((RealGrayImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      int int0 = 0;
      int[] intArray0 = new int[3];
      intArray0[0] = 8;
      intArray0[1] = 0;
      intArray0[2] = 0;
      GrayImage grayImage0 = new GrayImage(0, 0, intArray0);
      int int1 = 74;
      ROI rOI0 = new ROI(1420, 74, 0, 487);
      rOI0.setROI((-1891), 0, 8, 2193);
      byte byte0 = (byte)0;
      byte byte1 = (byte)2;
      Byte.compare((byte)29, (byte)2);
      Byte byte2 = new Byte((byte)2);
      Byte byte3 = null;
      MagnitudeImage magnitudeImage0 = new MagnitudeImage((byte)29, 8);
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(magnitudeImage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(808, 808);
      // Undeclared exception!
      binaryImage0.count();
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      ROI rOI0 = new ROI();
      byte[][] byteArray0 = new byte[1][0];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)86;
      byteArray0[0] = byteArray1;
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      BinaryImage binaryImage2 = new BinaryImage(byteArray0);
      BinaryImage binaryImage3 = new BinaryImage(binaryImage2);
      BinaryImage binaryImage4 = new BinaryImage(binaryImage0);
      BinaryImage binaryImage5 = new BinaryImage();
      binaryImage2.getJavaImage();
      binaryImage1.X();
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(2, 2);
      BinaryImage binaryImage1 = binaryImage0.compliment();
      binaryImage0.count();
      binaryImage1.toString();
      // Undeclared exception!
      try { 
        binaryImage1.get((-1244), (-3227));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(8, 74);
      binaryImage0.toString();
      binaryImage0.copy();
      Byte byte0 = new Byte((byte) (-128));
      // Undeclared exception!
      try { 
        binaryImage0.clear(byte0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((RealGrayImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(2, 2296);
      int int0 = binaryImage0.count();
      int int1 = (-1244);
      binaryImage0.max();
      binaryImage0.getJavaImage();
      binaryImage0.toString();
      int int2 = (-3227);
      binaryImage0.get(int1, int2);
      binaryImage0.getJavaImage();
      BinaryImage binaryImage1 = binaryImage0.union(binaryImage0);
      int int3 = 2109;
      binaryImage0.shift(int0, int3);
      byte byte0 = (byte)118;
      Byte byte1 = new Byte(byte0);
      BinaryImage binaryImage2 = binaryImage0.clear(byte1);
      BinaryImage binaryImage3 = binaryImage0.union(binaryImage2);
      ROI rOI0 = new ROI();
      binaryImage2.copy(rOI0);
      binaryImage2.min();
      binaryImage1.intersection(binaryImage3);
  }
}
