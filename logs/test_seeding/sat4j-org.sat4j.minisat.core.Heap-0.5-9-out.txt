* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.sat4j.minisat.core.Heap
* Starting Client-0
* Connecting to master process on port 16563
* Analyzing classpath: 
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
* Finished analyzing classpath
* Executing tests from 1 test class for carving
[MASTER] 13:05:19.427 [logback-1] WARN  CarvingClassLoader - Instrumenting class 'org.sat4j.minisat.core.Heap'.
[MASTER] 13:05:19.461 [logback-1] WARN  CarvingClassLoader - Instrumenting class 'org.sat4j.minisat.VarOrderTest'.
[MASTER] 13:05:19.495 [logback-1] WARN  CarvingClassLoader - Instrumenting class 'org.sat4j.minisat.core.IOrder'.
[MASTER] 13:05:19.544 [logback-1] WARN  CarvingClassLoader - Instrumenting class 'org.sat4j.minisat.constraints.ClausalDataStructureWL'.
[MASTER] 13:05:19.557 [logback-1] WARN  CarvingClassLoader - Instrumenting class 'org.sat4j.minisat.constraints.AbstractDataStructureFactory'.
[MASTER] 13:05:19.583 [logback-1] WARN  CarvingClassLoader - Instrumenting class 'org.sat4j.minisat.core.DataStructureFactory'.
[MASTER] 13:05:19.585 [logback-1] WARN  CarvingClassLoader - Instrumenting class 'org.sat4j.specs.IVec'.
[MASTER] 13:05:19.586 [logback-1] WARN  CarvingClassLoader - Instrumenting class 'org.sat4j.minisat.core.ILits'.
[MASTER] 13:05:19.587 [logback-1] WARN  CarvingClassLoader - Instrumenting class 'org.sat4j.minisat.core.Constr'.
[MASTER] 13:05:19.597 [logback-1] WARN  CarvingClassLoader - Instrumenting class 'org.sat4j.specs.IConstr'.
[MASTER] 13:05:19.600 [logback-1] WARN  CarvingClassLoader - Instrumenting class 'org.sat4j.core.Vec'.
[MASTER] 13:05:19.626 [logback-1] WARN  CarvingClassLoader - Instrumenting class 'org.sat4j.minisat.constraints.cnf.Lits'.
[MASTER] 13:05:19.646 [logback-1] WARN  CarvingClassLoader - Instrumenting class 'org.sat4j.specs.UnitPropagationListener'.
[MASTER] 13:05:19.647 [logback-1] WARN  CarvingClassLoader - Instrumenting class 'org.sat4j.minisat.core.Learner'.
[MASTER] 13:05:19.647 [logback-1] WARN  CarvingClassLoader - Instrumenting class 'org.sat4j.minisat.orders.VarOrderHeap'.
[MASTER] 13:05:19.659 [logback-1] WARN  CarvingClassLoader - Instrumenting class 'org.sat4j.minisat.core.IPhaseSelectionStrategy'.
[MASTER] 13:05:19.675 [logback-1] WARN  CarvingClassLoader - Instrumenting class 'org.sat4j.minisat.orders.PhaseInLastLearnedClauseSelectionStrategy'.
[MASTER] 13:05:19.681 [logback-1] WARN  CarvingClassLoader - Instrumenting class 'org.sat4j.minisat.orders.AbstractPhaserecordingSelectionStrategy'.
[MASTER] 13:05:19.711 [logback-1] WARN  CarvingClassLoader - Instrumenting class 'org.sat4j.minisat.core.Propagatable'.
 - Carving test org.sat4j.minisat.VarOrderTest.testNumberOfInterestingVariables
 - Carving test org.sat4j.minisat.VarOrderTest.testVarDecayActivity
 - Carving test org.sat4j.minisat.VarOrderTest.testUpdateVar
 - Carving test org.sat4j.minisat.VarOrderTest.testUndo
 - Carving test org.sat4j.minisat.VarOrderTest.testSetVarDecay
 - Carving test org.sat4j.minisat.VarOrderTest.testNewVarint
 - Carving test org.sat4j.minisat.VarOrderTest.testGetVocabulary
[MASTER] 13:05:20.472 [logback-1] WARN  CarvingClassLoader - Instrumenting class 'org.sat4j.core.LiteralsUtils'.
[MASTER] 13:05:20.482 [logback-1] WARN  CarvingClassLoader - Instrumenting class 'org.sat4j.specs.IVecInt'.
[MASTER] 13:05:20.484 [logback-1] WARN  CarvingClassLoader - Instrumenting class 'org.sat4j.core.VecInt'.
[MASTER] 13:05:20.503 [logback-1] WARN  CarvingClassLoader - Instrumenting class 'org.sat4j.specs.IteratorInt'.
[MASTER] 13:05:20.505 [logback-1] WARN  CarvingClassLoader - Instrumenting class 'org.sat4j.core.VecInt$1'.
 - Carving test org.sat4j.minisat.VarOrderTest.testNewVar
 - Carving test org.sat4j.minisat.VarOrderTest.testSelect
 -> Carved 1 tests for class class org.sat4j.minisat.core.Heap from existing JUnit tests
 -> Carved 9 tests for class class org.sat4j.core.Vec from existing JUnit tests
 -> Carved 9 tests for class class org.sat4j.minisat.constraints.cnf.Lits from existing JUnit tests
 -> Carved 9 tests for class class org.sat4j.minisat.constraints.ClausalDataStructureWL from existing JUnit tests
 -> Carved 9 tests for class class org.sat4j.minisat.orders.PhaseInLastLearnedClauseSelectionStrategy from existing JUnit tests
 -> Carved 9 tests for class class org.sat4j.minisat.orders.VarOrderHeap from existing JUnit tests
 -> Carved 1 tests for class class org.sat4j.core.LiteralsUtils from existing JUnit tests
 -> Carved 1 tests for class class org.sat4j.core.VecInt from existing JUnit tests
* Generating tests for class org.sat4j.minisat.core.Heap
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 548
* Using seed 1550405115078
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initialsss Number of Goals in DynMOSA = 203 / 548
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.53125
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.4915254237288136
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.4890282131661442
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.3157894736842105
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9285714285714286
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.7142857142857143
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.4915254237288136
[Progress:>                             0%] [Cov:=====================>             62%]* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 200
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 304
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
[Progress:>                             0%] [Cov:=====================>             62%]* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 406
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
[Progress:>                             0%] [Cov:======================>            65%]* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 509
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
[Progress:>                             0%] [Cov:========================>          69%]* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 606
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.65625
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5932203389830508
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.6144200626959248
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.47368421052631576
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9285714285714286
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.7857142857142857
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.5932203389830508
[Progress:>                             0%] [Cov:========================>          70%]* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 708
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.65625
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5932203389830508
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.6144200626959248
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.47368421052631576
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9285714285714286
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.7857142857142857
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.5932203389830508
[Progress:>                             0%] [Cov:========================>          70%]* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 807
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.65625
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.5932203389830508
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.6144200626959248
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.47368421052631576
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9285714285714286
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.7857142857142857
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.5932203389830508
[Progress:>                             0%] [Cov:========================>          70%]* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 914
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.671875
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6440677966101694
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.6332288401253918
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.47368421052631576
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9285714285714286
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.7857142857142857
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.6440677966101694
[Progress:>                             0%] [Cov:=========================>         72%]* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 1017
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.671875
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6440677966101694
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.6332288401253918
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.47368421052631576
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9285714285714286
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.7857142857142857
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.6440677966101694
[Progress:>                             0%] [Cov:=========================>         72%]* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 1116
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.671875
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6440677966101694
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.6332288401253918
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.47368421052631576
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9285714285714286
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.7857142857142857
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.6440677966101694
[Progress:>                             0%] [Cov:=========================>         72%]Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.671875
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6440677966101694
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.6332288401253918
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.47368421052631576
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9285714285714286
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.7857142857142857
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.6440677966101694

* Search finished after 124s and 9 generations, 10015 statements, best individual has fitness: 194.0
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.671875
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6440677966101694
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.6332288401253918
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.47368421052631576
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9285714285714286
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.7857142857142857
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.6440677966101694
* Minimizing test suite
[MASTER] 13:08:31.556 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 70%
* Total number of goals: 64
* Number of covered goals: 45
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 64%
* Total number of goals: 59
* Number of covered goals: 38
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 67%
* Total number of goals: 319
* Number of covered goals: 215
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 47%
* Total number of goals: 19
* Number of covered goals: 9
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 86%
* Total number of goals: 14
* Number of covered goals: 12
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 64%
* Total number of goals: 59
* Number of covered goals: 38
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.671875
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6440677966101694
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.6332288401253918
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.47368421052631576
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9285714285714286
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.7857142857142857
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.6440677966101694
* Generated 48 tests with total length 439
* Resulting test suite's coverage: 72% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 13:09:18.048 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.7717333333333334% of time used, but only 7/48 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 9%
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.671875
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6440677966101694
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.6332288401253918
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.47368421052631576
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9285714285714286
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.7857142857142857
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.6440677966101694
* Compiling and checking tests
[MASTER] 13:09:30.395 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 13:09:30.398 [logback-1] WARN  JUnitAnalyzer - Failing test:
 double[] doubleArray0 = new double[0];
ActivityBasedVariableComparator activityBasedVariableComparator0 = new ActivityBasedVariableComparator(doubleArray0);
assertArrayEquals(new double[] {}, doubleArray0, 0.01);
assertEquals(0, doubleArray0.length);
assertNotNull(activityBasedVariableComparator0);
assertEquals("Activity-based variable heuristic", activityBasedVariableComparator0.toString());

Heap heap0 = new Heap(activityBasedVariableComparator0);
assertArrayEquals(new double[] {}, doubleArray0, 0.01);
assertEquals(0, doubleArray0.length);
assertNotNull(heap0);
assertEquals("Activity-based variable heuristic", activityBasedVariableComparator0.toString());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertEquals(0, heap0.size());

heap0.setBounds(5);
assertArrayEquals(new double[] {}, doubleArray0, 0.01);
assertEquals(0, doubleArray0.length);
assertEquals("Activity-based variable heuristic", activityBasedVariableComparator0.toString());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertEquals(0, heap0.size());

heap0.setBounds(5);
assertArrayEquals(new double[] {}, doubleArray0, 0.01);
assertEquals(0, doubleArray0.length);
assertEquals("Activity-based variable heuristic", activityBasedVariableComparator0.toString());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertEquals(0, heap0.size());

boolean boolean0 = heap0.heapProperty();
assertArrayEquals(new double[] {}, doubleArray0, 0.01);
assertEquals(0, doubleArray0.length);
assertTrue(boolean0);
assertEquals("Activity-based variable heuristic", activityBasedVariableComparator0.toString());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertEquals(0, heap0.size());

heap0.insert(5);
assertArrayEquals(new double[] {}, doubleArray0, 0.01);
assertEquals(0, doubleArray0.length);
assertEquals("Activity-based variable heuristic", activityBasedVariableComparator0.toString());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertEquals(0, heap0.size());

int int0 = heap0.size();
assertArrayEquals(new double[] {}, doubleArray0, 0.01);
assertEquals(0, doubleArray0.length);
assertEquals(0, int0);
assertEquals("Activity-based variable heuristic", activityBasedVariableComparator0.toString());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertEquals(0, heap0.size());

int int1 = heap0.size();
assertArrayEquals(new double[] {}, doubleArray0, 0.01);
assertEquals(0, doubleArray0.length);
assertEquals(0, int1);
assertEquals("Activity-based variable heuristic", activityBasedVariableComparator0.toString());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertEquals(0, heap0.size());
assertTrue(int1 == int0);

boolean boolean1 = heap0.inHeap(1);
assertArrayEquals(new double[] {}, doubleArray0, 0.01);
assertEquals(0, doubleArray0.length);
assertFalse(boolean1);
assertEquals("Activity-based variable heuristic", activityBasedVariableComparator0.toString());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertEquals(0, heap0.size());
assertFalse(boolean1 == boolean0);


[MASTER] 13:09:32.733 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<0> but was:<1>
[MASTER] 13:09:32.733 [logback-1] WARN  JUnitAnalyzer - Failing test:
 double[] doubleArray0 = new double[0];
ActivityBasedVariableComparator activityBasedVariableComparator0 = new ActivityBasedVariableComparator(doubleArray0);
assertArrayEquals(new double[] {}, doubleArray0, 0.01);
assertEquals(0, doubleArray0.length);
assertNotNull(activityBasedVariableComparator0);
assertEquals("Activity-based variable heuristic", activityBasedVariableComparator0.toString());

Heap heap0 = new Heap(activityBasedVariableComparator0);
assertArrayEquals(new double[] {}, doubleArray0, 0.01);
assertEquals(0, doubleArray0.length);
assertNotNull(heap0);
assertEquals("Activity-based variable heuristic", activityBasedVariableComparator0.toString());
assertEquals(0, heap0.size());
assertTrue(heap0.heapProperty());
assertTrue(heap0.empty());

heap0.setBounds(4594);
assertArrayEquals(new double[] {}, doubleArray0, 0.01);
assertEquals(0, doubleArray0.length);
assertEquals("Activity-based variable heuristic", activityBasedVariableComparator0.toString());
assertEquals(0, heap0.size());
assertTrue(heap0.heapProperty());
assertTrue(heap0.empty());

heap0.insert(128);
assertArrayEquals(new double[] {}, doubleArray0, 0.01);
assertEquals(0, doubleArray0.length);
assertEquals("Activity-based variable heuristic", activityBasedVariableComparator0.toString());
assertEquals(0, heap0.size());
assertTrue(heap0.heapProperty());
assertTrue(heap0.empty());


[MASTER] 13:09:41.603 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test35 -> class java.lang.StackOverflowError: null
[MASTER] 13:09:41.607 [logback-1] WARN  JUnitAnalyzer - Failing test:
 double[] doubleArray0 = new double[0];
ActivityBasedVariableComparator activityBasedVariableComparator0 = new ActivityBasedVariableComparator(doubleArray0);
assertArrayEquals(new double[] {}, doubleArray0, 0.01);
assertEquals(0, doubleArray0.length);
assertNotNull(activityBasedVariableComparator0);
assertEquals("Activity-based variable heuristic", activityBasedVariableComparator0.toString());

Heap heap0 = new Heap(activityBasedVariableComparator0);
assertArrayEquals(new double[] {}, doubleArray0, 0.01);
assertEquals(0, doubleArray0.length);
assertNotNull(heap0);
assertEquals("Activity-based variable heuristic", activityBasedVariableComparator0.toString());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertEquals(0, heap0.size());

int int0 = heap0.size();
assertArrayEquals(new double[] {}, doubleArray0, 0.01);
assertEquals(0, doubleArray0.length);
assertEquals(0, int0);
assertEquals("Activity-based variable heuristic", activityBasedVariableComparator0.toString());
assertTrue(heap0.empty());
assertTrue(heap0.heapProperty());
assertEquals(0, heap0.size());

heap0.heapProperty(int0);

[MASTER] 13:09:45.065 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test40 -> class java.lang.StackOverflowError: null
[MASTER] 13:09:45.069 [logback-1] WARN  JUnitAnalyzer - Failing test:
 double[] doubleArray0 = new double[0];
ActivityBasedVariableComparator activityBasedVariableComparator0 = new ActivityBasedVariableComparator(doubleArray0);
Heap heap0 = new Heap(activityBasedVariableComparator0);
int int0 = heap0.size();
heap0.heapProperty(int0);

* Writing tests to file
* Writing JUnit test case 'Heap_ESTest' to evosuite-tests
* Done!

* Computation finished
