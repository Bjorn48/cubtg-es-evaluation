/*
 * This file was automatically generated by EvoSuite
 * Mon Feb 18 22:29:10 GMT 2019
 */

package org.sat4j.tools;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.sat4j.core.ASolverFactory;
import org.sat4j.opt.MaxSatDecorator;
import org.sat4j.specs.ISolver;
import org.sat4j.specs.IVecInt;
import org.sat4j.tools.ClausalCardinalitiesDecorator;
import org.sat4j.tools.ManyCore;
import org.sat4j.tools.RemiUtils;
import org.sat4j.tools.SubModelIterator;
import org.sat4j.tools.encoding.Sequential;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RemiUtils_ESTest extends RemiUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SubModelIterator subModelIterator0 = mock(SubModelIterator.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(subModelIterator0).nVars();
      IVecInt iVecInt0 = RemiUtils.backbone(subModelIterator0);
      assertTrue(iVecInt0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SubModelIterator subModelIterator0 = mock(SubModelIterator.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false, false, false).when(subModelIterator0).isSatisfiable(any(org.sat4j.specs.IVecInt.class));
      doReturn(2658, 0).when(subModelIterator0).nVars();
      Sequential sequential0 = new Sequential();
      ClausalCardinalitiesDecorator<SubModelIterator> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<SubModelIterator>(subModelIterator0, sequential0);
      MaxSatDecorator maxSatDecorator0 = new MaxSatDecorator(clausalCardinalitiesDecorator0, true);
      IVecInt iVecInt0 = RemiUtils.backbone(maxSatDecorator0);
      assertEquals((-2658), iVecInt0.last());
      assertEquals(2658, iVecInt0.size());
      
      IVecInt iVecInt1 = RemiUtils.backbone(clausalCardinalitiesDecorator0);
      assertFalse(iVecInt1.equals((Object)iVecInt0));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SubModelIterator subModelIterator0 = mock(SubModelIterator.class, new ViolatedAssumptionAnswer());
      doReturn(1162).when(subModelIterator0).nVars();
      SubModelIterator[] subModelIteratorArray0 = new SubModelIterator[1];
      subModelIteratorArray0[0] = subModelIterator0;
      ManyCore<SubModelIterator> manyCore0 = new ManyCore<SubModelIterator>(subModelIteratorArray0);
      // Undeclared exception!
      try { 
        RemiUtils.backbone(manyCore0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.ManyCore", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        RemiUtils.backbone((ISolver) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.RemiUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ASolverFactory<SubModelIterator> aSolverFactory0 = (ASolverFactory<SubModelIterator>) mock(ASolverFactory.class, new ViolatedAssumptionAnswer());
      String[] stringArray0 = new String[0];
      ManyCore<SubModelIterator> manyCore0 = new ManyCore<SubModelIterator>(aSolverFactory0, stringArray0);
      // Undeclared exception!
      try { 
        RemiUtils.backbone(manyCore0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SubModelIterator subModelIterator0 = mock(SubModelIterator.class, new ViolatedAssumptionAnswer());
      doReturn(true, true, false, true, false).when(subModelIterator0).isSatisfiable(any(org.sat4j.specs.IVecInt.class));
      doReturn(2866).when(subModelIterator0).nVars();
      IVecInt iVecInt0 = RemiUtils.backbone(subModelIterator0);
      assertEquals(2865, iVecInt0.size());
      assertEquals((-2866), iVecInt0.last());
  }
}
