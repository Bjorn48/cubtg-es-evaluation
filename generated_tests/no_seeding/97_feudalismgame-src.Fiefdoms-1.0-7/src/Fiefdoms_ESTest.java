/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 21:27:35 GMT 2019
 */

package src;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.function.Consumer;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import src.Fiefdoms;
import src.Intruders;
import src.Knight;
import src.Player;
import src.Retainers;
import src.Vassals;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Fiefdoms_ESTest extends Fiefdoms_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      float[] floatArray0 = new float[0];
      fiefdoms0.setShaderColor(floatArray0);
      Knight knight0 = new Knight("'9bhe}nxi$yefq')l", "", "iy");
      Knight knight1 = new Knight("'9bhe}nxi$yefq')l", "iy", "'9bhe}nxi$yefq')l");
      ArrayList<String> arrayList0 = knight0.getVotes();
      knight0.addMercenaries(9958);
      Fiefdoms fiefdoms1 = new Fiefdoms(arrayList0, ";q>", "", (-631), false, arrayList0);
      fiefdoms1.setOwner("xdBq.ve%");
      knight1.getConversation();
      knight1.getMovingVassals();
      Vassals vassals0 = new Vassals();
      FileSystemHandling.shouldAllThrowIOExceptions();
      fiefdoms0.getValue();
      fiefdoms0.getPersonalCastles();
      fiefdoms1.getPersonalCastles();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.getPersonalCastles();
      fiefdoms0.buyFiefdomCastles(0);
      fiefdoms0.setPersonalCastles(true);
      fiefdoms0.setMuslim(9929, true);
      fiefdoms0.setRebelliousVassals(2, false);
      fiefdoms0.getValue();
      fiefdoms0.getRebelliousVassals();
      fiefdoms0.getMuslim();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.getLoyalVassals();
      fiefdoms0.buyPersonalCastles(7);
      fiefdoms0.buyFiefdomCastles((-756));
      fiefdoms0.setPersonalCastles((-1265));
      Knight knight0 = new Knight("+*7C{EWZY@3gN", ";+u_f", "Unknown rank");
      fiefdoms0.setMagyar(2, true);
      fiefdoms0.setLoyalVassals(1466, false);
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMagyar();
      fiefdoms0.setName("goD^8f&&c$WG");
      fiefdoms0.buyPersonalCastles(4);
      fiefdoms0.setViking(arrayList0);
      ArrayList<String> arrayList1 = knight0.getVotes();
      Fiefdoms fiefdoms1 = new Fiefdoms(arrayList1, "Unknown rank", "duke", 1466, true, arrayList1);
      fiefdoms1.getOwner();
      fiefdoms1.buyFiefdomCastles(3298);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setRebelliousVassals(1, false);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      Vassals vassals0 = new Vassals();
      fiefdoms0.loyalVassals.add(vassals0);
      Knight knight0 = new Knight();
      ArrayList<String> arrayList0 = knight0.getVotes();
      Fiefdoms fiefdoms1 = new Fiefdoms(arrayList0, "h#7ROTtJ[u7qW8p@", "muslim", 0, true, arrayList0);
      fiefdoms1.setRebelliousVassals(0, false);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setMagyar((-335), true);
      Knight knight0 = new Knight();
      ArrayList<String> arrayList0 = knight0.getConversation();
      fiefdoms0.setInvaderType(arrayList0);
      Fiefdoms fiefdoms1 = new Fiefdoms();
      fiefdoms1.setValue((-2359));
      ArrayList<Intruders> arrayList1 = fiefdoms1.getMuslim();
      fiefdoms0.setMuslim(arrayList1);
      fiefdoms0.setName("There are ");
      fiefdoms1.getLoyalVassals();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Knight knight0 = new Knight();
      ArrayList<String> arrayList0 = knight0.getFiefdoms();
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, (String) null, (String) null, 611, true, arrayList0);
      fiefdoms0.getPersonalCastles();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setMagyar(368, true);
      fiefdoms0.setPersonalCastles((-1034));
      fiefdoms0.setPersonalCastles((-1034));
      ArrayList<Intruders> arrayList0 = new ArrayList<Intruders>();
      // Undeclared exception!
      try { 
        arrayList0.subList(368, (-2559));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(368) > toIndex(-2559)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setOwner("F_oGbB");
      fiefdoms0.setConqueror("&wycY");
      Intruders intruders0 = new Intruders("&wycY", "F_oGbB");
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMuslim();
      Intruders intruders1 = new Intruders("Mw_", "You are allowed to take up to ");
      arrayList0.add(intruders1);
      fiefdoms0.setViking(arrayList0);
      fiefdoms0.setLoyalVassals(1605, true);
      ArrayList<String> arrayList1 = new ArrayList<String>();
      fiefdoms0.setInvaderType(arrayList1);
      fiefdoms0.getShaderColor();
      fiefdoms0.getValue();
      fiefdoms0.setMuslim(arrayList0);
      ArrayList<String> arrayList2 = new ArrayList<String>();
      Fiefdoms fiefdoms1 = new Fiefdoms((ArrayList<String>) null, "You are allowed to take up to ", "You are allowed to take up to ", 0, true, arrayList2);
      fiefdoms1.getShaderColor();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setFiefdomCastles(2044);
      fiefdoms0.buyFiefdomCastles(2066);
      fiefdoms0.getValue();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setLoyalVassals((-653), true);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      ArrayList<Vassals> arrayList0 = fiefdoms0.loyalVassals;
      arrayList0.parallelStream();
      fiefdoms0.loyalVassals = arrayList0;
      fiefdoms0.setFiefdomCastles(false);
      ArrayList<Intruders> arrayList1 = fiefdoms0.getViking();
      fiefdoms0.setMuslim(arrayList1);
      fiefdoms0.setFiefdomCastles(true);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      byte[] byteArray0 = new byte[0];
      fiefdoms0.setSelectioncolor(byteArray0);
      fiefdoms0.getLoyalVassals();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setViking(9974, false);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setViking((-545), false);
      ArrayList<Vassals> arrayList0 = fiefdoms0.getRebelliousVassals();
      Vassals vassals0 = new Vassals();
      arrayList0.add(vassals0);
      fiefdoms0.setRebelliousVassals(9971, false);
      fiefdoms0.getValue();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      ArrayList<Intruders> arrayList0 = new ArrayList<Intruders>();
      fiefdoms0.setMagyar(arrayList0);
      fiefdoms0.getInvaderType();
      Fiefdoms fiefdoms1 = new Fiefdoms((ArrayList<String>) null, "", "K~)ec*dQxn|pm=8", (-91), false, (ArrayList<String>) null);
      fiefdoms1.setViking((-283), true);
      ArrayList<Intruders> arrayList1 = fiefdoms1.getViking();
      fiefdoms1.setViking(arrayList1);
      fiefdoms0.getVassalsList();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setMagyar((-3382), false);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.buyFiefdomCastles(5);
      fiefdoms0.setViking((-2286), false);
      ArrayList<Vassals> arrayList0 = fiefdoms0.getRebelliousVassals();
      fiefdoms0.loyalVassals = arrayList0;
      Vassals vassals0 = new Vassals();
      arrayList0.add(vassals0);
      fiefdoms0.setRebelliousVassals(1466, false);
      fiefdoms0.getValue();
      fiefdoms0.getPersonalCastles();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      Knight knight0 = new Knight();
      ArrayList<String> arrayList0 = knight0.getVotes();
      arrayList0.parallelStream();
      fiefdoms0.setInvaderType(arrayList0);
      fiefdoms0.setOwner("yM,ye/");
      fiefdoms0.buyFiefdomCastles(2085);
      fiefdoms0.setConqueror(" castles  for ");
      ArrayList<Vassals> arrayList1 = fiefdoms0.getRebelliousVassals();
      fiefdoms0.setRebelliousVassals(arrayList1);
      Vassals vassals0 = new Vassals("Ile-De-France", " castles  for ");
      arrayList1.add(vassals0);
      fiefdoms0.getMagyar();
      fiefdoms0.setRebelliousVassals(arrayList1);
      fiefdoms0.getNeighbors();
      fiefdoms0.getViking();
      fiefdoms0.setConqueror("6");
      fiefdoms0.setFiefdomCastles(true);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-48);
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)52;
      fiefdoms0.selectioncolor = byteArray0;
      fiefdoms0.setMagyar((ArrayList<Intruders>) null);
      fiefdoms0.setLoyalVassals((-1027), true);
      fiefdoms0.getMagyar();
      fiefdoms0.setViking((ArrayList<Intruders>) null);
      Knight knight0 = new Knight();
      ArrayList<String> arrayList0 = knight0.getFiefdoms();
      FileSystemHandling.shouldAllThrowIOExceptions();
      fiefdoms0.setNeighbors(arrayList0);
      Fiefdoms fiefdoms1 = new Fiefdoms();
      fiefdoms1.setMagyar((ArrayList<Intruders>) null);
      fiefdoms1.getPersonalCastles();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.getSelectioncolor();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Knight knight0 = new Knight((String) null, "", "");
      ArrayList<String> arrayList0 = knight0.getConversation();
      arrayList0.add((String) null);
      arrayList0.add("");
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, (String) null, "3l3GQDmgp25Vw/", 0, false, arrayList0);
      arrayList0.add(0, "fiefdoms are neighbors");
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)0;
      knight0.setMovingVassals(fiefdoms0.loyalVassals);
      fiefdoms0.setSelectioncolor(byteArray0);
      fiefdoms0.setInvaderType(arrayList0);
      fiefdoms0.setViking((int) (byte)0, false);
      fiefdoms0.getLoyalVassals();
      arrayList0.add("");
      fiefdoms0.getInvaderType();
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMagyar();
      fiefdoms0.setViking(arrayList1);
      fiefdoms0.getShaderColor();
      fiefdoms0.getName();
      fiefdoms0.setMagyar((ArrayList<Intruders>) null);
      fiefdoms0.setMuslim(arrayList1);
      fiefdoms0.setOwner(" vassals will be moving with you");
      fiefdoms0.setName("");
      fiefdoms0.getName();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setRebelliousVassals(0, true);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setFiefdomCastles(false);
      byte[] byteArray0 = new byte[0];
      fiefdoms0.selectioncolor = byteArray0;
      fiefdoms0.setValue((-665));
      fiefdoms0.setOwner("k~D");
      fiefdoms0.setPeasants((-665));
      fiefdoms0.getSelectioncolor();
      fiefdoms0.getMuslim();
      fiefdoms0.getRebelliousVassals();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      fiefdoms0.getMuslim();
      fiefdoms0.getRebelliousVassals();
      fiefdoms0.getLoyalVassals();
      fiefdoms0.setOwner((String) null);
      fiefdoms0.getLoyalVassals();
      fiefdoms0.setMagyar((-268), false);
      fiefdoms0.getRebelliousVassals();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setMagyar((-1), true);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.getInvaderType();
      fiefdoms0.setRebelliousVassals(1766, true);
      Fiefdoms fiefdoms1 = new Fiefdoms((ArrayList<String>) null, "$*_Y.x'n", "magyar", 1950, true, (ArrayList<String>) null);
      fiefdoms1.getValue();
      fiefdoms1.buyFiefdomCastles(1950);
      fiefdoms0.getViking();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMagyar();
      fiefdoms0.setViking(arrayList0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.getMuslim();
      fiefdoms0.getInvaderType();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.buyFiefdomCastles((-4014));
      fiefdoms0.setPeasants((-4014));
      fiefdoms0.getNeighbors();
      fiefdoms0.getPeasants();
      fiefdoms0.setMagyar(0, true);
      fiefdoms0.setPersonalCastles((-4014));
      fiefdoms0.setLoyalVassals(3470, false);
      fiefdoms0.setPersonalCastles(3470);
      fiefdoms0.getShaderColor();
      Fiefdoms fiefdoms1 = new Fiefdoms();
      ArrayList<Vassals> arrayList0 = fiefdoms1.getLoyalVassals();
      fiefdoms0.setRebelliousVassals(arrayList0);
      fiefdoms0.getMagyar();
      fiefdoms0.setMuslim((-4014), false);
      fiefdoms0.setInvaderType((ArrayList<String>) null);
      fiefdoms0.setName(">DNWF>iP{k5x9f?j?");
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setRebelliousVassals((-1), false);
      fiefdoms0.setLoyalVassals((ArrayList<Vassals>) null);
      // Undeclared exception!
      try { 
        fiefdoms0.setRebelliousVassals((-1), true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("src.Fiefdoms", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.getLoyalVassals();
      fiefdoms0.buyPersonalCastles(7);
      fiefdoms0.buyFiefdomCastles((-756));
      fiefdoms0.setPersonalCastles((-1265));
      Knight knight0 = new Knight("+*7C{EWZY@3gN", ";+u_f", "Unknown rank");
      Knight knight1 = new Knight("goD^8f&&c$WG", "src.intruders", "iy");
      ArrayList<String> arrayList0 = knight1.getVotes();
      Fiefdoms fiefdoms1 = new Fiefdoms(arrayList0, "+*7C{EWZY@3gN", "k~)ec*dqxn|pm=8", (-631), false, arrayList0);
      ArrayList<String> arrayList1 = knight0.getConversation();
      Fiefdoms fiefdoms2 = new Fiefdoms(arrayList0, "muslim", "muslim", 3, false, arrayList1);
      fiefdoms2.getMagyar();
      fiefdoms2.setMuslim((-631), true);
      fiefdoms2.setInvaderType(arrayList0);
      fiefdoms2.setName("src.intruders");
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.getOwner();
      fiefdoms0.setMagyar((int) (byte) (-11), false);
      Fiefdoms fiefdoms1 = new Fiefdoms();
      float[] floatArray0 = new float[9];
      floatArray0[0] = (float) 1;
      floatArray0[1] = (float) (byte) (-11);
      floatArray0[2] = (float) 3298;
      floatArray0[3] = (float) (byte) (-11);
      floatArray0[4] = (float) (byte) (-11);
      floatArray0[5] = (float) 1;
      floatArray0[6] = (float) 1;
      floatArray0[7] = (float) 3298;
      floatArray0[8] = (float) 1;
      fiefdoms1.setShaderColor(floatArray0);
      fiefdoms0.setKingdom(true);
      fiefdoms0.getInvaderType();
      Fiefdoms fiefdoms2 = new Fiefdoms((ArrayList<String>) null, (String) null, " castles  for ", 3298, true, (ArrayList<String>) null);
      fiefdoms2.setLoyalVassals(3298, false);
      ArrayList<Intruders> arrayList0 = new ArrayList<Intruders>();
      fiefdoms1.setName(" castles  for ");
      fiefdoms1.buyPersonalCastles((byte) (-11));
      ArrayList<Intruders> arrayList1 = fiefdoms2.getMuslim();
      fiefdoms2.setViking(arrayList1);
      fiefdoms1.getOwner();
      fiefdoms2.buyFiefdomCastles(1);
      fiefdoms2.getNeighbors();
      fiefdoms2.getConqueror();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      float[] floatArray0 = new float[0];
      fiefdoms0.setShaderColor(floatArray0);
      Knight knight0 = new Knight("T", "T", " bug3?hk&1r");
      ArrayList<String> arrayList0 = knight0.getConversation();
      ArrayList<String> arrayList1 = knight0.getFiefdoms();
      Fiefdoms fiefdoms1 = new Fiefdoms(arrayList0, "/,Z$3+#'[`6N", "You cannot have more than a total of ", 9933, false, arrayList1);
      fiefdoms1.setMagyar(1, false);
      fiefdoms0.setRebelliousVassals(1, false);
      fiefdoms1.getInvaderType();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      float[] floatArray0 = new float[2];
      fiefdoms0.setShaderColor(floatArray0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setName("You are allowed to take up to ");
      fiefdoms0.getValue();
      fiefdoms0.getValue();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      Vassals vassals0 = new Vassals();
      fiefdoms0.loyalVassals.add(vassals0);
      fiefdoms0.setRebelliousVassals(1, true);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.buyFiefdomCastles(2066);
      fiefdoms0.getValue();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setMagyar(3594, true);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.buyFiefdomCastles((-4014));
      fiefdoms0.setPeasants((-4014));
      fiefdoms0.getNeighbors();
      fiefdoms0.getPeasants();
      fiefdoms0.setMagyar(0, true);
      fiefdoms0.setLoyalVassals(3470, false);
      fiefdoms0.setFiefdomCastles(true);
      LinkedList<Intruders> linkedList0 = new LinkedList<Intruders>();
      ArrayList<Intruders> arrayList0 = new ArrayList<Intruders>(linkedList0);
      fiefdoms0.setViking(arrayList0);
      fiefdoms0.setMagyar(arrayList0);
      fiefdoms0.setName("");
      fiefdoms0.setVassalsList((ArrayList<Player>) null);
      fiefdoms0.getPersonalCastles();
      fiefdoms0.setFiefdomCastles((-3014));
      fiefdoms0.getPeasants();
      fiefdoms0.getLoyalVassals();
      Fiefdoms fiefdoms1 = new Fiefdoms((ArrayList<String>) null, "", "?).#n=q%t+", (-3014), true, (ArrayList<String>) null);
      fiefdoms1.setVassalsList((ArrayList<Player>) null);
      fiefdoms1.setVassalsList((ArrayList<Player>) null);
      fiefdoms1.setPersonalCastles(true);
      fiefdoms1.buyPersonalCastles(0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)115;
      byteArray0[3] = (byte) (-103);
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      fiefdoms0.selectioncolor = byteArray0;
      fiefdoms0.setMuslim(956, true);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      ArrayList<Intruders> arrayList0 = fiefdoms0.getViking();
      fiefdoms0.setMuslim(arrayList0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms((ArrayList<String>) null, "viking", "viking", 6134, true, (ArrayList<String>) null);
      fiefdoms0.getInvaderType();
      fiefdoms0.getNeighbors();
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      ArrayList<Vassals> arrayList0 = fiefdoms0.getLoyalVassals();
      fiefdoms0.setLoyalVassals(arrayList0);
      arrayList0.add((Vassals) null);
      Knight knight0 = new Knight();
      ArrayList<Retainers> arrayList1 = knight0.getRetainers();
      arrayList0.retainAll(arrayList1);
      fiefdoms0.setValue((-445));
      Vassals vassals0 = new Vassals("", "6H`?c-)");
      ArrayList<String> arrayList2 = knight0.conversation;
      vassals0.setRank(" castles for ");
      fiefdoms0.setNeighbors(arrayList2);
      arrayList0.add(vassals0);
      fiefdoms0.setLoyalVassals(arrayList0);
      fiefdoms0.getOwner();
      fiefdoms0.getViking();
      fiefdoms0.getFiefdomCastles();
      fiefdoms0.setRebelliousVassals((-445), false);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      ArrayList<Vassals> arrayList0 = new ArrayList<Vassals>();
      fiefdoms0.setLoyalVassals(arrayList0);
      fiefdoms0.getMuslim();
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setPersonalCastles(false);
      fiefdoms0.getMuslim();
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      float[] floatArray0 = new float[0];
      fiefdoms0.setShaderColor(floatArray0);
      fiefdoms0.getPersonalCastles();
      fiefdoms0.setRebelliousVassals((ArrayList<Vassals>) null);
      fiefdoms0.getOwner();
      fiefdoms0.setMagyar(0, false);
      fiefdoms0.setLoyalVassals(0, true);
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMagyar();
      fiefdoms0.setViking(arrayList0);
      Knight knight0 = new Knight("(%@x%^D", (String) null, (String) null);
      ArrayList<String> arrayList1 = knight0.getFiefdoms();
      fiefdoms0.setNeighbors(arrayList1);
      fiefdoms0.getPersonalCastles();
      fiefdoms0.getRebelliousVassals();
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setViking(9974, true);
      fiefdoms0.getRebelliousVassals();
      Vassals vassals0 = new Vassals();
      fiefdoms0.loyalVassals.add(vassals0);
      fiefdoms0.setRebelliousVassals(0, true);
      fiefdoms0.getValue();
      fiefdoms0.getPersonalCastles();
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Knight knight0 = new Knight();
      knight0.getFiefdoms();
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setVassalsList((ArrayList<Player>) null);
      fiefdoms0.getPersonalCastles();
      fiefdoms0.setFiefdomCastles((-1729));
      fiefdoms0.getPeasants();
      fiefdoms0.getLoyalVassals();
      fiefdoms0.setVassalsList((ArrayList<Player>) null);
      fiefdoms0.setVassalsList((ArrayList<Player>) null);
      fiefdoms0.setPersonalCastles(true);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setOwner("T");
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      Knight knight0 = new Knight();
      ArrayList<String> arrayList0 = knight0.conversation;
      Fiefdoms fiefdoms1 = new Fiefdoms(arrayList0, "w6o-:rfx!!rdxn", "magyar", (-4877), false, arrayList0);
      fiefdoms1.setOwner("magyar");
      fiefdoms1.setOwner("Qlf)6n_A{'C\",]/icE");
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      ArrayList<Intruders> arrayList0 = new ArrayList<Intruders>();
      fiefdoms0.setMagyar(arrayList0);
      fiefdoms0.getInvaderType();
      fiefdoms0.setMagyar((-1892), false);
      fiefdoms0.setPersonalCastles(3901);
      fiefdoms0.setLoyalVassals((-630), true);
      fiefdoms0.setPersonalCastles((-630));
      fiefdoms0.getShaderColor();
      Fiefdoms fiefdoms1 = new Fiefdoms();
      ArrayList<Vassals> arrayList1 = fiefdoms0.getLoyalVassals();
      fiefdoms1.setRebelliousVassals(arrayList1);
      Fiefdoms fiefdoms2 = new Fiefdoms((ArrayList<String>) null, " vassals will be moving with you", " vassals will be moving with you", 371, true, (ArrayList<String>) null);
      fiefdoms2.getMagyar();
      fiefdoms1.setMuslim(956, true);
      fiefdoms1.setInvaderType((ArrayList<String>) null);
      fiefdoms0.setName(">DNWF>iP{k5x9f?j?");
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-42);
      byteArray0[2] = (byte) (-105);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-27);
      byteArray0[5] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      arrayList0.add("y`'<6`4");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("magyar", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      arrayList0.add("");
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "", (String) null, (-3918), true, arrayList0);
      fiefdoms0.getMagyar();
      fiefdoms0.setOwner("sc;c");
      fiefdoms0.getNeighbors();
      fiefdoms0.buyFiefdomCastles((-3918));
      fiefdoms0.getViking();
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMagyar();
      Intruders intruders0 = new Intruders((String) null, "Z@");
      arrayList0.add(intruders0);
      fiefdoms0.setViking(arrayList0);
      fiefdoms0.setLoyalVassals(0, true);
      ArrayList<String> arrayList1 = new ArrayList<String>();
      fiefdoms0.setInvaderType(arrayList1);
      fiefdoms0.getShaderColor();
      fiefdoms0.getValue();
      fiefdoms0.setMuslim(arrayList0);
      fiefdoms0.getShaderColor();
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      float[] floatArray0 = new float[0];
      fiefdoms0.setShaderColor(floatArray0);
      fiefdoms0.getPersonalCastles();
      fiefdoms0.setRebelliousVassals((ArrayList<Vassals>) null);
      fiefdoms0.getOwner();
      fiefdoms0.setMagyar(6, false);
      fiefdoms0.setLoyalVassals(0, false);
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMagyar();
      fiefdoms0.setRebelliousVassals(6, true);
      fiefdoms0.setKingdom(true);
      fiefdoms0.getShaderColor();
      fiefdoms0.setLoyalVassals((-958), false);
      fiefdoms0.setMuslim(arrayList0);
      fiefdoms0.getSelectioncolor();
      fiefdoms0.setFiefdomCastles(3159);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.buyPersonalCastles(2066);
      fiefdoms0.buyFiefdomCastles(2066);
      fiefdoms0.getPersonalCastles();
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setViking((-1801216745), false);
      fiefdoms0.getNeighbors();
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.buyPersonalCastles(1539);
      fiefdoms0.setConqueror("");
      fiefdoms0.getVassalsList();
      fiefdoms0.getVassalsList();
      fiefdoms0.getConqueror();
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      Vassals vassals0 = new Vassals();
      fiefdoms0.setShaderColor((float[]) null);
      fiefdoms0.getShaderColor();
      fiefdoms0.getConqueror();
      fiefdoms0.getSelectioncolor();
      fiefdoms0.getViking();
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      ArrayList<Vassals> arrayList0 = new ArrayList<Vassals>();
      fiefdoms0.setLoyalVassals(arrayList0);
      ArrayList<Intruders> arrayList1 = fiefdoms0.getViking();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      Intruders intruders0 = new Intruders("", "");
      arrayList1.add(intruders0);
      // Undeclared exception!
      try { 
        arrayList1.removeIf((Predicate<? super Intruders>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }
}
