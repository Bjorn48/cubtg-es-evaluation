/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 25 09:46:38 GMT 2019
 */

package module;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import java.util.NoSuchElementException;
import javax.swing.JToolTip;
import module.Message;
import module.MessageFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MessageFactory_ESTest extends MessageFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Message message0 = MessageFactory.createWarningMessage("Message[id=4,session=4,head=]G,recip=,sender=null,state=1,ttl=3000,time=0,body=java.lang.Object@1a48e9e0]", (Object[]) null);
      assertEquals("*", message0.getRecipient());
      assertEquals("WARNING", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = new Message();
      messageFactory0.unrefObject(message0);
      Object[] objectArray0 = new Object[0];
      Message message1 = MessageFactory.createWarningMessage("", objectArray0);
      assertEquals("WARNING", message1.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Message message0 = MessageFactory.createConnectionDroppedMessage(0, "]G");
      assertEquals("DROPPED", message0.getHeader());
      assertEquals("*", message0.getRecipient());
      
      Message message1 = MessageFactory.createWarningMessage("Message[id=4,session=4,head=]G,recip=,sender=null,state=1,ttl=3000,time=0,body=java.lang.Object@1a48e9e0]", (Object[]) null);
      assertEquals("*", message1.getRecipient());
      assertEquals("WARNING", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Message message0 = MessageFactory.createConnectionDroppedMessage(0, "]G");
      assertEquals("*", message0.getRecipient());
      assertEquals("DROPPED", message0.getHeader());
      
      System.setCurrentTimeMillis(0L);
      Message message1 = MessageFactory.createUnloadMessage("]G");
      assertEquals("*", message1.getRecipient());
      assertEquals("KERNEL", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      System.setCurrentTimeMillis((-207L));
      Message message0 = MessageFactory.createWarningMessage("_3sHeBh_uS5", (Object[]) null);
      assertEquals("*", message0.getRecipient());
      assertEquals("WARNING", message0.getHeader());
      
      Message message1 = MessageFactory.createUnloadMessage("=BEZn$nY8j5QrW)s8J");
      assertEquals("*", message1.getRecipient());
      assertEquals("KERNEL", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = new Message();
      messageFactory0.unrefObject(message0);
      Message message1 = MessageFactory.createUnloadMessage((String) null);
      assertEquals("KERNEL", message1.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Message message0 = MessageFactory.createMessage("Couldn't find maxstrength in config.", "Couldn't find maxstrength in config.", (Object) locale_Category0);
      assertEquals(3000, Message.TIME_TO_LIVE);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      System.setCurrentTimeMillis((-207L));
      JToolTip jToolTip0 = new JToolTip();
      Message message0 = MessageFactory.createMessage("_3sHeBh_uS5", "", (Object) jToolTip0);
      assertEquals("_3sHeBh_uS5", message0.getHeader());
      assertEquals("", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MessageFactory.createConnectionDroppedMessage(0, "]G");
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Message message0 = MessageFactory.createMessage("Couldn't find maxstrength in config.", "Couldn't find maxstrength in config.", (Object) locale_Category0);
      assertEquals(4, Message.DELIVERED);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Message message0 = MessageFactory.createConnectionDroppedMessage(0, "]G");
      assertEquals("*", message0.getRecipient());
      assertEquals("DROPPED", message0.getHeader());
      
      System.setCurrentTimeMillis(0L);
      Message message1 = MessageFactory.createMessage("]G", (Object) "]G");
      assertEquals("]G", message1.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      System.setCurrentTimeMillis((-207L));
      Message message0 = MessageFactory.createWarningMessage("_3sHeBh_uS5", (Object[]) null);
      assertEquals("*", message0.getRecipient());
      assertEquals("WARNING", message0.getHeader());
      
      MessageFactory messageFactory0 = MessageFactory.instance;
      Message message1 = MessageFactory.createMessage("", (Object) messageFactory0);
      assertEquals("", message1.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = new Message();
      messageFactory0.unrefObject(message0);
      Message message1 = MessageFactory.createMessage("JIB<+r#~b", (Object) messageFactory0);
      assertEquals("*", message1.getRecipient());
      assertEquals("JIB<+r#~b", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = messageFactory0.createMessage();
      assertEquals("*", message0.getRecipient());
      assertEquals("", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      System.setCurrentTimeMillis((-207L));
      Message message0 = MessageFactory.createWarningMessage("_3sHeBh_uS5", (Object[]) null);
      assertEquals("*", message0.getRecipient());
      assertEquals("WARNING", message0.getHeader());
      
      MessageFactory messageFactory0 = MessageFactory.instance;
      Message message1 = messageFactory0.createMessage();
      assertEquals("*", message1.getRecipient());
      assertEquals("", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = new Message();
      messageFactory0.unrefObject(message0);
      Message message1 = messageFactory0.createMessage();
      assertEquals("*", message1.getRecipient());
      assertEquals("", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Message message0 = MessageFactory.createConnectionDroppedMessage(0, "]G");
      assertEquals("*", message0.getRecipient());
      assertEquals("DROPPED", message0.getHeader());
      
      System.setCurrentTimeMillis(0L);
      Object[] objectArray0 = new Object[2];
      Message message1 = MessageFactory.createErrorMessage("]G", objectArray0);
      assertEquals("ERROR", message1.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      System.setCurrentTimeMillis((-207L));
      Message message0 = MessageFactory.createWarningMessage("_3sHeBh_uS5", (Object[]) null);
      assertEquals("WARNING", message0.getHeader());
      
      Message message1 = MessageFactory.createErrorMessage("80zT~DYt!/r+L,$/+|", (Object[]) null);
      assertEquals("ERROR", message1.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = new Message();
      messageFactory0.unrefObject(message0);
      Message message1 = MessageFactory.createErrorMessage("z6o`.v", objectArray0);
      assertEquals("*", message1.getRecipient());
      assertEquals("ERROR", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Message message0 = MessageFactory.createConnectionDroppedMessage(0, "]G");
      assertEquals("DROPPED", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      System.setCurrentTimeMillis((-207L));
      Message message0 = MessageFactory.createConnectionDroppedMessage((-2109), "/}ixB*Irs");
      assertEquals("DROPPED", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = new Message();
      messageFactory0.unrefObject(message0);
      Message message1 = MessageFactory.createConnectionDroppedMessage(1, "JIB<+r#~b");
      assertEquals("*", message1.getRecipient());
      assertEquals("DROPPED", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MessageFactory.createConnectionDroppedMessage(0, "]G");
      Message message0 = MessageFactory.createConnectionDroppedMessage(0, "]G");
      assertEquals("*", message0.getRecipient());
      assertEquals("DROPPED", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject((Message) null);
      Object[] objectArray0 = new Object[1];
      // Undeclared exception!
      try { 
        MessageFactory.createWarningMessage((String) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("util.AbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject((Message) null);
      // Undeclared exception!
      try { 
        MessageFactory.createUnloadMessage("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("util.AbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Message message0 = MessageFactory.createMessage("_J]Ov~xo)l", "_J]Ov~xo)l", (Object) null);
      MessageFactory.instance = null;
      // Undeclared exception!
      try { 
        MessageFactory.createMessage((String) null, "_J]Ov~xo)l", (Object) message0);
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject((Message) null);
      // Undeclared exception!
      try { 
        MessageFactory.createMessage("module.MessageFactory", "gui.GUIState", (Object) MessageFactory.instance);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("util.AbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject((Message) null);
      // Undeclared exception!
      try { 
        MessageFactory.createMessage("TWbb4~:F?", (Object) "TWbb4~:F?");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("util.AbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject((Message) null);
      // Undeclared exception!
      try { 
        messageFactory0.createMessage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("util.AbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject((Message) null);
      // Undeclared exception!
      try { 
        MessageFactory.createErrorMessage("i`HU", (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("util.AbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject((Message) null);
      // Undeclared exception!
      try { 
        MessageFactory.createConnectionDroppedMessage(1708, "i`HU");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("util.AbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      try { 
        MessageFactory.createMessage("]G", (Object) "]G");
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
      try { 
        MessageFactory.createUnloadMessage("]G");
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Message message0 = MessageFactory.createConnectionDroppedMessage(0, "]G");
      assertEquals("DROPPED", message0.getHeader());
      assertEquals("*", message0.getRecipient());
      
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message1 = messageFactory0.createMessage();
      assertEquals("*", message1.getRecipient());
      assertEquals("", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      // Undeclared exception!
      try { 
        MessageFactory.createErrorMessage((String) null, objectArray0);
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }
}
