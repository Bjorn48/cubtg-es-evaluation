* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.sat4j.tools.encoding.Product
* Starting Client-0
* Connecting to master process on port 16954
* Analyzing classpath: 
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
* Finished analyzing classpath
* Generating tests for class org.sat4j.tools.encoding.Product
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 699
* Using seed 1550565238180
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 136 / 699
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.21621621621621623
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.1568627450980392
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.12179487179487179
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.375
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.8
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.13725490196078433
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 200
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
[MASTER] 09:34:29.074 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Found no variables of type class org.sat4j.opt.MinOneDecorator
[MASTER] 09:34:29.139 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.specs.IConstr
[MASTER] 09:34:31.622 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for org.sat4j.tools.ManyCore<org.sat4j.opt.MinOneDecorator> canUseFunctionalMocks=false, canBeMocked: true
[MASTER] 09:34:31.822 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.specs.IVecInt
[MASTER] 09:34:35.870 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.sat4j.minisat.core.Solver due to org.evosuite.ga.ConstructionFailedException: Found no variables of type class org.sat4j.minisat.core.SearchParams
[MASTER] 09:34:40.257 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Found no variables of type class org.sat4j.opt.MaxSatDecorator
[MASTER] 09:34:40.501 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Found no variables of type class org.sat4j.minisat.core.SolverStats
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 262
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.21621621621621623
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.1568627450980392
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.12179487179487179
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.1568627450980392
[MASTER] 09:34:43.124 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.sat4j.tools.ManyCore due to org.evosuite.ga.ConstructionFailedException: Found no variables of type class org.sat4j.opt.MinOneDecorator
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 349
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
[MASTER] 09:34:46.364 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Failed to add constructor for org.sat4j.minisat.core.Solver due to org.evosuite.ga.ConstructionFailedException: Found no variables of type interface org.sat4j.minisat.core.IOrder
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 444
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.21621621621621623
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.1568627450980392
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.1346153846153846
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.1568627450980392
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 519
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 597
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.43243243243243246
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.39215686274509803
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.38675213675213677
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.21568627450980393
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 680
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 769
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.4774774774774775
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.43137254901960786
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.39316239316239315
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.21568627450980393
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 858
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 950
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.4774774774774775
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.43137254901960786
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.39316239316239315
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.39215686274509803
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 1039
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.4774774774774775
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.43137254901960786
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.39316239316239315
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.39215686274509803
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 1121
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.7837837837837838
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6666666666666666
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.5683760683760684
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.6274509803921569
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 1201
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.7837837837837838
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6666666666666666
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.5726495726495726
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.6274509803921569
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 1279
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.7837837837837838
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.6666666666666666
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.5726495726495726
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.6666666666666666
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 1356
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.8288288288288288
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7254901960784313
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.8675213675213675
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.7254901960784313
* naaame: 
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 1418
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.8288288288288288
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7254901960784313
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.8675213675213675
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.7254901960784313
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.8288288288288288
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7254901960784313
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.8675213675213675
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.7254901960784313
* Search finished after 122s and 15 generations, 28632 statements, best individual has fitness: 113.0
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.8288288288288288
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7254901960784313
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.8675213675213675
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.7254901960784313
* Minimizing test suite
[MASTER] 09:37:16.286 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 84%
* Total number of goals: 111
* Number of covered goals: 93
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 73%
* Total number of goals: 51
* Number of covered goals: 37
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 89%
* Total number of goals: 468
* Number of covered goals: 416
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 8
* Number of covered goals: 4
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 73%
* Total number of goals: 51
* Number of covered goals: 37
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.8288288288288288
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7254901960784313
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.8675213675213675
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.7254901960784313
* Generated 40 tests with total length 846
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 09:38:10.218 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.8602666666666666% of time used, but only 4/40 tests minimized), falling back to using all assertions
[MASTER] 09:38:18.605 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 1%
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.8288288288288288
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7254901960784313
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.8675213675213675
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.5
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.7254901960784313
* Compiling and checking tests
[MASTER] 09:38:57.062 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: expected:<3030> but was:<2>
[MASTER] 09:38:57.104 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Product product0 = new Product();
assertNotNull(product0);

MinOneDecorator minOneDecorator0 = mock(MinOneDecorator.class, new ViolatedAssumptionAnswer());
doReturn((IConstr) null, (IConstr) null, (IConstr) null, (IConstr) null).when(minOneDecorator0).addAtMost(any(org.sat4j.specs.IVecInt.class) , anyInt());
doReturn((IConstr) null, (IConstr) null, (IConstr) null, (IConstr) null, (IConstr) null).when(minOneDecorator0).addClause(any(org.sat4j.specs.IVecInt.class));
doReturn((IVecInt) null).when(minOneDecorator0).createBlockingClauseForCurrentModel();
doReturn((Map) null).when(minOneDecorator0).getStat();
doReturn(false).when(minOneDecorator0).isSatisfiable();
ClausalCardinalitiesDecorator<MinOneDecorator> clausalCardinalitiesDecorator0 = new ClausalCardinalitiesDecorator<MinOneDecorator>(minOneDecorator0);
assertNotNull(clausalCardinalitiesDecorator0);

boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
assertTrue(boolean0);

VecInt vecInt0 = new VecInt();
assertEquals(0, vecInt0.size());
assertTrue(vecInt0.isEmpty());
assertNotNull(vecInt0);

vecInt0.ensure(3033);
assertEquals(0, vecInt0.size());
assertTrue(vecInt0.isEmpty());

vecInt0.unsafePush(3030);
assertEquals(3030, vecInt0.last());
assertEquals(1, vecInt0.size());
assertFalse(vecInt0.isEmpty());

IConstr iConstr0 = product0.addExactly(clausalCardinalitiesDecorator0, vecInt0, 3030);
assertEquals(3030, vecInt0.last());
assertEquals(1, vecInt0.size());
assertFalse(vecInt0.isEmpty());
assertEquals(2, iConstr0.size());
assertFalse(iConstr0.canBePropagatedMultipleTimes());
assertEquals(0.0, iConstr0.getActivity(), 0.01);
assertNotNull(iConstr0);

IConstr iConstr1 = product0.addAtMostNonOpt(clausalCardinalitiesDecorator0, vecInt0, 2978);
assertEquals(3030, vecInt0.last());
assertEquals(1, vecInt0.size());
assertFalse(vecInt0.isEmpty());
assertEquals(0.0, iConstr1.getActivity(), 0.01);
assertFalse(iConstr1.canBePropagatedMultipleTimes());
assertEquals(0, iConstr1.size());
assertNotSame(iConstr1, iConstr0);
assertNotNull(iConstr1);
assertFalse(iConstr1.equals((Object)iConstr0));

IConstr iConstr2 = product0.addAtMostNonOpt(clausalCardinalitiesDecorator0, vecInt0, 3030);
assertEquals(3030, vecInt0.last());
assertEquals(1, vecInt0.size());
assertFalse(vecInt0.isEmpty());
assertEquals(0.0, iConstr2.getActivity(), 0.01);
assertEquals(0, iConstr2.size());
assertFalse(iConstr2.canBePropagatedMultipleTimes());
assertNotSame(iConstr2, iConstr1);
assertNotSame(iConstr2, iConstr0);
assertNotNull(iConstr2);
assertFalse(iConstr2.equals((Object)iConstr1));
assertFalse(iConstr2.equals((Object)iConstr0));

IConstr iConstr3 = product0.addExactly(clausalCardinalitiesDecorator0, vecInt0, 3033);
assertEquals(3030, vecInt0.last());
assertEquals(1, vecInt0.size());
assertFalse(vecInt0.isEmpty());
assertEquals(0.0, iConstr3.getActivity(), 0.01);
assertEquals(2, iConstr3.size());
assertFalse(iConstr3.canBePropagatedMultipleTimes());
assertNotSame(iConstr3, iConstr1);
assertNotSame(iConstr3, iConstr2);
assertNotSame(iConstr3, iConstr0);
assertNotNull(iConstr3);
assertFalse(iConstr3.equals((Object)iConstr1));
assertFalse(iConstr3.equals((Object)iConstr2));
assertFalse(iConstr3.equals((Object)iConstr0));

ISolver iSolver0 = mock(ISolver.class, new ViolatedAssumptionAnswer());
doReturn(3030, 1, 3030, 0).when(iSolver0).nVars();
IVecInt iVecInt0 = AbstractMinimalModel.negativeLiterals(iSolver0);
assertEquals(3030, iVecInt0.size());
assertEquals((-3030), iVecInt0.last());
assertFalse(iVecInt0.isEmpty());
assertNotSame(iVecInt0, vecInt0);
assertNotNull(iVecInt0);
assertFalse(iVecInt0.equals((Object)vecInt0));

IVecInt iVecInt1 = iVecInt0.push(0);
assertEquals(0, iVecInt0.last());
assertEquals(3031, iVecInt0.size());
assertFalse(iVecInt0.isEmpty());
assertEquals(0, iVecInt1.last());
assertEquals(3031, iVecInt1.size());
assertFalse(iVecInt1.isEmpty());
assertNotSame(iVecInt0, vecInt0);
assertSame(iVecInt0, iVecInt1);
assertSame(iVecInt1, iVecInt0);
assertNotSame(iVecInt1, vecInt0);
assertNotNull(iVecInt1);
assertFalse(iVecInt0.equals((Object)vecInt0));
assertFalse(iVecInt1.equals((Object)vecInt0));

int int0 = iVecInt1.size();
assertEquals(0, iVecInt0.last());
assertEquals(3031, iVecInt0.size());
assertFalse(iVecInt0.isEmpty());
assertEquals(0, iVecInt1.last());
assertEquals(3031, iVecInt1.size());
assertFalse(iVecInt1.isEmpty());
assertNotSame(iVecInt0, vecInt0);
assertSame(iVecInt0, iVecInt1);
assertSame(iVecInt1, iVecInt0);
assertNotSame(iVecInt1, vecInt0);
assertEquals(3031, int0);
assertFalse(iVecInt0.equals((Object)vecInt0));
assertFalse(iVecInt1.equals((Object)vecInt0));

boolean boolean1 = iVecInt0.isEmpty();
assertEquals(0, iVecInt0.last());
assertEquals(3031, iVecInt0.size());
assertFalse(iVecInt0.isEmpty());
assertNotSame(iVecInt0, vecInt0);
assertSame(iVecInt0, iVecInt1);
assertFalse(boolean1);
assertFalse(iVecInt0.equals((Object)vecInt0));
assertFalse(boolean1 == boolean0);

int int1 = iVecInt0.last();
assertEquals(0, iVecInt0.last());
assertEquals(3031, iVecInt0.size());
assertFalse(iVecInt0.isEmpty());
assertNotSame(iVecInt0, vecInt0);
assertSame(iVecInt0, iVecInt1);
assertEquals(0, int1);
assertFalse(int1 == int0);
assertFalse(iVecInt0.equals((Object)vecInt0));

IVecInt iVecInt2 = iVecInt1.pop();
assertEquals(3030, iVecInt2.size());
assertFalse(iVecInt2.isEmpty());
assertEquals((-3030), iVecInt2.last());
assertEquals(3030, iVecInt0.size());
assertEquals((-3030), iVecInt0.last());
assertFalse(iVecInt0.isEmpty());
assertFalse(iVecInt1.isEmpty());
assertEquals(3030, iVecInt1.size());
assertEquals((-3030), iVecInt1.last());
assertSame(iVecInt2, iVecInt1);
assertSame(iVecInt2, iVecInt0);
assertNotSame(iVecInt2, vecInt0);
assertNotSame(iVecInt0, vecInt0);
assertSame(iVecInt0, iVecInt1);
assertSame(iVecInt0, iVecInt2);
assertSame(iVecInt1, iVecInt2);
assertSame(iVecInt1, iVecInt0);
assertNotSame(iVecInt1, vecInt0);
assertNotNull(iVecInt2);
assertFalse(iVecInt2.equals((Object)vecInt0));
assertFalse(iVecInt0.equals((Object)vecInt0));
assertFalse(iVecInt1.equals((Object)vecInt0));

IVecInt iVecInt3 = iVecInt2.push(2742);
assertEquals(3031, iVecInt2.size());
assertEquals(2742, iVecInt2.last());
assertFalse(iVecInt2.isEmpty());
assertFalse(iVecInt3.isEmpty());
assertEquals(2742, iVecInt3.last());
assertEquals(3031, iVecInt3.size());
assertEquals(3031, iVecInt0.size());
assertEquals(2742, iVecInt0.last());
assertFalse(iVecInt0.isEmpty());
assertEquals(3031, iVecInt1.size());
assertEquals(2742, iVecInt1.last());
assertFalse(iVecInt1.isEmpty());
assertSame(iVecInt2, iVecInt3);
assertSame(iVecInt2, iVecInt1);
assertSame(iVecInt2, iVecInt0);
assertNotSame(iVecInt2, vecInt0);
assertSame(iVecInt3, iVecInt2);
assertSame(iVecInt3, iVecInt1);
assertSame(iVecInt3, iVecInt0);
assertNotSame(iVecInt3, vecInt0);
assertNotSame(iVecInt0, vecInt0);
assertSame(iVecInt0, iVecInt1);
assertSame(iVecInt0, iVecInt2);
assertSame(iVecInt0, iVecInt3);
assertSame(iVecInt1, iVecInt3);
assertSame(iVecInt1, iVecInt2);
assertSame(iVecInt1, iVecInt0);
assertNotSame(iVecInt1, vecInt0);
assertNotNull(iVecInt3);
assertFalse(iVecInt2.equals((Object)vecInt0));
assertFalse(iVecInt3.equals((Object)vecInt0));
assertFalse(iVecInt0.equals((Object)vecInt0));
assertFalse(iVecInt1.equals((Object)vecInt0));

IVecInt iVecInt4 = iVecInt2.push(0);
assertEquals(0, iVecInt2.last());
assertEquals(3032, iVecInt2.size());
assertFalse(iVecInt2.isEmpty());
assertEquals(0, iVecInt4.last());
assertEquals(3032, iVecInt4.size());
assertFalse(iVecInt4.isEmpty());
assertEquals(0, iVecInt0.last());
assertEquals(3032, iVecInt0.size());
assertFalse(iVecInt0.isEmpty());
assertEquals(0, iVecInt1.last());
assertEquals(3032, iVecInt1.size());
assertFalse(iVecInt1.isEmpty());
assertSame(iVecInt2, iVecInt4);
assertSame(iVecInt2, iVecInt3);
assertSame(iVecInt2, iVecInt1);
assertSame(iVecInt2, iVecInt0);
assertNotSame(iVecInt2, vecInt0);
assertSame(iVecInt4, iVecInt1);
assertNotSame(iVecInt4, vecInt0);
assertSame(iVecInt4, iVecInt2);
assertSame(iVecInt4, iVecInt3);
assertSame(iVecInt4, iVecInt0);
assertSame(iVecInt0, iVecInt4);
assertNotSame(iVecInt0, vecInt0);
assertSame(iVecInt0, iVecInt1);
assertSame(iVecInt0, iVecInt2);
assertSame(iVecInt0, iVecInt3);
assertSame(iVecInt1, iVecInt3);
assertSame(iVecInt1, iVecInt4);
assertSame(iVecInt1, iVecInt2);
assertSame(iVecInt1, iVecInt0);
assertNotSame(iVecInt1, vecInt0);
assertNotNull(iVecInt4);
assertFalse(iVecInt2.equals((Object)vecInt0));
assertFalse(iVecInt4.equals((Object)vecInt0));
assertFalse(iVecInt0.equals((Object)vecInt0));
assertFalse(iVecInt1.equals((Object)vecInt0));

iVecInt1.set(0, 3031);
assertEquals(0, iVecInt0.last());
assertEquals(3032, iVecInt0.size());
assertFalse(iVecInt0.isEmpty());
assertEquals(0, iVecInt1.last());
assertEquals(3032, iVecInt1.size());
assertFalse(iVecInt1.isEmpty());
assertSame(iVecInt0, iVecInt4);
assertNotSame(iVecInt0, vecInt0);
assertSame(iVecInt0, iVecInt1);
assertSame(iVecInt0, iVecInt2);
assertSame(iVecInt0, iVecInt3);
assertSame(iVecInt1, iVecInt3);
assertSame(iVecInt1, iVecInt4);
assertSame(iVecInt1, iVecInt2);
assertSame(iVecInt1, iVecInt0);
assertNotSame(iVecInt1, vecInt0);
assertFalse(iVecInt0.equals((Object)vecInt0));
assertFalse(iVecInt1.equals((Object)vecInt0));

iVecInt4.set(0, 0);
assertEquals(0, iVecInt2.last());
assertEquals(3032, iVecInt2.size());
assertFalse(iVecInt2.isEmpty());
assertEquals(0, iVecInt4.last());
assertEquals(3032, iVecInt4.size());
assertFalse(iVecInt4.isEmpty());
assertEquals(0, iVecInt0.last());
assertEquals(3032, iVecInt0.size());
assertFalse(iVecInt0.isEmpty());
assertEquals(0, iVecInt1.last());
assertEquals(3032, iVecInt1.size());
assertFalse(iVecInt1.isEmpty());
assertSame(iVecInt2, iVecInt4);
assertSame(iVecInt2, iVecInt3);
assertSame(iVecInt2, iVecInt1);
assertSame(iVecInt2, iVecInt0);
assertNotSame(iVecInt2, vecInt0);
assertSame(iVecInt4, iVecInt1);
assertNotSame(iVecInt4, vecInt0);
assertSame(iVecInt4, iVecInt2);
assertSame(iVecInt4, iVecInt3);
assertSame(iVecInt4, iVecInt0);
assertSame(iVecInt0, iVecInt4);
assertNotSame(iVecInt0, vecInt0);
assertSame(iVecInt0, iVecInt1);
assertSame(iVecInt0, iVecInt2);
assertSame(iVecInt0, iVecInt3);
assertSame(iVecInt1, iVecInt3);
assertSame(iVecInt1, iVecInt4);
assertSame(iVecInt1, iVecInt2);
assertSame(iVecInt1, iVecInt0);
assertNotSame(iVecInt1, vecInt0);
assertFalse(iVecInt2.equals((Object)vecInt0));
assertFalse(iVecInt4.equals((Object)vecInt0));
assertFalse(iVecInt0.equals((Object)vecInt0));
assertFalse(iVecInt1.equals((Object)vecInt0));

iVecInt2.set(0, 0);
assertEquals(0, iVecInt2.last());
assertEquals(3032, iVecInt2.size());
assertFalse(iVecInt2.isEmpty());
assertEquals(0, iVecInt0.last());
assertEquals(3032, iVecInt0.size());
assertFalse(iVecInt0.isEmpty());
assertEquals(0, iVecInt1.last());
assertEquals(3032, iVecInt1.size());
assertFalse(iVecInt1.isEmpty());
assertSame(iVecInt2, iVecInt4);
assertSame(iVecInt2, iVecInt3);
assertSame(iVecInt2, iVecInt1);
assertSame(iVecInt2, iVecInt0);
assertNotSame(iVecInt2, vecInt0);
assertSame(iVecInt0, iVecInt4);
assertNotSame(iVecInt0, vecInt0);
assertSame(iVecInt0, iVecInt1);
assertSame(iVecInt0, iVecInt2);
assertSame(iVecInt0, iVecInt3);
assertSame(iVecInt1, iVecInt3);
assertSame(iVecInt1, iVecInt4);
assertSame(iVecInt1, iVecInt2);
assertSame(iVecInt1, iVecInt0);
assertNotSame(iVecInt1, vecInt0);
assertFalse(iVecInt2.equals((Object)vecInt0));
assertFalse(iVecInt0.equals((Object)vecInt0));
assertFalse(iVecInt1.equals((Object)vecInt0));

iVecInt1.set(0, 0);
assertEquals(0, iVecInt0.last());
assertEquals(3032, iVecInt0.size());
assertFalse(iVecInt0.isEmpty());
assertEquals(0, iVecInt1.last());
assertEquals(3032, iVecInt1.size());
assertFalse(iVecInt1.isEmpty());
assertSame(iVecInt0, iVecInt4);
assertNotSame(iVecInt0, vecInt0);
assertSame(iVecInt0, iVecInt1);
assertSame(iVecInt0, iVecInt2);
assertSame(iVecInt0, iVecInt3);
assertSame(iVecInt1, iVecInt3);
assertSame(iVecInt1, iVecInt4);
assertSame(iVecInt1, iVecInt2);
assertSame(iVecInt1, iVecInt0);
assertNotSame(iVecInt1, vecInt0);
assertFalse(iVecInt0.equals((Object)vecInt0));
assertFalse(iVecInt1.equals((Object)vecInt0));

Map<String, Number> map0 = clausalCardinalitiesDecorator0.getStat();
assertNull(map0);

boolean boolean2 = clausalCardinalitiesDecorator0.isSatisfiable();
assertFalse(boolean2);
assertFalse(boolean2 == boolean0);
assertTrue(boolean2 == boolean1);

IVecInt iVecInt5 = clausalCardinalitiesDecorator0.createBlockingClauseForCurrentModel();
assertNull(iVecInt5);

product0.addExactlyOne(clausalCardinalitiesDecorator0, iVecInt0);

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 1
* Writing tests to file
* Writing JUnit test case 'Product_ESTest' to evosuite-tests
* Done!

* Computation finished
