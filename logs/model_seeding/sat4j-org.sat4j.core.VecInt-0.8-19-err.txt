[MASTER] 04:23:32.379 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 04:28:12.354 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_4_1550546892259/org/sat4j/core/VecInt_4_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_4_1550546892259/org/sat4j/core/VecInt_4_tmp__ESTest_scaffolding.java]]
[MASTER] 04:28:12.354 [logback-2] ERROR JUnitAnalyzer - Classpath: bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 04:28:12.354 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 04:28:12.366 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   method access$100(org.sat4j.core.VecInt)
  location: class org.sat4j.core.VecInt: 29
[MASTER] 04:28:12.367 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_4_1550546892259/org/sat4j/core/VecInt_4_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Feb 19 03:28:12 GMT 2019
4:  */
5: 
6: package org.sat4j.core;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import java.util.Comparator;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: import org.sat4j.core.VecInt;
16: 
17: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
18: public class VecInt_4_tmp__ESTest extends VecInt_4_tmp__ESTest_scaffolding {
19: 
20:   @Test(timeout = 4000)
21:   public void test0()  throws Throwable  {
22:       VecInt vecInt0 = new VecInt();
23:       int int0 = 0;
24:       int int1 = 1634;
25:       VecInt vecInt1 = new VecInt(0, 1634);
26:       VecInt vecInt2 = null;
27:       // Undeclared exception!
28:       try { 
29:         VecInt.access$100((VecInt) null);
30:         fail("Expecting exception: NullPointerException");
31:       
32:       } catch(NullPointerException e) {
33:          //
34:          // no message in exception (getMessage() returned null)
35:          //
36:          verifyException("org.sat4j.core.VecInt", e);
37:       }
38:   }
39: }
RegularFileObject[/tmp/EvoSuite_4_1550546892259/org/sat4j/core/VecInt_4_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Feb 19 03:28:12 GMT 2019
5:  */
6: 
7: package org.sat4j.core;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class VecInt_4_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "org.sat4j.core.VecInt"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(VecInt_4_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "org.sat4j.core.ReadOnlyVecInt",
82:       "org.sat4j.specs.IteratorInt",
83:       "org.sat4j.core.VecInt$1",
84:       "org.sat4j.specs.IVecInt",
85:       "org.sat4j.core.EmptyVecInt",
86:       "org.sat4j.core.VecInt"
87:     );
88:   } 
89: 
90:   private static void resetClasses() {
91:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(VecInt_4_tmp__ESTest_scaffolding.class.getClassLoader()); 
92: 
93:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
94:       "org.sat4j.core.EmptyVecInt",
95:       "org.sat4j.core.VecInt",
96:       "org.sat4j.core.VecInt$1",
97:       "org.sat4j.core.EmptyVecInt$1",
98:       "org.sat4j.core.ReadOnlyVecInt"
99:     );
100:   }
101: }

[MASTER] 04:28:12.367 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
VecInt vecInt0 = new VecInt();
int int0 = 0;
int int1 = 1634;
VecInt vecInt1 = new VecInt(0, 1634);
VecInt vecInt2 = null;
VecInt.access$100((VecInt) null);

[MASTER] 04:28:29.646 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_58_1550546909593/org/sat4j/core/VecInt_58_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_58_1550546909593/org/sat4j/core/VecInt_58_tmp__ESTest_scaffolding.java]]
[MASTER] 04:28:29.646 [logback-2] ERROR JUnitAnalyzer - Classpath: bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 04:28:29.646 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 04:28:29.651 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   method access$000(org.sat4j.core.VecInt)
  location: class org.sat4j.core.VecInt: 58
[MASTER] 04:28:29.651 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   method access$100(org.sat4j.core.VecInt)
  location: class org.sat4j.core.VecInt: 65
[MASTER] 04:28:29.651 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_58_1550546909593/org/sat4j/core/VecInt_58_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Feb 19 03:28:29 GMT 2019
4:  */
5: 
6: package org.sat4j.core;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import org.evosuite.runtime.EvoRunner;
11: import org.evosuite.runtime.EvoRunnerParameters;
12: import org.junit.runner.RunWith;
13: import org.sat4j.core.VecInt;
14: 
15: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
16: public class VecInt_58_tmp__ESTest extends VecInt_58_tmp__ESTest_scaffolding {
17: 
18:   @Test(timeout = 4000)
19:   public void test0()  throws Throwable  {
20:       VecInt vecInt0 = new VecInt(1777);
21:       assertTrue(vecInt0.isEmpty());
22:       assertEquals(0, vecInt0.size());
23:       assertNotNull(vecInt0);
24:       
25:       vecInt0.growTo(1, (-1));
26:       assertEquals((-1), vecInt0.last());
27:       assertEquals(1, vecInt0.size());
28:       assertFalse(vecInt0.isEmpty());
29:       
30:       vecInt0.growTo(15, 1678);
31:       assertEquals(1678, vecInt0.last());
32:       assertEquals(16, vecInt0.size());
33:       assertFalse(vecInt0.isEmpty());
34:       
35:       vecInt0.sort();
36:       assertEquals(1678, vecInt0.last());
37:       assertEquals(16, vecInt0.size());
38:       assertFalse(vecInt0.isEmpty());
39:       
40:       vecInt0.unsafePush(15);
41:       assertEquals(15, vecInt0.last());
42:       assertEquals(17, vecInt0.size());
43:       assertFalse(vecInt0.isEmpty());
44:       
45:       int[] intArray0 = vecInt0.toArray();
46:       assertEquals(1777, intArray0.length);
47:       assertEquals(15, vecInt0.last());
48:       assertEquals(17, vecInt0.size());
49:       assertFalse(vecInt0.isEmpty());
50:       assertNotNull(intArray0);
51:       
52:       int int0 = vecInt0.containsAt(1678, (-1));
53:       assertEquals(15, vecInt0.last());
54:       assertEquals(17, vecInt0.size());
55:       assertFalse(vecInt0.isEmpty());
56:       assertEquals(1, int0);
57:       
58:       int int1 = VecInt.access$000(vecInt0);
59:       assertFalse(int1 == int0);
60:       assertEquals(15, vecInt0.last());
61:       assertEquals(17, vecInt0.size());
62:       assertFalse(vecInt0.isEmpty());
63:       assertEquals(17, int1);
64:       
65:       int[] intArray1 = VecInt.access$100(vecInt0);
66:       assertEquals(1777, intArray1.length);
67:       assertEquals(15, vecInt0.last());
68:       assertEquals(17, vecInt0.size());
69:       assertFalse(vecInt0.isEmpty());
70:       assertSame(intArray1, intArray0);
71:       assertNotNull(intArray1);
72:       
73:       boolean boolean0 = vecInt0.isSubsetOf(vecInt0);
74:       assertEquals(15, vecInt0.last());
75:       assertEquals(17, vecInt0.size());
76:       assertFalse(vecInt0.isEmpty());
77:       assertFalse(boolean0);
78:   }
79: }
RegularFileObject[/tmp/EvoSuite_58_1550546909593/org/sat4j/core/VecInt_58_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Feb 19 03:28:29 GMT 2019
5:  */
6: 
7: package org.sat4j.core;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class VecInt_58_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "org.sat4j.core.VecInt"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(VecInt_58_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "org.sat4j.core.ReadOnlyVecInt",
82:       "org.sat4j.specs.IteratorInt",
83:       "org.sat4j.core.VecInt$1",
84:       "org.sat4j.specs.IVecInt",
85:       "org.sat4j.core.EmptyVecInt",
86:       "org.sat4j.core.VecInt"
87:     );
88:   } 
89: 
90:   private static void resetClasses() {
91:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(VecInt_58_tmp__ESTest_scaffolding.class.getClassLoader()); 
92: 
93:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
94:       "org.sat4j.core.EmptyVecInt",
95:       "org.sat4j.core.VecInt",
96:       "org.sat4j.core.VecInt$1",
97:       "org.sat4j.core.EmptyVecInt$1",
98:       "org.sat4j.core.ReadOnlyVecInt"
99:     );
100:   }
101: }

[MASTER] 04:28:29.652 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
VecInt vecInt0 = new VecInt(1777);
assertTrue(vecInt0.isEmpty());
assertEquals(0, vecInt0.size());
assertNotNull(vecInt0);

vecInt0.growTo(1, (-1));
assertEquals((-1), vecInt0.last());
assertEquals(1, vecInt0.size());
assertFalse(vecInt0.isEmpty());

vecInt0.growTo(15, 1678);
assertEquals(1678, vecInt0.last());
assertEquals(16, vecInt0.size());
assertFalse(vecInt0.isEmpty());

vecInt0.sort();
assertEquals(1678, vecInt0.last());
assertEquals(16, vecInt0.size());
assertFalse(vecInt0.isEmpty());

vecInt0.unsafePush(15);
assertEquals(15, vecInt0.last());
assertEquals(17, vecInt0.size());
assertFalse(vecInt0.isEmpty());

int[] intArray0 = vecInt0.toArray();
assertEquals(1777, intArray0.length);
assertEquals(15, vecInt0.last());
assertEquals(17, vecInt0.size());
assertFalse(vecInt0.isEmpty());
assertNotNull(intArray0);

int int0 = vecInt0.containsAt(1678, (-1));
assertEquals(15, vecInt0.last());
assertEquals(17, vecInt0.size());
assertFalse(vecInt0.isEmpty());
assertEquals(1, int0);

int int1 = VecInt.access$000(vecInt0);
assertFalse(int1 == int0);
assertEquals(15, vecInt0.last());
assertEquals(17, vecInt0.size());
assertFalse(vecInt0.isEmpty());
assertEquals(17, int1);

int[] intArray1 = VecInt.access$100(vecInt0);
assertEquals(1777, intArray1.length);
assertEquals(15, vecInt0.last());
assertEquals(17, vecInt0.size());
assertFalse(vecInt0.isEmpty());
assertSame(intArray1, intArray0);
assertNotNull(intArray1);

boolean boolean0 = vecInt0.isSubsetOf(vecInt0);
assertEquals(15, vecInt0.last());
assertEquals(17, vecInt0.size());
assertFalse(vecInt0.isEmpty());
assertFalse(boolean0);


[MASTER] 04:28:43.351 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_158_1550546923323/org/sat4j/core/VecInt_158_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_158_1550546923323/org/sat4j/core/VecInt_158_tmp__ESTest_scaffolding.java]]
[MASTER] 04:28:43.351 [logback-2] ERROR JUnitAnalyzer - Classpath: bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 04:28:43.351 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 04:28:43.351 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   method access$000(org.sat4j.core.VecInt)
  location: class org.sat4j.core.VecInt: 23
[MASTER] 04:28:43.351 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   method access$100(org.sat4j.core.VecInt)
  location: class org.sat4j.core.VecInt: 24
[MASTER] 04:28:43.352 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_158_1550546923323/org/sat4j/core/VecInt_158_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Tue Feb 19 03:28:43 GMT 2019
4:  */
5: 
6: package org.sat4j.core;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import org.evosuite.runtime.EvoRunner;
11: import org.evosuite.runtime.EvoRunnerParameters;
12: import org.junit.runner.RunWith;
13: import org.sat4j.core.VecInt;
14: 
15: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
16: public class VecInt_158_tmp__ESTest extends VecInt_158_tmp__ESTest_scaffolding {
17: 
18:   @Test(timeout = 4000)
19:   public void test0()  throws Throwable  {
20:       VecInt vecInt0 = new VecInt();
21:       vecInt0.toArray();
22:       VecInt vecInt1 = new VecInt(383);
23:       VecInt.access$000(vecInt1);
24:       VecInt.access$100(vecInt1);
25:   }
26: }
RegularFileObject[/tmp/EvoSuite_158_1550546923323/org/sat4j/core/VecInt_158_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Tue Feb 19 03:28:43 GMT 2019
5:  */
6: 
7: package org.sat4j.core;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: @EvoSuiteClassExclude
18: public class VecInt_158_tmp__ESTest_scaffolding {
19: 
20:   @org.junit.Rule 
21:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
22: 
23:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
24: 
25:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
26: 
27: 
28:   @BeforeClass 
29:   public static void initEvoSuiteFramework() { 
30:     org.evosuite.runtime.RuntimeSettings.className = "org.sat4j.core.VecInt"; 
31:     org.evosuite.runtime.GuiSupport.initialize(); 
32:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
34:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
35:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
36:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
37:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
38:     setSystemProperties();
39:     initializeClasses();
40:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
41:   } 
42: 
43:   @AfterClass 
44:   public static void clearEvoSuiteFramework(){ 
45:     Sandbox.resetDefaultSecurityManager(); 
46:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
47:   } 
48: 
49:   @Before 
50:   public void initTestCase(){ 
51:     threadStopper.storeCurrentThreads();
52:     threadStopper.startRecordingTime();
53:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
54:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
55:     setSystemProperties(); 
56:     org.evosuite.runtime.GuiSupport.setHeadless(); 
57:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
59:   } 
60: 
61:   @After 
62:   public void doneWithTestCase(){ 
63:     threadStopper.killAndJoinClientThreads();
64:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
65:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
66:     resetClasses(); 
67:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
68:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
69:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
70:   } 
71: 
72:   public static void setSystemProperties() {
73:  
74:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
75:     java.lang.System.setProperty("user.dir", "/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment"); 
76:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
77:   }
78: 
79:   private static void initializeClasses() {
80:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(VecInt_158_tmp__ESTest_scaffolding.class.getClassLoader() ,
81:       "org.sat4j.core.ReadOnlyVecInt",
82:       "org.sat4j.specs.IteratorInt",
83:       "org.sat4j.core.VecInt$1",
84:       "org.sat4j.specs.IVecInt",
85:       "org.sat4j.core.EmptyVecInt",
86:       "org.sat4j.core.VecInt",
87:       "org.sat4j.core.EmptyVecInt$1"
88:     );
89:   } 
90: 
91:   private static void resetClasses() {
92:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(VecInt_158_tmp__ESTest_scaffolding.class.getClassLoader()); 
93: 
94:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
95:       "org.sat4j.core.EmptyVecInt",
96:       "org.sat4j.core.VecInt",
97:       "org.sat4j.core.VecInt$1",
98:       "org.sat4j.core.EmptyVecInt$1",
99:       "org.sat4j.core.ReadOnlyVecInt"
100:     );
101:   }
102: }

[MASTER] 04:28:43.352 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
VecInt vecInt0 = new VecInt();
vecInt0.toArray();
VecInt vecInt1 = new VecInt(383);
VecInt.access$000(vecInt1);
VecInt.access$100(vecInt1);

[MASTER] 04:29:06.364 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
