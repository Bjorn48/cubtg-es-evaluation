/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 19 16:00:53 GMT 2019
 */

package org.sat4j.tools;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.sat4j.minisat.constraints.MixedDataStructureSingleWL;
import org.sat4j.minisat.constraints.cnf.UnitClause;
import org.sat4j.minisat.core.Solver;
import org.sat4j.specs.FakeConstr;
import org.sat4j.specs.IConstr;
import org.sat4j.specs.Lbool;
import org.sat4j.tools.RupSearchListener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RupSearchListener_ESTest extends RupSearchListener_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RupSearchListener<Solver<MixedDataStructureSingleWL>> rupSearchListener0 = new RupSearchListener<Solver<MixedDataStructureSingleWL>>("");
      rupSearchListener0.init((Solver<MixedDataStructureSingleWL>) null);
      rupSearchListener0.learnUnit((-1456));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RupSearchListener<Solver<MixedDataStructureSingleWL>> rupSearchListener0 = new RupSearchListener<Solver<MixedDataStructureSingleWL>>("");
      rupSearchListener0.init((Solver<MixedDataStructureSingleWL>) null);
      UnitClause unitClause0 = new UnitClause(0);
      rupSearchListener0.learn(unitClause0);
      assertTrue(unitClause0.isSatisfied());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RupSearchListener<Solver<MixedDataStructureSingleWL>> rupSearchListener0 = new RupSearchListener<Solver<MixedDataStructureSingleWL>>("");
      rupSearchListener0.init((Solver<MixedDataStructureSingleWL>) null);
      Lbool lbool0 = Lbool.FALSE;
      rupSearchListener0.end(lbool0);
      assertEquals("F", lbool0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RupSearchListener<Solver<MixedDataStructureSingleWL>> rupSearchListener0 = new RupSearchListener<Solver<MixedDataStructureSingleWL>>("e");
      IConstr iConstr0 = FakeConstr.instance();
      // Undeclared exception!
      try { 
        rupSearchListener0.learn(iConstr0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Fake IConstr
         //
         verifyException("org.sat4j.specs.FakeConstr", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RupSearchListener<Solver<MixedDataStructureSingleWL>> rupSearchListener0 = new RupSearchListener<Solver<MixedDataStructureSingleWL>>(" 0");
      rupSearchListener0.init((Solver<MixedDataStructureSingleWL>) null);
      IConstr iConstr0 = FakeConstr.instance();
      // Undeclared exception!
      try { 
        rupSearchListener0.delete(iConstr0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Fake IConstr
         //
         verifyException("org.sat4j.specs.FakeConstr", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RupSearchListener<Solver<MixedDataStructureSingleWL>> rupSearchListener0 = null;
      try {
        rupSearchListener0 = new RupSearchListener<Solver<MixedDataStructureSingleWL>>((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RupSearchListener<Solver<MixedDataStructureSingleWL>> rupSearchListener0 = new RupSearchListener<Solver<MixedDataStructureSingleWL>>("");
      rupSearchListener0.init((Solver<MixedDataStructureSingleWL>) null);
      UnitClause unitClause0 = new UnitClause(0);
      rupSearchListener0.delete(unitClause0);
      assertFalse(unitClause0.simplify());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RupSearchListener<Solver<MixedDataStructureSingleWL>> rupSearchListener0 = new RupSearchListener<Solver<MixedDataStructureSingleWL>>("");
      Lbool lbool0 = Lbool.FALSE;
      // Undeclared exception!
      try { 
        rupSearchListener0.end(lbool0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.RupSearchListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RupSearchListener<Solver<MixedDataStructureSingleWL>> rupSearchListener0 = new RupSearchListener<Solver<MixedDataStructureSingleWL>>("");
      // Undeclared exception!
      try { 
        rupSearchListener0.end((Lbool) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.RupSearchListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RupSearchListener<Solver<MixedDataStructureSingleWL>> rupSearchListener0 = new RupSearchListener<Solver<MixedDataStructureSingleWL>>("");
      // Undeclared exception!
      try { 
        rupSearchListener0.learnUnit((-1456));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.RupSearchListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RupSearchListener<Solver<MixedDataStructureSingleWL>> rupSearchListener0 = new RupSearchListener<Solver<MixedDataStructureSingleWL>>("");
      rupSearchListener0.init((Solver<MixedDataStructureSingleWL>) null);
      rupSearchListener0.end((Lbool) null);
      rupSearchListener0.end((Lbool) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RupSearchListener<Solver<MixedDataStructureSingleWL>> rupSearchListener0 = new RupSearchListener<Solver<MixedDataStructureSingleWL>>("");
      UnitClause unitClause0 = new UnitClause(0);
      // Undeclared exception!
      try { 
        rupSearchListener0.delete(unitClause0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.RupSearchListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RupSearchListener<Solver<MixedDataStructureSingleWL>> rupSearchListener0 = new RupSearchListener<Solver<MixedDataStructureSingleWL>>("");
      UnitClause unitClause0 = new UnitClause(0);
      // Undeclared exception!
      try { 
        rupSearchListener0.learn(unitClause0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.tools.RupSearchListener", e);
      }
  }
}
