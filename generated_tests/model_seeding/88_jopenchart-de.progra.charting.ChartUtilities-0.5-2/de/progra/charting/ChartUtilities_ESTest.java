/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 10:11:15 GMT 2019
 */

package de.progra.charting;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.progra.charting.ChartUtilities;
import java.util.TreeSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ChartUtilities_ESTest extends ChartUtilities_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-1574.708036351);
      doubleArray0[1] = 10.0;
      ChartUtilities.transformArray(doubleArray0);
      ChartUtilities.performAutoScale(3.0, 0.0);
      ChartUtilities chartUtilities0 = new ChartUtilities();
      ChartUtilities.exp((-1574.708036351));
      ChartUtilities.calculateTickSpacing((-2075.9963093), 10.0);
      ChartUtilities.floor((-849.06), 3);
      TreeSet<Object> treeSet0 = new TreeSet<Object>();
      Number[][] numberArray0 = new Number[0][8];
      ChartUtilities.addDataToSet(treeSet0, numberArray0);
      ChartUtilities.performAutoScale((-1.0), 0.0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ChartUtilities chartUtilities0 = new ChartUtilities();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "]";
      stringArray0[1] = ") -> (";
      stringArray0[2] = "0";
      stringArray0[3] = "T$";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "i0JcjoO";
      ChartUtilities.main(stringArray0);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 1186.38324514;
      doubleArray0[1] = 287.97359;
      doubleArray0[2] = 0.0;
      ChartUtilities.interpolate(doubleArray0, doubleArray0, 1186.38324514);
      double[] doubleArray1 = new double[0];
      ChartUtilities.transformArray(doubleArray1);
      ChartUtilities.exp(487.534429757295);
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        ChartUtilities.transformArray((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.ChartUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ChartUtilities.ceil(0.0, (-1));
      ChartUtilities.floor(0.0, (-1375));
      TreeSet<Integer> treeSet0 = new TreeSet<Integer>();
      Number[][] numberArray0 = new Number[3][2];
      Number[] numberArray1 = new Number[0];
      numberArray0[0] = numberArray1;
      Number[] numberArray2 = new Number[8];
      Short short0 = new Short((short)0);
      numberArray2[0] = (Number) short0;
      Double double0 = new Double((-1));
      numberArray2[1] = (Number) double0;
      Byte byte0 = new Byte((byte)1);
      numberArray2[2] = (Number) byte0;
      Integer integer0 = new Integer(0);
      numberArray2[3] = (Number) integer0;
      Long long0 = new Long((byte)1);
      numberArray2[4] = (Number) long0;
      Float float0 = new Float(100.86);
      numberArray2[5] = (Number) float0;
      Integer integer1 = new Integer((-675));
      numberArray2[6] = (Number) integer1;
      Byte byte1 = new Byte((byte) (-97));
      numberArray2[7] = (Number) byte1;
      numberArray0[1] = numberArray2;
      Number[] numberArray3 = new Number[1];
      numberArray3[0] = (Number) double0;
      numberArray0[2] = numberArray3;
      // Undeclared exception!
      try { 
        ChartUtilities.addDataToSet(treeSet0, numberArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Short cannot be cast to java.lang.Double
         //
         verifyException("java.lang.Double", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[0];
      ChartUtilities.transformArray(intArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      ChartUtilities.interpolate(doubleArray0, doubleArray0, 0.0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[8];
      ChartUtilities.calculateTickSpacing((-4251.0519413), 0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      ChartUtilities.main(stringArray0);
      ChartUtilities.exp(0.00745);
      int[][] intArray0 = new int[3][1];
      int[] intArray1 = new int[8];
      intArray1[0] = (-3);
      intArray1[1] = (-3);
      intArray1[2] = (-3);
      intArray1[3] = (-3);
      intArray1[4] = (-3);
      intArray1[5] = (-3);
      intArray1[6] = (-3);
      intArray1[7] = 3029;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = 3029;
      intArray2[1] = 3029;
      intArray2[2] = (-3);
      intArray2[3] = 3029;
      intArray2[4] = (-3616);
      intArray2[5] = 3029;
      intArray2[6] = 3029;
      intArray2[7] = 3029;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[1];
      intArray3[0] = 3029;
      intArray0[2] = intArray3;
      // Undeclared exception!
      try { 
        ChartUtilities.transformArray(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("de.progra.charting.ChartUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      // Undeclared exception!
      try { 
        ChartUtilities.interpolate(doubleArray0, doubleArray0, 1915.3172433769);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("de.progra.charting.ChartUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "R^XwzT2mg~/RaA<%!";
      stringArray0[1] = "";
      stringArray0[2] = "P@Ger9(Sp";
      stringArray0[3] = "8P:XY#*uW";
      ChartUtilities.main(stringArray0);
      ChartUtilities.ceil(537.5912871816, 0);
      ChartUtilities.exp(538.0);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 2;
      ChartUtilities.transformArray(doubleArray0);
      ChartUtilities.main(stringArray0);
      ChartUtilities.main(stringArray0);
      double[] doubleArray1 = ChartUtilities.performAutoScale(0.0, 463.660359);
      ChartUtilities.exp((-10.1648467086046));
      ChartUtilities.floor((-130.5503), 2);
      double[][] doubleArray2 = new double[1][7];
      doubleArray2[0] = doubleArray0;
      ChartUtilities.transformArray(doubleArray2);
      String[] stringArray1 = new String[0];
      ChartUtilities.main(stringArray1);
      ChartUtilities.ceil((-4274.508116), 1);
      ChartUtilities.interpolate(doubleArray1, doubleArray1, (-4274.508116));
      int[][] intArray0 = new int[0][3];
      // Undeclared exception!
      try { 
        ChartUtilities.transformArray(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("de.progra.charting.ChartUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      double[] doubleArray1 = new double[0];
      ChartUtilities.interpolate(doubleArray0, doubleArray1, 428.198925);
      // Undeclared exception!
      ChartUtilities.exp(0.0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        ChartUtilities.interpolate((double[]) null, (double[]) null, (-113.62721761674));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.ChartUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      ChartUtilities.calculateTickSpacing((-4251.0519413), (-4251.0519413));
  }
}
