/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 13:23:25 GMT 2019
 */

package de.outstare.fortbattleplayer.statistics;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.outstare.fortbattleplayer.model.Area;
import de.outstare.fortbattleplayer.model.CharacterClass;
import de.outstare.fortbattleplayer.model.Combatant;
import de.outstare.fortbattleplayer.model.CombatantSide;
import de.outstare.fortbattleplayer.model.CombatantState;
import de.outstare.fortbattleplayer.model.impl.SimpleCombatant;
import de.outstare.fortbattleplayer.model.impl.SimpleWeapon;
import de.outstare.fortbattleplayer.statistics.AllCombatantSidesCounter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AllCombatantSidesCounter_ESTest extends AllCombatantSidesCounter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AllCombatantSidesCounter allCombatantSidesCounter0 = new AllCombatantSidesCounter();
      CombatantSide combatantSide0 = CombatantSide.DEFENDER;
      allCombatantSidesCounter0.incrementSide(combatantSide0);
      int int0 = allCombatantSidesCounter0.getSideValue((CombatantSide) null);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AllCombatantSidesCounter allCombatantSidesCounter0 = new AllCombatantSidesCounter();
      CombatantSide combatantSide0 = CombatantSide.ATTACKER;
      Area area0 = mock(Area.class, new ViolatedAssumptionAnswer());
      doReturn((Combatant) null).when(area0).occupy(any(de.outstare.fortbattleplayer.model.Combatant.class) , any(de.outstare.fortbattleplayer.model.Area.class));
      CombatantState combatantState0 = new CombatantState(area0, 0, area0, false);
      CharacterClass characterClass0 = CharacterClass.GREENHORN;
      SimpleWeapon simpleWeapon0 = new SimpleWeapon(5, "06saspf1Ti?", 40, 60);
      SimpleCombatant simpleCombatant0 = new SimpleCombatant(combatantSide0, combatantState0, 0, "06saspf1Ti?", characterClass0, simpleWeapon0, "06saspf1Ti?");
      allCombatantSidesCounter0.incrementSide(simpleCombatant0);
      assertEquals(0, simpleCombatant0._getCurrentLP());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AllCombatantSidesCounter allCombatantSidesCounter0 = new AllCombatantSidesCounter();
      Combatant combatant0 = mock(Combatant.class, new ViolatedAssumptionAnswer());
      doReturn((CombatantSide) null).when(combatant0).getSide();
      allCombatantSidesCounter0.incrementBy(1432, combatant0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AllCombatantSidesCounter allCombatantSidesCounter0 = new AllCombatantSidesCounter();
      CombatantSide combatantSide0 = CombatantSide.DEFENDER;
      allCombatantSidesCounter0.incrementBy((-1), combatantSide0);
      int int0 = allCombatantSidesCounter0.getSideValue(combatantSide0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AllCombatantSidesCounter allCombatantSidesCounter0 = new AllCombatantSidesCounter();
      allCombatantSidesCounter0.incrementBy(0, (CombatantSide) null);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AllCombatantSidesCounter allCombatantSidesCounter0 = new AllCombatantSidesCounter();
      int int0 = allCombatantSidesCounter0.getSideValue((CombatantSide) null);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      AllCombatantSidesCounter allCombatantSidesCounter0 = new AllCombatantSidesCounter();
      allCombatantSidesCounter0.incrementSide((CombatantSide) null);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      AllCombatantSidesCounter allCombatantSidesCounter0 = new AllCombatantSidesCounter();
      // Undeclared exception!
      try { 
        allCombatantSidesCounter0.incrementBy(3800, (Combatant) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.outstare.fortbattleplayer.statistics.AllCombatantSidesCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      AllCombatantSidesCounter allCombatantSidesCounter0 = new AllCombatantSidesCounter();
      // Undeclared exception!
      try { 
        allCombatantSidesCounter0.incrementSide((Combatant) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.outstare.fortbattleplayer.statistics.AllCombatantSidesCounter", e);
      }
  }
}
