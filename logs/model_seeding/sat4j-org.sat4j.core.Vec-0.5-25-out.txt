* EvoSuite 1.0.7-SNAPSHOT
* Going to generate test cases for class: org.sat4j.core.Vec
* Starting Client-0
* Connecting to master process on port 15949
* Analyzing classpath: 
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar
  - bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
* Finished analyzing classpath
* Generating tests for class org.sat4j.core.Vec
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1334
* Using seed 1550572027701
* Starting evolution
* Initialsss Number of Goals in DynMOSA = 418 / 1334
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.8563218390804598
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.7368421052631579
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.8130841121495327
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.3684210526315789
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 0.9473684210526315
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 0.868421052631579
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.6631578947368421
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 200
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 303
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9137931034482759
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8105263157894737
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.8785046728971962
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.6052631578947368
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.7368421052631579
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 405
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9367816091954023
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.8736842105263158
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9123831775700935
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.6052631578947368
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.7789473684210526
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 510
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9425287356321839
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9052631578947369
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9264018691588785
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.6578947368421053
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8210526315789474
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 613
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 714
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9425287356321839
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9052631578947369
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9287383177570093
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.6842105263157895
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8210526315789474
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 810
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9482758620689655
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9157894736842105
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9299065420560748
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7105263157894737
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8315789473684211
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 911
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 1012
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9540229885057471
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9450934579439252
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7105263157894737
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8526315789473684
* naaame: 
* naaame: org.evosuite.ga.stoppingconditions.GlobalTimeStoppingCondition
* naaame: org.evosuite.ga.stoppingconditions.MaxFitnessEvaluationsStoppingCondition
Current fitness evaluations: 1093
* naaame: org.evosuite.ga.stoppingconditions.RMIStoppingCondition
* naaame: org.evosuite.ShutdownTestWriter
* naaame: org.evosuite.ga.stoppingconditions.ZeroFitnessStoppingCondition
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9540229885057471
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9450934579439252
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7105263157894737
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8526315789473684
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9540229885057471
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9450934579439252
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7105263157894737
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8526315789473684
* Search finished after 124s and 9 generations, 11443 statements, best individual has fitness: 87.0
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9540229885057471
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9450934579439252
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7105263157894737
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8526315789473684
* Minimizing test suite
[MASTER] 11:30:35.062 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 174
* Number of covered goals: 166
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 93%
* Total number of goals: 95
* Number of covered goals: 88
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 36
* Number of covered goals: 36
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 95%
* Total number of goals: 856
* Number of covered goals: 809
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 71%
* Total number of goals: 38
* Number of covered goals: 27
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 38
* Number of covered goals: 38
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 38
* Number of covered goals: 38
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 85%
* Total number of goals: 95
* Number of covered goals: 81
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9540229885057471
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9450934579439252
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7105263157894737
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8526315789473684
* Generated 138 tests with total length 1802
* Resulting test suite's coverage: 92% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 11:31:20.447 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6748833333333333% of time used, but only 19/138 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 14%
Current fitness function value: class org.evosuite.coverage.line.LineCoverageSuiteFitness ** 0.9540229885057471
Current fitness function value: class org.evosuite.coverage.branch.BranchCoverageSuiteFitness ** 0.9263157894736842
Current fitness function value: class org.evosuite.coverage.exception.ExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.mutation.WeakMutationSuiteFitness ** 0.9450934579439252
Current fitness function value: class org.evosuite.coverage.io.output.OutputCoverageSuiteFitness ** 0.7105263157894737
Current fitness function value: class org.evosuite.coverage.method.MethodCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.method.MethodNoExceptionCoverageSuiteFitness ** 1.0
Current fitness function value: class org.evosuite.coverage.cbranch.CBranchSuiteFitness ** 0.8526315789473684
* Compiling and checking tests
[MASTER] 11:32:23.898 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoSuchElementException
[MASTER] 11:32:23.911 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<Object> vec0 = new Vec<Object>();
assertTrue(vec0.isEmpty());
assertEquals(0, vec0.size());
assertNotNull(vec0);

Vec<String> vec1 = new Vec<String>(5, "k6yQ3C!PYO/O,~>K0");
assertEquals(5, vec1.size());
assertFalse(vec1.isEmpty());
assertNotNull(vec1);

String string0 = vec1.toString();
assertEquals("k6yQ3C!PYO/O,~>K0,k6yQ3C!PYO/O,~>K0,k6yQ3C!PYO/O,~>K0,k6yQ3C!PYO/O,~>K0,k6yQ3C!PYO/O,~>K0", string0);
assertEquals(5, vec1.size());
assertFalse(vec1.isEmpty());
assertNotNull(string0);

String string1 = vec1.toString();
assertTrue(string1.equals((Object)string0));
assertEquals("k6yQ3C!PYO/O,~>K0,k6yQ3C!PYO/O,~>K0,k6yQ3C!PYO/O,~>K0,k6yQ3C!PYO/O,~>K0,k6yQ3C!PYO/O,~>K0", string1);
assertEquals(5, vec1.size());
assertFalse(vec1.isEmpty());
assertNotNull(string1);

Comparable<String>[] comparableArray0 = (Comparable<String>[]) Array.newInstance(Comparable.class, 3);
comparableArray0[0] = (Comparable<String>) "k6yQ3C!PYO/O,~>K0,k6yQ3C!PYO/O,~>K0,k6yQ3C!PYO/O,~>K0,k6yQ3C!PYO/O,~>K0,k6yQ3C!PYO/O,~>K0";
comparableArray0[1] = (Comparable<String>) "k6yQ3C!PYO/O,~>K0,k6yQ3C!PYO/O,~>K0,k6yQ3C!PYO/O,~>K0,k6yQ3C!PYO/O,~>K0,k6yQ3C!PYO/O,~>K0";
comparableArray0[2] = (Comparable<String>) "k6yQ3C!PYO/O,~>K0";
Vec<Comparable<String>> vec2 = new Vec<Comparable<String>>(comparableArray0);
assertEquals(3, comparableArray0.length);
assertEquals(3, vec2.size());
assertFalse(vec2.isEmpty());
assertNotNull(vec2);

int int0 = 0;
Comparable<String> comparable0 = vec2.delete(0);
assertEquals(3, comparableArray0.length);
assertEquals("k6yQ3C!PYO/O,~>K0,k6yQ3C!PYO/O,~>K0,k6yQ3C!PYO/O,~>K0,k6yQ3C!PYO/O,~>K0,k6yQ3C!PYO/O,~>K0", comparable0);
assertEquals(2, vec2.size());
assertFalse(vec2.isEmpty());
assertNotNull(comparable0);

vec2.remove(comparable0);

[MASTER] 11:32:24.733 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.ClassCastException: [Ljava.lang.Object; cannot be cast to [Lorg.sat4j.core.Vec;
[MASTER] 11:32:24.734 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Integer integer0 = new Integer(801);
assertEquals(801, (int)integer0);
assertNotNull(integer0);

Integer[] integerArray0 = new Integer[8];
integerArray0[4] = integer0;
Vec<Integer> vec0 = new Vec<Integer>(integerArray0);
assertEquals(8, integerArray0.length);
assertFalse(vec0.isEmpty());
assertEquals(8, vec0.size());
assertNotNull(vec0);

vec0.hashCode();
assertEquals(8, integerArray0.length);
assertFalse(vec0.isEmpty());
assertEquals(8, vec0.size());

Vec<Object> vec1 = new Vec<Object>(integerArray0);
assertEquals(8, integerArray0.length);
assertFalse(vec1.isEmpty());
assertEquals(8, vec1.size());
assertNotNull(vec1);

Vec<Vec<Object>> vec2 = new Vec<Vec<Object>>(1048, vec1);
assertEquals(8, integerArray0.length);
assertFalse(vec1.isEmpty());
assertEquals(8, vec1.size());
assertEquals(1048, vec2.size());
assertFalse(vec2.isEmpty());
assertNotNull(vec2);

Vec<Object>[] vecArray0 = vec2.toArray();
assertEquals(8, integerArray0.length);
assertEquals(1048, vecArray0.length);
assertFalse(vec1.isEmpty());
assertEquals(8, vec1.size());
assertEquals(1048, vec2.size());
assertFalse(vec2.isEmpty());
assertNotNull(vecArray0);

String string0 = vec0.toString();
assertEquals(8, integerArray0.length);
assertEquals("null,null,null,null,801,null,null,null", string0);
assertFalse(vec0.isEmpty());
assertEquals(8, vec0.size());
assertNotNull(string0);


[MASTER] 11:32:25.563 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 11:32:25.564 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<Integer> vec0 = new Vec<Integer>(20);
assertEquals(0, vec0.size());
assertTrue(vec0.isEmpty());
assertNotNull(vec0);

Integer integer0 = new Integer(0);
assertEquals(0, (int)integer0);
assertNotNull(integer0);

int int0 = integer0.intValue();
assertEquals(0, int0);

vec0.insertFirst((Integer) 0);
assertEquals(1, vec0.size());
assertFalse(vec0.isEmpty());

Vec<ReadOnlyVec<String>> vec1 = new Vec<ReadOnlyVec<String>>();
assertTrue(vec1.isEmpty());
assertEquals(0, vec1.size());
assertNotNull(vec1);

Vec<String> vec2 = new Vec<String>(0);
assertEquals(0, vec2.size());
assertTrue(vec2.isEmpty());
assertNotNull(vec2);

ReadOnlyVec<String> readOnlyVec0 = new ReadOnlyVec<String>(vec2);
assertEquals(0, vec2.size());
assertTrue(vec2.isEmpty());
assertEquals(0, readOnlyVec0.size());
assertTrue(readOnlyVec0.isEmpty());
assertNotNull(readOnlyVec0);

vec1.insertFirstWithShifting(readOnlyVec0);
assertEquals(1, vec1.size());
assertFalse(vec1.isEmpty());
assertEquals(0, vec2.size());
assertTrue(vec2.isEmpty());
assertEquals(0, readOnlyVec0.size());
assertTrue(readOnlyVec0.isEmpty());

boolean boolean0 = vec2.equals(vec0);
assertFalse(boolean0);
assertEquals(1, vec0.size());
assertFalse(vec0.isEmpty());
assertEquals(0, vec2.size());
assertTrue(vec2.isEmpty());

Integer integer1 = new Integer(0);
assertTrue(integer1.equals((Object)integer0));
assertTrue(integer1.equals((Object)int0));
assertEquals(0, (int)integer1);
assertNotNull(integer1);

int int1 = integer1.intValue();
assertTrue(integer1.equals((Object)integer0));
assertTrue(integer1.equals((Object)int0));
assertTrue(int1 == int0);
assertEquals(0, int1);

int int2 = integer1.intValue();
assertTrue(integer1.equals((Object)int1));
assertTrue(integer1.equals((Object)integer0));
assertTrue(integer1.equals((Object)int0));
assertTrue(int2 == int1);
assertTrue(int2 == int0);
assertEquals(0, int2);

vec0.removeFromLast((Integer) 0);

[MASTER] 11:32:31.216 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: NoSuchElementException
[MASTER] 11:32:31.217 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Comparable<String>[] comparableArray0 = (Comparable<String>[]) Array.newInstance(Comparable.class, 4);
Vec<String> vec0 = new Vec<String>();
assertTrue(vec0.isEmpty());
assertEquals(0, vec0.size());
assertNotNull(vec0);

String string0 = vec0.toString();
assertEquals("", string0);
assertTrue(vec0.isEmpty());
assertEquals(0, vec0.size());
assertNotNull(string0);

comparableArray0[0] = (Comparable<String>) "";
String string1 = vec0.toString();
assertTrue(string1.equals((Object)string0));
assertEquals("", string1);
assertTrue(vec0.isEmpty());
assertEquals(0, vec0.size());
assertNotNull(string1);

comparableArray0[1] = (Comparable<String>) "";
String string2 = vec0.toString();
assertTrue(string2.equals((Object)string0));
assertTrue(string2.equals((Object)string1));
assertEquals("", string2);
assertTrue(vec0.isEmpty());
assertEquals(0, vec0.size());
assertNotNull(string2);

comparableArray0[2] = (Comparable<String>) "";
String string3 = vec0.toString();
assertTrue(string3.equals((Object)string1));
assertTrue(string3.equals((Object)string0));
assertTrue(string3.equals((Object)string2));
assertEquals("", string3);
assertTrue(vec0.isEmpty());
assertEquals(0, vec0.size());
assertNotNull(string3);

comparableArray0[3] = (Comparable<String>) "";
Vec<Comparable<String>> vec1 = new Vec<Comparable<String>>(comparableArray0);
assertEquals(4, comparableArray0.length);
assertEquals(4, vec1.size());
assertFalse(vec1.isEmpty());
assertNotNull(vec1);

int int0 = 0;
Comparable<String> comparable0 = vec1.delete(0);
assertEquals(4, comparableArray0.length);
assertEquals("", comparable0);
assertEquals(3, vec1.size());
assertFalse(vec1.isEmpty());
assertNotNull(comparable0);

vec1.remove("");

[MASTER] 11:32:32.554 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: Expecting exception: ArrayIndexOutOfBoundsException
[MASTER] 11:32:32.555 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Vec<String> vec0 = new Vec<String>(34, "akzkwQ%ysm.");
assertFalse(vec0.isEmpty());
assertEquals(34, vec0.size());
assertNotNull(vec0);

String string0 = "zx+i`t>$]E4~";
vec0.insertFirstWithShifting("zx+i`t>$]E4~");
assertFalse(vec0.isEmpty());
assertEquals(35, vec0.size());

vec0.removeFromLast("akzkwQ%ysm.");

* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing tests to file
* Writing JUnit test case 'Vec_ESTest' to evosuite-tests
* Done!

* Computation finished
