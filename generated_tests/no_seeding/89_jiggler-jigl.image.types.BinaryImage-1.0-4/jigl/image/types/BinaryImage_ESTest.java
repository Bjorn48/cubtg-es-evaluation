/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 17:38:32 GMT 2019
 */

package jigl.image.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.image.IndexColorModel;
import jigl.image.ROI;
import jigl.image.types.BinaryImage;
import jigl.image.types.ComplexImage;
import jigl.image.types.GrayImage;
import jigl.image.types.ImageKernel;
import jigl.image.types.KernelType;
import jigl.image.types.PhaseImage;
import jigl.image.types.RealGrayImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BinaryImage_ESTest extends BinaryImage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 64);
      ROI rOI0 = new ROI();
      ROI rOI1 = new ROI();
      // Undeclared exception!
      try { 
        binaryImage0.copy(rOI1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[] intArray0 = new int[9];
      int[][] intArray1 = new int[7][4];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      GrayImage grayImage0 = new GrayImage(intArray1);
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(grayImage0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[1];
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.count();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(307, 307);
      BinaryImage binaryImage1 = null;
      try {
        binaryImage1 = new BinaryImage((byte[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.getData();
      binaryImage0.count();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte)77;
      BinaryImage binaryImage1 = new BinaryImage(771, 0, byteArray0);
      BinaryImage binaryImage2 = binaryImage0.intersection(binaryImage1);
      binaryImage2.X();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(1984, 1984);
      // Undeclared exception!
      binaryImage0.compliment();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[][] byteArray0 = new byte[1][1];
      byte[] byteArray1 = new byte[9];
      byteArray1[1] = (byte)16;
      byteArray1[2] = (byte) (-1);
      byteArray1[3] = (byte) (-103);
      byteArray1[4] = (byte)16;
      byteArray1[5] = (byte)10;
      byteArray1[6] = (byte)62;
      byteArray1[7] = (byte) (-80);
      byteArray1[8] = (byte) (-38);
      byteArray0[0] = byteArray1;
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage1.copy();
      binaryImage1.difference(binaryImage0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[] intArray0 = new int[9];
      byte[] byteArray0 = new byte[0];
      BinaryImage binaryImage0 = new BinaryImage(0, 255, byteArray0);
      binaryImage0.count();
      BinaryImage binaryImage1 = new BinaryImage(1971, 1971);
      GrayImage grayImage0 = null;
      try {
        grayImage0 = new GrayImage(1834, 422, intArray0);
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = binaryImage0.union(binaryImage0);
      Byte byte0 = new Byte((byte)0);
      Byte.toUnsignedLong((byte)0);
      Byte.compare((byte) (-95), (byte) (-95));
      // Undeclared exception!
      try { 
        binaryImage1.set(0, 0, byte0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PhaseImage phaseImage0 = new PhaseImage(402, 402);
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(phaseImage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 64;
      BinaryImage binaryImage0 = new BinaryImage();
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        binaryImage0.copy(rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = 11;
      byte[] byteArray0 = null;
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(11, 11, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PhaseImage phaseImage0 = new PhaseImage(2783, 0);
      BinaryImage binaryImage0 = new BinaryImage(phaseImage0);
      Byte byte0 = new Byte((byte)0);
      // Undeclared exception!
      try { 
        binaryImage0.clear(byte0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte)117;
      byteArray0[2] = (byte)61;
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((-16777216), (-16777216), byteArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = 402;
      BinaryImage binaryImage0 = new BinaryImage(402, 300);
      int int1 = 3;
      binaryImage0.shift(int0, int1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PhaseImage phaseImage0 = new PhaseImage(4, 402);
      phaseImage0.copy();
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(phaseImage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.getData();
      binaryImage0.count();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte)77;
      BinaryImage binaryImage1 = new BinaryImage(771, 0, byteArray0);
      Byte byte0 = new Byte((byte)30);
      binaryImage1.getData();
      binaryImage0.min();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 64);
      // Undeclared exception!
      try { 
        binaryImage0.getData();
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int[][] intArray0 = new int[0][4];
      GrayImage grayImage0 = new GrayImage(intArray0);
      BinaryImage binaryImage0 = new BinaryImage(grayImage0);
      binaryImage0.count();
      binaryImage0.toString();
      // Undeclared exception!
      try { 
        binaryImage0.get(0, 45);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 45
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(300, 12);
      int int0 = 1984;
      BinaryImage binaryImage1 = new BinaryImage(7, 1984);
      // Undeclared exception!
      try { 
        binaryImage1.union(binaryImage0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PhaseImage phaseImage0 = new PhaseImage(402, 402);
      byte[][] byteArray0 = new byte[1][8];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)10;
      byteArray0[0] = byteArray1;
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      int int0 = new Integer(402);
      binaryImage0.count();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-76);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byte byte0 = (byte) (-1);
      byteArray0[3] = (byte) (-1);
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(255, 255, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(1984, 1984);
      byte byte0 = (byte)0;
      // Undeclared exception!
      binaryImage0.compliment();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[2] = 0;
      intArray0[2] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 0;
      GrayImage grayImage0 = new GrayImage(0, 0, intArray0);
      BinaryImage binaryImage0 = new BinaryImage(grayImage0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)41;
      byteArray0[1] = (byte)41;
      byteArray0[2] = (byte)41;
      byteArray0[3] = (byte)41;
      binaryImage0.Y();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(5, 402);
      binaryImage0.getJavaImage();
      BinaryImage binaryImage1 = new BinaryImage(5, 0);
      binaryImage1.union(binaryImage0);
      Byte byte0 = new Byte((byte) (-80));
      // Undeclared exception!
      try { 
        binaryImage0.clear(byte0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.getData();
      binaryImage0.count();
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)30;
      byteArray0[0] = (byte)30;
      byte byte1 = (byte)77;
      byteArray0[1] = (byte)77;
      BinaryImage binaryImage1 = new BinaryImage(771, 0, byteArray0);
      BinaryImage binaryImage2 = binaryImage0.intersection(binaryImage1);
      binaryImage2.X();
      ROI rOI0 = new ROI((byte)30, 0, 1516, (-2051));
      // Undeclared exception!
      try { 
        binaryImage1.copy(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2051
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BinaryImage binaryImage0 = null;
      BinaryImage binaryImage1 = null;
      try {
        binaryImage1 = new BinaryImage((BinaryImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.shift(402, 402);
      binaryImage0.getJavaImage();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((-16777222), (-1513));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = 402;
      BinaryImage binaryImage0 = new BinaryImage(402, 402);
      binaryImage0.getJavaImage();
      String string0 = "";
      Byte byte0 = Byte.valueOf(string0, int0);
      int int1 = (-1);
      byte byte1 = (byte)84;
      Byte byte2 = new Byte(byte1);
      ROI rOI0 = new ROI();
      binaryImage0.set(int1, int0, byte2, rOI0);
      binaryImage0.clear(byte0);
      int int2 = (-683);
      binaryImage0.shift(int2, int2);
      binaryImage0.getJavaImage();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Byte byte0 = new Byte((byte)0);
      BinaryImage binaryImage0 = new BinaryImage();
      // Undeclared exception!
      try { 
        binaryImage0.set((-2354), (-3515), byte0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(5, 402);
      binaryImage0.shift((-1355), 680);
      binaryImage0.getJavaImage();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(255, 0, (byte[]) null);
      Byte byte0 = new Byte((byte)47);
      Byte.compare((byte)0, (byte) (-1));
      binaryImage0.shift(255, 0);
      Byte.toUnsignedLong((byte)47);
      Byte.toUnsignedLong((byte)47);
      BinaryImage binaryImage1 = new BinaryImage();
      binaryImage0.min();
      byte[][] byteArray0 = new byte[2][7];
      byteArray0[0] = null;
      byteArray0[1] = null;
      BinaryImage binaryImage2 = null;
      try {
        binaryImage2 = new BinaryImage(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(402, 300);
      Byte byte0 = new Byte((byte)24);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      // Undeclared exception!
      binaryImage0.intersection(binaryImage1);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.getData();
      binaryImage0.count();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte)77;
      BinaryImage binaryImage1 = new BinaryImage((byte)77, 0, byteArray0);
      BinaryImage binaryImage2 = binaryImage1.intersection(binaryImage0);
      binaryImage2.X();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Byte byte0 = new Byte((byte)0);
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.X();
      binaryImage0.getData();
      BinaryImage binaryImage1 = null;
      try {
        binaryImage1 = new BinaryImage((byte[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      int int0 = 0;
      int int1 = 1211;
      Byte byte0 = new Byte((byte)8);
      ROI rOI0 = new ROI();
      // Undeclared exception!
      try { 
        binaryImage0.set(0, 1211, byte0, rOI0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int int0 = 1984;
      BinaryImage binaryImage0 = new BinaryImage(0, 1984);
      byte byte0 = (byte)0;
      BinaryImage binaryImage1 = binaryImage0.compliment();
      binaryImage1.toString();
      binaryImage1.getJavaImage();
      binaryImage1.union(binaryImage0);
      int int1 = 0;
      Byte byte1 = new Byte((byte)0);
      // Undeclared exception!
      try { 
        binaryImage1.clear(byte1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.getData();
      byte byte0 = (byte)8;
      Byte byte1 = new Byte((byte)8);
      // Undeclared exception!
      try { 
        binaryImage0.clear(byte1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 1984);
      Byte byte0 = new Byte((byte)0);
      BinaryImage binaryImage1 = binaryImage0.shift((-32768), 0);
      Byte byte1 = new Byte((byte)0);
      Byte.toUnsignedLong((byte) (-71));
      Byte.compare((byte)20, (byte)0);
      Byte byte2 = new Byte((byte)50);
      binaryImage0.Y();
      binaryImage0.Y();
      binaryImage1.X();
      ROI rOI0 = new ROI(309, (-32768), 1984, 1652);
      // Undeclared exception!
      try { 
        binaryImage1.set(1984, 1984, byte0, rOI0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[][] byteArray0 = new byte[1][1];
      byte[] byteArray1 = new byte[9];
      byteArray1[2] = (byte) (-1);
      byteArray1[3] = (byte) (-103);
      byteArray1[4] = (byte)16;
      byteArray1[5] = (byte)10;
      byteArray1[6] = (byte) (-103);
      byteArray1[7] = (byte) (-80);
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      binaryImage0.count();
      binaryImage0.count();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.count();
      BinaryImage binaryImage1 = new BinaryImage(0, 2516);
      binaryImage0.max();
      BinaryImage binaryImage2 = binaryImage0.union(binaryImage1);
      Byte byte0 = new Byte((byte)0);
      Byte.toUnsignedLong((byte)0);
      binaryImage0.getJavaImage();
      Byte.compare((byte) (-95), (byte) (-95));
      // Undeclared exception!
      try { 
        binaryImage2.set(0, 0, byte0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.getData();
      binaryImage0.count();
      Byte byte0 = new Byte((byte) (-65));
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage1.intersection(binaryImage0);
      BinaryImage binaryImage2 = new BinaryImage(0, 0);
      binaryImage2.getData();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      BinaryImage binaryImage0 = new BinaryImage(0, 1984);
      Byte byte0 = new Byte((byte)0);
      binaryImage0.shift((-32768), 0);
      Byte byte1 = new Byte((byte)0);
      Byte.toUnsignedLong((byte) (-71));
      Byte.compare((byte)20, (byte)0);
      Byte byte2 = new Byte((byte)50);
      // Undeclared exception!
      try { 
        binaryImage0.set(0, (int) (byte) (-71), byte2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -71
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[][] byteArray0 = new byte[1][1];
      byte[] byteArray1 = new byte[9];
      byteArray1[1] = (byte)16;
      byteArray1[2] = (byte) (-1);
      byteArray1[3] = (byte) (-103);
      byteArray1[4] = (byte)16;
      byteArray1[5] = (byte)10;
      byteArray1[6] = (byte)62;
      byteArray1[7] = (byte) (-80);
      byteArray1[8] = (byte)0;
      byteArray0[0] = byteArray1;
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage1.copy();
      binaryImage1.difference(binaryImage0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      int int0 = 16;
      ROI rOI0 = new ROI();
      rOI0.setROI(641, 2133, 641, 16);
      // Undeclared exception!
      try { 
        binaryImage0.copy(rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte)31;
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(5, 5, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 1112;
      intArray0[6] = 0;
      intArray0[7] = 0;
      intArray0[8] = 0;
      GrayImage grayImage0 = new GrayImage(0, 0, intArray0);
      BinaryImage binaryImage0 = new BinaryImage(grayImage0);
      binaryImage0.getJavaImage();
      byte byte0 = (byte)72;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)72;
      byteArray0[1] = (byte)72;
      byteArray0[2] = (byte)72;
      byteArray0[3] = (byte)72;
      byteArray0[4] = (byte)72;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-1607), 0, byteArray0, byteArray0, byteArray0, byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      BinaryImage binaryImage0 = new BinaryImage(2004, 0, byteArray0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      int int0 = 0;
      BinaryImage binaryImage0 = new BinaryImage(0, 64);
      binaryImage0.X();
      byte byte0 = (byte) (-12);
      Byte byte1 = new Byte((byte) (-12));
      // Undeclared exception!
      try { 
        binaryImage0.set(64, 0, byte1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 64
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 1984);
      BinaryImage binaryImage1 = binaryImage0.compliment();
      binaryImage1.toString();
      binaryImage1.getJavaImage();
      BinaryImage binaryImage2 = binaryImage1.union(binaryImage0);
      Byte byte0 = new Byte((byte)0);
      Byte byte1 = new Byte((byte)0);
      // Undeclared exception!
      try { 
        binaryImage2.getData();
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      // Undeclared exception!
      try { 
        binaryImage0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[][] byteArray0 = new byte[0][0];
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      int int0 = 4749;
      binaryImage0.toString();
      BinaryImage binaryImage1 = binaryImage0.shift(255, 4749);
      binaryImage1.copy();
      ROI rOI0 = new ROI(255, 4749, 0, 255);
      rOI0.setROI(255, 0, (-2213), 0);
      // Undeclared exception!
      try { 
        binaryImage1.set(255, 4749, (Byte) null, rOI0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.getData();
      binaryImage0.count();
      Byte byte0 = new Byte((byte) (-65));
      BinaryImage binaryImage1 = binaryImage0.intersection(binaryImage0);
      binaryImage1.getData();
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(402, 402);
      // Undeclared exception!
      binaryImage0.shift(501, 501);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      Byte byte0 = new Byte((byte) (-79));
      binaryImage0.getData();
      binaryImage0.max();
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.count();
      int int0 = 0;
      BinaryImage binaryImage1 = null;
      try {
        binaryImage1 = new BinaryImage(0, (-2346));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(255, 0, (byte[]) null);
      Byte byte0 = new Byte((byte)0);
      Byte.compare((byte)0, (byte) (-1));
      binaryImage0.shift(255, 0);
      Byte.toUnsignedLong((byte)0);
      Byte.toUnsignedLong((byte)0);
      // Undeclared exception!
      try { 
        binaryImage0.clear(byte0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[2] = 0;
      intArray0[2] = 0;
      intArray0[4] = 0;
      int[][] intArray1 = new int[9][2];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      intArray1[7] = intArray0;
      intArray1[8] = intArray0;
      GrayImage grayImage0 = new GrayImage(intArray1);
      BinaryImage binaryImage0 = new BinaryImage(grayImage0);
      binaryImage0.count();
      BinaryImage binaryImage1 = new BinaryImage(0, 245);
      GrayImage grayImage1 = null;
      try {
        grayImage1 = new GrayImage((-32768), 0, intArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.GrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      ROI rOI0 = new ROI(4, (-2511), 4, Integer.MAX_VALUE);
      // Undeclared exception!
      try { 
        binaryImage0.copy(rOI0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[][] byteArray0 = new byte[2][1];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)93;
      byteArray1[2] = (byte)2;
      byteArray1[3] = (byte)0;
      byteArray1[4] = (byte)15;
      byteArray1[5] = (byte)90;
      byteArray1[6] = (byte) (-79);
      byteArray1[7] = (byte) (-40);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte) (-63);
      byteArray2[1] = (byte)0;
      byteArray2[2] = (byte)0;
      byteArray2[3] = (byte)0;
      byteArray2[4] = (byte)15;
      byteArray0[1] = byteArray2;
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      byte[][] byteArray0 = new byte[1][1];
      byte[] byteArray1 = new byte[9];
      byteArray1[1] = (byte)16;
      byteArray1[2] = (byte) (-1);
      byteArray1[3] = (byte) (-103);
      byteArray1[4] = (byte)16;
      byteArray1[5] = (byte)10;
      byteArray1[6] = (byte)62;
      byteArray1[7] = (byte) (-80);
      byteArray1[8] = (byte) (-38);
      byteArray0[0] = byteArray1;
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage1.copy();
      binaryImage1.compliment();
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((GrayImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(5, 402);
      BinaryImage binaryImage1 = binaryImage0.shift((-1355), 680);
      binaryImage0.difference(binaryImage1);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(402, 402);
      // Undeclared exception!
      binaryImage0.shift(402, 402);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ComplexImage complexImage0 = new ComplexImage();
      RealGrayImage realGrayImage0 = complexImage0.magnitudeImage();
      complexImage0.real = realGrayImage0;
      BinaryImage binaryImage0 = new BinaryImage(realGrayImage0);
      BinaryImage binaryImage1 = new BinaryImage();
      BinaryImage binaryImage2 = binaryImage0.difference(binaryImage1);
      BinaryImage binaryImage3 = binaryImage2.compliment();
      binaryImage3.toString();
      binaryImage2.getJavaImage();
      BinaryImage binaryImage4 = binaryImage2.union(binaryImage1);
      int int0 = 0;
      Byte byte0 = new Byte((byte)12);
      int int1 = 0;
      // Undeclared exception!
      try { 
        binaryImage4.clear(byte0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      int int0 = 1984;
      int int1 = 3;
      BinaryImage binaryImage0 = new BinaryImage(3, 1984);
      binaryImage0.shift(1984, 1984);
      byte byte0 = (byte)47;
      Byte byte1 = new Byte((byte)47);
      ROI rOI0 = new ROI(86, (byte)47, 3, (byte)47);
      // Undeclared exception!
      try { 
        binaryImage0.copy(rOI0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      byte[][] byteArray0 = new byte[6][4];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)96;
      byteArray1[1] = (byte) (-66);
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte)123;
      byteArray1[4] = (byte)0;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[2];
      byteArray2[0] = (byte)0;
      byteArray2[1] = (byte)123;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[8];
      byteArray3[0] = (byte)123;
      byteArray3[1] = (byte)96;
      byteArray3[2] = (byte) (-66);
      byteArray3[3] = (byte)0;
      byteArray3[4] = (byte)16;
      byteArray3[5] = (byte)0;
      byteArray3[6] = (byte)96;
      byteArray3[7] = (byte)0;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[7];
      byteArray4[0] = (byte) (-66);
      byteArray4[1] = (byte) (-66);
      byteArray4[2] = (byte)16;
      byteArray4[3] = (byte)96;
      byteArray4[4] = (byte)0;
      byteArray4[5] = (byte)123;
      byteArray4[6] = (byte)16;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[1];
      byteArray5[0] = (byte)0;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[3];
      byteArray6[0] = (byte)123;
      byteArray6[1] = (byte)16;
      byteArray6[2] = (byte) (-66);
      byteArray0[5] = byteArray6;
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = new BinaryImage(402, 402);
      binaryImage0.getJavaImage();
      binaryImage1.max();
      binaryImage0.compliment();
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.toString();
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage0.copy();
      byte byte0 = (byte) (-79);
      Byte byte1 = new Byte((byte) (-79));
      // Undeclared exception!
      try { 
        binaryImage1.clear(byte1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(64, 7);
      ROI rOI0 = new ROI();
      ROI rOI1 = new ROI();
      binaryImage0.copy(rOI1);
      binaryImage0.X();
      // Undeclared exception!
      try { 
        binaryImage0.getData();
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      byte[][] byteArray0 = new byte[1][1];
      byte[] byteArray1 = new byte[9];
      byteArray1[1] = (byte)50;
      byteArray1[2] = (byte) (-1);
      byteArray1[3] = (byte) (-103);
      byteArray1[4] = (byte)16;
      byteArray1[5] = (byte)10;
      byteArray1[0] = (byte)62;
      byteArray1[7] = (byte) (-80);
      byteArray1[8] = (byte) (-38);
      byteArray0[0] = byteArray1;
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage1.copy();
      BinaryImage binaryImage2 = binaryImage1.difference(binaryImage0);
      ROI rOI0 = new ROI();
      binaryImage2.copy(rOI0);
      // Undeclared exception!
      try { 
        binaryImage1.get((byte) (-38), (byte)50);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 1984);
      BinaryImage binaryImage1 = binaryImage0.compliment();
      binaryImage1.toString();
      binaryImage1.getJavaImage();
      BinaryImage binaryImage2 = binaryImage1.union(binaryImage0);
      binaryImage2.toString();
      Byte byte0 = new Byte((byte)0);
      binaryImage1.difference(binaryImage0);
      // Undeclared exception!
      try { 
        binaryImage1.clear(byte0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      byte[][] byteArray0 = new byte[1][1];
      byte[] byteArray1 = new byte[9];
      byteArray1[1] = (byte)16;
      byteArray1[2] = (byte) (-1);
      byteArray1[3] = (byte) (-103);
      byteArray1[4] = (byte)16;
      byteArray1[5] = (byte)10;
      byteArray1[6] = (byte)62;
      byteArray1[7] = (byte) (-80);
      byteArray1[8] = (byte)0;
      byteArray0[0] = byteArray1;
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage1.copy();
      binaryImage1.getJavaImage();
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(3, 3);
      binaryImage0.toString();
      ROI rOI0 = new ROI();
      binaryImage0.copy(rOI0);
      binaryImage0.X();
      // Undeclared exception!
      try { 
        binaryImage0.getData();
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      int int0 = 3471;
      int int1 = 5;
      BinaryImage binaryImage0 = new BinaryImage(3471, 5);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      byte byte0 = (byte) (-12);
      binaryImage0.toString();
      Byte byte1 = new Byte((byte) (-12));
      binaryImage0.toString();
      Byte.compare((byte)0, (byte)1);
      ROI rOI0 = new ROI(3471, (byte) (-12), 3471, 3471);
      // Undeclared exception!
      try { 
        binaryImage1.set(3471, 3471, byte1, rOI0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)16;
      byteArray0[2] = (byte)16;
      byte byte0 = (byte)47;
      Byte byte1 = new Byte((byte) (-110));
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((byte)16, (byte)16, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      byte[][] byteArray0 = new byte[1][1];
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte) (-81);
      byteArray1[1] = (byte)16;
      byteArray1[2] = (byte) (-1);
      byteArray1[3] = (byte) (-103);
      byteArray1[4] = (byte)16;
      byteArray1[5] = (byte)10;
      byteArray1[6] = (byte)62;
      byteArray1[7] = (byte) (-80);
      byteArray1[8] = (byte)0;
      byteArray0[0] = byteArray1;
      BinaryImage binaryImage0 = new BinaryImage(byteArray0);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage1.copy();
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(402, 402);
      Byte byte0 = new Byte((byte)24);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      // Undeclared exception!
      binaryImage0.intersection(binaryImage1);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(5, 402);
      binaryImage0.getJavaImage();
      BinaryImage binaryImage1 = new BinaryImage(0, 1330);
      // Undeclared exception!
      try { 
        binaryImage0.union(binaryImage1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 1984);
      binaryImage0.shift((-32768), 0);
      Byte byte0 = new Byte((byte)0);
      Byte.toUnsignedLong((byte) (-71));
      Byte.compare((byte)20, (byte)0);
      Byte byte1 = new Byte((byte)50);
      // Undeclared exception!
      try { 
        binaryImage0.set(0, (int) (byte) (-71), byte1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -71
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      KernelType kernelType0 = KernelType.LAPLACIAN_8;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      BinaryImage binaryImage1 = new BinaryImage(imageKernel0);
      binaryImage1.shift(3, 413);
      byte byte0 = (byte) (-106);
      Byte byte1 = new Byte((byte) (-106));
      Byte byte2 = new Byte((byte) (-106));
      // Undeclared exception!
      try { 
        binaryImage1.clear(byte2);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[2] = 0;
      intArray0[2] = 0;
      intArray0[4] = 0;
      int[][] intArray1 = new int[9][2];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      intArray1[7] = intArray0;
      intArray1[8] = intArray0;
      GrayImage grayImage0 = new GrayImage(intArray1);
      BinaryImage binaryImage0 = new BinaryImage(grayImage0);
      binaryImage0.count();
      binaryImage0.compliment();
      binaryImage0.compliment();
      binaryImage0.count();
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 0);
      // Undeclared exception!
      try { 
        binaryImage0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }
}
