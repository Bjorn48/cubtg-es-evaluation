/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 15:45:28 GMT 2019
 */

package src;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import src.Fiefdoms;
import src.Intruders;
import src.Knight;
import src.Mercenaries;
import src.Player;
import src.Retainers;
import src.Vassals;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Fiefdoms_ESTest extends Fiefdoms_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Knight knight0 = new Knight();
      knight0.setName("%p[dZ");
      knight0.getName();
      knight0.setRank("%p[dZ");
      knight0.getLocation();
      knight0.getTotalMoney();
      knight0.getLocation();
      knight0.getLocation();
      knight0.setDead(false);
      ArrayList<String> arrayList0 = knight0.conversation;
      arrayList0.parallelStream();
      arrayList0.ensureCapacity(1);
      arrayList0.add("%p[dZ");
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "", "%p[dZ", 2562, false, arrayList0);
      float[] floatArray0 = fiefdoms0.getShaderColor();
      ArrayList<Intruders> arrayList1 = fiefdoms0.getViking();
      fiefdoms0.setShaderColor(floatArray0);
      fiefdoms0.setViking(arrayList1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      float[] floatArray0 = new float[2];
      floatArray0[0] = (float) 0;
      ArrayList<Vassals> arrayList0 = fiefdoms0.getRebelliousVassals();
      Knight knight0 = new Knight("knight", (String) null, "h+|-Ws0u%");
      ArrayList<String> arrayList1 = knight0.getVotes();
      arrayList1.add("");
      Fiefdoms fiefdoms1 = new Fiefdoms(arrayList1, "Xomt1d=f0L", "", 4911, true, arrayList1);
      fiefdoms1.getLoyalVassals();
      fiefdoms1.loyalVassals.trimToSize();
      Vassals vassals0 = new Vassals("", "@G{dk");
      fiefdoms1.loyalVassals.add(vassals0);
      fiefdoms1.setRebelliousVassals(arrayList0);
      fiefdoms1.setConqueror("");
      fiefdoms0.setViking((-1881770450), false);
      fiefdoms0.setLoyalVassals(3, true);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Knight knight0 = new Knight();
      ArrayList<String> arrayList0 = knight0.conversation;
      arrayList0.add("\"cs");
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "", "", 685, true, arrayList0);
      fiefdoms0.setRebelliousVassals(685, true);
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMuslim();
      LinkedList<Knight> linkedList0 = new LinkedList<Knight>();
      linkedList0.add(knight0);
      arrayList1.removeAll(linkedList0);
      fiefdoms0.setMuslim(arrayList1);
      ArrayList<Intruders> arrayList2 = fiefdoms0.getMuslim();
      fiefdoms0.setMagyar(arrayList2);
      fiefdoms0.setFiefdomCastles(false);
      fiefdoms0.setOwner((String) null);
      fiefdoms0.getInvaderType();
      fiefdoms0.getPeasants();
      fiefdoms0.getNeighbors();
      fiefdoms0.getViking();
      fiefdoms0.setKingdom(false);
      fiefdoms0.setOwner(".l#uRnF3T");
      fiefdoms0.setOwner((String) null);
      ArrayList<Vassals> arrayList3 = new ArrayList<Vassals>();
      fiefdoms0.setRebelliousVassals(arrayList3);
      fiefdoms0.setPeasants(685);
      fiefdoms0.getValue();
      fiefdoms0.setMuslim(0, true);
      fiefdoms0.getPeasants();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getViking();
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      fiefdoms0.setMuslim(arrayList0);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      ArrayList<String> arrayList1 = fiefdoms0.getNeighbors();
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(arrayList1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      Knight knight0 = new Knight();
      ArrayList<String> arrayList0 = knight0.conversation;
      fiefdoms0.setNeighbors(arrayList0);
      fiefdoms0.setMuslim(0, false);
      fiefdoms0.setPeasants(1);
      fiefdoms0.setKingdom(false);
      fiefdoms0.setPersonalCastles(false);
      fiefdoms0.getShaderColor();
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMagyar();
      fiefdoms0.setViking(arrayList1);
      fiefdoms0.getConqueror();
      fiefdoms0.isKingdom();
      fiefdoms0.getFiefdomCastles();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("<Bz%r#86Gp");
      arrayList0.subList(0, 0);
      arrayList0.add("_A`:>`~Z2ebh_dKp>%");
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "OH&xBF{G8ty }", "OH&xBF{G8ty }", 0, true, arrayList0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      arrayList0.addAll((Collection<? extends String>) linkedList0);
      fiefdoms0.getConqueror();
      fiefdoms0.setConqueror((String) null);
      fiefdoms0.setRebelliousVassals(0, true);
      fiefdoms0.setMagyar(0, true);
      fiefdoms0.buyFiefdomCastles(0);
      fiefdoms0.buyFiefdomCastles(0);
      fiefdoms0.getInvaderType();
      fiefdoms0.getMuslim();
      fiefdoms0.isKingdom();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setMagyar(3, false);
      fiefdoms0.getInvaderType();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setMuslim((-1), false);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setPeasants(1457);
      fiefdoms0.getMagyar();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Knight knight0 = new Knight();
      ArrayList<String> arrayList0 = knight0.conversation;
      arrayList0.add("\"cs");
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "", "", 685, true, arrayList0);
      fiefdoms0.setRebelliousVassals(685, true);
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMuslim();
      LinkedList<Knight> linkedList0 = new LinkedList<Knight>();
      linkedList0.add(knight0);
      arrayList1.removeAll(linkedList0);
      Vassals vassals0 = new Vassals("l<", "gbmmUtC8");
      vassals0.setLocation("=~(4S/*gw r>PF=%Z");
      vassals0.setLocation("gbmmUtC8");
      vassals0.setFiefdom("");
      fiefdoms0.setLoyalVassals((-1468), true);
      fiefdoms0.loyalVassals.add(vassals0);
      fiefdoms0.loyalVassals.iterator();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-128);
      byteArray0[1] = (byte)0;
      fiefdoms0.setSelectioncolor(byteArray0);
      ArrayList<Vassals> arrayList2 = new ArrayList<Vassals>();
      fiefdoms0.setLoyalVassals(arrayList2);
      fiefdoms0.getLoyalVassals();
      fiefdoms0.buyPersonalCastles((-889));
      fiefdoms0.getOwner();
      fiefdoms0.getRebelliousVassals();
      fiefdoms0.getLoyalVassals();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      
      ArrayList<Vassals> arrayList0 = fiefdoms0.getRebelliousVassals();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      fiefdoms0.setLoyalVassals(arrayList0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-89);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      fiefdoms0.getInvaderType();
      fiefdoms0.getInvaderType();
      fiefdoms0.loyalVassals = null;
      fiefdoms0.getVassalsList();
      fiefdoms0.getMuslim();
      fiefdoms0.getInvaderType();
      fiefdoms0.getNeighbors();
      fiefdoms0.getMuslim();
      fiefdoms0.getMagyar();
      fiefdoms0.getVassalsList();
      fiefdoms0.getSelectioncolor();
      fiefdoms0.setKingdom(false);
      fiefdoms0.getInvaderType();
      fiefdoms0.getInvaderType();
      fiefdoms0.getLoyalVassals();
      fiefdoms0.setPeasants((byte)1);
      fiefdoms0.getVassalsList();
      fiefdoms0.getRebelliousVassals();
      fiefdoms0.getInvaderType();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms((ArrayList<String>) null, "eHJM{kMH#|sZ0@ZcR", "2", 316, false, (ArrayList<String>) null);
      fiefdoms0.setLoyalVassals(316, false);
      fiefdoms0.setFiefdomCastles(true);
      fiefdoms0.getPersonalCastles();
      fiefdoms0.setMagyar(0, false);
      fiefdoms0.getRebelliousVassals();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setOwner("");
      fiefdoms0.setOwner("");
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Knight knight0 = new Knight();
      ArrayList<String> arrayList0 = knight0.conversation;
      Knight knight1 = new Knight();
      knight1.setName(" castles  for ");
      ArrayList<String> arrayList1 = knight1.getVotes();
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList1, " castles  for ", " castles  for ", 646, true, arrayList0);
      fiefdoms0.isKingdom();
      fiefdoms0.getMagyar();
      fiefdoms0.setMagyar(658, true);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.getInvaderType();
      Fiefdoms fiefdoms1 = new Fiefdoms((ArrayList<String>) null, "fc?3cr}!|", "fc?3cr}!|", 1, false, (ArrayList<String>) null);
      fiefdoms1.buyPersonalCastles(1);
      fiefdoms1.getSelectioncolor();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.buyPersonalCastles((-2516));
      fiefdoms0.getMuslim();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, (String) null, (String) null, 3, true, arrayList0);
      fiefdoms0.setMagyar(1085, false);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      float[] floatArray0 = new float[2];
      floatArray0[0] = (float) 0;
      ArrayList<Vassals> arrayList0 = fiefdoms0.getRebelliousVassals();
      Vassals vassals0 = new Vassals("h+|-Ws0u%", "^x.");
      vassals0.setLocation("h+|-Ws0u%");
      arrayList0.add(vassals0);
      fiefdoms0.setNeighbors((ArrayList<String>) null);
      fiefdoms0.setRebelliousVassals(3, false);
      ArrayList<Intruders> arrayList1 = fiefdoms0.getViking();
      Fiefdoms fiefdoms1 = new Fiefdoms();
      fiefdoms1.setMagyar(0, true);
      fiefdoms1.getMuslim();
      Fiefdoms fiefdoms2 = new Fiefdoms();
      arrayList1.listIterator(0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setPersonalCastles(true);
      fiefdoms0.getMuslim();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setFiefdomCastles(true);
      fiefdoms0.getPersonalCastles();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setRebelliousVassals((-37), true);
      fiefdoms0.setOwner("A");
      fiefdoms0.setOwner("A");
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, (String) null, (String) null, 306, false, arrayList0);
      fiefdoms0.getSelectioncolor();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      fiefdoms0.setNeighbors(arrayList0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setFiefdomCastles((-1913316374));
      fiefdoms0.getSelectioncolor();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setPersonalCastles(3);
      ArrayList<Intruders> arrayList0 = fiefdoms0.getViking();
      fiefdoms0.setMuslim(arrayList0);
      Intruders intruders0 = new Intruders("Gjy7Bpn?c", "Gjy7Bpn?c");
      intruders0.setLocation("Gjy7Bpn?c");
      arrayList0.add(intruders0);
      ArrayList<Vassals> arrayList1 = fiefdoms0.loyalVassals;
      fiefdoms0.setLoyalVassals(arrayList1);
      fiefdoms0.buyFiefdomCastles(4143);
      arrayList0.containsAll(fiefdoms0.loyalVassals);
      fiefdoms0.setOwner("jqpw'? b2n=8c&k1");
      fiefdoms0.setMuslim(arrayList0);
      fiefdoms0.setFiefdomCastles(4143);
      fiefdoms0.setOwner("tW:EJju'5<`>W");
      fiefdoms0.setViking(4143, true);
      fiefdoms0.setRebelliousVassals(4143, true);
      fiefdoms0.buyPersonalCastles(928);
      fiefdoms0.setFiefdomCastles(false);
      fiefdoms0.getRebelliousVassals();
      fiefdoms0.setMuslim(4143, true);
      fiefdoms0.setLoyalVassals(928, true);
      fiefdoms0.getViking();
      fiefdoms0.getFiefdomCastles();
      fiefdoms0.getNeighbors();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      float[] floatArray0 = new float[8];
      floatArray0[0] = (float) (-2250);
      floatArray0[1] = (float) 282;
      floatArray0[2] = (float) 282;
      floatArray0[3] = (float) (-2250);
      floatArray0[4] = (float) (-2250);
      floatArray0[4] = (float) (-2250);
      floatArray0[6] = (float) (-2250);
      floatArray0[7] = (float) (-2250);
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.getPeasants();
      fiefdoms0.isKingdom();
      fiefdoms0.setConqueror("You cannot have more than a total of ");
      fiefdoms0.setPeasants((-134));
      fiefdoms0.setViking(3, true);
      fiefdoms0.setLoyalVassals(3, true);
      fiefdoms0.setViking((-1539), true);
      fiefdoms0.setRebelliousVassals((-2669), false);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setNeighbors((ArrayList<String>) null);
      Intruders intruders0 = new Intruders("@G{dk", "");
      fiefdoms0.getInvaderType();
      Knight knight0 = new Knight();
      ArrayList<Vassals> arrayList0 = knight0.getMovingVassals();
      fiefdoms0.loyalVassals = arrayList0;
      fiefdoms0.setOwner("@G{dk");
      fiefdoms0.getPeasants();
      fiefdoms0.setPeasants(685);
      fiefdoms0.setOwner(" castles for ");
      Vassals vassals0 = new Vassals();
      vassals0.setLocation("+;'");
      vassals0.setLocation("");
      arrayList0.add(vassals0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "unknown rank");
      Knight knight1 = new Knight(" castles for ", "src.Mercenaries", "src.Mercenaries");
      fiefdoms0.getMuslim();
      fiefdoms0.isKingdom();
      fiefdoms0.setMagyar(685, true);
      fiefdoms0.getMagyar();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setInvaderType((ArrayList<String>) null);
      fiefdoms0.getLoyalVassals();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "viking", "viking", (-27), true, arrayList0);
      fiefdoms0.setOwner("8>^+ib");
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setPersonalCastles(false);
      fiefdoms0.getSelectioncolor();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Knight knight0 = new Knight("S52", (String) null, "S52");
      ArrayList<String> arrayList0 = knight0.getVotes();
      arrayList0.add((String) null);
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, (String) null, (String) null, 1, false, arrayList0);
      ArrayList<Vassals> arrayList1 = fiefdoms0.getLoyalVassals();
      arrayList1.trimToSize();
      Vassals vassals0 = new Vassals("8b&qGXKV5mT!D^Pb3?", (String) null);
      arrayList1.add(vassals0);
      fiefdoms0.setRebelliousVassals(arrayList1);
      fiefdoms0.setConqueror((String) null);
      fiefdoms0.setViking(1, false);
      fiefdoms0.getMagyar();
      ArrayList<Intruders> arrayList2 = fiefdoms0.getMagyar();
      fiefdoms0.setViking(arrayList2);
      fiefdoms0.getConqueror();
      Fiefdoms fiefdoms1 = new Fiefdoms();
      fiefdoms1.setMuslim(1089, false);
      fiefdoms1.isKingdom();
      fiefdoms0.getFiefdomCastles();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setOwner("DlA|A1p38qd#KVi=lx");
      fiefdoms0.getShaderColor();
      fiefdoms0.getValue();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setName("You cannot have more than a total of ");
      fiefdoms0.getInvaderType();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.getFiefdomCastles();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "U8>^1+Ib", "U8>^1+Ib", 1407, false, arrayList0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Knight knight0 = new Knight("[U/", "muslim", "");
      knight0.getFiefdoms();
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.getMuslim();
      fiefdoms0.getName();
      fiefdoms0.getMuslim();
      Fiefdoms fiefdoms1 = new Fiefdoms();
      fiefdoms1.getMuslim();
      fiefdoms0.getName();
      fiefdoms0.setLoyalVassals(34, false);
      fiefdoms1.getInvaderType();
      Fiefdoms fiefdoms2 = new Fiefdoms((ArrayList<String>) null, (String) null, "", 34, true, (ArrayList<String>) null);
      fiefdoms1.setLoyalVassals(34, true);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      float[] floatArray0 = new float[0];
      fiefdoms0.setShaderColor(floatArray0);
      fiefdoms0.setOwner(".");
      fiefdoms0.setOwner(".");
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      fiefdoms0.setMagyar(848, true);
      ArrayList<Intruders> arrayList0 = new ArrayList<Intruders>();
      fiefdoms0.setMuslim((-643), true);
      fiefdoms0.setMuslim(848, false);
      fiefdoms0.setPeasants((-643));
      fiefdoms0.setPersonalCastles(true);
      fiefdoms0.getShaderColor();
      fiefdoms0.setMagyar(2, false);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms((ArrayList<String>) null, "muslim", "muslim", 1475, true, (ArrayList<String>) null);
      fiefdoms0.setConqueror("");
      ArrayList<Intruders> arrayList0 = fiefdoms0.getViking();
      Intruders intruders0 = new Intruders();
      intruders0.setLocation("8oRc_");
      intruders0.setLocation("");
      fiefdoms0.setKingdom(true);
      intruders0.setType("<&uM,r5-QSmdu`vcKyI");
      intruders0.setLocation("8oRc_");
      arrayList0.add(intruders0);
      fiefdoms0.setViking(arrayList0);
      fiefdoms0.setKingdom(true);
      fiefdoms0.getLoyalVassals();
      fiefdoms0.getFiefdomCastles();
      fiefdoms0.getName();
      fiefdoms0.setLoyalVassals(1475, false);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      float[] floatArray0 = new float[4];
      floatArray0[0] = 2360.2F;
      floatArray0[1] = (float) (byte)75;
      floatArray0[2] = (float) (byte)75;
      fiefdoms0.setViking((int) (byte)75, true);
      Fiefdoms fiefdoms1 = new Fiefdoms();
      fiefdoms1.setRebelliousVassals((int) (byte)75, true);
      Fiefdoms fiefdoms2 = new Fiefdoms();
      Fiefdoms fiefdoms3 = new Fiefdoms();
      fiefdoms3.getNeighbors();
      fiefdoms3.setInvaderType((ArrayList<String>) null);
      fiefdoms3.getName();
      fiefdoms3.setOwner("?Y:o9cZo");
      fiefdoms1.setLoyalVassals((int) (byte)75, false);
      fiefdoms0.getFiefdomCastles();
      fiefdoms3.getShaderColor();
      fiefdoms3.getValue();
      fiefdoms0.getRebelliousVassals();
      fiefdoms0.setViking(3, false);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(fiefdoms0);
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMuslim();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      fiefdoms0.setMagyar(arrayList0);
      fiefdoms0.getRebelliousVassals();
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setNeighbors((ArrayList<String>) null);
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      Intruders intruders0 = new Intruders("@G{dk", "");
      assertNull(intruders0.getLocation());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getType());
      assertNotNull(intruders0);
      
      ArrayList<String> arrayList0 = fiefdoms0.getInvaderType();
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(arrayList0);
      
      fiefdoms0.setLoyalVassals((-591), true);
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      Knight knight0 = new Knight();
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertNotNull(knight0);
      
      ArrayList<Vassals> arrayList1 = knight0.getMovingVassals();
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      
      fiefdoms0.loyalVassals = arrayList1;
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertTrue(fiefdoms0.loyalVassals.isEmpty());
      assertEquals(0, fiefdoms0.loyalVassals.size());
      
      fiefdoms0.setOwner("@G{dk");
      assertEquals("@G{dk", fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      int int0 = fiefdoms0.getPeasants();
      assertEquals(0, int0);
      assertEquals("@G{dk", fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      fiefdoms0.setPeasants(711);
      assertEquals("@G{dk", fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(711, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      fiefdoms0.setOwner(" castles for ");
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(711, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(" castles for ", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      Vassals vassals0 = new Vassals();
      assertNull(vassals0.getLocation());
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertNull(vassals0.getLord());
      assertNotNull(vassals0);
      
      vassals0.setLocation("+;'");
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertNull(vassals0.getLord());
      assertEquals("+;'", vassals0.getLocation());
      
      vassals0.setLocation("+;'");
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertNull(vassals0.getLord());
      assertEquals("+;'", vassals0.getLocation());
      
      boolean boolean0 = arrayList1.add(vassals0);
      assertTrue(boolean0);
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertNull(vassals0.getLord());
      assertEquals("+;'", vassals0.getLocation());
      assertTrue(arrayList1.contains(vassals0));
      
      Knight knight1 = new Knight("", "@G{dk", "");
      assertEquals(0, knight1.getHitsCounter());
      assertEquals(0, knight1.getKill());
      assertFalse(knight1.isDead());
      assertEquals("@G{dk", knight1.getRank());
      assertEquals("", knight1.getPassword());
      assertFalse(knight1.getDead());
      assertEquals("", knight1.getOrder());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getWounds());
      assertEquals("", knight1.getName());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals(0, knight1.getwound());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getScore());
      assertNotNull(knight1);
      assertFalse(knight1.equals((Object)knight0));
      
      fiefdoms0.setMagyar((-591), true);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(711, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(" castles for ", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      ArrayList<Vassals> arrayList2 = knight1.getMovingVassals();
      assertNotSame(knight1, knight0);
      assertNotSame(arrayList2, arrayList1);
      assertEquals(0, knight1.getHitsCounter());
      assertEquals(0, knight1.getKill());
      assertFalse(knight1.isDead());
      assertEquals("@G{dk", knight1.getRank());
      assertEquals("", knight1.getPassword());
      assertFalse(knight1.getDead());
      assertEquals("", knight1.getOrder());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getWounds());
      assertEquals("", knight1.getName());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals(0, knight1.getwound());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getScore());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertNotNull(arrayList2);
      assertFalse(knight1.equals((Object)knight0));
      assertFalse(arrayList2.equals((Object)arrayList1));
      assertFalse(arrayList2.contains(vassals0));
      
      fiefdoms0.setRebelliousVassals(arrayList2);
      assertNotSame(knight1, knight0);
      assertNotSame(arrayList2, arrayList1);
      assertEquals(0, knight1.getHitsCounter());
      assertEquals(0, knight1.getKill());
      assertFalse(knight1.isDead());
      assertEquals("@G{dk", knight1.getRank());
      assertEquals("", knight1.getPassword());
      assertFalse(knight1.getDead());
      assertEquals("", knight1.getOrder());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getKills());
      assertEquals(0, knight1.getWounds());
      assertEquals("", knight1.getName());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals(0, knight1.getwound());
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getScore());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(711, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(" castles for ", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertFalse(knight1.equals((Object)knight0));
      assertFalse(arrayList2.equals((Object)arrayList1));
      assertFalse(arrayList2.contains(vassals0));
      
      String string0 = fiefdoms0.getOwner();
      assertEquals(" castles for ", string0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(711, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(" castles for ", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNotNull(string0);
      
      ArrayList<Vassals> arrayList3 = fiefdoms0.getRebelliousVassals();
      assertNotSame(arrayList3, arrayList1);
      assertSame(arrayList3, arrayList2);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(711, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(" castles for ", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      assertNotNull(arrayList3);
      assertFalse(arrayList3.equals((Object)arrayList1));
      assertFalse(arrayList3.contains(vassals0));
      
      ArrayList<Vassals> arrayList4 = fiefdoms0.getLoyalVassals();
      assertSame(arrayList4, arrayList1);
      assertNotSame(arrayList4, arrayList3);
      assertNotSame(arrayList4, arrayList2);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(711, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(" castles for ", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(1, arrayList4.size());
      assertFalse(arrayList4.isEmpty());
      assertNotNull(arrayList4);
      assertFalse(arrayList4.equals((Object)arrayList3));
      assertFalse(arrayList4.equals((Object)arrayList2));
      assertTrue(arrayList4.contains(vassals0));
      
      fiefdoms0.buyFiefdomCastles(0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(711, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(" castles for ", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(fiefdoms0);
      
      boolean boolean0 = fiefdoms0.isKingdom();
      assertFalse(boolean0);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMagyar();
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      fiefdoms0.setLoyalVassals((-263), false);
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms((ArrayList<String>) null, "muslim", "muslim", 1475, false, (ArrayList<String>) null);
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("muslim", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1475, fiefdoms0.getValue());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setConqueror("");
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(1475, fiefdoms0.getValue());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getViking();
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(1475, fiefdoms0.getValue());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      Intruders intruders0 = new Intruders();
      assertNull(intruders0.getLocation());
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      assertNotNull(intruders0);
      
      fiefdoms0.setPeasants(1239);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(1239, fiefdoms0.getPeasants());
      assertEquals(1475, fiefdoms0.getValue());
      
      fiefdoms0.setMuslim(1239, false);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(1239, fiefdoms0.getPeasants());
      assertEquals(1475, fiefdoms0.getValue());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNotNull(fiefdoms0);
      
      boolean boolean0 = fiefdoms0.isKingdom();
      assertFalse(boolean0);
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMagyar();
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      fiefdoms0.setMagyar((-263), false);
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms((ArrayList<String>) null, "0!L~s1(@kcK$<E", "0!L~s1(@kcK$<E", 1532, true, (ArrayList<String>) null);
      assertEquals("0!L~s1(@kcK$<E", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1532, fiefdoms0.getValue());
      assertEquals("0!L~s1(@kcK$<E", fiefdoms0.getName());
      assertNotNull(fiefdoms0);
      
      ArrayList<Vassals> arrayList0 = fiefdoms0.getRebelliousVassals();
      assertEquals("0!L~s1(@kcK$<E", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1532, fiefdoms0.getValue());
      assertEquals("0!L~s1(@kcK$<E", fiefdoms0.getName());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      Intruders[] intrudersArray0 = new Intruders[7];
      Intruders intruders0 = new Intruders();
      assertNull(intruders0.getLocation());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getType());
      assertNotNull(intruders0);
      
      intrudersArray0[0] = intruders0;
      Intruders intruders1 = new Intruders();
      assertNull(intruders1.getType());
      assertNull(intruders1.getLocation());
      assertNull(intruders1.getRank());
      assertNotNull(intruders1);
      assertFalse(intruders1.equals((Object)intruders0));
      
      intrudersArray0[1] = intruders1;
      Intruders intruders2 = new Intruders();
      assertNull(intruders2.getRank());
      assertNull(intruders2.getType());
      assertNull(intruders2.getLocation());
      assertNotNull(intruders2);
      assertFalse(intruders2.equals((Object)intruders0));
      assertFalse(intruders2.equals((Object)intruders1));
      
      intrudersArray0[2] = intruders2;
      Intruders intruders3 = new Intruders();
      assertNull(intruders3.getLocation());
      assertNull(intruders3.getType());
      assertNull(intruders3.getRank());
      assertNotNull(intruders3);
      assertFalse(intruders3.equals((Object)intruders2));
      assertFalse(intruders3.equals((Object)intruders0));
      assertFalse(intruders3.equals((Object)intruders1));
      
      intrudersArray0[3] = intruders3;
      Intruders intruders4 = new Intruders();
      assertNull(intruders4.getType());
      assertNull(intruders4.getLocation());
      assertNull(intruders4.getRank());
      assertNotNull(intruders4);
      assertFalse(intruders4.equals((Object)intruders3));
      assertFalse(intruders4.equals((Object)intruders2));
      assertFalse(intruders4.equals((Object)intruders0));
      assertFalse(intruders4.equals((Object)intruders1));
      
      intrudersArray0[4] = intruders4;
      Intruders intruders5 = new Intruders();
      assertNull(intruders5.getLocation());
      assertNull(intruders5.getRank());
      assertNull(intruders5.getType());
      assertNotNull(intruders5);
      assertFalse(intruders5.equals((Object)intruders4));
      assertFalse(intruders5.equals((Object)intruders3));
      assertFalse(intruders5.equals((Object)intruders2));
      assertFalse(intruders5.equals((Object)intruders1));
      assertFalse(intruders5.equals((Object)intruders0));
      
      intrudersArray0[5] = intruders5;
      Intruders intruders6 = new Intruders();
      assertNull(intruders6.getLocation());
      assertNull(intruders6.getType());
      assertNull(intruders6.getRank());
      assertNotNull(intruders6);
      assertFalse(intruders6.equals((Object)intruders3));
      assertFalse(intruders6.equals((Object)intruders2));
      assertFalse(intruders6.equals((Object)intruders0));
      assertFalse(intruders6.equals((Object)intruders5));
      assertFalse(intruders6.equals((Object)intruders1));
      assertFalse(intruders6.equals((Object)intruders4));
      
      intrudersArray0[6] = intruders6;
      Intruders[] intrudersArray1 = arrayList0.toArray(intrudersArray0);
      assertSame(intrudersArray1, intrudersArray0);
      assertSame(intrudersArray0, intrudersArray1);
      assertEquals(7, intrudersArray1.length);
      assertEquals(7, intrudersArray0.length);
      assertEquals("0!L~s1(@kcK$<E", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1532, fiefdoms0.getValue());
      assertEquals("0!L~s1(@kcK$<E", fiefdoms0.getName());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(intrudersArray1);
      
      Vassals vassals0 = new Vassals();
      assertNull(vassals0.getLord());
      assertNull(vassals0.getLocation());
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertNotNull(vassals0);
      
      boolean boolean0 = arrayList0.add(vassals0);
      assertTrue(boolean0);
      assertEquals("0!L~s1(@kcK$<E", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1532, fiefdoms0.getValue());
      assertEquals("0!L~s1(@kcK$<E", fiefdoms0.getName());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(vassals0.getLord());
      assertNull(vassals0.getLocation());
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertTrue(arrayList0.contains(vassals0));
      
      fiefdoms0.setLoyalVassals(arrayList0);
      assertEquals("0!L~s1(@kcK$<E", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1532, fiefdoms0.getValue());
      assertEquals("0!L~s1(@kcK$<E", fiefdoms0.getName());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(arrayList0.contains(vassals0));
      
      String string0 = fiefdoms0.getOwner();
      assertEquals("0!L~s1(@kcK$<E", string0);
      assertEquals("0!L~s1(@kcK$<E", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1532, fiefdoms0.getValue());
      assertEquals("0!L~s1(@kcK$<E", fiefdoms0.getName());
      assertNotNull(string0);
      
      fiefdoms0.setMuslim((-1424), true);
      assertEquals("0!L~s1(@kcK$<E", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1532, fiefdoms0.getValue());
      assertEquals("0!L~s1(@kcK$<E", fiefdoms0.getName());
      
      int int0 = fiefdoms0.getValue();
      assertEquals(1532, int0);
      assertEquals("0!L~s1(@kcK$<E", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1532, fiefdoms0.getValue());
      assertEquals("0!L~s1(@kcK$<E", fiefdoms0.getName());
      
      fiefdoms0.setPersonalCastles(true);
      assertEquals("0!L~s1(@kcK$<E", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1532, fiefdoms0.getValue());
      assertEquals("0!L~s1(@kcK$<E", fiefdoms0.getName());
      
      fiefdoms0.setPeasants(1532);
      assertEquals("0!L~s1(@kcK$<E", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(1532, fiefdoms0.getPeasants());
      assertEquals(1532, fiefdoms0.getValue());
      assertEquals("0!L~s1(@kcK$<E", fiefdoms0.getName());
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMagyar();
      assertEquals("0!L~s1(@kcK$<E", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(1532, fiefdoms0.getPeasants());
      assertEquals(1532, fiefdoms0.getValue());
      assertEquals("0!L~s1(@kcK$<E", fiefdoms0.getName());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      assertFalse(arrayList1.contains(intruders4));
      
      boolean boolean1 = fiefdoms0.isKingdom();
      assertTrue(boolean1);
      assertEquals("0!L~s1(@kcK$<E", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(1532, fiefdoms0.getPeasants());
      assertEquals(1532, fiefdoms0.getValue());
      assertEquals("0!L~s1(@kcK$<E", fiefdoms0.getName());
      assertTrue(boolean1 == boolean0);
      
      ArrayList<Intruders> arrayList2 = fiefdoms0.getMuslim();
      assertNotSame(arrayList2, arrayList1);
      assertEquals("0!L~s1(@kcK$<E", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(1532, fiefdoms0.getPeasants());
      assertEquals(1532, fiefdoms0.getValue());
      assertEquals("0!L~s1(@kcK$<E", fiefdoms0.getName());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertNotNull(arrayList2);
      assertTrue(arrayList2.equals((Object)arrayList1));
      assertFalse(arrayList2.contains(intruders4));
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setMagyar(848, false);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMuslim();
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      fiefdoms0.setMuslim((-643), false);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setPeasants((-1));
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setPersonalCastles(true);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      
      float[] floatArray0 = fiefdoms0.getShaderColor();
      assertEquals(2, floatArray0.length);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
      assertNotNull(floatArray0);
      
      fiefdoms0.setViking(arrayList0);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      String string0 = fiefdoms0.getConqueror();
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertNull(string0);
      
      boolean boolean0 = fiefdoms0.isKingdom();
      assertFalse(boolean0);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      
      int int0 = fiefdoms0.getFiefdomCastles();
      assertEquals(0, int0);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.setValue(2880);
      assertEquals(2880, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMuslim();
      assertSame(arrayList1, arrayList0);
      assertEquals(2880, fiefdoms0.getValue());
      assertEquals((-1), fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      boolean boolean0 = arrayList0.add("<Bz%r#86Gp");
      assertTrue(boolean0);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertTrue(arrayList0.contains("<Bz%r#86Gp"));
      
      List<String> list0 = arrayList0.subList(0, 0);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
      assertNotNull(list0);
      assertTrue(arrayList0.contains("<Bz%r#86Gp"));
      assertFalse(list0.contains("<Bz%r#86Gp"));
      
      boolean boolean1 = arrayList0.add("_A`:>`~Z2ebh_dKp>%");
      assertTrue(boolean1);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(boolean1 == boolean0);
      assertTrue(arrayList0.contains("_A`:>`~Z2ebh_dKp>%"));
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "magyar", "magyar", 0, true, arrayList0);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("magyar", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("magyar", fiefdoms0.getName());
      assertNotNull(fiefdoms0);
      assertTrue(arrayList0.contains("<Bz%r#86Gp"));
      assertFalse(arrayList0.contains("magyar"));
      
      LinkedList<String> linkedList0 = new LinkedList<String>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      assertFalse(linkedList0.contains("magyar"));
      
      boolean boolean2 = arrayList0.addAll((Collection<? extends String>) linkedList0);
      assertFalse(boolean2);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, linkedList0.size());
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertTrue(arrayList0.contains("<Bz%r#86Gp"));
      assertFalse(arrayList0.contains("magyar"));
      assertFalse(linkedList0.contains("magyar"));
      
      String string0 = fiefdoms0.getConqueror();
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("magyar", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("magyar", fiefdoms0.getName());
      assertNull(string0);
      assertTrue(arrayList0.contains("<Bz%r#86Gp"));
      assertFalse(arrayList0.contains("magyar"));
      
      fiefdoms0.setConqueror((String) null);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("magyar", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("magyar", fiefdoms0.getName());
      assertTrue(arrayList0.contains("<Bz%r#86Gp"));
      assertFalse(arrayList0.contains("magyar"));
      
      fiefdoms0.setRebelliousVassals(0, true);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("magyar", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("magyar", fiefdoms0.getName());
      assertTrue(arrayList0.contains("<Bz%r#86Gp"));
      assertFalse(arrayList0.contains("magyar"));
      
      fiefdoms0.buyFiefdomCastles(0);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("magyar", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("magyar", fiefdoms0.getName());
      assertTrue(arrayList0.contains("<Bz%r#86Gp"));
      assertFalse(arrayList0.contains("magyar"));
      
      fiefdoms0.buyFiefdomCastles(0);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("magyar", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("magyar", fiefdoms0.getName());
      assertTrue(arrayList0.contains("<Bz%r#86Gp"));
      assertFalse(arrayList0.contains("magyar"));
      
      Knight knight0 = new Knight();
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertNotNull(knight0);
      
      ArrayList<Vassals> arrayList1 = knight0.getMovingVassals();
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getPassword());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      
      fiefdoms0.setOwner("Fiefdoms are not neighbors");
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("Fiefdoms are not neighbors", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("magyar", fiefdoms0.getName());
      assertTrue(arrayList0.contains("<Bz%r#86Gp"));
      assertFalse(arrayList0.contains("magyar"));
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray0.length);
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals("Fiefdoms are not neighbors", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("magyar", fiefdoms0.getName());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArray0);
      assertTrue(arrayList0.contains("<Bz%r#86Gp"));
      assertFalse(arrayList0.contains("magyar"));
      
      Fiefdoms fiefdoms1 = new Fiefdoms();
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertNotNull(fiefdoms1);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      
      Fiefdoms fiefdoms2 = new Fiefdoms();
      assertNull(fiefdoms2.getConqueror());
      assertNull(fiefdoms2.getOwner());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertEquals(0, fiefdoms2.getValue());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getName());
      assertNotNull(fiefdoms2);
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      
      Fiefdoms fiefdoms3 = new Fiefdoms();
      assertNull(fiefdoms3.getName());
      assertEquals(0, fiefdoms3.getFiefdomCastles());
      assertNull(fiefdoms3.getOwner());
      assertFalse(fiefdoms3.isKingdom());
      assertEquals(0, fiefdoms3.getValue());
      assertNull(fiefdoms3.getConqueror());
      assertEquals(0, fiefdoms3.getPersonalCastles());
      assertEquals(0, fiefdoms3.getPeasants());
      assertNotNull(fiefdoms3);
      assertFalse(fiefdoms3.equals((Object)fiefdoms1));
      assertFalse(fiefdoms3.equals((Object)fiefdoms0));
      assertFalse(fiefdoms3.equals((Object)fiefdoms2));
      
      ArrayList<String> arrayList2 = fiefdoms3.getNeighbors();
      assertNotSame(fiefdoms3, fiefdoms1);
      assertNotSame(fiefdoms3, fiefdoms0);
      assertNotSame(fiefdoms3, fiefdoms2);
      assertNull(fiefdoms3.getName());
      assertEquals(0, fiefdoms3.getFiefdomCastles());
      assertNull(fiefdoms3.getOwner());
      assertFalse(fiefdoms3.isKingdom());
      assertEquals(0, fiefdoms3.getValue());
      assertNull(fiefdoms3.getConqueror());
      assertEquals(0, fiefdoms3.getPersonalCastles());
      assertEquals(0, fiefdoms3.getPeasants());
      assertNull(arrayList2);
      assertFalse(fiefdoms3.equals((Object)fiefdoms1));
      assertFalse(fiefdoms3.equals((Object)fiefdoms0));
      assertFalse(fiefdoms3.equals((Object)fiefdoms2));
      
      fiefdoms2.setInvaderType((ArrayList<String>) null);
      assertNotSame(fiefdoms2, fiefdoms3);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertNull(fiefdoms2.getConqueror());
      assertNull(fiefdoms2.getOwner());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertEquals(0, fiefdoms2.getValue());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getName());
      assertFalse(fiefdoms2.equals((Object)fiefdoms3));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      
      boolean boolean3 = fiefdoms1.isKingdom();
      assertNotSame(fiefdoms1, fiefdoms2);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNotSame(fiefdoms1, fiefdoms3);
      assertFalse(boolean3);
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.equals((Object)fiefdoms2));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(fiefdoms1.equals((Object)fiefdoms3));
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      
      boolean boolean4 = fiefdoms3.isKingdom();
      assertNotSame(fiefdoms3, fiefdoms1);
      assertNotSame(fiefdoms3, fiefdoms0);
      assertNotSame(fiefdoms3, fiefdoms2);
      assertFalse(boolean4);
      assertNull(fiefdoms3.getName());
      assertEquals(0, fiefdoms3.getFiefdomCastles());
      assertNull(fiefdoms3.getOwner());
      assertFalse(fiefdoms3.isKingdom());
      assertEquals(0, fiefdoms3.getValue());
      assertNull(fiefdoms3.getConqueror());
      assertEquals(0, fiefdoms3.getPersonalCastles());
      assertEquals(0, fiefdoms3.getPeasants());
      assertFalse(fiefdoms3.equals((Object)fiefdoms1));
      assertFalse(fiefdoms3.equals((Object)fiefdoms0));
      assertFalse(fiefdoms3.equals((Object)fiefdoms2));
      assertFalse(boolean4 == boolean0);
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4 == boolean1);
      assertTrue(boolean4 == boolean2);
      
      boolean boolean5 = fiefdoms2.isKingdom();
      assertNotSame(fiefdoms2, fiefdoms3);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertFalse(boolean5);
      assertNull(fiefdoms2.getConqueror());
      assertNull(fiefdoms2.getOwner());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertEquals(0, fiefdoms2.getValue());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getName());
      assertFalse(fiefdoms2.equals((Object)fiefdoms3));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertFalse(boolean5 == boolean0);
      assertTrue(boolean5 == boolean3);
      assertTrue(boolean5 == boolean2);
      assertTrue(boolean5 == boolean4);
      assertFalse(boolean5 == boolean1);
      
      boolean boolean6 = fiefdoms2.isKingdom();
      assertNotSame(fiefdoms2, fiefdoms3);
      assertNotSame(fiefdoms2, fiefdoms1);
      assertNotSame(fiefdoms2, fiefdoms0);
      assertFalse(boolean6);
      assertNull(fiefdoms2.getConqueror());
      assertNull(fiefdoms2.getOwner());
      assertFalse(fiefdoms2.isKingdom());
      assertEquals(0, fiefdoms2.getFiefdomCastles());
      assertEquals(0, fiefdoms2.getValue());
      assertEquals(0, fiefdoms2.getPeasants());
      assertEquals(0, fiefdoms2.getPersonalCastles());
      assertNull(fiefdoms2.getName());
      assertFalse(fiefdoms2.equals((Object)fiefdoms3));
      assertFalse(fiefdoms2.equals((Object)fiefdoms1));
      assertFalse(fiefdoms2.equals((Object)fiefdoms0));
      assertTrue(boolean6 == boolean3);
      assertFalse(boolean6 == boolean1);
      assertTrue(boolean6 == boolean2);
      assertFalse(boolean6 == boolean0);
      assertTrue(boolean6 == boolean4);
      assertTrue(boolean6 == boolean5);
      
      ArrayList<String> arrayList3 = fiefdoms3.getNeighbors();
      assertNotSame(fiefdoms3, fiefdoms1);
      assertNotSame(fiefdoms3, fiefdoms0);
      assertNotSame(fiefdoms3, fiefdoms2);
      assertNull(fiefdoms3.getName());
      assertEquals(0, fiefdoms3.getFiefdomCastles());
      assertNull(fiefdoms3.getOwner());
      assertFalse(fiefdoms3.isKingdom());
      assertEquals(0, fiefdoms3.getValue());
      assertNull(fiefdoms3.getConqueror());
      assertEquals(0, fiefdoms3.getPersonalCastles());
      assertEquals(0, fiefdoms3.getPeasants());
      assertNull(arrayList3);
      assertFalse(fiefdoms3.equals((Object)fiefdoms1));
      assertFalse(fiefdoms3.equals((Object)fiefdoms0));
      assertFalse(fiefdoms3.equals((Object)fiefdoms2));
      
      Fiefdoms fiefdoms4 = new Fiefdoms();
      assertFalse(fiefdoms4.isKingdom());
      assertEquals(0, fiefdoms4.getValue());
      assertEquals(0, fiefdoms4.getPersonalCastles());
      assertNull(fiefdoms4.getName());
      assertEquals(0, fiefdoms4.getPeasants());
      assertEquals(0, fiefdoms4.getFiefdomCastles());
      assertNull(fiefdoms4.getOwner());
      assertNull(fiefdoms4.getConqueror());
      assertNotNull(fiefdoms4);
      assertFalse(fiefdoms4.equals((Object)fiefdoms0));
      assertFalse(fiefdoms4.equals((Object)fiefdoms1));
      assertFalse(fiefdoms4.equals((Object)fiefdoms2));
      assertFalse(fiefdoms4.equals((Object)fiefdoms3));
      
      ArrayList<String> arrayList4 = fiefdoms4.getNeighbors();
      assertNotSame(fiefdoms4, fiefdoms0);
      assertNotSame(fiefdoms4, fiefdoms1);
      assertNotSame(fiefdoms4, fiefdoms2);
      assertNotSame(fiefdoms4, fiefdoms3);
      assertFalse(fiefdoms4.isKingdom());
      assertEquals(0, fiefdoms4.getValue());
      assertEquals(0, fiefdoms4.getPersonalCastles());
      assertNull(fiefdoms4.getName());
      assertEquals(0, fiefdoms4.getPeasants());
      assertEquals(0, fiefdoms4.getFiefdomCastles());
      assertNull(fiefdoms4.getOwner());
      assertNull(fiefdoms4.getConqueror());
      assertNull(arrayList4);
      assertFalse(fiefdoms4.equals((Object)fiefdoms0));
      assertFalse(fiefdoms4.equals((Object)fiefdoms1));
      assertFalse(fiefdoms4.equals((Object)fiefdoms2));
      assertFalse(fiefdoms4.equals((Object)fiefdoms3));
      
      fiefdoms3.setConqueror("Fiefdoms are not neighbors");
      assertNotSame(fiefdoms3, fiefdoms4);
      assertNotSame(fiefdoms3, fiefdoms1);
      assertNotSame(fiefdoms3, fiefdoms0);
      assertNotSame(fiefdoms3, fiefdoms2);
      assertEquals("Fiefdoms are not neighbors", fiefdoms3.getConqueror());
      assertNull(fiefdoms3.getName());
      assertEquals(0, fiefdoms3.getFiefdomCastles());
      assertNull(fiefdoms3.getOwner());
      assertFalse(fiefdoms3.isKingdom());
      assertEquals(0, fiefdoms3.getValue());
      assertEquals(0, fiefdoms3.getPersonalCastles());
      assertEquals(0, fiefdoms3.getPeasants());
      assertFalse(fiefdoms3.equals((Object)fiefdoms4));
      assertFalse(fiefdoms3.equals((Object)fiefdoms1));
      assertFalse(fiefdoms3.equals((Object)fiefdoms0));
      assertFalse(fiefdoms3.equals((Object)fiefdoms2));
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Knight knight0 = new Knight("S52", (String) null, "S52");
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("S52", knight0.getName());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getwound());
      assertEquals("S52", knight0.getPassword());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertNotNull(knight0);
      
      ArrayList<String> arrayList0 = knight0.getVotes();
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("S52", knight0.getName());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getwound());
      assertEquals("S52", knight0.getPassword());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains("S52"));
      
      boolean boolean0 = arrayList0.add((String) null);
      assertTrue(boolean0);
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("S52", knight0.getName());
      assertEquals(0, knight0.getScore());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getwound());
      assertEquals("S52", knight0.getPassword());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("", knight0.getOrder());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.contains("S52"));
      
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setMagyar(848, false);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMuslim();
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      
      Fiefdoms fiefdoms1 = new Fiefdoms();
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertNotNull(fiefdoms1);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      
      fiefdoms1.setMuslim((-643), false);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      
      fiefdoms1.setPeasants((-1));
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(fiefdoms1.getOwner());
      assertEquals((-1), fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      
      fiefdoms0.setKingdom(true);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      
      fiefdoms0.setPersonalCastles(true);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      
      float[] floatArray0 = fiefdoms0.getShaderColor();
      assertNotSame(fiefdoms0, fiefdoms1);
      assertEquals(2, floatArray0.length);
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
      assertNotNull(floatArray0);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      
      ArrayList<Intruders> arrayList2 = fiefdoms0.getMagyar();
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(arrayList2, arrayList1);
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertNotNull(arrayList2);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertTrue(arrayList2.equals((Object)arrayList1));
      
      fiefdoms1.setViking(arrayList1);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(arrayList1, arrayList2);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNull(fiefdoms1.getOwner());
      assertEquals((-1), fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertTrue(arrayList1.equals((Object)arrayList2));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      
      String string0 = fiefdoms1.getConqueror();
      assertNotSame(fiefdoms1, fiefdoms0);
      assertNull(fiefdoms1.getOwner());
      assertEquals((-1), fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertNull(string0);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      
      boolean boolean1 = fiefdoms1.isKingdom();
      assertNotSame(fiefdoms1, fiefdoms0);
      assertFalse(boolean1);
      assertNull(fiefdoms1.getOwner());
      assertEquals((-1), fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(boolean1 == boolean0);
      
      int int0 = fiefdoms1.getFiefdomCastles();
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, int0);
      assertNull(fiefdoms1.getOwner());
      assertEquals((-1), fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setOwner(".");
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(".", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setOwner(".");
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(".", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setNeighbors((ArrayList<String>) null);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      
      Intruders intruders0 = new Intruders("@G{dk", "");
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getLocation());
      assertNotNull(intruders0);
      
      ArrayList<String> arrayList0 = fiefdoms0.getInvaderType();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(arrayList0);
      
      Knight knight0 = new Knight();
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertNotNull(knight0);
      
      ArrayList<Vassals> arrayList1 = knight0.getMovingVassals();
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      
      fiefdoms0.loyalVassals = arrayList1;
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, fiefdoms0.loyalVassals.size());
      assertTrue(fiefdoms0.loyalVassals.isEmpty());
      
      fiefdoms0.setOwner("@G{dk");
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("@G{dk", fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      
      int int0 = fiefdoms0.getPeasants();
      assertEquals(0, int0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("@G{dk", fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      
      Vassals vassals0 = new Vassals();
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertNull(vassals0.getLocation());
      assertNull(vassals0.getLord());
      assertNotNull(vassals0);
      
      boolean boolean0 = fiefdoms0.loyalVassals.add(vassals0);
      assertSame(fiefdoms0.loyalVassals, arrayList1);
      assertTrue(boolean0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("@G{dk", fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, arrayList1.size());
      assertFalse(fiefdoms0.loyalVassals.isEmpty());
      assertEquals(1, fiefdoms0.loyalVassals.size());
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertNull(vassals0.getLocation());
      assertNull(vassals0.getLord());
      assertTrue(arrayList1.contains(vassals0));
      assertTrue(fiefdoms0.loyalVassals.contains(vassals0));
      
      fiefdoms0.setPeasants(711);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("@G{dk", fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(711, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setOwner(" castles for ");
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(" castles for ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(711, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      Fiefdoms fiefdoms1 = new Fiefdoms((ArrayList<String>) null, " castles for ", "Unknown rank", 2, false, (ArrayList<String>) null);
      assertEquals("Unknown rank", fiefdoms1.getOwner());
      assertEquals(2, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(" castles for ", fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNotNull(fiefdoms1);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      
      ArrayList<Vassals> arrayList2 = fiefdoms0.getLoyalVassals();
      assertNotSame(fiefdoms0, fiefdoms1);
      assertSame(arrayList2, arrayList1);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(" castles for ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(711, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(1, arrayList2.size());
      assertFalse(arrayList2.isEmpty());
      assertNotNull(arrayList2);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertTrue(arrayList2.contains(vassals0));
      
      arrayList1.trimToSize();
      assertSame(arrayList1, arrayList2);
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, arrayList1.size());
      assertTrue(arrayList1.contains(vassals0));
      
      Vassals vassals1 = new Vassals("ile-de-france", "@G{dk");
      assertEquals("ile-de-france", vassals1.getLord());
      assertNull(vassals1.getLocation());
      assertEquals("@G{dk", vassals1.getFiefdom());
      assertEquals("vassal", vassals1.getRank());
      assertNotNull(vassals1);
      assertFalse(vassals1.equals((Object)vassals0));
      
      vassals1.setFiefdom("Unknown rank");
      assertNotSame(vassals1, vassals0);
      assertEquals("ile-de-france", vassals1.getLord());
      assertNull(vassals1.getLocation());
      assertEquals("Unknown rank", vassals1.getFiefdom());
      assertEquals("vassal", vassals1.getRank());
      assertFalse(vassals1.equals((Object)vassals0));
      
      boolean boolean1 = fiefdoms0.loyalVassals.add(vassals1);
      assertNotSame(vassals1, vassals0);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertSame(arrayList1, arrayList2);
      assertSame(fiefdoms0.loyalVassals, arrayList2);
      assertSame(fiefdoms0.loyalVassals, arrayList1);
      assertTrue(boolean1);
      assertEquals("ile-de-france", vassals1.getLord());
      assertNull(vassals1.getLocation());
      assertEquals("Unknown rank", vassals1.getFiefdom());
      assertEquals("vassal", vassals1.getRank());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(" castles for ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(711, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertFalse(arrayList1.isEmpty());
      assertEquals(2, arrayList1.size());
      assertFalse(fiefdoms0.loyalVassals.isEmpty());
      assertEquals(2, fiefdoms0.loyalVassals.size());
      assertFalse(vassals1.equals((Object)vassals0));
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertTrue(boolean1 == boolean0);
      assertTrue(arrayList1.contains(vassals1));
      assertTrue(fiefdoms0.loyalVassals.contains(vassals1));
      
      fiefdoms1.setRebelliousVassals(fiefdoms0.loyalVassals);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertSame(arrayList1, arrayList2);
      assertSame(fiefdoms0.loyalVassals, arrayList2);
      assertSame(fiefdoms0.loyalVassals, arrayList1);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(" castles for ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(711, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertFalse(arrayList1.isEmpty());
      assertEquals(2, arrayList1.size());
      assertFalse(fiefdoms0.loyalVassals.isEmpty());
      assertEquals(2, fiefdoms0.loyalVassals.size());
      assertEquals("Unknown rank", fiefdoms1.getOwner());
      assertEquals(2, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(" castles for ", fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertTrue(arrayList1.contains(vassals1));
      assertTrue(fiefdoms0.loyalVassals.contains(vassals1));
      
      fiefdoms0.setConqueror(" castles for ");
      assertNotSame(fiefdoms0, fiefdoms1);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(" castles for ", fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(" castles for ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(711, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      
      fiefdoms1.setViking(0, false);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals("Unknown rank", fiefdoms1.getOwner());
      assertEquals(2, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals(" castles for ", fiefdoms1.getName());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      
      fiefdoms0.setLoyalVassals((-417), true);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(" castles for ", fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(" castles for ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(711, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      
      ArrayList<Intruders> arrayList3 = fiefdoms0.getMagyar();
      assertNotSame(fiefdoms0, fiefdoms1);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(" castles for ", fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(" castles for ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(711, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertNotNull(arrayList3);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(arrayList3.contains(intruders0));
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      
      float[] floatArray0 = new float[4];
      floatArray0[0] = (-15.10804F);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-36);
      byteArray0[2] = (byte) (-17);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-59);
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)0;
      fiefdoms0.selectioncolor = byteArray0;
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      floatArray0[1] = (-3268.1868F);
      floatArray0[2] = (-2631.35F);
      fiefdoms0.setPersonalCastles((-1758));
      assertEquals((-1758), fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setMuslim((-1758), true);
      assertEquals((-1758), fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      floatArray0[3] = (-1310.0425F);
      fiefdoms0.setShaderColor(floatArray0);
      assertEquals(4, floatArray0.length);
      assertEquals((-1758), fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertArrayEquals(new float[] {(-15.10804F), (-3268.1868F), (-2631.35F), (-1310.0425F)}, floatArray0, 0.01F);
      
      ArrayList<String> arrayList0 = fiefdoms0.getInvaderType();
      assertEquals((-1758), fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(arrayList0);
      
      int int0 = fiefdoms0.getFiefdomCastles();
      assertEquals(0, int0);
      assertEquals((-1758), fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setPeasants((-1758));
      assertEquals((-1758), fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1758), fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.buyPersonalCastles((-1758));
      assertEquals((-1758), fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1758), fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setShaderColor(floatArray0);
      assertEquals(4, floatArray0.length);
      assertEquals((-1758), fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals((-1758), fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertArrayEquals(new float[] {(-15.10804F), (-3268.1868F), (-2631.35F), (-1310.0425F)}, floatArray0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setKingdom(false);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNotNull(fiefdoms0);
      
      int int0 = fiefdoms0.getValue();
      assertEquals(0, int0);
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.buyFiefdomCastles(406);
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      ArrayList<Vassals> arrayList0 = fiefdoms0.getLoyalVassals();
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      ArrayList<Vassals> arrayList1 = fiefdoms0.getLoyalVassals();
      assertSame(arrayList1, arrayList0);
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotNull(arrayList1);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setNeighbors((ArrayList<String>) null);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      Intruders intruders0 = new Intruders("@G{dk", "");
      assertNull(intruders0.getRank());
      assertNull(intruders0.getLocation());
      assertNull(intruders0.getType());
      assertNotNull(intruders0);
      
      ArrayList<String> arrayList0 = fiefdoms0.getInvaderType();
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(arrayList0);
      
      fiefdoms0.setLoyalVassals((-591), true);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      Knight knight0 = new Knight();
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertNotNull(knight0);
      
      ArrayList<Vassals> arrayList1 = knight0.getMovingVassals();
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      
      fiefdoms0.loyalVassals = arrayList1;
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertTrue(fiefdoms0.loyalVassals.isEmpty());
      assertEquals(0, fiefdoms0.loyalVassals.size());
      
      fiefdoms0.setOwner("@G{dk");
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("@G{dk", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      int int0 = fiefdoms0.getPeasants();
      assertEquals(0, int0);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("@G{dk", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setPeasants(711);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(711, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("@G{dk", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setOwner(" castles for ");
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(711, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(" castles for ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      
      Vassals vassals0 = new Vassals();
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertNull(vassals0.getLord());
      assertNull(vassals0.getLocation());
      assertNotNull(vassals0);
      
      vassals0.setLocation("+;'");
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertNull(vassals0.getLord());
      assertEquals("+;'", vassals0.getLocation());
      
      vassals0.setLocation("+;'");
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertNull(vassals0.getLord());
      assertEquals("+;'", vassals0.getLocation());
      
      boolean boolean0 = arrayList1.add(vassals0);
      assertTrue(boolean0);
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getwound());
      assertNull(knight0.getPassword());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertNull(vassals0.getLord());
      assertEquals("+;'", vassals0.getLocation());
      assertTrue(arrayList1.contains(vassals0));
      
      Knight knight1 = new Knight("", "@G{dk", "");
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getwound());
      assertEquals(0, knight1.getScore());
      assertEquals("", knight1.getPassword());
      assertEquals(0, knight1.getHitsCounter());
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getKill());
      assertFalse(knight1.isDead());
      assertEquals("@G{dk", knight1.getRank());
      assertEquals("", knight1.getOrder());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals(0, knight1.getKills());
      assertEquals("", knight1.getName());
      assertNotNull(knight1);
      assertFalse(knight1.equals((Object)knight0));
      
      ArrayList<Vassals> arrayList2 = knight1.getMovingVassals();
      assertNotSame(knight1, knight0);
      assertNotSame(arrayList2, arrayList1);
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getwound());
      assertEquals(0, knight1.getScore());
      assertEquals("", knight1.getPassword());
      assertEquals(0, knight1.getHitsCounter());
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getKill());
      assertFalse(knight1.isDead());
      assertEquals("@G{dk", knight1.getRank());
      assertEquals("", knight1.getOrder());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals(0, knight1.getKills());
      assertEquals("", knight1.getName());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertNotNull(arrayList2);
      assertFalse(knight1.equals((Object)knight0));
      assertFalse(arrayList2.equals((Object)arrayList1));
      assertFalse(arrayList2.contains(vassals0));
      
      fiefdoms0.setRebelliousVassals(arrayList2);
      assertNotSame(knight1, knight0);
      assertNotSame(arrayList2, arrayList1);
      assertEquals(0, knight1.getTotalMoney());
      assertEquals(0, knight1.getwound());
      assertEquals(0, knight1.getScore());
      assertEquals("", knight1.getPassword());
      assertEquals(0, knight1.getHitsCounter());
      assertFalse(knight1.getDead());
      assertEquals(0, knight1.getKill());
      assertFalse(knight1.isDead());
      assertEquals("@G{dk", knight1.getRank());
      assertEquals("", knight1.getOrder());
      assertEquals("Ile-De-France", knight1.getLocation());
      assertEquals(0, knight1.getWounds());
      assertEquals(0, knight1.getRebellionCounter());
      assertEquals(0, knight1.getKills());
      assertEquals("", knight1.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(711, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertEquals(" castles for ", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertFalse(knight1.equals((Object)knight0));
      assertFalse(arrayList2.equals((Object)arrayList1));
      assertFalse(arrayList2.contains(vassals0));
      
      fiefdoms0.setOwner("@G{dk");
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(711, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("@G{dk", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray0.length);
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(711, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("@G{dk", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArray0);
      
      ArrayList<String> arrayList3 = fiefdoms0.getNeighbors();
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(711, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("@G{dk", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(arrayList3);
      
      fiefdoms0.setConqueror(" castles for ");
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(711, fiefdoms0.getPeasants());
      assertEquals(" castles for ", fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("@G{dk", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Knight knight0 = new Knight();
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertNotNull(knight0);
      
      knight0.setName("src.Vassals");
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("src.Vassals", knight0.getName());
      assertEquals(0, knight0.getKill());
      
      ArrayList<String> arrayList0 = knight0.getConversation();
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("src.Vassals", knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains("src.Vassals"));
      
      int int0 = 3;
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "src.Vassals", "muslim", 3, false, arrayList0);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("src.Vassals", knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(3, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("src.Vassals", fiefdoms0.getName());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("src.Vassals"));
      
      boolean boolean0 = false;
      boolean boolean1 = arrayList0.add("src.Vassals");
      assertTrue(boolean1);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("src.Vassals", knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertFalse(boolean1 == boolean0);
      assertTrue(arrayList0.contains("src.Vassals"));
      assertFalse(arrayList0.contains("muslim"));
      
      fiefdoms0.setPersonalCastles(3);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("src.Vassals", knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(3, fiefdoms0.getValue());
      assertEquals(3, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("src.Vassals", fiefdoms0.getName());
      assertTrue(arrayList0.contains("src.Vassals"));
      assertFalse(arrayList0.contains("muslim"));
      
      fiefdoms0.setPersonalCastles(true);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("src.Vassals", knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(3, fiefdoms0.getValue());
      assertEquals(4, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("src.Vassals", fiefdoms0.getName());
      assertTrue(arrayList0.contains("src.Vassals"));
      assertFalse(arrayList0.contains("muslim"));
      
      fiefdoms0.setMuslim(3, false);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("src.Vassals", knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(3, fiefdoms0.getValue());
      assertEquals(4, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("src.Vassals", fiefdoms0.getName());
      assertTrue(arrayList0.contains("src.Vassals"));
      assertFalse(arrayList0.contains("muslim"));
      
      boolean boolean2 = arrayList0.add("Unknown rank");
      assertTrue(boolean2);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("src.Vassals", knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertTrue(arrayList0.contains("src.Vassals"));
      assertFalse(arrayList0.contains("muslim"));
      
      ArrayList<Vassals> arrayList1 = fiefdoms0.getLoyalVassals();
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("src.Vassals", knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(3, fiefdoms0.getValue());
      assertEquals(4, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("src.Vassals", fiefdoms0.getName());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      assertTrue(arrayList0.contains("src.Vassals"));
      assertFalse(arrayList0.contains("muslim"));
      
      ArrayList<Intruders> arrayList2 = new ArrayList<Intruders>();
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertNotNull(arrayList2);
      
      knight0.setConversation(arrayList0);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getKills());
      assertNull(knight0.getPassword());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("src.Vassals", knight0.getName());
      assertEquals(0, knight0.getKill());
      assertEquals(2, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(arrayList0.contains("src.Vassals"));
      assertFalse(arrayList0.contains("muslim"));
      
      // Undeclared exception!
      try { 
        knight0.sendMessage("R|tTm52=rpD", "cnEx99e?[B_^-3J");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class src.CurrentPlayers
         //
         verifyException("src.Knight", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Knight knight0 = new Knight(" castles  for ", "NH;x 7QTJGOr!foC0", "count");
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(" castles  for ", knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("count", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("NH;x 7QTJGOr!foC0", knight0.getRank());
      assertNotNull(knight0);
      
      ArrayList<String> arrayList0 = knight0.getConversation();
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(" castles  for ", knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("count", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("NH;x 7QTJGOr!foC0", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains("NH;x 7QTJGOr!foC0"));
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, (String) null, " castles  for ", (-2034), true, arrayList0);
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(" castles  for ", knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("count", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("NH;x 7QTJGOr!foC0", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(" castles  for ", fiefdoms0.getOwner());
      assertEquals((-2034), fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("NH;x 7QTJGOr!foC0"));
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMuslim();
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(" castles  for ", knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("count", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("NH;x 7QTJGOr!foC0", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(" castles  for ", fiefdoms0.getOwner());
      assertEquals((-2034), fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      assertFalse(arrayList0.contains("NH;x 7QTJGOr!foC0"));
      
      fiefdoms0.setMagyar(arrayList1);
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(" castles  for ", knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("count", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("NH;x 7QTJGOr!foC0", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(" castles  for ", fiefdoms0.getOwner());
      assertEquals((-2034), fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertFalse(arrayList0.contains("NH;x 7QTJGOr!foC0"));
      
      fiefdoms0.setOwner("NH;x 7QTJGOr!foC0");
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(" castles  for ", knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("count", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("NH;x 7QTJGOr!foC0", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("NH;x 7QTJGOr!foC0", fiefdoms0.getOwner());
      assertEquals((-2034), fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(arrayList0.contains("NH;x 7QTJGOr!foC0"));
      
      Fiefdoms fiefdoms1 = new Fiefdoms(arrayList0, "vuT>Lnu%N['H9E!", "count", (-2034), true, arrayList0);
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(" castles  for ", knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("count", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("NH;x 7QTJGOr!foC0", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals((-2034), fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertEquals("count", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals("vuT>Lnu%N['H9E!", fiefdoms1.getName());
      assertNotNull(fiefdoms1);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(arrayList0.contains("vuT>Lnu%N['H9E!"));
      
      fiefdoms0.setPersonalCastles((-2034));
      assertNotSame(fiefdoms0, fiefdoms1);
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(" castles  for ", knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("count", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("NH;x 7QTJGOr!foC0", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("NH;x 7QTJGOr!foC0", fiefdoms0.getOwner());
      assertEquals((-2034), fiefdoms0.getPersonalCastles());
      assertEquals((-2034), fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(arrayList0.contains("vuT>Lnu%N['H9E!"));
      
      fiefdoms1.setRebelliousVassals((-2034), true);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(" castles  for ", knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("count", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("NH;x 7QTJGOr!foC0", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals((-2034), fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertEquals("count", fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals("vuT>Lnu%N['H9E!", fiefdoms1.getName());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(arrayList0.contains("vuT>Lnu%N['H9E!"));
      
      fiefdoms1.setOwner(" vassals with you.");
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(" castles  for ", knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("count", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("NH;x 7QTJGOr!foC0", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals((-2034), fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(" vassals with you.", fiefdoms1.getOwner());
      assertEquals("vuT>Lnu%N['H9E!", fiefdoms1.getName());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(arrayList0.contains("vuT>Lnu%N['H9E!"));
      
      ArrayList<Vassals> arrayList2 = fiefdoms1.getRebelliousVassals();
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(" castles  for ", knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("count", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("NH;x 7QTJGOr!foC0", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals((-2034), fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(" vassals with you.", fiefdoms1.getOwner());
      assertEquals("vuT>Lnu%N['H9E!", fiefdoms1.getName());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertNotNull(arrayList2);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(arrayList0.contains("vuT>Lnu%N['H9E!"));
      
      fiefdoms0.setRebelliousVassals(arrayList2);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(" castles  for ", knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("count", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("NH;x 7QTJGOr!foC0", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("NH;x 7QTJGOr!foC0", fiefdoms0.getOwner());
      assertEquals((-2034), fiefdoms0.getPersonalCastles());
      assertEquals((-2034), fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals((-2034), fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(" vassals with you.", fiefdoms1.getOwner());
      assertEquals("vuT>Lnu%N['H9E!", fiefdoms1.getName());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(arrayList0.contains("vuT>Lnu%N['H9E!"));
      
      ArrayList<Vassals> arrayList3 = fiefdoms0.getLoyalVassals();
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(arrayList3, arrayList2);
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(" castles  for ", knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("count", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("NH;x 7QTJGOr!foC0", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("NH;x 7QTJGOr!foC0", fiefdoms0.getOwner());
      assertEquals((-2034), fiefdoms0.getPersonalCastles());
      assertEquals((-2034), fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertNotNull(arrayList3);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertTrue(arrayList3.equals((Object)arrayList2));
      assertFalse(arrayList0.contains("vuT>Lnu%N['H9E!"));
      
      arrayList0.trimToSize();
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(" castles  for ", knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("count", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("NH;x 7QTJGOr!foC0", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains("vuT>Lnu%N['H9E!"));
      
      fiefdoms0.setViking(arrayList1);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(" castles  for ", knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("count", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("NH;x 7QTJGOr!foC0", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("NH;x 7QTJGOr!foC0", fiefdoms0.getOwner());
      assertEquals((-2034), fiefdoms0.getPersonalCastles());
      assertEquals((-2034), fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(arrayList0.contains("vuT>Lnu%N['H9E!"));
      
      ArrayList<Vassals> arrayList4 = fiefdoms0.getRebelliousVassals();
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(arrayList4, arrayList3);
      assertSame(arrayList4, arrayList2);
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(" castles  for ", knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("count", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("NH;x 7QTJGOr!foC0", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("NH;x 7QTJGOr!foC0", fiefdoms0.getOwner());
      assertEquals((-2034), fiefdoms0.getPersonalCastles());
      assertEquals((-2034), fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, arrayList4.size());
      assertTrue(arrayList4.isEmpty());
      assertNotNull(arrayList4);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertTrue(arrayList4.equals((Object)arrayList3));
      assertFalse(arrayList0.contains("vuT>Lnu%N['H9E!"));
      
      int int0 = fiefdoms0.getPersonalCastles();
      assertNotSame(fiefdoms0, fiefdoms1);
      assertEquals((-2034), int0);
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(" castles  for ", knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("count", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("NH;x 7QTJGOr!foC0", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("NH;x 7QTJGOr!foC0", fiefdoms0.getOwner());
      assertEquals((-2034), fiefdoms0.getPersonalCastles());
      assertEquals((-2034), fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(arrayList0.contains("vuT>Lnu%N['H9E!"));
      
      ArrayList<String> arrayList5 = fiefdoms0.getNeighbors();
      assertSame(arrayList5, arrayList0);
      assertSame(arrayList0, arrayList5);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(" castles  for ", knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("count", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("NH;x 7QTJGOr!foC0", knight0.getRank());
      assertEquals(0, arrayList5.size());
      assertTrue(arrayList5.isEmpty());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("NH;x 7QTJGOr!foC0", fiefdoms0.getOwner());
      assertEquals((-2034), fiefdoms0.getPersonalCastles());
      assertEquals((-2034), fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertNotNull(arrayList5);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(arrayList5.contains("vuT>Lnu%N['H9E!"));
      assertFalse(arrayList0.contains("vuT>Lnu%N['H9E!"));
      
      ArrayList<Vassals> arrayList6 = fiefdoms0.getRebelliousVassals();
      assertSame(arrayList0, arrayList5);
      assertSame(arrayList6, arrayList2);
      assertSame(arrayList6, arrayList4);
      assertNotSame(arrayList6, arrayList3);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(" castles  for ", knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("count", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("NH;x 7QTJGOr!foC0", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertTrue(arrayList6.isEmpty());
      assertEquals(0, arrayList6.size());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("NH;x 7QTJGOr!foC0", fiefdoms0.getOwner());
      assertEquals((-2034), fiefdoms0.getPersonalCastles());
      assertEquals((-2034), fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertNotNull(arrayList6);
      assertTrue(arrayList6.equals((Object)arrayList3));
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(arrayList0.contains("vuT>Lnu%N['H9E!"));
      
      int int1 = fiefdoms1.getPersonalCastles();
      assertSame(arrayList0, arrayList5);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, int1);
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(" castles  for ", knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("count", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("NH;x 7QTJGOr!foC0", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals((-2034), fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(" vassals with you.", fiefdoms1.getOwner());
      assertEquals("vuT>Lnu%N['H9E!", fiefdoms1.getName());
      assertFalse(int1 == int0);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(arrayList0.contains("vuT>Lnu%N['H9E!"));
      
      int int2 = fiefdoms0.getPersonalCastles();
      assertSame(arrayList0, arrayList5);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertEquals((-2034), int2);
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(" castles  for ", knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("count", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("NH;x 7QTJGOr!foC0", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("NH;x 7QTJGOr!foC0", fiefdoms0.getOwner());
      assertEquals((-2034), fiefdoms0.getPersonalCastles());
      assertEquals((-2034), fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertTrue(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(arrayList0.contains("vuT>Lnu%N['H9E!"));
      
      ArrayList<Intruders> arrayList7 = fiefdoms1.getMuslim();
      assertSame(arrayList0, arrayList5);
      assertNotSame(arrayList7, arrayList1);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(" castles  for ", knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("count", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("NH;x 7QTJGOr!foC0", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList7.size());
      assertTrue(arrayList7.isEmpty());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals((-2034), fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(" vassals with you.", fiefdoms1.getOwner());
      assertEquals("vuT>Lnu%N['H9E!", fiefdoms1.getName());
      assertNotNull(arrayList7);
      assertTrue(arrayList7.equals((Object)arrayList1));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(arrayList0.contains("vuT>Lnu%N['H9E!"));
      
      int int3 = fiefdoms0.getFiefdomCastles();
      assertSame(arrayList0, arrayList5);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertEquals(0, int3);
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(" castles  for ", knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("count", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("NH;x 7QTJGOr!foC0", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("NH;x 7QTJGOr!foC0", fiefdoms0.getOwner());
      assertEquals((-2034), fiefdoms0.getPersonalCastles());
      assertEquals((-2034), fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(int3 == int0);
      assertTrue(int3 == int1);
      assertFalse(int3 == int2);
      assertFalse(arrayList0.contains("vuT>Lnu%N['H9E!"));
      
      ArrayList<Intruders> arrayList8 = fiefdoms0.getMagyar();
      assertSame(arrayList0, arrayList5);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertSame(arrayList8, arrayList1);
      assertNotSame(arrayList8, arrayList7);
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(" castles  for ", knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("count", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("NH;x 7QTJGOr!foC0", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("NH;x 7QTJGOr!foC0", fiefdoms0.getOwner());
      assertEquals((-2034), fiefdoms0.getPersonalCastles());
      assertEquals((-2034), fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertTrue(arrayList8.isEmpty());
      assertEquals(0, arrayList8.size());
      assertNotNull(arrayList8);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertTrue(arrayList8.equals((Object)arrayList7));
      assertFalse(arrayList0.contains("vuT>Lnu%N['H9E!"));
      
      ArrayList<Intruders> arrayList9 = fiefdoms0.getViking();
      assertSame(arrayList0, arrayList5);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNotSame(arrayList9, arrayList7);
      assertSame(arrayList9, arrayList8);
      assertSame(arrayList9, arrayList1);
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(" castles  for ", knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("count", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("NH;x 7QTJGOr!foC0", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("NH;x 7QTJGOr!foC0", fiefdoms0.getOwner());
      assertEquals((-2034), fiefdoms0.getPersonalCastles());
      assertEquals((-2034), fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertTrue(arrayList9.isEmpty());
      assertEquals(0, arrayList9.size());
      assertNotNull(arrayList9);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertTrue(arrayList9.equals((Object)arrayList7));
      assertFalse(arrayList0.contains("vuT>Lnu%N['H9E!"));
      
      ArrayList<Player> arrayList10 = fiefdoms0.getVassalsList();
      assertSame(arrayList0, arrayList5);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(" castles  for ", knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("count", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("NH;x 7QTJGOr!foC0", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals("NH;x 7QTJGOr!foC0", fiefdoms0.getOwner());
      assertEquals((-2034), fiefdoms0.getPersonalCastles());
      assertEquals((-2034), fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertNull(arrayList10);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertFalse(arrayList0.contains("vuT>Lnu%N['H9E!"));
      
      ArrayList<Player> arrayList11 = fiefdoms1.getVassalsList();
      assertSame(arrayList0, arrayList5);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKill());
      assertEquals(" castles  for ", knight0.getName());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKills());
      assertFalse(knight0.getDead());
      assertEquals("count", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("NH;x 7QTJGOr!foC0", knight0.getRank());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertTrue(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals((-2034), fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(" vassals with you.", fiefdoms1.getOwner());
      assertEquals("vuT>Lnu%N['H9E!", fiefdoms1.getName());
      assertNull(arrayList11);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      assertFalse(arrayList0.contains("vuT>Lnu%N['H9E!"));
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setPersonalCastles(true);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setFiefdomCastles((-2034));
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals((-2034), fiefdoms0.getFiefdomCastles());
      
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)51;
      byteArray0[3] = (byte)1;
      fiefdoms0.setSelectioncolor(byteArray0);
      assertEquals(4, byteArray0.length);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals((-2034), fiefdoms0.getFiefdomCastles());
      assertArrayEquals(new byte[] {(byte)0, (byte) (-1), (byte)51, (byte)1}, byteArray0);
      
      Intruders intruders0 = new Intruders();
      assertNull(intruders0.getRank());
      assertNull(intruders0.getType());
      assertNull(intruders0.getLocation());
      assertNotNull(intruders0);
      
      intruders0.setType("You are allowed to take up to ");
      assertNull(intruders0.getRank());
      assertEquals("You are allowed to take up to ", intruders0.getType());
      assertNull(intruders0.getLocation());
      
      intruders0.setLocation("src.Retainers");
      assertNull(intruders0.getRank());
      assertEquals("You are allowed to take up to ", intruders0.getType());
      assertEquals("src.Retainers", intruders0.getLocation());
      
      fiefdoms0.buyPersonalCastles((byte) (-1));
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals((-2034), fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setName("");
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals((-2034), fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.buyFiefdomCastles(0);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1, fiefdoms0.getPersonalCastles());
      assertEquals((-2034), fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setPersonalCastles(true);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-2034), fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMuslim();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-2034), fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains(intruders0));
      
      ArrayList<Vassals> arrayList1 = fiefdoms0.getRebelliousVassals();
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-2034), fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      
      fiefdoms0.buyFiefdomCastles(1);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("", fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-2033), fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      
      fiefdoms0.setOwner("src.Retainers");
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("src.Retainers", fiefdoms0.getOwner());
      assertEquals((-2033), fiefdoms0.getFiefdomCastles());
      assertEquals(2, fiefdoms0.getPersonalCastles());
      
      fiefdoms0.setOwner("muslim");
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("", fiefdoms0.getName());
      assertNull(fiefdoms0.getConqueror());
      assertEquals((-2033), fiefdoms0.getFiefdomCastles());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals(2, fiefdoms0.getPersonalCastles());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      boolean boolean0 = arrayList0.add("*)'8:B\nuhlk");
      assertTrue(boolean0);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertTrue(arrayList0.contains("*)'8:B\nuhlk"));
      
      Intruders intruders0 = new Intruders();
      assertNull(intruders0.getRank());
      assertNull(intruders0.getType());
      assertNull(intruders0.getLocation());
      assertNotNull(intruders0);
      
      intruders0.setLocation("U8>^1+Ib");
      assertNull(intruders0.getRank());
      assertEquals("U8>^1+Ib", intruders0.getLocation());
      assertNull(intruders0.getType());
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      intruders0.setLocation((String) null);
      assertNull(intruders0.getRank());
      assertNull(intruders0.getType());
      assertNull(intruders0.getLocation());
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "9Jr{:%SRU", "viking", 3, false, arrayList0);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals("9Jr{:%SRU", fiefdoms0.getName());
      assertEquals(3, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("viking", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("U8>^1+Ib"));
      assertTrue(arrayList0.contains("*)'8:B\nuhlk"));
      
      fiefdoms0.setKingdom(true);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals("9Jr{:%SRU", fiefdoms0.getName());
      assertEquals(3, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("viking", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(arrayList0.contains("U8>^1+Ib"));
      assertTrue(arrayList0.contains("*)'8:B\nuhlk"));
      
      intruders0.setType("#=p");
      assertNull(intruders0.getRank());
      assertEquals("#=p", intruders0.getType());
      assertNull(intruders0.getLocation());
      
      Knight knight0 = new Knight((String) null, "U8>^1+Ib", (String) null);
      assertNull(knight0.getName());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKills());
      assertEquals("U8>^1+Ib", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertNotNull(knight0);
      
      ArrayList<Vassals> arrayList1 = fiefdoms0.loyalVassals;
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      
      knight0.setMovingVassals(arrayList1);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals("9Jr{:%SRU", fiefdoms0.getName());
      assertEquals(3, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("viking", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKills());
      assertEquals("U8>^1+Ib", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertFalse(arrayList0.contains("U8>^1+Ib"));
      assertTrue(arrayList0.contains("*)'8:B\nuhlk"));
      
      ArrayList<Vassals> arrayList2 = knight0.getMovingVassals();
      assertSame(arrayList2, arrayList1);
      assertNull(knight0.getName());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getKills());
      assertEquals("U8>^1+Ib", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals(0, knight0.getHitsCounter());
      assertFalse(knight0.getDead());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertNotNull(arrayList2);
      
      fiefdoms0.setOwner("+;'");
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals("9Jr{:%SRU", fiefdoms0.getName());
      assertEquals(3, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("+;'", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(arrayList0.contains("U8>^1+Ib"));
      assertTrue(arrayList0.contains("*)'8:B\nuhlk"));
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray0.length);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals("9Jr{:%SRU", fiefdoms0.getName());
      assertEquals(3, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("+;'", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArray0);
      assertFalse(arrayList0.contains("U8>^1+Ib"));
      assertTrue(arrayList0.contains("*)'8:B\nuhlk"));
      
      ArrayList<String> arrayList3 = fiefdoms0.getNeighbors();
      assertSame(arrayList0, arrayList3);
      assertSame(arrayList3, arrayList0);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals("9Jr{:%SRU", fiefdoms0.getName());
      assertEquals(3, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("+;'", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, arrayList3.size());
      assertFalse(arrayList3.isEmpty());
      assertNotNull(arrayList3);
      assertFalse(arrayList0.contains("U8>^1+Ib"));
      assertTrue(arrayList0.contains("*)'8:B\nuhlk"));
      assertTrue(arrayList3.contains("*)'8:B\nuhlk"));
      assertFalse(arrayList3.contains("U8>^1+Ib"));
      
      fiefdoms0.setViking(3, true);
      assertSame(arrayList0, arrayList3);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals("9Jr{:%SRU", fiefdoms0.getName());
      assertEquals(3, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("+;'", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(arrayList0.contains("U8>^1+Ib"));
      assertTrue(arrayList0.contains("*)'8:B\nuhlk"));
      
      fiefdoms0.setOwner("+;'");
      assertSame(arrayList0, arrayList3);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals("9Jr{:%SRU", fiefdoms0.getName());
      assertEquals(3, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("+;'", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(arrayList0.contains("U8>^1+Ib"));
      assertTrue(arrayList0.contains("*)'8:B\nuhlk"));
      
      ArrayList<String> arrayList4 = fiefdoms0.getNeighbors();
      assertSame(arrayList0, arrayList4);
      assertSame(arrayList0, arrayList3);
      assertSame(arrayList4, arrayList0);
      assertSame(arrayList4, arrayList3);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList4.isEmpty());
      assertEquals(1, arrayList4.size());
      assertEquals("9Jr{:%SRU", fiefdoms0.getName());
      assertEquals(3, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("+;'", fiefdoms0.getOwner());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotNull(arrayList4);
      assertFalse(arrayList0.contains("U8>^1+Ib"));
      assertTrue(arrayList0.contains("*)'8:B\nuhlk"));
      assertTrue(arrayList4.contains("*)'8:B\nuhlk"));
      assertFalse(arrayList4.contains("U8>^1+Ib"));
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Knight knight0 = new Knight("S52", (String) null, "S52");
      assertFalse(knight0.getDead());
      assertEquals("S52", knight0.getName());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("S52", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertNotNull(knight0);
      
      ArrayList<String> arrayList0 = knight0.getVotes();
      assertFalse(knight0.getDead());
      assertEquals("S52", knight0.getName());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("S52", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains("S52"));
      
      boolean boolean0 = arrayList0.add((String) null);
      assertTrue(boolean0);
      assertFalse(knight0.getDead());
      assertEquals("S52", knight0.getName());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("S52", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertFalse(arrayList0.contains("S52"));
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, (String) null, (String) null, 1, false, arrayList0);
      assertFalse(knight0.getDead());
      assertEquals("S52", knight0.getName());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("S52", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("S52"));
      
      ArrayList<Vassals> arrayList1 = fiefdoms0.getLoyalVassals();
      assertFalse(knight0.getDead());
      assertEquals("S52", knight0.getName());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("S52", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, arrayList1.size());
      assertNotNull(arrayList1);
      assertFalse(arrayList0.contains("S52"));
      
      arrayList1.trimToSize();
      assertFalse(knight0.getDead());
      assertEquals("S52", knight0.getName());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("S52", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList0.contains("S52"));
      
      Vassals vassals0 = new Vassals();
      assertNull(vassals0.getLord());
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertNull(vassals0.getLocation());
      assertNotNull(vassals0);
      
      boolean boolean1 = arrayList1.add(vassals0);
      assertTrue(boolean1);
      assertFalse(knight0.getDead());
      assertEquals("S52", knight0.getName());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("S52", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList1.isEmpty());
      assertEquals(2, arrayList1.size());
      assertNull(vassals0.getLord());
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertNull(vassals0.getLocation());
      assertTrue(boolean1 == boolean0);
      assertFalse(arrayList0.contains("S52"));
      assertTrue(arrayList1.contains(vassals0));
      
      fiefdoms0.setRebelliousVassals(arrayList1);
      assertFalse(knight0.getDead());
      assertEquals("S52", knight0.getName());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("S52", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList1.isEmpty());
      assertEquals(2, arrayList1.size());
      assertFalse(arrayList0.contains("S52"));
      assertTrue(arrayList1.contains(vassals0));
      
      fiefdoms0.setConqueror((String) null);
      assertFalse(knight0.getDead());
      assertEquals("S52", knight0.getName());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("S52", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.contains("S52"));
      
      fiefdoms0.setViking(1, false);
      assertFalse(knight0.getDead());
      assertEquals("S52", knight0.getName());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("S52", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.contains("S52"));
      
      float[] floatArray0 = new float[3];
      floatArray0[0] = (float) 1;
      fiefdoms0.setOwner("oh&xbf{g8ty }");
      assertFalse(knight0.getDead());
      assertEquals("S52", knight0.getName());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("S52", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, fiefdoms0.getValue());
      assertEquals("oh&xbf{g8ty }", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.contains("oh&xbf{g8ty }"));
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray0.length);
      assertFalse(knight0.getDead());
      assertEquals("S52", knight0.getName());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("S52", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, fiefdoms0.getValue());
      assertEquals("oh&xbf{g8ty }", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArray0);
      assertFalse(arrayList0.contains("oh&xbf{g8ty }"));
      
      ArrayList<String> arrayList2 = fiefdoms0.getNeighbors();
      assertSame(arrayList0, arrayList2);
      assertSame(arrayList2, arrayList0);
      assertFalse(knight0.getDead());
      assertEquals("S52", knight0.getName());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("S52", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, fiefdoms0.getValue());
      assertEquals("oh&xbf{g8ty }", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, arrayList2.size());
      assertFalse(arrayList2.isEmpty());
      assertNotNull(arrayList2);
      assertFalse(arrayList0.contains("oh&xbf{g8ty }"));
      assertFalse(arrayList2.contains("oh&xbf{g8ty }"));
      
      fiefdoms0.setConqueror("8b&qGXKV5mT!D^Pb3?");
      assertSame(arrayList0, arrayList2);
      assertFalse(knight0.getDead());
      assertEquals("S52", knight0.getName());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("S52", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, fiefdoms0.getValue());
      assertEquals("oh&xbf{g8ty }", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("8b&qGXKV5mT!D^Pb3?", fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.contains("oh&xbf{g8ty }"));
      
      fiefdoms0.setRebelliousVassals(1, true);
      assertSame(arrayList0, arrayList2);
      assertFalse(knight0.getDead());
      assertEquals("S52", knight0.getName());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals("S52", knight0.getPassword());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, fiefdoms0.getValue());
      assertEquals("oh&xbf{g8ty }", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("8b&qGXKV5mT!D^Pb3?", fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.contains("oh&xbf{g8ty }"));
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      
      float[] floatArray0 = new float[4];
      floatArray0[0] = (-777.0004F);
      floatArray0[1] = 496.46625F;
      fiefdoms0.setViking((ArrayList<Intruders>) null);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      
      floatArray0[2] = (-79.2F);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-95);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)55;
      byteArray0[5] = (byte) (-119);
      byteArray0[6] = (byte)108;
      byteArray0[7] = (byte)20;
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertEquals(8, byteArray0.length);
      assertFalse(boolean0);
      assertArrayEquals(new byte[] {(byte)30, (byte) (-1), (byte) (-95), (byte)1, (byte)55, (byte) (-119), (byte)108, (byte)20}, byteArray0);
      
      floatArray0[3] = (-907.82F);
      float[] floatArray1 = new float[3];
      assertFalse(floatArray1.equals((Object)floatArray0));
      
      floatArray1[0] = (-777.0004F);
      floatArray1[1] = (-907.82F);
      floatArray1[2] = (-79.2F);
      fiefdoms0.setShaderColor(floatArray1);
      assertNotSame(floatArray1, floatArray0);
      assertEquals(3, floatArray1.length);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertArrayEquals(new float[] {(-777.0004F), (-907.82F), (-79.2F)}, floatArray1, 0.01F);
      assertFalse(floatArray1.equals((Object)floatArray0));
      
      fiefdoms0.shaderColor = floatArray0;
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      
      ArrayList<Player> arrayList0 = fiefdoms0.getVassalsList();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(arrayList0);
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMuslim();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      
      ArrayList<Intruders> arrayList2 = fiefdoms0.getViking();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(arrayList2);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setRebelliousVassals((-1987), false);
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Knight knight0 = new Knight();
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertNotNull(knight0);
      
      String string0 = knight0.getLocation();
      assertEquals("Ile-De-France", string0);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertNotNull(string0);
      
      knight0.setTotalMoney(1134);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(1134, knight0.getTotalMoney());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      
      String string1 = knight0.getName();
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(1134, knight0.getTotalMoney());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertNull(string1);
      
      int int0 = knight0.getTotalMoney();
      assertEquals(1134, int0);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(1134, knight0.getTotalMoney());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      
      knight0.setTotalMoney(3);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(3, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      
      knight0.setRank("Ile-De-France");
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(3, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      
      String string2 = knight0.getName();
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(3, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertNull(string2);
      
      ArrayList<String> arrayList0 = knight0.getVotes();
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(3, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains(string0));
      
      boolean boolean0 = arrayList0.add((String) null);
      assertTrue(boolean0);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(3, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string0));
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "g+", "Ile-De-France", (-638), true, arrayList0);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(3, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-638), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("Ile-De-France", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("g+", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("Ile-De-France"));
      
      ArrayList<Vassals> arrayList1 = fiefdoms0.getLoyalVassals();
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(3, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-638), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("Ile-De-France", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("g+", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      assertFalse(arrayList0.contains("Ile-De-France"));
      
      fiefdoms0.loyalVassals.trimToSize();
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(3, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-638), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("Ile-De-France", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("g+", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(arrayList0.contains("Ile-De-France"));
      
      Vassals vassals0 = new Vassals("g+", "8b&qGXKV5mT!D^Pb3?");
      assertEquals("8b&qGXKV5mT!D^Pb3?", vassals0.getFiefdom());
      assertNull(vassals0.getLocation());
      assertEquals("g+", vassals0.getLord());
      assertEquals("vassal", vassals0.getRank());
      assertNotNull(vassals0);
      
      boolean boolean1 = fiefdoms0.loyalVassals.add(vassals0);
      assertTrue(boolean1);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(3, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-638), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("Ile-De-France", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("g+", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("8b&qGXKV5mT!D^Pb3?", vassals0.getFiefdom());
      assertNull(vassals0.getLocation());
      assertEquals("g+", vassals0.getLord());
      assertEquals("vassal", vassals0.getRank());
      assertTrue(boolean1 == boolean0);
      assertFalse(arrayList0.contains("Ile-De-France"));
      
      fiefdoms0.setRebelliousVassals(arrayList1);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(3, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-638), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("Ile-De-France", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("g+", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(arrayList1.isEmpty());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList0.contains("Ile-De-France"));
      assertTrue(arrayList1.contains(vassals0));
      
      fiefdoms0.setConqueror((String) null);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(3, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-638), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("Ile-De-France", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("g+", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(arrayList0.contains("Ile-De-France"));
      
      fiefdoms0.setViking(1134, true);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(3, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-638), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("Ile-De-France", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("g+", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(arrayList0.contains("Ile-De-France"));
      
      fiefdoms0.setLoyalVassals((-542), true);
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getScore());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getRebellionCounter());
      assertEquals(3, knight0.getTotalMoney());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertNull(knight0.getPassword());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals((-638), fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("Ile-De-France", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("g+", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertFalse(arrayList0.contains("Ile-De-France"));
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setMuslim((ArrayList<Intruders>) null);
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      fiefdoms0.setOwner("?");
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("?", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      fiefdoms0.setOwner("?");
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("?", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMuslim();
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("?", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(arrayList0);
      
      fiefdoms0.setOwner("n");
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("n", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.buyFiefdomCastles((-1813));
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      ArrayList<Player> arrayList0 = fiefdoms0.getVassalsList();
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertFalse(boolean0);
      
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      
      ArrayList<Player> arrayList0 = new ArrayList<Player>(fiefdoms0.loyalVassals);
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      Knight knight0 = new Knight();
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertNotNull(knight0);
      
      boolean boolean1 = arrayList0.add((Player) knight0);
      assertTrue(boolean1);
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertFalse(boolean1 == boolean0);
      
      Retainers retainers0 = new Retainers("&M(@&73F;)", "fiefdomsSax.xml");
      assertEquals("&M(@&73F;)", retainers0.getLord());
      assertEquals("fiefdomsSax.xml", retainers0.getLocation());
      assertEquals("vassal", retainers0.getRank());
      assertNull(retainers0.getFiefdom());
      assertNotNull(retainers0);
      
      boolean boolean2 = arrayList0.add((Player) knight0);
      assertTrue(boolean2);
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.isEmpty());
      assertEquals(2, arrayList0.size());
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getwound());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getScore());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.getDead());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      retainers0.setLord("TEegV.z6b;X4r\"#8p");
      assertEquals("TEegV.z6b;X4r\"#8p", retainers0.getLord());
      assertEquals("fiefdomsSax.xml", retainers0.getLocation());
      assertEquals("vassal", retainers0.getRank());
      assertNull(retainers0.getFiefdom());
      
      retainers0.setFiefdom("TEegV.z6b;X4r\"#8p");
      assertEquals("TEegV.z6b;X4r\"#8p", retainers0.getLord());
      assertEquals("fiefdomsSax.xml", retainers0.getLocation());
      assertEquals("TEegV.z6b;X4r\"#8p", retainers0.getFiefdom());
      assertEquals("vassal", retainers0.getRank());
      
      boolean boolean3 = arrayList0.add((Player) retainers0);
      assertTrue(boolean3);
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.isEmpty());
      assertEquals(3, arrayList0.size());
      assertEquals("TEegV.z6b;X4r\"#8p", retainers0.getLord());
      assertEquals("fiefdomsSax.xml", retainers0.getLocation());
      assertEquals("TEegV.z6b;X4r\"#8p", retainers0.getFiefdom());
      assertEquals("vassal", retainers0.getRank());
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      
      boolean boolean4 = arrayList0.add((Player) retainers0);
      assertTrue(boolean4);
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.isEmpty());
      assertEquals(4, arrayList0.size());
      assertEquals("TEegV.z6b;X4r\"#8p", retainers0.getLord());
      assertEquals("fiefdomsSax.xml", retainers0.getLocation());
      assertEquals("TEegV.z6b;X4r\"#8p", retainers0.getFiefdom());
      assertEquals("vassal", retainers0.getRank());
      assertFalse(boolean4 == boolean0);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean2);
      
      fiefdoms0.setVassalsList(arrayList0);
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.isEmpty());
      assertEquals(4, arrayList0.size());
      
      fiefdoms0.buyPersonalCastles((-1964));
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getViking();
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      
      ArrayList<String> arrayList2 = fiefdoms0.getInvaderType();
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(arrayList2);
      
      ArrayList<String> arrayList3 = fiefdoms0.getNeighbors();
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(arrayList3);
      
      ArrayList<Player> arrayList4 = fiefdoms0.getVassalsList();
      assertSame(arrayList4, arrayList0);
      assertFalse(arrayList4.isEmpty());
      assertEquals(4, arrayList4.size());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(arrayList4);
      
      ArrayList<Intruders> arrayList5 = fiefdoms0.getMagyar();
      assertNotSame(arrayList5, arrayList1);
      assertEquals(0, arrayList5.size());
      assertTrue(arrayList5.isEmpty());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(arrayList5);
      assertTrue(arrayList5.equals((Object)arrayList1));
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray0.length);
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArray0);
      
      ArrayList<Vassals> arrayList6 = fiefdoms0.getRebelliousVassals();
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, arrayList6.size());
      assertTrue(arrayList6.isEmpty());
      assertNotNull(arrayList6);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setViking((ArrayList<Intruders>) null);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNotNull(fiefdoms0);
      
      int int0 = fiefdoms0.getPeasants();
      assertEquals(0, int0);
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Knight knight0 = new Knight();
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getTotalMoney());
      assertNotNull(knight0);
      
      ArrayList<String> arrayList0 = knight0.conversation;
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      boolean boolean0 = arrayList0.add("\"cs");
      assertTrue(boolean0);
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertTrue(arrayList0.contains("\"cs"));
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, "", "", 685, true, arrayList0);
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(685, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(fiefdoms0);
      assertTrue(arrayList0.contains("\"cs"));
      assertFalse(arrayList0.contains(""));
      
      fiefdoms0.setRebelliousVassals(685, true);
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(685, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(arrayList0.contains("\"cs"));
      assertFalse(arrayList0.contains(""));
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMuslim();
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(685, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      assertTrue(arrayList0.contains("\"cs"));
      assertFalse(arrayList0.contains(""));
      
      LinkedList<Knight> linkedList0 = new LinkedList<Knight>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      assertFalse(linkedList0.contains(knight0));
      
      boolean boolean1 = linkedList0.add(knight0);
      assertTrue(boolean1);
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(1, linkedList0.size());
      assertTrue(boolean1 == boolean0);
      assertTrue(linkedList0.contains(knight0));
      
      Fiefdoms fiefdoms1 = new Fiefdoms();
      assertEquals(0, fiefdoms1.getValue());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getOwner());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getName());
      assertNotNull(fiefdoms1);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      
      fiefdoms0.setLoyalVassals(792, false);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertNull(knight0.getPassword());
      assertEquals(0, knight0.getWounds());
      assertEquals("knight", knight0.getRank());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getKill());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals(0, knight0.getKills());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getName());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getwound());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(685, fiefdoms0.getValue());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals("", fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      assertTrue(arrayList0.contains("\"cs"));
      assertFalse(arrayList0.contains(""));
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNotNull(fiefdoms0);
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMagyar();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      
      int int0 = fiefdoms0.getPersonalCastles();
      assertEquals(0, int0);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(fiefdoms0);
      
      ArrayList<Vassals> arrayList0 = fiefdoms0.getLoyalVassals();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      
      ArrayList<Vassals> arrayList0 = fiefdoms0.loyalVassals;
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      fiefdoms0.setRebelliousVassals(arrayList0);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      ArrayList<String> arrayList1 = fiefdoms0.getInvaderType();
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(arrayList1);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms((ArrayList<String>) null, "muslim", "muslim", 1475, true, (ArrayList<String>) null);
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals(1475, fiefdoms0.getValue());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setConqueror("");
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals(1475, fiefdoms0.getValue());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getViking();
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals(1475, fiefdoms0.getValue());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      Intruders intruders0 = new Intruders();
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getLocation());
      assertNotNull(intruders0);
      
      intruders0.setLocation("8oRc_");
      assertEquals("8oRc_", intruders0.getLocation());
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      
      intruders0.setLocation("");
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      assertEquals("", intruders0.getLocation());
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMuslim();
      assertNotSame(arrayList1, arrayList0);
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals(1475, fiefdoms0.getValue());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1475, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      assertFalse(arrayList1.equals((Object)arrayList0));
      assertFalse(arrayList1.contains(intruders0));
      
      boolean boolean0 = arrayList0.add(intruders0);
      assertNotSame(arrayList0, arrayList1);
      assertTrue(boolean0);
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals(1475, fiefdoms0.getValue());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(intruders0.getType());
      assertNull(intruders0.getRank());
      assertEquals("", intruders0.getLocation());
      assertFalse(arrayList0.equals((Object)arrayList1));
      assertTrue(arrayList0.contains(intruders0));
      
      fiefdoms0.setMuslim(arrayList0);
      assertNotSame(arrayList0, arrayList1);
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals(1475, fiefdoms0.getValue());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertFalse(arrayList0.equals((Object)arrayList1));
      assertTrue(arrayList0.contains(intruders0));
      
      fiefdoms0.setNeighbors((ArrayList<String>) null);
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals(1475, fiefdoms0.getValue());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setName("PwUwV:9J");
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(1475, fiefdoms0.getValue());
      assertEquals("PwUwV:9J", fiefdoms0.getName());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      ArrayList<Intruders> arrayList2 = fiefdoms0.getMagyar();
      assertNotSame(arrayList2, arrayList0);
      assertNotSame(arrayList2, arrayList1);
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(1475, fiefdoms0.getValue());
      assertEquals("PwUwV:9J", fiefdoms0.getName());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertNotNull(arrayList2);
      assertFalse(arrayList2.equals((Object)arrayList0));
      assertFalse(arrayList2.equals((Object)arrayList1));
      assertFalse(arrayList2.contains(intruders0));
      
      ArrayList<String> arrayList3 = fiefdoms0.getNeighbors();
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(1475, fiefdoms0.getValue());
      assertEquals("PwUwV:9J", fiefdoms0.getName());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(arrayList3);
      
      String string0 = fiefdoms0.getName();
      assertEquals("PwUwV:9J", string0);
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(1475, fiefdoms0.getValue());
      assertEquals("PwUwV:9J", fiefdoms0.getName());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(string0);
      
      String string1 = fiefdoms0.getOwner();
      assertEquals("muslim", string1);
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(1475, fiefdoms0.getValue());
      assertEquals("PwUwV:9J", fiefdoms0.getName());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      
      ArrayList<Player> arrayList4 = fiefdoms0.getVassalsList();
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(1475, fiefdoms0.getValue());
      assertEquals("PwUwV:9J", fiefdoms0.getName());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(arrayList4);
      
      ArrayList<Intruders> arrayList5 = fiefdoms0.getViking();
      assertSame(arrayList5, arrayList0);
      assertNotSame(arrayList5, arrayList1);
      assertNotSame(arrayList5, arrayList2);
      assertFalse(arrayList5.isEmpty());
      assertEquals(1, arrayList5.size());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(1475, fiefdoms0.getValue());
      assertEquals("PwUwV:9J", fiefdoms0.getName());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(arrayList5);
      assertFalse(arrayList5.equals((Object)arrayList1));
      assertFalse(arrayList5.equals((Object)arrayList2));
      assertTrue(arrayList5.contains(intruders0));
      
      fiefdoms0.setPersonalCastles(1475);
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(1475, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1475, fiefdoms0.getValue());
      assertEquals("PwUwV:9J", fiefdoms0.getName());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      fiefdoms0.setPeasants(1475);
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(1475, fiefdoms0.getPersonalCastles());
      assertEquals(1475, fiefdoms0.getValue());
      assertEquals("PwUwV:9J", fiefdoms0.getName());
      assertEquals(1475, fiefdoms0.getPeasants());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      
      String string2 = fiefdoms0.getName();
      assertEquals("PwUwV:9J", string2);
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(1475, fiefdoms0.getPersonalCastles());
      assertEquals(1475, fiefdoms0.getValue());
      assertEquals("PwUwV:9J", fiefdoms0.getName());
      assertEquals(1475, fiefdoms0.getPeasants());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string1));
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      float[] floatArray0 = new float[8];
      floatArray0[0] = (float) (-2250);
      floatArray0[1] = (float) 282;
      floatArray0[2] = (float) 282;
      floatArray0[3] = (float) (-2250);
      floatArray0[4] = (float) (-2250);
      floatArray0[5] = (float) (-2250);
      floatArray0[6] = (float) (-2250);
      floatArray0[7] = (float) 282;
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNotNull(fiefdoms0);
      
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      fiefdoms0.setInvaderType(arrayList0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      int int0 = fiefdoms0.getPeasants();
      assertEquals(0, int0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      boolean boolean0 = fiefdoms0.isKingdom();
      assertFalse(boolean0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      ArrayList<Vassals> arrayList1 = fiefdoms0.getLoyalVassals();
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      
      fiefdoms0.buyFiefdomCastles((-2603));
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      fiefdoms0.buyFiefdomCastles(0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      
      ArrayList<String> arrayList2 = fiefdoms0.getInvaderType();
      assertSame(arrayList2, arrayList0);
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNotNull(arrayList2);
      
      ArrayList<Intruders> arrayList3 = fiefdoms0.getMuslim();
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, arrayList3.size());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertNotNull(arrayList3);
      
      boolean boolean1 = fiefdoms0.isKingdom();
      assertFalse(boolean1);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setFiefdomCastles(false);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      
      byte[] byteArray0 = fiefdoms0.getSelectioncolor();
      assertEquals(3, byteArray0.length);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getOwner());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals((-1), fiefdoms0.getFiefdomCastles());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      
      byte[] byteArray0 = new byte[4];
      fiefdoms0.setSelectioncolor(byteArray0);
      assertEquals(4, byteArray0.length);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getName());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      float[] floatArray0 = new float[8];
      floatArray0[0] = (float) (-2250);
      floatArray0[1] = (float) 282;
      floatArray0[2] = (float) 282;
      floatArray0[3] = (float) (-2250);
      floatArray0[4] = (float) (-2250);
      floatArray0[5] = (float) (-2250);
      floatArray0[6] = (float) (-2250);
      floatArray0[7] = (float) 282;
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotNull(fiefdoms0);
      
      int int0 = fiefdoms0.getPeasants();
      assertEquals(0, int0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      boolean boolean0 = fiefdoms0.isKingdom();
      assertFalse(boolean0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<Vassals> arrayList0 = fiefdoms0.getLoyalVassals();
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMagyar();
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      
      ArrayList<Intruders> arrayList2 = fiefdoms0.getMagyar();
      assertSame(arrayList2, arrayList1);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertNotNull(arrayList2);
      
      Fiefdoms fiefdoms1 = new Fiefdoms();
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertNull(fiefdoms1.getOwner());
      assertNotNull(fiefdoms1);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      
      fiefdoms0.buyPersonalCastles(0);
      assertNotSame(fiefdoms0, fiefdoms1);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      
      String string0 = fiefdoms0.getOwner();
      assertNotSame(fiefdoms0, fiefdoms1);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(string0);
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      
      ArrayList<Vassals> arrayList3 = fiefdoms1.getRebelliousVassals();
      assertNotSame(arrayList3, arrayList0);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertNull(fiefdoms1.getOwner());
      assertNotNull(arrayList3);
      assertTrue(arrayList3.equals((Object)arrayList0));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      
      ArrayList<Vassals> arrayList4 = fiefdoms1.getLoyalVassals();
      assertNotSame(arrayList4, arrayList0);
      assertNotSame(arrayList4, arrayList3);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertTrue(arrayList4.isEmpty());
      assertEquals(0, arrayList4.size());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getValue());
      assertEquals(0, fiefdoms1.getPeasants());
      assertNull(fiefdoms1.getName());
      assertNull(fiefdoms1.getOwner());
      assertNotNull(arrayList4);
      assertTrue(arrayList4.equals((Object)arrayList3));
      assertTrue(arrayList4.equals((Object)arrayList0));
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setConqueror("");
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getViking();
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      Intruders intruders0 = new Intruders();
      assertNull(intruders0.getLocation());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getType());
      assertNotNull(intruders0);
      
      intruders0.setLocation("8HRc^");
      assertEquals("8HRc^", intruders0.getLocation());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getType());
      
      intruders0.setLocation("");
      assertEquals("", intruders0.getLocation());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getType());
      
      fiefdoms0.setKingdom(true);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      
      float[] floatArray0 = fiefdoms0.getShaderColor();
      assertEquals(2, floatArray0.length);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertArrayEquals(new float[] {0.0F, 0.0F}, floatArray0, 0.01F);
      assertNotNull(floatArray0);
      
      String string0 = fiefdoms0.getConqueror();
      assertEquals("", string0);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNotNull(string0);
      
      boolean boolean0 = fiefdoms0.isKingdom();
      assertTrue(boolean0);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      
      int int0 = fiefdoms0.getFiefdomCastles();
      assertEquals(0, int0);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      
      fiefdoms0.setValue(1238);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(1238, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      
      ArrayList<Intruders> arrayList1 = fiefdoms0.getMuslim();
      assertNotSame(arrayList1, arrayList0);
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(1238, fiefdoms0.getValue());
      assertEquals("", fiefdoms0.getConqueror());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      assertTrue(arrayList1.equals((Object)arrayList0));
      assertFalse(arrayList1.contains(intruders0));
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setRebelliousVassals(1, true);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      
      ArrayList<Vassals> arrayList0 = fiefdoms0.getRebelliousVassals();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms((ArrayList<String>) null, "Sx#", "muslim", 1, true, (ArrayList<String>) null);
      assertEquals("Sx#", fiefdoms0.getName());
      assertEquals(1, fiefdoms0.getValue());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setOwner("Sx#");
      assertEquals("Sx#", fiefdoms0.getName());
      assertEquals(1, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("Sx#", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setRebelliousVassals(3, false);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getViking();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Knight knight0 = new Knight("S52", (String) null, "S52");
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals("S52", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals("S52", knight0.getName());
      assertNotNull(knight0);
      
      ArrayList<String> arrayList0 = knight0.getVotes();
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals("S52", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals("S52", knight0.getName());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      assertFalse(arrayList0.contains("S52"));
      
      boolean boolean0 = arrayList0.add((String) null);
      assertTrue(boolean0);
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals("S52", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals("S52", knight0.getName());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertFalse(arrayList0.contains("S52"));
      
      Fiefdoms fiefdoms0 = new Fiefdoms(arrayList0, (String) null, (String) null, 1, false, arrayList0);
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals("S52", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals("S52", knight0.getName());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(fiefdoms0);
      assertFalse(arrayList0.contains("S52"));
      
      ArrayList<Vassals> arrayList1 = fiefdoms0.getLoyalVassals();
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals("S52", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals("S52", knight0.getName());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      assertFalse(arrayList0.contains("S52"));
      
      arrayList1.trimToSize();
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals("S52", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals("S52", knight0.getName());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(1, arrayList1.size());
      assertFalse(arrayList1.isEmpty());
      assertFalse(arrayList0.contains("S52"));
      
      Vassals vassals0 = new Vassals("8b&qGXKV5mT!D^Pb3?", (String) null);
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertNull(vassals0.getLocation());
      assertEquals("8b&qGXKV5mT!D^Pb3?", vassals0.getLord());
      assertNotNull(vassals0);
      
      boolean boolean1 = arrayList1.add(vassals0);
      assertTrue(boolean1);
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals("S52", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals("S52", knight0.getName());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList1.isEmpty());
      assertEquals(2, arrayList1.size());
      assertNull(vassals0.getFiefdom());
      assertEquals("vassal", vassals0.getRank());
      assertNull(vassals0.getLocation());
      assertEquals("8b&qGXKV5mT!D^Pb3?", vassals0.getLord());
      assertTrue(boolean1 == boolean0);
      assertFalse(arrayList0.contains("S52"));
      assertTrue(arrayList1.contains(vassals0));
      
      fiefdoms0.setRebelliousVassals(arrayList1);
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals("S52", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals("S52", knight0.getName());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList1.isEmpty());
      assertEquals(2, arrayList1.size());
      assertFalse(arrayList0.contains("S52"));
      assertTrue(arrayList1.contains(vassals0));
      
      fiefdoms0.setConqueror((String) null);
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals("S52", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals("S52", knight0.getName());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.contains("S52"));
      
      fiefdoms0.setViking(1, false);
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals("S52", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals("S52", knight0.getName());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(arrayList0.contains("S52"));
      
      float[] floatArray0 = new float[3];
      floatArray0[0] = (float) 1;
      floatArray0[1] = (float) 1;
      floatArray0[2] = (float) 1;
      fiefdoms0.setShaderColor(floatArray0);
      assertEquals(3, floatArray0.length);
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals("S52", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals("S52", knight0.getName());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertArrayEquals(new float[] {1.0F, 1.0F, 1.0F}, floatArray0, 0.01F);
      assertFalse(arrayList0.contains("S52"));
      
      ArrayList<Vassals> arrayList2 = fiefdoms0.getRebelliousVassals();
      assertSame(arrayList2, arrayList1);
      assertFalse(arrayList2.isEmpty());
      assertEquals(2, arrayList2.size());
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals("S52", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals("S52", knight0.getName());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(arrayList2);
      assertTrue(arrayList2.contains(vassals0));
      assertFalse(arrayList0.contains("S52"));
      
      ArrayList<Vassals> arrayList3 = fiefdoms0.getLoyalVassals();
      assertSame(arrayList3, arrayList1);
      assertSame(arrayList3, arrayList2);
      assertFalse(knight0.getDead());
      assertEquals(0, knight0.getKill());
      assertFalse(knight0.isDead());
      assertEquals(0, knight0.getWounds());
      assertEquals(0, knight0.getKills());
      assertEquals("S52", knight0.getPassword());
      assertEquals(0, knight0.getHitsCounter());
      assertEquals("Ile-De-France", knight0.getLocation());
      assertEquals(0, knight0.getRebellionCounter());
      assertNull(knight0.getRank());
      assertEquals(0, knight0.getScore());
      assertEquals(0, knight0.getTotalMoney());
      assertEquals("", knight0.getOrder());
      assertEquals(0, knight0.getwound());
      assertEquals("S52", knight0.getName());
      assertFalse(arrayList3.isEmpty());
      assertEquals(2, arrayList3.size());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNotNull(arrayList3);
      assertTrue(arrayList3.contains(vassals0));
      assertFalse(arrayList0.contains("S52"));
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      assertFalse(boolean0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      Fiefdoms fiefdoms1 = new Fiefdoms();
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertNotNull(fiefdoms1);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      
      String string0 = ".";
      fiefdoms1.setSelectioncolor((byte[]) null);
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertFalse(fiefdoms1.isKingdom());
      assertNull(fiefdoms1.getOwner());
      assertNull(fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPeasants());
      assertEquals(0, fiefdoms1.getValue());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      
      fiefdoms0.setOwner("src.Retainers");
      assertNotSame(fiefdoms0, fiefdoms1);
      assertEquals(0, fiefdoms0.getValue());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(fiefdoms0.getConqueror());
      assertEquals("src.Retainers", fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertFalse(fiefdoms0.equals((Object)fiefdoms1));
      
      // Undeclared exception!
      fiefdoms0.setViking(2147483645, true);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setMagyar(848, false);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMuslim();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      fiefdoms0.setMuslim((-630), false);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      
      byte[] byteArray0 = new byte[2];
      float[] floatArray0 = new float[0];
      fiefdoms0.setShaderColor(floatArray0);
      assertEquals(0, floatArray0.length);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertArrayEquals(new float[] {}, floatArray0, 0.01F);
      
      byteArray0[0] = (byte) (-8);
      byteArray0[1] = (byte)41;
      fiefdoms0.setSelectioncolor(byteArray0);
      assertEquals(2, byteArray0.length);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertArrayEquals(new byte[] {(byte) (-8), (byte)41}, byteArray0);
      
      ArrayList<Vassals> arrayList1 = fiefdoms0.getRebelliousVassals();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      
      ListIterator<Vassals> listIterator0 = arrayList1.listIterator();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertFalse(listIterator0.hasPrevious());
      assertFalse(listIterator0.hasNext());
      assertNotNull(listIterator0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      assertNotNull(fileSystemHandling1);
      assertFalse(fileSystemHandling1.equals((Object)fileSystemHandling0));
      
      fiefdoms0.setViking((int) (byte)41, false);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      
      fiefdoms0.setSelectioncolor((byte[]) null);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      
      int int0 = fiefdoms0.getPersonalCastles();
      assertEquals(0, int0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      
      ArrayList<String> arrayList2 = fiefdoms0.getInvaderType();
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertNull(arrayList2);
      
      ArrayList<Vassals> arrayList3 = fiefdoms0.getLoyalVassals();
      assertNotSame(arrayList3, arrayList1);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertNotNull(arrayList3);
      assertTrue(arrayList3.equals((Object)arrayList1));
      
      fiefdoms0.setPeasants((byte)41);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(41, fiefdoms0.getPeasants());
      
      int int1 = fiefdoms0.getValue();
      assertEquals(0, int1);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(41, fiefdoms0.getPeasants());
      assertTrue(int1 == int0);
      
      float[] floatArray1 = fiefdoms0.getShaderColor();
      assertSame(floatArray1, floatArray0);
      assertEquals(0, floatArray1.length);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(41, fiefdoms0.getPeasants());
      assertArrayEquals(new float[] {}, floatArray1, 0.01F);
      assertNotNull(floatArray1);
      
      boolean boolean1 = arrayList3.add((Vassals) null);
      assertNotSame(arrayList3, arrayList1);
      assertTrue(boolean1);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(41, fiefdoms0.getPeasants());
      assertFalse(arrayList3.isEmpty());
      assertEquals(1, arrayList3.size());
      assertFalse(arrayList3.equals((Object)arrayList1));
      assertFalse(boolean1 == boolean0);
      
      ArrayList<String> arrayList4 = fiefdoms0.getNeighbors();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(41, fiefdoms0.getPeasants());
      assertNull(arrayList4);
      
      ArrayList<String> arrayList5 = fiefdoms0.getInvaderType();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(41, fiefdoms0.getPeasants());
      assertNull(arrayList5);
      
      ArrayList<Player> arrayList6 = fiefdoms0.getVassalsList();
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(41, fiefdoms0.getPeasants());
      assertNull(arrayList6);
      
      int int2 = fiefdoms0.getPersonalCastles();
      assertEquals(0, int2);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(41, fiefdoms0.getPeasants());
      assertTrue(int2 == int0);
      assertTrue(int2 == int1);
      
      ArrayList<Vassals> arrayList7 = fiefdoms0.getLoyalVassals();
      assertNotSame(arrayList7, arrayList1);
      assertSame(arrayList7, arrayList3);
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(41, fiefdoms0.getPeasants());
      assertEquals(1, arrayList7.size());
      assertFalse(arrayList7.isEmpty());
      assertNotNull(arrayList7);
      assertFalse(arrayList7.equals((Object)arrayList1));
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotNull(fiefdoms0);
      
      boolean boolean0 = fiefdoms0.isKingdom();
      assertFalse(boolean0);
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMagyar();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      ArrayList<String> arrayList1 = fiefdoms0.getInvaderType();
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getValue());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(arrayList1);
      
      Fiefdoms fiefdoms1 = new Fiefdoms((ArrayList<String>) null, "bedyd8n4o),", "bedyd8n4o),", (-263), false, (ArrayList<String>) null);
      assertEquals(0, fiefdoms1.getPeasants());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertNull(fiefdoms1.getConqueror());
      assertEquals("bedyd8n4o),", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals("bedyd8n4o),", fiefdoms1.getOwner());
      assertEquals((-263), fiefdoms1.getValue());
      assertNotNull(fiefdoms1);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      
      fiefdoms1.setConqueror("4>^sMFUp");
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals(0, fiefdoms1.getPeasants());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("4>^sMFUp", fiefdoms1.getConqueror());
      assertEquals("bedyd8n4o),", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals("bedyd8n4o),", fiefdoms1.getOwner());
      assertEquals((-263), fiefdoms1.getValue());
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
      
      String string0 = fiefdoms1.getConqueror();
      assertNotSame(fiefdoms1, fiefdoms0);
      assertEquals("4>^sMFUp", string0);
      assertEquals(0, fiefdoms1.getPeasants());
      assertFalse(fiefdoms1.isKingdom());
      assertEquals(0, fiefdoms1.getFiefdomCastles());
      assertEquals("4>^sMFUp", fiefdoms1.getConqueror());
      assertEquals("bedyd8n4o),", fiefdoms1.getName());
      assertEquals(0, fiefdoms1.getPersonalCastles());
      assertEquals("bedyd8n4o),", fiefdoms1.getOwner());
      assertEquals((-263), fiefdoms1.getValue());
      assertNotNull(string0);
      assertFalse(fiefdoms1.equals((Object)fiefdoms0));
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNotNull(fiefdoms0);
      
      ArrayList<Player> arrayList0 = new ArrayList<Player>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      Mercenaries mercenaries0 = new Mercenaries("(3&D7A]<6;QB", "");
      assertEquals("", mercenaries0.getLocation());
      assertEquals("(3&D7A]<6;QB", mercenaries0.getLord());
      assertNull(mercenaries0.getFiefdom());
      assertEquals("vassal", mercenaries0.getRank());
      assertNotNull(mercenaries0);
      
      String string0 = mercenaries0.getRank();
      assertEquals("vassal", string0);
      assertEquals("", mercenaries0.getLocation());
      assertEquals("(3&D7A]<6;QB", mercenaries0.getLord());
      assertNull(mercenaries0.getFiefdom());
      assertEquals("vassal", mercenaries0.getRank());
      assertNotNull(string0);
      
      String string1 = mercenaries0.getRank();
      assertEquals("vassal", string1);
      assertEquals("", mercenaries0.getLocation());
      assertEquals("(3&D7A]<6;QB", mercenaries0.getLord());
      assertNull(mercenaries0.getFiefdom());
      assertEquals("vassal", mercenaries0.getRank());
      assertNotNull(string1);
      
      boolean boolean0 = arrayList0.add((Player) mercenaries0);
      assertTrue(boolean0);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      assertEquals("", mercenaries0.getLocation());
      assertEquals("(3&D7A]<6;QB", mercenaries0.getLord());
      assertNull(mercenaries0.getFiefdom());
      assertEquals("vassal", mercenaries0.getRank());
      
      fiefdoms0.setVassalsList(arrayList0);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
      
      fiefdoms0.setInvaderType((ArrayList<String>) null);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setNeighbors((ArrayList<String>) null);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      fiefdoms0.setFiefdomCastles(1346);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1346, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      
      ArrayList<String> arrayList1 = fiefdoms0.getNeighbors();
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1346, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertNull(arrayList1);
      
      boolean boolean1 = fiefdoms0.isKingdom();
      assertFalse(boolean1);
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(1346, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms();
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertNotNull(fiefdoms0);
      
      boolean boolean0 = fiefdoms0.isKingdom();
      assertFalse(boolean0);
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getMagyar();
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      fiefdoms0.setLoyalVassals((-936), true);
      assertNull(fiefdoms0.getName());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getOwner());
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getValue());
      assertNull(fiefdoms0.getConqueror());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      Fiefdoms fiefdoms0 = new Fiefdoms((ArrayList<String>) null, "muslim", "muslim", 1475, false, (ArrayList<String>) null);
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertNull(fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals(1475, fiefdoms0.getValue());
      assertNotNull(fiefdoms0);
      
      fiefdoms0.setConqueror("");
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals(1475, fiefdoms0.getValue());
      
      ArrayList<Intruders> arrayList0 = fiefdoms0.getViking();
      assertEquals(0, fiefdoms0.getPeasants());
      assertFalse(fiefdoms0.isKingdom());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals("muslim", fiefdoms0.getName());
      assertEquals(1475, fiefdoms0.getValue());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      Intruders intruders0 = new Intruders();
      assertNull(intruders0.getLocation());
      assertNull(intruders0.getRank());
      assertNull(intruders0.getType());
      assertNotNull(intruders0);
      
      intruders0.setType("c=gil&=^q?mlpwj]");
      assertNull(intruders0.getLocation());
      assertNull(intruders0.getRank());
      assertEquals("c=gil&=^q?mlpwj]", intruders0.getType());
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      intruders0.setLocation("8HRc^");
      assertEquals("8HRc^", intruders0.getLocation());
      assertNull(intruders0.getRank());
      assertEquals("c=gil&=^q?mlpwj]", intruders0.getType());
      
      intruders0.setLocation("");
      assertEquals("", intruders0.getLocation());
      assertNull(intruders0.getRank());
      assertEquals("c=gil&=^q?mlpwj]", intruders0.getType());
      
      fiefdoms0.setKingdom(true);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals("muslim", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(1475, fiefdoms0.getValue());
      
      intruders0.setType("<&uM,r5-QSmdu`vcKyI");
      assertEquals("", intruders0.getLocation());
      assertEquals("<&uM,r5-QSmdu`vcKyI", intruders0.getType());
      assertNull(intruders0.getRank());
      
      intruders0.setLocation("8HRc^");
      assertEquals("<&uM,r5-QSmdu`vcKyI", intruders0.getType());
      assertEquals("8HRc^", intruders0.getLocation());
      assertNull(intruders0.getRank());
      
      boolean boolean0 = arrayList0.add(intruders0);
      assertTrue(boolean0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals("muslim", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(1475, fiefdoms0.getValue());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertEquals("<&uM,r5-QSmdu`vcKyI", intruders0.getType());
      assertEquals("8HRc^", intruders0.getLocation());
      assertNull(intruders0.getRank());
      assertTrue(arrayList0.contains(intruders0));
      
      fiefdoms0.setViking(arrayList0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals("muslim", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(1475, fiefdoms0.getValue());
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
      assertTrue(arrayList0.contains(intruders0));
      
      ArrayList<Vassals> arrayList1 = fiefdoms0.loyalVassals;
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      
      int int0 = fiefdoms0.getFiefdomCastles();
      assertEquals(0, int0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals("muslim", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(1475, fiefdoms0.getValue());
      
      String string0 = fiefdoms0.getName();
      assertEquals("muslim", string0);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals("", fiefdoms0.getConqueror());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals("muslim", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(1475, fiefdoms0.getValue());
      assertNotNull(string0);
      
      fiefdoms0.setConqueror("muslim");
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals("muslim", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(1475, fiefdoms0.getValue());
      assertEquals("muslim", fiefdoms0.getConqueror());
      
      fiefdoms0.buyFiefdomCastles(1475);
      assertEquals(0, fiefdoms0.getPeasants());
      assertEquals(0, fiefdoms0.getFiefdomCastles());
      assertEquals(0, fiefdoms0.getPersonalCastles());
      assertEquals("muslim", fiefdoms0.getOwner());
      assertEquals("muslim", fiefdoms0.getName());
      assertTrue(fiefdoms0.isKingdom());
      assertEquals(1475, fiefdoms0.getValue());
      assertEquals("muslim", fiefdoms0.getConqueror());
  }
}
