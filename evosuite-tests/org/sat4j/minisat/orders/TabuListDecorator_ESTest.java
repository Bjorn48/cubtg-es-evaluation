/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 19 15:54:55 GMT 2019
 */

package org.sat4j.minisat.orders;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;
import org.sat4j.minisat.constraints.cnf.Lits;
import org.sat4j.minisat.core.ILits;
import org.sat4j.minisat.core.IPhaseSelectionStrategy;
import org.sat4j.minisat.orders.LevelBasedVarOrderHeap;
import org.sat4j.minisat.orders.PhaseInLastLearnedClauseSelectionStrategy;
import org.sat4j.minisat.orders.PureOrder;
import org.sat4j.minisat.orders.RandomLiteralSelectionStrategy;
import org.sat4j.minisat.orders.SubsetVarOrder;
import org.sat4j.minisat.orders.TabuListDecorator;
import org.sat4j.minisat.orders.VarOrderHeap;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TabuListDecorator_ESTest extends TabuListDecorator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IPhaseSelectionStrategy iPhaseSelectionStrategy0 = mock(IPhaseSelectionStrategy.class, new ViolatedAssumptionAnswer());
      LevelBasedVarOrderHeap levelBasedVarOrderHeap0 = new LevelBasedVarOrderHeap(iPhaseSelectionStrategy0);
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(levelBasedVarOrderHeap0);
      // Undeclared exception!
      try { 
        tabuListDecorator0.undo((-1946));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.orders.VarOrderHeap", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator((VarOrderHeap) null, (-1));
      tabuListDecorator0.undo((-1));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PureOrder pureOrder0 = new PureOrder();
      Lits lits0 = new Lits();
      pureOrder0.setLits(lits0);
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(pureOrder0, 7);
      pureOrder0.init();
      tabuListDecorator0.undo((-1));
      // Undeclared exception!
      try { 
        tabuListDecorator0.select();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.orders.TabuListDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[5];
      SubsetVarOrder subsetVarOrder0 = new SubsetVarOrder(intArray0);
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(subsetVarOrder0, 0);
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, false);
      tabuListDecorator0.printStat(mockPrintWriter0, "");
      assertEquals("tabu list size\t: 0\nnon guided choices\t: 0\n", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VarOrderHeap varOrderHeap0 = new VarOrderHeap();
      Lits lits0 = new Lits();
      varOrderHeap0.lits = (ILits) lits0;
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(varOrderHeap0);
      tabuListDecorator0.init();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LevelBasedVarOrderHeap levelBasedVarOrderHeap0 = new LevelBasedVarOrderHeap();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(levelBasedVarOrderHeap0, 0);
      tabuListDecorator0.assignLiteral(0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PureOrder pureOrder0 = new PureOrder();
      Lits lits0 = new Lits();
      pureOrder0.setLits(lits0);
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(pureOrder0, 10);
      pureOrder0.init();
      tabuListDecorator0.updateVar(0);
      tabuListDecorator0.updateVar(0);
      double double0 = tabuListDecorator0.varActivity(0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PureOrder pureOrder0 = new PureOrder();
      Lits lits0 = new Lits();
      pureOrder0.setLits(lits0);
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(pureOrder0, 20);
      pureOrder0.init();
      double double0 = tabuListDecorator0.varActivity(1);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PureOrder pureOrder0 = new PureOrder();
      Lits lits0 = new Lits();
      pureOrder0.setLits(lits0);
      pureOrder0.init();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(pureOrder0, 7);
      RandomLiteralSelectionStrategy randomLiteralSelectionStrategy0 = new RandomLiteralSelectionStrategy();
      pureOrder0.setPhaseSelectionStrategy(randomLiteralSelectionStrategy0);
      tabuListDecorator0.undo(0);
      int int0 = tabuListDecorator0.select();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VarOrderHeap varOrderHeap0 = new VarOrderHeap();
      varOrderHeap0.activity = null;
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(varOrderHeap0);
      double[] doubleArray0 = tabuListDecorator0.getVariableHeuristics();
      assertNull(doubleArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator((VarOrderHeap) null, 0);
      // Undeclared exception!
      try { 
        tabuListDecorator0.varDecayActivity();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.orders.TabuListDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator((VarOrderHeap) null);
      // Undeclared exception!
      try { 
        tabuListDecorator0.varActivity(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.orders.TabuListDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LevelBasedVarOrderHeap levelBasedVarOrderHeap0 = new LevelBasedVarOrderHeap();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(levelBasedVarOrderHeap0);
      // Undeclared exception!
      try { 
        tabuListDecorator0.varActivity(1245);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 622
         //
         verifyException("org.sat4j.minisat.orders.VarOrderHeap", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator((VarOrderHeap) null);
      // Undeclared exception!
      try { 
        tabuListDecorator0.updateVarAtDecisionLevel(43);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.orders.TabuListDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VarOrderHeap varOrderHeap0 = new VarOrderHeap();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(varOrderHeap0);
      // Undeclared exception!
      try { 
        tabuListDecorator0.updateVar(764);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 382
         //
         verifyException("org.sat4j.minisat.orders.VarOrderHeap", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PureOrder pureOrder0 = new PureOrder();
      Lits lits0 = new Lits();
      pureOrder0.setLits(lits0);
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(pureOrder0, 7);
      pureOrder0.init();
      // Undeclared exception!
      try { 
        tabuListDecorator0.undo(7);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.sat4j.core.VecInt", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator((VarOrderHeap) null);
      // Undeclared exception!
      try { 
        tabuListDecorator0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.orders.TabuListDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator((VarOrderHeap) null, 0);
      // Undeclared exception!
      try { 
        tabuListDecorator0.setVarDecay(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.orders.TabuListDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator((VarOrderHeap) null);
      PhaseInLastLearnedClauseSelectionStrategy phaseInLastLearnedClauseSelectionStrategy0 = new PhaseInLastLearnedClauseSelectionStrategy();
      // Undeclared exception!
      try { 
        tabuListDecorator0.setPhaseSelectionStrategy(phaseInLastLearnedClauseSelectionStrategy0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.orders.TabuListDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator((VarOrderHeap) null);
      // Undeclared exception!
      try { 
        tabuListDecorator0.setLits((ILits) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.orders.TabuListDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PureOrder pureOrder0 = new PureOrder();
      Lits lits0 = new Lits();
      pureOrder0.setLits(lits0);
      pureOrder0.init();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(pureOrder0, 1);
      tabuListDecorator0.undo(1);
      // Undeclared exception!
      try { 
        tabuListDecorator0.select();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.sat4j.minisat.orders.AbstractPhaserecordingSelectionStrategy", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator((VarOrderHeap) null);
      // Undeclared exception!
      try { 
        tabuListDecorator0.getVariableHeuristics();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.orders.TabuListDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator((VarOrderHeap) null);
      // Undeclared exception!
      try { 
        tabuListDecorator0.getPhaseSelectionStrategy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.orders.TabuListDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VarOrderHeap varOrderHeap0 = new VarOrderHeap();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(varOrderHeap0, 0);
      // Undeclared exception!
      try { 
        tabuListDecorator0.undo(0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PureOrder pureOrder0 = new PureOrder();
      Lits lits0 = new Lits();
      pureOrder0.setLits(lits0);
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(pureOrder0, 10);
      pureOrder0.init();
      int int0 = tabuListDecorator0.select();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PureOrder pureOrder0 = new PureOrder();
      Lits lits0 = new Lits();
      pureOrder0.setLits(lits0);
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(pureOrder0, 10);
      pureOrder0.init();
      tabuListDecorator0.undo(0);
      tabuListDecorator0.select();
      tabuListDecorator0.undo(0);
      // Undeclared exception!
      try { 
        tabuListDecorator0.select();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.orders.TabuListDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VarOrderHeap varOrderHeap0 = new VarOrderHeap();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(varOrderHeap0, (-119));
      tabuListDecorator0.updateVarAtDecisionLevel(1779);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PureOrder pureOrder0 = new PureOrder();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(pureOrder0, 10);
      // Undeclared exception!
      try { 
        tabuListDecorator0.updateVar(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.orders.PhaseInLastLearnedClauseSelectionStrategy", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PureOrder pureOrder0 = new PureOrder();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(pureOrder0, 10);
      String string0 = tabuListDecorator0.toString();
      assertEquals("tries to first branch on a single phase watched unassigned variable (pure literal if using a CB data structure) else VSIDS from MiniSAT with tabu list of size 10", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PureOrder pureOrder0 = new PureOrder();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(pureOrder0, 10);
      double double0 = tabuListDecorator0.varActivity(0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator((VarOrderHeap) null, 0);
      // Undeclared exception!
      try { 
        tabuListDecorator0.assignLiteral(3515);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.orders.TabuListDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PureOrder pureOrder0 = new PureOrder();
      Lits lits0 = new Lits();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(pureOrder0, 20);
      tabuListDecorator0.setLits(lits0);
      assertEquals(0, lits0.nVars());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PureOrder pureOrder0 = new PureOrder();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(pureOrder0, 10);
      double[] doubleArray0 = tabuListDecorator0.getVariableHeuristics();
      assertArrayEquals(new double[] {0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LevelBasedVarOrderHeap levelBasedVarOrderHeap0 = new LevelBasedVarOrderHeap();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(levelBasedVarOrderHeap0);
      // Undeclared exception!
      try { 
        tabuListDecorator0.printStat((PrintWriter) null, "!|kK\"O~| zS|");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.orders.TabuListDecorator", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PureOrder pureOrder0 = new PureOrder();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(pureOrder0, 7);
      tabuListDecorator0.setVarDecay(7);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PureOrder pureOrder0 = new PureOrder();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(pureOrder0);
      tabuListDecorator0.setPhaseSelectionStrategy((IPhaseSelectionStrategy) null);
      IPhaseSelectionStrategy iPhaseSelectionStrategy0 = tabuListDecorator0.getPhaseSelectionStrategy();
      assertNull(iPhaseSelectionStrategy0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VarOrderHeap varOrderHeap0 = new VarOrderHeap();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(varOrderHeap0, (-119));
      tabuListDecorator0.varDecayActivity();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VarOrderHeap varOrderHeap0 = new VarOrderHeap();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(varOrderHeap0);
      // Undeclared exception!
      try { 
        tabuListDecorator0.init();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.orders.VarOrderHeap", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PureOrder pureOrder0 = new PureOrder();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(pureOrder0);
      PhaseInLastLearnedClauseSelectionStrategy phaseInLastLearnedClauseSelectionStrategy0 = (PhaseInLastLearnedClauseSelectionStrategy)tabuListDecorator0.getPhaseSelectionStrategy();
      assertEquals("phase appearing in latest learned clause", phaseInLastLearnedClauseSelectionStrategy0.toString());
  }
}
