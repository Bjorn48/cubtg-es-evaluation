/*
 * This file was automatically generated by EvoSuite
 * Sun Feb 17 13:06:38 GMT 2019
 */

package org.sat4j.minisat.orders;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.sat4j.minisat.constraints.cnf.Lits;
import org.sat4j.minisat.orders.PureOrder;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PureOrder_ESTest extends PureOrder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PureOrder pureOrder0 = new PureOrder();
      Lits lits0 = new Lits();
      pureOrder0.setLits(lits0);
      lits0.getFromPool(1);
      pureOrder0.init();
      int int0 = pureOrder0.select();
      assertEquals(20, pureOrder0.getPeriod());
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PureOrder pureOrder0 = new PureOrder(0);
      int int0 = pureOrder0.getPeriod();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PureOrder pureOrder0 = new PureOrder(1071);
      pureOrder0.setPeriod((-1223));
      int int0 = pureOrder0.getPeriod();
      assertEquals((-1223), int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PureOrder pureOrder0 = new PureOrder();
      Lits lits0 = new Lits();
      pureOrder0.setLits(lits0);
      lits0.satisfies(2);
      lits0.getFromPool(552);
      // Undeclared exception!
      try { 
        pureOrder0.select();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.orders.PureOrder", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PureOrder pureOrder0 = new PureOrder();
      Lits lits0 = new Lits();
      pureOrder0.setLits(lits0);
      pureOrder0.init();
      pureOrder0.select();
      pureOrder0.select();
      assertEquals(20, pureOrder0.getPeriod());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PureOrder pureOrder0 = new PureOrder();
      String string0 = pureOrder0.toString();
      assertEquals("tries to first branch on a single phase watched unassigned variable (pure literal if using a CB data structure) else VSIDS from MiniSAT", string0);
      assertEquals(20, pureOrder0.getPeriod());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PureOrder pureOrder0 = new PureOrder(2);
      int int0 = pureOrder0.getPeriod();
      assertEquals(2, int0);
  }
}
