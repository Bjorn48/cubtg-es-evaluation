/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 25 22:56:53 GMT 2019
 */

package jigl.image.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.swing.JLayeredPane;
import jigl.image.ROI;
import jigl.image.types.BinaryImage;
import jigl.image.types.GrayImage;
import jigl.image.types.ImageKernel;
import jigl.image.types.InterpolatedGrayImage;
import jigl.image.types.KernelType;
import jigl.image.types.RealGrayImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BinaryImage_ESTest extends BinaryImage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byteArray0[0] = (byte) (-60);
      byteArray0[1] = (byte) (-60);
      byteArray0[2] = (byte) (-60);
      byteArray0[3] = (byte)26;
      byteArray0[4] = (byte)26;
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((byte) (-60), (-1812), byteArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(1894, 1894);
      binaryImage0.X();
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(1894, 1894);
      binaryImage0.X();
      binaryImage0.toString();
      ROI rOI0 = new ROI(0, 0, 0, 0);
      rOI0.X();
      rOI0.Y();
      rOI0.uy();
      rOI0.ux();
      Integer integer0 = new Integer(1894);
      rOI0.ux();
      rOI0.ly();
      Integer integer1 = new Integer(1540);
      binaryImage0.copy(rOI0);
      ROI rOI1 = new ROI();
      rOI0.ux();
      rOI1.lx();
      rOI1.ux();
      rOI1.ly();
      rOI1.ux();
      rOI1.ux();
      rOI1.ux();
      rOI1.ly();
      rOI1.ux();
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      int int0 = 1388;
      int int1 = 0;
      binaryImage0.shift(int0, int1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = 739;
      BinaryImage binaryImage0 = new BinaryImage(739, 739);
      byte byte0 = (byte)16;
      Byte byte1 = Byte.valueOf((byte)16);
      Byte.toUnsignedInt((byte)16);
      // Undeclared exception!
      try { 
        binaryImage0.set(739, 739, byte1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 739
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 0);
      BinaryImage binaryImage1 = new BinaryImage();
      Byte byte0 = Byte.valueOf((byte) (-124));
      byte0.byteValue();
      BinaryImage binaryImage2 = new BinaryImage(binaryImage0);
      binaryImage0.getData();
      binaryImage0.shift(0, (byte) (-124));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 487);
      byte byte0 = (byte) (-15);
      Byte.valueOf((byte) (-15));
      Byte.valueOf((byte) (-15));
      byte byte1 = (byte) (-1);
      Byte byte2 = Byte.valueOf((byte) (-1));
      // Undeclared exception!
      try { 
        binaryImage0.set(1955, 464, byte2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1955
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 0);
      binaryImage0.shift(0, 0);
      Byte byte0 = new Byte((byte) (-15));
      Byte.valueOf((byte)110);
      Byte.valueOf((byte)27);
      BinaryImage binaryImage1 = new BinaryImage();
      binaryImage1.max();
      binaryImage1.shift((byte)27, (-1441));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(490, (byte)4);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage1.min();
      Byte byte0 = new Byte((byte)4);
      byte0.byteValue();
      binaryImage0.copy();
      binaryImage1.max();
      ROI rOI0 = new ROI();
      rOI0.ux();
      rOI0.lx();
      ROI rOI1 = new ROI();
      rOI1.ux();
      rOI1.lx();
      rOI1.ux();
      rOI1.ly();
      rOI1.ux();
      rOI1.ux();
      rOI1.ux();
      rOI1.ux();
      rOI1.ly();
      rOI1.ux();
      rOI1.ux();
      rOI0.ux();
      BinaryImage binaryImage2 = new BinaryImage(0, 0);
      // Undeclared exception!
      try { 
        binaryImage1.intersection(binaryImage2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.count();
      ROI rOI0 = new ROI();
      rOI0.ux();
      Integer integer0 = new Integer(0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-30);
      byteArray0[1] = (byte)69;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-1);
      BinaryImage binaryImage1 = new BinaryImage(1, 1, byteArray0);
      BinaryImage binaryImage2 = binaryImage0.intersection(binaryImage1);
      binaryImage0.max();
      binaryImage2.toString();
      ROI rOI1 = new ROI();
      rOI0.ux();
      rOI1.lx();
      rOI1.ux();
      rOI0.ly();
      rOI0.ux();
      rOI1.ux();
      rOI0.ux();
      rOI1.ly();
      // Undeclared exception!
      try { 
        binaryImage2.copy(rOI1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 0);
      BinaryImage binaryImage1 = binaryImage0.shift(0, 0);
      Byte byte0 = new Byte((byte) (-15));
      Byte byte1 = Byte.valueOf((byte)110);
      byte1.byteValue();
      Byte.valueOf((byte)16);
      BinaryImage binaryImage2 = binaryImage1.compliment();
      binaryImage0.intersection(binaryImage2);
      // Undeclared exception!
      try { 
        binaryImage2.get(8, (-2295));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(490, (byte)4);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage1.min();
      Byte byte0 = new Byte((byte)4);
      byte0.byteValue();
      ROI rOI0 = new ROI(0, 0, 0, 0);
      rOI0.X();
      rOI0.Y();
      int int0 = new Integer((byte)4);
      rOI0.X();
      rOI0.Y();
      rOI0.X();
      binaryImage1.intersection(binaryImage0);
      binaryImage0.union(binaryImage1);
      binaryImage0.compliment();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-60);
      byteArray0[1] = (byte) (-60);
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((byte)76, 711, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = 3369;
      int int1 = 172;
      BinaryImage binaryImage0 = new BinaryImage(3369, 172);
      binaryImage0.toString();
      binaryImage0.getJavaImage();
      BinaryImage binaryImage1 = binaryImage0.clear();
      int int2 = (-175);
      byte byte0 = (byte)4;
      Byte byte1 = new Byte(byte0);
      binaryImage0.toString();
      byte byte2 = byte1.byteValue();
      int int3 = 0;
      ROI rOI0 = new ROI(int3, int3, int3, int3);
      rOI0.X();
      rOI0.Y();
      rOI0.uy();
      rOI0.X();
      rOI0.Y();
      rOI0.uy();
      rOI0.X();
      rOI0.Y();
      rOI0.X();
      rOI0.Y();
      binaryImage1.set(int1, int2, (Byte) byte2, rOI0);
      int int4 = 46;
      binaryImage0.shift(int4, int4);
      BinaryImage binaryImage2 = binaryImage0.shift(int0, int4);
      binaryImage2.getData();
      binaryImage0.copy();
      binaryImage2.getJavaImage();
      int int5 = 504;
      int int6 = (-1767);
      binaryImage2.set(int5, int6, byte1, rOI0);
      binaryImage1.clear();
      binaryImage1.getJavaImage();
      int int7 = (-1);
      binaryImage1.set(int7, int2, byte1, rOI0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(490, (byte)4);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage1.min();
      binaryImage1.copy();
      BinaryImage binaryImage2 = binaryImage0.intersection(binaryImage1);
      binaryImage1.max();
      ROI rOI0 = new ROI((byte)4, 3068, (-16777216), 164);
      rOI0.lx();
      rOI0.ux();
      rOI0.ux();
      rOI0.ux();
      BinaryImage binaryImage3 = new BinaryImage(binaryImage0);
      binaryImage2.shift(490, 2);
      BinaryImage binaryImage4 = new BinaryImage(4, 3082);
      // Undeclared exception!
      try { 
        binaryImage3.union(binaryImage4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(40, 40);
      BinaryImage binaryImage1 = binaryImage0.shift(40, 40);
      BinaryImage binaryImage2 = new BinaryImage(40, 40);
      binaryImage1.copy();
      InterpolatedGrayImage interpolatedGrayImage0 = null;
      try {
        interpolatedGrayImage0 = new InterpolatedGrayImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.AbstractArrayImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(490, (byte)4);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage1.min();
      Byte byte0 = new Byte((byte)4);
      byte0.byteValue();
      binaryImage0.getJavaImage();
      ROI rOI0 = new ROI(0, 0, 0, 0);
      rOI0.X();
      rOI0.Y();
      rOI0.uy();
      rOI0.Y();
      rOI0.X();
      BinaryImage binaryImage2 = binaryImage1.intersection(binaryImage0);
      Byte byte1 = Byte.valueOf((byte)96);
      // Undeclared exception!
      try { 
        binaryImage2.set(1, 3, byte1, rOI0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 0);
      BinaryImage binaryImage1 = binaryImage0.shift(2549, 1);
      Byte byte0 = new Byte((byte)49);
      binaryImage1.toString();
      byte0.byteValue();
      ROI rOI0 = new ROI(0, 0, 0, 0);
      rOI0.X();
      rOI0.Y();
      rOI0.uy();
      rOI0.X();
      rOI0.Y();
      rOI0.uy();
      rOI0.X();
      rOI0.Y();
      rOI0.X();
      rOI0.Y();
      // Undeclared exception!
      try { 
        binaryImage1.set(0, (-782), (Byte) (byte)49, rOI0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      Byte byte0 = new Byte((byte) (-77));
      byte0.byteValue();
      BinaryImage binaryImage1 = binaryImage0.intersection(binaryImage0);
      binaryImage0.union(binaryImage1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(1894, 1894);
      binaryImage0.X();
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(1894, 1894);
      binaryImage0.X();
      binaryImage0.toString();
      ROI rOI0 = new ROI(0, 0, 0, 0);
      rOI0.X();
      rOI0.Y();
      rOI0.uy();
      rOI0.X();
      rOI0.Y();
      rOI0.uy();
      rOI0.X();
      rOI0.Y();
      rOI0.X();
      rOI0.Y();
      binaryImage0.copy(rOI0);
      GrayImage grayImage0 = new GrayImage(interpolatedGrayImage0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)0;
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(1027, 4233, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      Byte byte0 = new Byte((byte) (-91));
      byte byte1 = new Byte((byte) (-91));
      BinaryImage binaryImage1 = binaryImage0.compliment();
      BinaryImage binaryImage2 = binaryImage0.intersection(binaryImage1);
      binaryImage0.union(binaryImage2);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(1894, 1894);
      binaryImage0.X();
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(1894, 1894);
      binaryImage0.X();
      binaryImage0.toString();
      ROI rOI0 = new ROI(0, 0, 0, 0);
      rOI0.X();
      rOI0.Y();
      rOI0.uy();
      rOI0.ux();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      rOI0.ux();
      rOI0.ly();
      binaryImage0.copy();
      Integer integer1 = new Integer(1540);
      binaryImage0.copy(rOI0);
      ROI rOI1 = new ROI();
      rOI0.ux();
      rOI1.lx();
      rOI1.ux();
      rOI1.ly();
      rOI1.ux();
      rOI1.ux();
      rOI1.ux();
      // Undeclared exception!
      binaryImage0.compliment();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 0);
      byte byte0 = (byte) (-77);
      Byte byte1 = new Byte((byte) (-77));
      binaryImage0.getJavaImage();
      // Undeclared exception!
      try { 
        binaryImage0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 0);
      Byte byte0 = new Byte((byte) (-77));
      byte0.byteValue();
      // Undeclared exception!
      try { 
        binaryImage0.set((int) (byte) (-77), (int) (byte) (-77), byte0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -77
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 487);
      Byte.valueOf((byte) (-15));
      Byte.valueOf((byte) (-15));
      BinaryImage binaryImage1 = new BinaryImage(2400, 351);
      binaryImage1.copy();
      binaryImage0.shift((byte) (-15), (byte) (-128));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 0);
      binaryImage0.shift(0, 0);
      byte byte0 = (byte) (-77);
      // Undeclared exception!
      try { 
        binaryImage0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.count();
      Byte byte0 = new Byte((byte) (-77));
      byte0.byteValue();
      // Undeclared exception!
      try { 
        binaryImage0.set(11, (-1027), (Byte) (byte) (-77));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(1894, 1894);
      binaryImage0.X();
      InterpolatedGrayImage interpolatedGrayImage0 = new InterpolatedGrayImage(1894, 1894);
      binaryImage0.X();
      binaryImage0.toString();
      Integer integer0 = new Integer(1894);
      Integer integer1 = new Integer(1540);
      ROI rOI0 = new ROI();
      rOI0.ux();
      rOI0.ly();
      rOI0.ux();
      rOI0.ux();
      rOI0.ux();
      rOI0.ly();
      rOI0.ux();
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      int int0 = 1388;
      int int1 = 0;
      binaryImage0.shift(int0, int1);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.copy();
      binaryImage0.copy();
      BinaryImage binaryImage1 = new BinaryImage();
      BinaryImage binaryImage2 = binaryImage0.intersection(binaryImage1);
      binaryImage0.max();
      ROI rOI0 = new ROI((byte) (-77), (byte) (-77), 482, 483);
      rOI0.lx();
      binaryImage2.intersection(binaryImage0);
      BinaryImage binaryImage3 = null;
      try {
        binaryImage3 = new BinaryImage((RealGrayImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.count();
      byte byte0 = (byte) (-77);
      Byte byte1 = new Byte((byte) (-77));
      // Undeclared exception!
      try { 
        binaryImage0.get((-1027), 654);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(490, (byte)4);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage1.min();
      Byte byte0 = new Byte((byte)4);
      byte0.byteValue();
      ROI rOI0 = new ROI();
      rOI0.ux();
      rOI0.lx();
      rOI0.ux();
      rOI0.ly();
      rOI0.ux();
      rOI0.ux();
      rOI0.ux();
      rOI0.ly();
      rOI0.ux();
      rOI0.lx();
      rOI0.ux();
      rOI0.ly();
      rOI0.ux();
      rOI0.ux();
      rOI0.ux();
      BinaryImage binaryImage2 = null;
      try {
        binaryImage2 = new BinaryImage((BinaryImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte) (-17);
      byteArray0[3] = (byte)37;
      byte[][] byteArray1 = new byte[3][1];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      BinaryImage binaryImage0 = new BinaryImage(byteArray1);
      // Undeclared exception!
      try { 
        binaryImage0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-60);
      byteArray0[1] = (byte)76;
      byteArray0[2] = (byte)38;
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(711, 711, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.count();
      int int0 = 0;
      Byte.valueOf((byte)110);
      ROI rOI0 = new ROI();
      rOI0.ux();
      rOI0.ux();
      // Undeclared exception!
      try { 
        binaryImage0.copy(rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((GrayImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 0);
      BinaryImage binaryImage1 = binaryImage0.shift(0, 0);
      Byte byte0 = new Byte((byte) (-15));
      Byte byte1 = Byte.valueOf((byte) (-124));
      byte1.byteValue();
      Byte byte2 = Byte.valueOf((byte)16);
      // Undeclared exception!
      try { 
        binaryImage1.set(69, (-2295), byte2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2295
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(2116, 2116);
      // Undeclared exception!
      binaryImage0.shift(2116, 2116);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Byte.valueOf((byte) (-15));
      Byte.valueOf((byte) (-15));
      BinaryImage binaryImage0 = new BinaryImage(2400, 351);
      binaryImage0.copy();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage((byte)4, (byte)4);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage1.min();
      Byte byte0 = new Byte((byte)4);
      byte0.byteValue();
      binaryImage1.intersection(binaryImage0);
      binaryImage0.union(binaryImage1);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.compliment();
      Byte byte0 = new Byte((byte)49);
      byte0.byteValue();
      // Undeclared exception!
      try { 
        binaryImage0.set(462, 480, (Byte) (byte)49, (ROI) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 0);
      Byte byte0 = new Byte((byte)4);
      byte0.byteValue();
      ((Byte)(byte)4).byteValue();
      Byte.valueOf((byte) (-1));
      BinaryImage binaryImage1 = new BinaryImage();
      BinaryImage binaryImage2 = binaryImage1.compliment();
      binaryImage1.intersection(binaryImage2);
      // Undeclared exception!
      try { 
        binaryImage0.get(0, (-4867));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 0);
      binaryImage0.getJavaImage();
      BinaryImage binaryImage1 = binaryImage0.difference(binaryImage0);
      binaryImage1.copy();
      binaryImage0.copy();
      binaryImage0.copy();
      BinaryImage binaryImage2 = binaryImage0.intersection(binaryImage0);
      binaryImage2.max();
      ROI rOI0 = new ROI(0, 0, 0, 0);
      rOI0.lx();
      rOI0.ux();
      rOI0.ux();
      rOI0.ux();
      BinaryImage binaryImage3 = new BinaryImage(binaryImage0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      KernelType kernelType0 = KernelType.UNIFORM;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      BinaryImage binaryImage0 = new BinaryImage(imageKernel0);
      // Undeclared exception!
      try { 
        binaryImage0.getData();
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      ROI rOI0 = new ROI(0, 0, 0, 0);
      rOI0.X();
      rOI0.Y();
      rOI0.uy();
      rOI0.X();
      rOI0.Y();
      rOI0.uy();
      rOI0.X();
      rOI0.Y();
      rOI0.X();
      rOI0.Y();
      // Undeclared exception!
      try { 
        binaryImage0.copy(rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.getJavaImage();
      binaryImage0.copy();
      // Undeclared exception!
      try { 
        binaryImage0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.count();
      Byte byte0 = Byte.valueOf((byte)110);
      ROI rOI0 = new ROI();
      rOI0.ux();
      rOI0.lx();
      rOI0.ux();
      rOI0.ly();
      rOI0.ux();
      rOI0.ux();
      rOI0.ux();
      rOI0.ly();
      // Undeclared exception!
      try { 
        binaryImage0.set(0, 0, byte0, rOI0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.count();
      Byte.valueOf((byte)110);
      ROI rOI0 = new ROI();
      rOI0.ux();
      rOI0.lx();
      int int0 = 11;
      rOI0.setROI(0, 0, (byte)110, 11);
      rOI0.ux();
      rOI0.ux();
      rOI0.ux();
      rOI0.ly();
      // Undeclared exception!
      try { 
        binaryImage0.copy(rOI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((-1847), (-1847));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 0);
      binaryImage0.getJavaImage();
      BinaryImage binaryImage1 = binaryImage0.difference(binaryImage0);
      binaryImage1.copy();
      Byte byte0 = new Byte((byte) (-26));
      byte0.byteValue();
      ((Byte)(byte) (-26)).byteValue();
      binaryImage0.compliment();
      binaryImage0.union(binaryImage0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(490, (byte)4);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      binaryImage1.min();
      Byte byte0 = new Byte((byte)4);
      byte0.byteValue();
      Byte.valueOf((byte)4);
      Byte byte1 = new Byte((byte) (-59));
      byte1.byteValue();
      ((Byte)(byte) (-59)).byteValue();
      BinaryImage binaryImage2 = new BinaryImage(binaryImage0);
      // Undeclared exception!
      try { 
        binaryImage1.getData();
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      KernelType kernelType0 = KernelType.UNIFORM;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      byte byte0 = (byte) (-15);
      Byte byte1 = new Byte((byte) (-15));
      byte1.byteValue();
      byte byte2 = (byte)71;
      Byte.valueOf((byte)71);
      BinaryImage binaryImage0 = new BinaryImage((byte)71, 3105);
      // Undeclared exception!
      binaryImage0.compliment();
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      KernelType kernelType0 = KernelType.LAPLACIAN_8;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      BinaryImage binaryImage0 = new BinaryImage(imageKernel0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      KernelType kernelType0 = KernelType.UNIFORM;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      byte byte0 = (byte) (-15);
      Byte byte1 = new Byte((byte) (-15));
      Byte.valueOf((byte) (-15));
      byte1.byteValue();
      byte byte2 = (byte)71;
      Byte.valueOf((byte)71);
      BinaryImage binaryImage0 = new BinaryImage((byte)71, 3105);
      BinaryImage binaryImage1 = new BinaryImage(3105, 3105);
      // Undeclared exception!
      binaryImage0.intersection(binaryImage1);
  }
}
