/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 09:37:03 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jahuwaldt.plot.BoxULSymbol;
import jahuwaldt.plot.LinearAxisScale;
import jahuwaldt.plot.PlotAxis;
import jahuwaldt.plot.PlotDatum;
import jahuwaldt.plot.PlotRun;
import jahuwaldt.plot.PlotRunList;
import jahuwaldt.plot.PlotYAxis;
import jahuwaldt.plot.Triangle4Symbol;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.image.ColorModel;
import java.awt.image.DirectColorModel;
import java.text.NumberFormat;
import javax.swing.Box;
import javax.swing.JButton;
import javax.swing.border.BevelBorder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlotYAxis_ESTest extends PlotYAxis_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertNull(plotYAxis0.getLabel());
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertNotNull(plotYAxis0);
      
      PlotYAxis.RotateFilter plotYAxis_RotateFilter0 = plotYAxis0.new RotateFilter(1);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertNull(plotYAxis0.getLabel());
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertNotNull(plotYAxis_RotateFilter0);
      
      // Undeclared exception!
      try { 
        plotYAxis_RotateFilter0.imageComplete(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotYAxis$RotateFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      assertNull(plotYAxis0.getLabel());
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertNotNull(plotYAxis0);
      
      PlotYAxis.RotateFilter plotYAxis_RotateFilter0 = plotYAxis0.new RotateFilter(0.5);
      assertNull(plotYAxis0.getLabel());
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertNotNull(plotYAxis_RotateFilter0);
      
      plotYAxis_RotateFilter0.setPixels(29, 29, 0, 21, (ColorModel) null, (int[]) null, 1430, 1);
      assertNull(plotYAxis0.getLabel());
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertEquals(1, PlotAxis.kTickMarksOnly);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertNull(plotYAxis0.getLabel());
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(5, PlotAxis.kTick);
      assertNotNull(plotYAxis0);
      
      PlotYAxis.RotateFilter plotYAxis_RotateFilter0 = plotYAxis0.new RotateFilter(0.4035);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertNull(plotYAxis0.getLabel());
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(5, PlotAxis.kTick);
      assertNotNull(plotYAxis_RotateFilter0);
      
      plotYAxis_RotateFilter0.setPixels((-133), 29, 2439, (-3956), (ColorModel) null, (int[]) null, 10, 255);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertNull(plotYAxis0.getLabel());
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(5, PlotAxis.kTick);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertNull(plotYAxis0.getLabel());
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(2, PlotAxis.kMajorGrid);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertNotNull(plotYAxis0);
      
      PlotYAxis.RotateFilter plotYAxis_RotateFilter0 = plotYAxis0.new RotateFilter(2);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertNull(plotYAxis0.getLabel());
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(2, PlotAxis.kMajorGrid);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertNotNull(plotYAxis_RotateFilter0);
      
      DirectColorModel directColorModel0 = (DirectColorModel)ColorModel.getRGBdefault();
      assertEquals((-16777216), directColorModel0.getAlphaMask());
      assertEquals(3, directColorModel0.getNumColorComponents());
      assertEquals(4, directColorModel0.getNumComponents());
      assertEquals(3, directColorModel0.getTransferType());
      assertEquals(3, directColorModel0.getTransparency());
      assertTrue(directColorModel0.hasAlpha());
      assertEquals(32, directColorModel0.getPixelSize());
      assertEquals(65280, directColorModel0.getGreenMask());
      assertFalse(directColorModel0.isAlphaPremultiplied());
      assertEquals(255, directColorModel0.getBlueMask());
      assertEquals(16711680, directColorModel0.getRedMask());
      assertNotNull(directColorModel0);
      
      int[] intArray0 = new int[9];
      plotYAxis_RotateFilter0.setPixels((-721), 5, 5, (-3956), (ColorModel) directColorModel0, intArray0, 108, (-241));
      assertEquals(9, intArray0.length);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertNull(plotYAxis0.getLabel());
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals((-16777216), directColorModel0.getAlphaMask());
      assertEquals(3, directColorModel0.getNumColorComponents());
      assertEquals(4, directColorModel0.getNumComponents());
      assertEquals(3, directColorModel0.getTransferType());
      assertEquals(3, directColorModel0.getTransparency());
      assertTrue(directColorModel0.hasAlpha());
      assertEquals(32, directColorModel0.getPixelSize());
      assertEquals(65280, directColorModel0.getGreenMask());
      assertFalse(directColorModel0.isAlphaPremultiplied());
      assertEquals(255, directColorModel0.getBlueMask());
      assertEquals(16711680, directColorModel0.getRedMask());
      assertEquals(2, PlotAxis.kMajorGrid);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertNull(plotYAxis0.getLabel());
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertNotNull(plotYAxis0);
      
      PlotYAxis.RotateFilter plotYAxis_RotateFilter0 = plotYAxis0.new RotateFilter(1);
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertNull(plotYAxis0.getLabel());
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertNotNull(plotYAxis_RotateFilter0);
      
      byte[] byteArray0 = new byte[4];
      plotYAxis_RotateFilter0.setPixels((-688), (-721), (-688), 2, (ColorModel) null, byteArray0, 0, (int) (byte)89);
      assertEquals(4, byteArray0.length);
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertNull(plotYAxis0.getLabel());
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertNull(plotYAxis0.getLabel());
      assertEquals(5, PlotAxis.kTick);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertNotNull(plotYAxis0);
      
      PlotYAxis.RotateFilter plotYAxis_RotateFilter0 = plotYAxis0.new RotateFilter(5);
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertNull(plotYAxis0.getLabel());
      assertEquals(5, PlotAxis.kTick);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertNotNull(plotYAxis_RotateFilter0);
      
      DirectColorModel directColorModel0 = (DirectColorModel)ColorModel.getRGBdefault();
      assertEquals(32, directColorModel0.getPixelSize());
      assertEquals(4, directColorModel0.getNumComponents());
      assertEquals(3, directColorModel0.getTransferType());
      assertEquals(16711680, directColorModel0.getRedMask());
      assertEquals(3, directColorModel0.getNumColorComponents());
      assertEquals((-16777216), directColorModel0.getAlphaMask());
      assertEquals(65280, directColorModel0.getGreenMask());
      assertTrue(directColorModel0.hasAlpha());
      assertFalse(directColorModel0.isAlphaPremultiplied());
      assertEquals(3, directColorModel0.getTransparency());
      assertEquals(255, directColorModel0.getBlueMask());
      assertNotNull(directColorModel0);
      
      byte[] byteArray0 = new byte[0];
      plotYAxis_RotateFilter0.setPixels(1, 1719, (-2203), (int) (byte) (-24), (ColorModel) directColorModel0, byteArray0, (-2203), 2);
      assertEquals(0, byteArray0.length);
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertNull(plotYAxis0.getLabel());
      assertEquals(32, directColorModel0.getPixelSize());
      assertEquals(4, directColorModel0.getNumComponents());
      assertEquals(3, directColorModel0.getTransferType());
      assertEquals(16711680, directColorModel0.getRedMask());
      assertEquals(3, directColorModel0.getNumColorComponents());
      assertEquals((-16777216), directColorModel0.getAlphaMask());
      assertEquals(65280, directColorModel0.getGreenMask());
      assertTrue(directColorModel0.hasAlpha());
      assertFalse(directColorModel0.isAlphaPremultiplied());
      assertEquals(3, directColorModel0.getTransparency());
      assertEquals(255, directColorModel0.getBlueMask());
      assertEquals(5, PlotAxis.kTick);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      assertNull(plotYAxis0.getLabel());
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertEquals(5, PlotAxis.kTick);
      assertNotNull(plotYAxis0);
      
      PlotYAxis.RotateFilter plotYAxis_RotateFilter0 = plotYAxis0.new RotateFilter(2);
      assertNull(plotYAxis0.getLabel());
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertEquals(5, PlotAxis.kTick);
      assertNotNull(plotYAxis_RotateFilter0);
      
      double[] doubleArray0 = new double[7];
      plotYAxis_RotateFilter0.itransform(365.5236551, 5, doubleArray0);
      assertEquals(7, doubleArray0.length);
      assertNull(plotYAxis0.getLabel());
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertEquals(5, PlotAxis.kTick);
      assertArrayEquals(new double[] {(-156.65799988714215), 330.28898484361224, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      assertNull(plotYAxis0.getLabel());
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertNotNull(plotYAxis0);
      
      PlotRunList plotRunList0 = new PlotRunList();
      assertEquals(0, plotRunList0.size());
      assertNotNull(plotRunList0);
      
      plotYAxis0.setAxisBounds(plotRunList0);
      assertNull(plotYAxis0.getLabel());
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals((-1.0), plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals(1.0, plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(0, plotRunList0.size());
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(2, PlotAxis.kMajorGrid);
      
      BevelBorder bevelBorder0 = new BevelBorder(2);
      assertNotNull(bevelBorder0);
      
      JButton jButton0 = new JButton();
      assertTrue(jButton0.getFocusTraversalKeysEnabled());
      assertFalse(jButton0.isFocusCycleRoot());
      assertFalse(jButton0.isFocusTraversalPolicyProvider());
      assertFalse(jButton0.getIgnoreRepaint());
      assertFalse(jButton0.isFocusTraversalPolicySet());
      assertNotNull(jButton0);
      
      Rectangle rectangle0 = bevelBorder0.getInteriorRectangle((Component) jButton0, (-726), 0, 300, 1);
      assertTrue(jButton0.getFocusTraversalKeysEnabled());
      assertFalse(jButton0.isFocusCycleRoot());
      assertFalse(jButton0.isFocusTraversalPolicyProvider());
      assertFalse(jButton0.getIgnoreRepaint());
      assertFalse(jButton0.isFocusTraversalPolicySet());
      assertEquals((-428.0), rectangle0.getMaxX(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(296.0, rectangle0.getWidth(), 0.01);
      assertEquals((-576.0), rectangle0.getCenterX(), 0.01);
      assertEquals((-724.0), rectangle0.getMinX(), 0.01);
      assertEquals((-724.0), rectangle0.getX(), 0.01);
      assertEquals(0.5, rectangle0.getCenterY(), 0.01);
      assertEquals((-1.0), rectangle0.getMaxY(), 0.01);
      assertEquals(2.0, rectangle0.getY(), 0.01);
      assertEquals(2.0, rectangle0.getMinY(), 0.01);
      assertEquals((-3.0), rectangle0.getHeight(), 0.01);
      assertEquals((-724), rectangle0.x);
      assertEquals((-3), rectangle0.height);
      assertEquals(2, rectangle0.y);
      assertEquals(296, rectangle0.width);
      assertNotNull(rectangle0);
      
      plotYAxis0.resizeAxis(rectangle0);
      assertNull(plotYAxis0.getLabel());
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals((-1.0), plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals(1.0, plotYAxis0.getUpperBounds(), 0.01);
      assertTrue(jButton0.getFocusTraversalKeysEnabled());
      assertFalse(jButton0.isFocusCycleRoot());
      assertFalse(jButton0.isFocusTraversalPolicyProvider());
      assertFalse(jButton0.getIgnoreRepaint());
      assertFalse(jButton0.isFocusTraversalPolicySet());
      assertEquals((-428.0), rectangle0.getMaxX(), 0.01);
      assertTrue(rectangle0.isEmpty());
      assertEquals(296.0, rectangle0.getWidth(), 0.01);
      assertEquals((-576.0), rectangle0.getCenterX(), 0.01);
      assertEquals((-724.0), rectangle0.getMinX(), 0.01);
      assertEquals((-724.0), rectangle0.getX(), 0.01);
      assertEquals(0.5, rectangle0.getCenterY(), 0.01);
      assertEquals((-1.0), rectangle0.getMaxY(), 0.01);
      assertEquals(2.0, rectangle0.getY(), 0.01);
      assertEquals(2.0, rectangle0.getMinY(), 0.01);
      assertEquals((-3.0), rectangle0.getHeight(), 0.01);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertEquals((-724), rectangle0.x);
      assertEquals((-3), rectangle0.height);
      assertEquals(2, rectangle0.y);
      assertEquals(296, rectangle0.width);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertNull(plotYAxis0.getLabel());
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertNotNull(plotYAxis0);
      
      PlotYAxis.RotateFilter plotYAxis_RotateFilter0 = plotYAxis0.new RotateFilter(5);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertNull(plotYAxis0.getLabel());
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertNotNull(plotYAxis_RotateFilter0);
      
      double[] doubleArray0 = new double[9];
      plotYAxis_RotateFilter0.transform(1, Double.POSITIVE_INFINITY, doubleArray0);
      assertEquals(9, doubleArray0.length);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertNull(plotYAxis0.getLabel());
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertArrayEquals(new double[] {Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertNull(plotYAxis0.getLabel());
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertEquals(5, PlotAxis.kTick);
      assertNotNull(plotYAxis0);
      
      PlotYAxis.RotateFilter plotYAxis_RotateFilter0 = plotYAxis0.new RotateFilter(1);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertNull(plotYAxis0.getLabel());
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertEquals(5, PlotAxis.kTick);
      assertNotNull(plotYAxis_RotateFilter0);
      
      // Undeclared exception!
      try { 
        plotYAxis_RotateFilter0.setDimensions(5, 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotYAxis$RotateFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertNull(plotYAxis0.getLabel());
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertNotNull(plotYAxis0);
      
      // Undeclared exception!
      try { 
        plotYAxis0.resizeAxis((Rectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotYAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertNull(plotYAxis0.getLabel());
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertNotNull(plotYAxis0);
      
      Box box0 = Box.createHorizontalBox();
      assertFalse(box0.isFocusTraversalPolicyProvider());
      assertFalse(box0.isFocusCycleRoot());
      assertFalse(box0.getIgnoreRepaint());
      assertFalse(box0.isFocusTraversalPolicySet());
      assertTrue(box0.getFocusTraversalKeysEnabled());
      assertNotNull(box0);
      
      // Undeclared exception!
      try { 
        plotYAxis0.draw((Graphics) null, box0, (Rectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotYAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertNull(plotYAxis0.getLabel());
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertEquals(5, PlotAxis.kTick);
      assertNotNull(plotYAxis0);
      
      PlotYAxis.RotateFilter plotYAxis_RotateFilter0 = plotYAxis0.new RotateFilter(1);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertNull(plotYAxis0.getLabel());
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertEquals(5, PlotAxis.kTick);
      assertNotNull(plotYAxis_RotateFilter0);
      
      // Undeclared exception!
      try { 
        plotYAxis_RotateFilter0.imageComplete(4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotYAxis$RotateFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertNull(plotYAxis0.getLabel());
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertNotNull(plotYAxis0);
      
      PlotYAxis.RotateFilter plotYAxis_RotateFilter0 = plotYAxis0.new RotateFilter(5);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertNull(plotYAxis0.getLabel());
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertNotNull(plotYAxis_RotateFilter0);
      
      // Undeclared exception!
      try { 
        plotYAxis_RotateFilter0.imageComplete(2601);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotYAxis$RotateFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertNull(plotYAxis0.getLabel());
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertNotNull(plotYAxis0);
      
      PlotYAxis.RotateFilter plotYAxis_RotateFilter0 = plotYAxis0.new RotateFilter(1);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertNull(plotYAxis0.getLabel());
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertNotNull(plotYAxis_RotateFilter0);
      
      // Undeclared exception!
      try { 
        plotYAxis_RotateFilter0.imageComplete(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotYAxis$RotateFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      assertNull(plotYAxis0.getLabel());
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertNotNull(plotYAxis0);
      
      PlotYAxis.RotateFilter plotYAxis_RotateFilter0 = plotYAxis0.new RotateFilter(0);
      assertNull(plotYAxis0.getLabel());
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertNotNull(plotYAxis_RotateFilter0);
      
      DirectColorModel directColorModel0 = new DirectColorModel(5, 0, 0, 1);
      assertEquals(1, directColorModel0.getTransparency());
      assertEquals(0, directColorModel0.getAlphaMask());
      assertEquals(5, directColorModel0.getPixelSize());
      assertEquals(3, directColorModel0.getNumColorComponents());
      assertEquals(0, directColorModel0.getTransferType());
      assertEquals(0, directColorModel0.getGreenMask());
      assertFalse(directColorModel0.isAlphaPremultiplied());
      assertFalse(directColorModel0.hasAlpha());
      assertEquals(3, directColorModel0.getNumComponents());
      assertEquals(1, directColorModel0.getBlueMask());
      assertEquals(0, directColorModel0.getRedMask());
      assertNotNull(directColorModel0);
      
      // Undeclared exception!
      try { 
        plotYAxis_RotateFilter0.setPixels(5, 0, 2, 5, (ColorModel) directColorModel0, (int[]) null, 5, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotYAxis$RotateFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertNull(plotYAxis0.getLabel());
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertNotNull(plotYAxis0);
      
      PlotYAxis.RotateFilter plotYAxis_RotateFilter0 = plotYAxis0.new RotateFilter(1);
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertNull(plotYAxis0.getLabel());
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertNotNull(plotYAxis_RotateFilter0);
      
      DirectColorModel directColorModel0 = (DirectColorModel)ColorModel.getRGBdefault();
      assertEquals(3, directColorModel0.getNumColorComponents());
      assertEquals((-16777216), directColorModel0.getAlphaMask());
      assertEquals(16711680, directColorModel0.getRedMask());
      assertEquals(32, directColorModel0.getPixelSize());
      assertEquals(3, directColorModel0.getTransferType());
      assertEquals(3, directColorModel0.getTransparency());
      assertEquals(65280, directColorModel0.getGreenMask());
      assertEquals(255, directColorModel0.getBlueMask());
      assertTrue(directColorModel0.hasAlpha());
      assertEquals(4, directColorModel0.getNumComponents());
      assertFalse(directColorModel0.isAlphaPremultiplied());
      assertNotNull(directColorModel0);
      
      plotYAxis_RotateFilter0.setPixels((-2145716642), 47, (-2145716642), 0, (ColorModel) directColorModel0, (int[]) null, 2, 5);
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertNull(plotYAxis0.getLabel());
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(3, directColorModel0.getNumColorComponents());
      assertEquals((-16777216), directColorModel0.getAlphaMask());
      assertEquals(16711680, directColorModel0.getRedMask());
      assertEquals(32, directColorModel0.getPixelSize());
      assertEquals(3, directColorModel0.getTransferType());
      assertEquals(3, directColorModel0.getTransparency());
      assertEquals(65280, directColorModel0.getGreenMask());
      assertEquals(255, directColorModel0.getBlueMask());
      assertTrue(directColorModel0.hasAlpha());
      assertEquals(4, directColorModel0.getNumComponents());
      assertFalse(directColorModel0.isAlphaPremultiplied());
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(2, PlotAxis.kMajorGrid);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertNull(plotYAxis0.getLabel());
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertNotNull(plotYAxis0);
      
      PlotYAxis.RotateFilter plotYAxis_RotateFilter0 = plotYAxis0.new RotateFilter(0);
      assertEquals(1, plotYAxis0.getGridStyle());
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
      assertNull(plotYAxis0.getLabel());
      assertEquals((-1.7976931348623157E308), plotYAxis0.getUpperBounds(), 0.01);
      assertEquals(1.7976931348623157E308, plotYAxis0.getLowerBounds(), 0.01);
      assertEquals(0, PlotAxis.kNoGrid);
      assertEquals(5, PlotAxis.kTick);
      assertEquals(1, PlotAxis.kTickMarksOnly);
      assertEquals(2, PlotAxis.kMajorGrid);
      assertNotNull(plotYAxis_RotateFilter0);
      
      DirectColorModel directColorModel0 = (DirectColorModel)ColorModel.getRGBdefault();
      assertEquals(3, directColorModel0.getTransparency());
      assertEquals((-16777216), directColorModel0.getAlphaMask());
      assertEquals(3, directColorModel0.getNumColorComponents());
      assertEquals(255, directColorModel0.getBlueMask());
      assertEquals(16711680, directColorModel0.getRedMask());
      assertEquals(32, directColorModel0.getPixelSize());
      assertEquals(4, directColorModel0.getNumComponents());
      assertEquals(3, directColorModel0.getTransferType());
      assertFalse(directColorModel0.isAlphaPremultiplied());
      assertEquals(65280, directColorModel0.getGreenMask());
      assertTrue(directColorModel0.hasAlpha());
      assertNotNull(directColorModel0);
      
      // Undeclared exception!
      try { 
        plotYAxis_RotateFilter0.setPixels(5, 0, 2, 5, (ColorModel) directColorModel0, (int[]) null, 5, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      PlotYAxis.RotateFilter plotYAxis_RotateFilter0 = plotYAxis0.new RotateFilter(5);
      plotYAxis_RotateFilter0.setPixels((-306), 3675, (-306), 15, (ColorModel) null, (int[]) null, 2, 1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      PlotYAxis.RotateFilter plotYAxis_RotateFilter0 = plotYAxis0.new RotateFilter(1);
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
      try { 
        plotYAxis_RotateFilter0.setPixels(0, 1, 5, 1696, (ColorModel) null, byteArray0, (int) (byte)7, 37);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotYAxis$RotateFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      ColorModel colorModel0 = ColorModel.getRGBdefault();
      PlotYAxis.RotateFilter plotYAxis_RotateFilter0 = plotYAxis0.new RotateFilter(0);
      plotYAxis_RotateFilter0.setPixels(1, 1, 0, 1, colorModel0, (byte[]) null, 1, 5);
      assertFalse(colorModel0.isAlphaPremultiplied());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 1;
      Triangle4Symbol triangle4Symbol0 = new Triangle4Symbol();
      PlotRun plotRun0 = new PlotRun(doubleArray0, doubleArray0, false, triangle4Symbol0);
      PlotRun[] plotRunArray0 = new PlotRun[2];
      plotRunArray0[0] = plotRun0;
      plotRunArray0[1] = plotRun0;
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      plotYAxis0.setAxisBounds(plotRunList0);
      assertEquals(1.0, plotYAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.manualLB = true;
      PlotRun[] plotRunArray0 = new PlotRun[1];
      PlotDatum[] plotDatumArray0 = new PlotDatum[7];
      PlotDatum plotDatum0 = mock(PlotDatum.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(plotDatum0).getYError();
      doReturn(true, false).when(plotDatum0).hasErrorBar();
      plotDatumArray0[0] = plotDatum0;
      plotDatumArray0[1] = plotDatum0;
      PlotRun plotRun0 = new PlotRun(plotDatumArray0);
      plotRunArray0[0] = plotRun0;
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      // Undeclared exception!
      try { 
        plotYAxis0.setAxisBounds(plotRunList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotYAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      PlotRun[] plotRunArray0 = new PlotRun[9];
      double[] doubleArray0 = new double[2];
      plotYAxis0.manualUB = true;
      BoxULSymbol boxULSymbol0 = new BoxULSymbol();
      PlotRun plotRun0 = new PlotRun(doubleArray0, doubleArray0, true, boxULSymbol0);
      plotRunArray0[0] = plotRun0;
      PlotDatum[] plotDatumArray0 = new PlotDatum[18];
      PlotDatum plotDatum0 = mock(PlotDatum.class, new ViolatedAssumptionAnswer());
      doReturn((double)0).when(plotDatum0).getYError();
      doReturn(true).when(plotDatum0).hasErrorBar();
      plotDatumArray0[0] = plotDatum0;
      plotRunArray0[1] = plotRun0;
      plotRunArray0[2] = plotRun0;
      PlotRun plotRun1 = new PlotRun(plotDatumArray0);
      plotRunArray0[3] = plotRun1;
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      // Undeclared exception!
      try { 
        plotYAxis0.setAxisBounds(plotRunList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotYAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      PlotRun[] plotRunArray0 = new PlotRun[1];
      PlotDatum[] plotDatumArray0 = new PlotDatum[7];
      PlotDatum plotDatum0 = mock(PlotDatum.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(plotDatum0).getYError();
      doReturn(true, false, false, false, false).when(plotDatum0).hasErrorBar();
      plotDatumArray0[0] = plotDatum0;
      plotDatumArray0[1] = plotDatum0;
      plotDatumArray0[2] = plotDatum0;
      plotDatumArray0[3] = plotDatum0;
      plotDatumArray0[4] = plotDatum0;
      plotDatumArray0[5] = plotDatum0;
      plotDatumArray0[6] = plotDatum0;
      PlotRun plotRun0 = new PlotRun(plotDatumArray0);
      plotRunArray0[0] = plotRun0;
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      plotYAxis0.setAxisBounds(plotRunList0);
      assertEquals(4.9E-324, plotYAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      PlotRun plotRun0 = new PlotRun();
      PlotRun[] plotRunArray0 = new PlotRun[1];
      plotRunArray0[0] = plotRun0;
      PlotRunList plotRunList0 = new PlotRunList(plotRunArray0);
      plotYAxis0.setAxisBounds(plotRunList0);
      assertEquals((-1.0), plotYAxis0.getLowerBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.setAxisBounds((PlotRunList) null);
      assertEquals(1.0, plotYAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      plotYAxis0.manualLB = true;
      PlotRunList plotRunList0 = new PlotRunList();
      plotYAxis0.setAxisBounds(plotRunList0);
      assertEquals(1.0, plotYAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      PlotRunList plotRunList0 = new PlotRunList();
      plotYAxis0.setAxisBounds(plotRunList0);
      Rectangle rectangle0 = new Rectangle();
      plotYAxis0.resizeAxis(rectangle0);
      assertEquals(1.0, plotYAxis0.getUpperBounds(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinearAxisScale linearAxisScale0 = new LinearAxisScale();
      PlotYAxis plotYAxis0 = new PlotYAxis("o\"nd", linearAxisScale0, (NumberFormat) null, 1347);
      assertEquals(0.0, plotYAxis0.getTickStepSize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      PlotYAxis.RotateFilter plotYAxis_RotateFilter0 = plotYAxis0.new RotateFilter(1);
      // Undeclared exception!
      try { 
        plotYAxis_RotateFilter0.setColorModel((ColorModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotYAxis$RotateFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PlotYAxis plotYAxis0 = new PlotYAxis();
      PlotYAxis.RotateFilter plotYAxis_RotateFilter0 = plotYAxis0.new RotateFilter(1);
      // Undeclared exception!
      try { 
        plotYAxis_RotateFilter0.setHints(5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.PlotYAxis$RotateFilter", e);
      }
  }
}
