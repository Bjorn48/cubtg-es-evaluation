/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 14:27:34 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.FileDescriptor;
import java.io.FilterInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Enumeration;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      int int0 = (-1);
      char[] charArray0 = new char[6];
      charArray0[0] = 'S';
      charArray0[1] = '\\';
      charArray0[2] = 'T';
      charArray0[3] = 'e';
      charArray0[4] = 'y';
      charArray0[5] = '$';
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X2',y");
      stringReader0.reset();
      char[] charArray0 = new char[1];
      stringReader0.read(charArray0, 0, 0);
      stringReader0.mark(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      StringReader stringReader1 = new StringReader("X2',y");
      StringReader stringReader2 = new StringReader("X2',y");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 0, (-3663), 2094);
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X2',y");
      stringReader0.reset();
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0, 0, 0);
      stringReader0.mark(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      javaCharStream0.adjustBeginLineColumn((-1165), 0);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.readChar();
      javaCharStream0.ReInit((Reader) stringReader0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-47);
      byteArray0[1] = (byte) (-125);
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-97);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 616, 1143, (byte)0);
      javaCharStream0.ReInit((Reader) null, (-1499), 1143);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      JavaCharStream.hexval('D');
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup(280);
      JavaCharStream.hexval('6');
      javaCharStream0.getColumn();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream.hexval('E');
      JavaCharStream.hexval('E');
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("?][<AP S;e");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-241), (-241));
      JavaCharStream.hexval('d');
      JavaCharStream.hexval('0');
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X2',y");
      stringReader0.reset();
      char[] charArray0 = new char[1];
      stringReader0.read(charArray0, 0, 0);
      stringReader0.mark(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      StringReader stringReader1 = new StringReader("X2',y");
      StringReader stringReader2 = new StringReader("X2',y");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      StringReader stringReader3 = new StringReader("c!,{p#w^D4agH");
      JavaCharStream.hexval('9');
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 0, 0, 0);
      javaCharStream0.ReInit((InputStream) mockFileInputStream0, (-1521), 0, 0);
      javaCharStream0.Done();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1711), (-1711), 0);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.backup(2);
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.BeginToken();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      javaCharStream0.AdjustBuffSize();
      PushbackInputStream pushbackInputStream0 = null;
      try {
        pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FgRL4!ax5ah:+mHf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      stringReader0.ready();
      stringReader0.mark(0);
      javaCharStream0.UpdateLineColumn('F');
      JavaCharStream.hexval('d');
      StringReader stringReader1 = new StringReader(".");
      javaCharStream0.GetSuffix('F');
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      char[] charArray0 = new char[4];
      charArray0[0] = '_';
      charArray0[1] = 'B';
      charArray0[2] = '>';
      charArray0[3] = '&';
      stringReader0.read(charArray0, 0, 0);
      stringReader0.mark(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      javaCharStream0.adjustBeginLineColumn(0, (-1786));
      javaCharStream0.backup((-1786));
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 5, 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      JavaCharStream.hexval('f');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup(280);
      javaCharStream0.readChar();
      javaCharStream0.tokenBegin = 280;
      JavaCharStream.hexval('6');
      javaCharStream0.getColumn();
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          byte[] byteArray0 = new byte[5];
          byteArray0[0] = (byte)0;
          byte byte0 = (byte)47;
          byteArray0[1] = (byte)47;
          byteArray0[2] = (byte)0;
          byteArray0[3] = (byte) (-92);
          byteArray0[4] = (byte) (-30);
          ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
          byteArrayInputStream0.close();
          JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
          javaCharStream0.prevCharIsCR = false;
          javaCharStream0.readChar();
          int int0 = (-264);
          JavaCharStream javaCharStream1 = new JavaCharStream((Reader) null);
          javaCharStream1.adjustBeginLineColumn(57, 2212);
          JavaCharStream javaCharStream2 = new JavaCharStream((Reader) null);
          javaCharStream0.ExpandBuff(false);
          JavaCharStream javaCharStream3 = new JavaCharStream((Reader) null);
          javaCharStream0.readChar();
          javaCharStream3.ReInit((Reader) null);
          // Undeclared exception!
          try { 
            javaCharStream2.readChar();
            fail("Expecting exception: NullPointerException");
          
          } catch(NullPointerException e) {
             //
             // no message in exception (getMessage() returned null)
             //
             verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = 853;
      int int1 = 9;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 853, 9);
      stringReader0.close();
      javaCharStream0.AdjustBuffSize();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f");
      stringReader0.skip(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 103);
      javaCharStream0.backup(103);
      javaCharStream0.ReInit((Reader) stringReader0);
      char[] charArray0 = new char[7];
      charArray0[0] = '*';
      charArray0[1] = 'r';
      charArray0[2] = 'j';
      charArray0[3] = 'x';
      charArray0[5] = 'd';
      charArray0[6] = 'T';
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.backup(0);
      stringReader0.markSupported();
      javaCharStream0.GetSuffix(0);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X2',y");
      stringReader0.reset();
      char[] charArray0 = new char[1];
      stringReader0.read(charArray0, 0, 0);
      stringReader0.mark(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      javaCharStream0.adjustBeginLineColumn((-1165), 0);
      javaCharStream0.backup(0);
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(0);
      JavaCharStream.hexval('5');
      javaCharStream0.readChar();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1223), 0, 91);
      javaCharStream0.available = (-1950);
      javaCharStream0.backup(0);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X2',y");
      stringReader0.reset();
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0, 0, 0);
      stringReader0.mark(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      StringReader stringReader1 = new StringReader("");
      stringReader1.read(charArray0);
      stringReader1.reset();
      int int0 = 2557;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader1, 2557, (-15), (-410));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6");
      stringReader0.skip(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 139);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.backup(139);
      javaCharStream0.ReInit((Reader) stringReader0);
      String string0 = javaCharStream0.GetImage();
      javaCharStream0.backup(0);
      stringReader0.markSupported();
      char[] charArray0 = javaCharStream0.GetSuffix(0);
      javaCharStream0.FillBuff();
      StringReader stringReader1 = new StringReader("");
      stringReader1.read(charArray0);
      stringReader1.reset();
      javaCharStream0.ReInit((Reader) stringReader1, 0, 4598, 0);
      StringReader stringReader2 = new StringReader(string0);
      javaCharStream0.ReInit((Reader) stringReader0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(80);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 78, (-1), 80);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup(280);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('s');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X2'y");
      stringReader0.reset();
      char[] charArray0 = new char[1];
      stringReader0.read(charArray0, 0, 0);
      stringReader0.mark(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.ReInit((Reader) stringReader0);
      javaCharStream1.readChar();
      javaCharStream1.ReadByte();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      JavaCharStream.hexval('4');
      StringReader stringReader0 = new StringReader("qE m&'l#|Ea95P");
      stringReader0.skip((-1L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3957), (-1711), 1042);
      StringReader stringReader1 = new StringReader("6qt=prP");
      javaCharStream0.ReInit((Reader) stringReader1);
      javaCharStream0.backup((-3957));
      StringReader stringReader2 = new StringReader("2");
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      javaCharStream1.adjustBeginLineColumn(353, 76);
      StringReader stringReader3 = new StringReader("qE m&'l#|Ea95P");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1);
      // Undeclared exception!
      try { 
        javaCharStream2.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-53);
      byteArray0[1] = (byte)70;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 700, (-2177));
      javaCharStream0.nextCharInd = 1338;
      javaCharStream0.tokenBegin = (int) (byte) (-53);
      javaCharStream0.FillBuff();
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-16), 1);
      javaCharStream0.adjustBeginLineColumn(13, 3);
      javaCharStream0.column = 130;
      javaCharStream0.ReInit((InputStream) sequenceInputStream0);
      int[] intArray0 = new int[2];
      intArray0[0] = (-1);
      intArray0[1] = (-1004);
      javaCharStream0.bufcolumn = intArray0;
      char[] charArray0 = new char[1];
      charArray0[0] = 'k';
      javaCharStream0.nextCharBuf = charArray0;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 8);
      javaCharStream0.getBeginColumn();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X2',y");
      stringReader0.reset();
      char[] charArray0 = new char[1];
      stringReader0.read(charArray0, 0, 0);
      stringReader0.mark(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      javaCharStream0.adjustBeginLineColumn((-1165), 0);
      javaCharStream0.backup(0);
      javaCharStream0.readChar();
      javaCharStream0.GetSuffix(0);
      javaCharStream0.getEndLine();
      javaCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FgRL4!ax5ah:+mHf");
      JavaCharStream.hexval('3');
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2023), (-2023));
      javaCharStream0.backup(924);
      javaCharStream0.getBeginColumn();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      javaCharStream0.adjustBeginLineColumn(2485, 12);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.mark(1);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringReader stringReader0 = new StringReader(":'-)dGov");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 14, 2402);
      javaCharStream0.ReInit((Reader) stringReader0, 14, 718, 2345);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X2',y");
      stringReader0.reset();
      JavaCharStream.hexval('e');
      StringReader stringReader1 = new StringReader("{svUu)!");
      JavaCharStream.hexval('e');
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      JavaCharStream.hexval('1');
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("?][<AP S;e");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-241), (-241));
      javaCharStream0.backup((-1));
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("\"PrCRG\"_!");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      javaCharStream0.readChar();
      stringReader0.ready();
      javaCharStream0.UpdateLineColumn('l');
      javaCharStream0.UpdateLineColumn('*');
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 58, 58, 58);
      javaCharStream1.GetImage();
      JavaCharStream.hexval('7');
      try { 
        javaCharStream1.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[5];
      char char0 = '=';
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FgRL4!ax5ah:+mHf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      stringReader0.ready();
      stringReader0.read();
      stringReader0.mark(0);
      javaCharStream0.UpdateLineColumn('F');
      javaCharStream0.BeginToken();
      javaCharStream0.UpdateLineColumn('F');
      stringReader0.markSupported();
      JavaCharStream.hexval('F');
      javaCharStream0.ReadByte();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 75, 7, 0);
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      JavaCharStream.hexval('c');
      JavaCharStream.hexval('c');
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FgRL4!ax5ah:+mHf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      stringReader0.ready();
      javaCharStream0.UpdateLineColumn('F');
      javaCharStream0.UpdateLineColumn('}');
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 58, 1539);
      javaCharStream0.GetImage();
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringReader stringReader0 = new StringReader("{x-toqFe");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      char[] charArray0 = new char[6];
      charArray0[0] = '<';
      javaCharStream0.BeginToken();
      charArray0[1] = 'g';
      charArray0[2] = 'h';
      charArray0[3] = 'Z';
      charArray0[4] = '`';
      javaCharStream0.adjustBeginLineColumn((-264), 0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.ExpandBuff(false);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      try { 
        javaCharStream2.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1711), (-1711), 0);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.backup(2);
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.BeginToken();
      javaCharStream0.UpdateLineColumn('[');
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 0, 2897);
      javaCharStream1.backup(4094);
      javaCharStream0.AdjustBuffSize();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-30);
      byteArray0[1] = (byte) (-30);
      byteArray0[2] = (byte) (-30);
      byteArray0[3] = (byte) (-30);
      byteArray0[4] = (byte) (-30);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0);
      javaCharStream0.readChar();
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1347), (-1347), 0);
      javaCharStream0.ReInit((Reader) stringReader0);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = (-1);
      char[] charArray0 = new char[6];
      charArray0[0] = 'S';
      charArray0[1] = 'O';
      charArray0[2] = 'O';
      charArray0[3] = 'R';
      charArray0[4] = 'y';
      charArray0[5] = '$';
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream.hexval('a');
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 10, 604);
      PipedInputStream pipedInputStream0 = new PipedInputStream(604);
      javaCharStream0.ReInit((InputStream) pipedInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 28, 28, 28);
      javaCharStream0.backup(1188);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1160
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 139);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.backup(68);
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(12, 68);
      StringReader stringReader2 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      javaCharStream1.ExpandBuff(false);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      try { 
        javaCharStream1.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" qr:FeGq#jL=]");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3668), (-3668));
      stringReader0.read();
      javaCharStream0.adjustBeginLineColumn((-3668), (-664));
      stringReader0.close();
      javaCharStream0.available = 2090;
      javaCharStream0.backup((-1901));
      javaCharStream0.getLine();
      javaCharStream0.getEndColumn();
      StringReader stringReader1 = new StringReader("AMC2umZop~sFd");
      javaCharStream0.ReInit((Reader) stringReader1);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringReader stringReader0 = new StringReader("TTd#XsFIU}\"s_B");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2052, 28, 28);
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn((-1094), 1881);
      javaCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" qr:FeGq#jL=]");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3668), (-3668));
      stringReader0.read();
      javaCharStream0.adjustBeginLineColumn((-3668), (-664));
      stringReader0.close();
      javaCharStream0.available = 2090;
      javaCharStream0.backup((-1901));
      javaCharStream0.getLine();
      javaCharStream0.getEndColumn();
      javaCharStream0.backup(2090);
      javaCharStream0.getBeginColumn();
      javaCharStream0.getLine();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X2',y");
      stringReader0.reset();
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0, 0, 0);
      stringReader0.mark(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      javaCharStream0.tokenBegin = (-339);
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn((-1165), 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -339
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      JavaCharStream.hexval('f');
      JavaCharStream.hexval('f');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 15);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 15, (-977));
      javaCharStream0.AdjustBuffSize();
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X2',y");
      stringReader0.reset();
      JavaCharStream.hexval('e');
      StringReader stringReader1 = new StringReader("J5bKzGy");
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      try { 
        JavaCharStream.hexval('/');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("?][<AP S;e");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-241), (-241));
      javaCharStream0.adjustBeginLineColumn((-241), (-241));
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn((-241), 1730);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[2];
      charArray0[0] = 'M';
      char char0 = 'l';
      charArray0[1] = 'l';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 9, (-3118), 1241);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.close();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 6);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      char char0 = '`';
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FgRL4!ax5ah:+mHf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      stringReader0.ready();
      javaCharStream0.UpdateLineColumn('F');
      javaCharStream0.UpdateLineColumn('}');
      javaCharStream0.GetImage();
      stringReader0.skip(0);
      javaCharStream0.getEndLine();
      javaCharStream0.readChar();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 836, 95);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X2',y");
      stringReader0.reset();
      char[] charArray0 = new char[1];
      stringReader0.read();
      stringReader0.read(charArray0, 0, 0);
      stringReader0.mark(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      javaCharStream0.adjustBeginLineColumn((-1165), 0);
      javaCharStream0.inputStream = (Reader) stringReader0;
      javaCharStream0.FillBuff();
      javaCharStream0.backup(0);
      javaCharStream0.BeginToken();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = 0;
      stringReader0.skip(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 139);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.backup(139);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.GetImage();
      javaCharStream0.backup(0);
      stringReader0.markSupported();
      int int1 = 0;
      javaCharStream0.GetSuffix(0);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FgRL4!ax5a:+mHf");
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FgRL4!ax5ah:+mHf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream.hexval('D');
      StringReader stringReader1 = new StringReader("x\nbKNV");
      javaCharStream0.getBeginColumn();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      stringReader0.reset();
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("V!{AanN0z$7`{=S *S");
      JavaCharStream.hexval('4');
      StringReader stringReader1 = new StringReader("V!{AanN0z$7`{=S *S");
      StringReader stringReader2 = null;
      try {
        stringReader2 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip(0L);
      StringReader stringReader1 = new StringReader("\"PrCRG\"_!");
      stringReader0.ready();
      JavaCharStream.hexval('E');
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("S#Ef;&6U,*B])F)1z}");
      stringReader0.reset();
      stringReader0.read();
      char[] charArray0 = new char[0];
      stringReader0.ready();
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 589, 589, 589);
      stringReader0.read();
      javaCharStream0.buffer = charArray0;
      javaCharStream0.buffer = charArray0;
      stringReader0.close();
      javaCharStream0.ReInit((Reader) stringReader0, (-1836), 0, 0);
      javaCharStream0.prevCharIsCR = true;
      stringReader0.close();
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FgRL4!ax5ah:+mHf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      stringReader0.ready();
      javaCharStream0.UpdateLineColumn('F');
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 'F', 'F', 60);
      javaCharStream1.backup(0);
      javaCharStream0.GetSuffix(60);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.reset();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1711), (-1711), 0);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.backup(2);
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((-1), 2);
      StringReader stringReader2 = new StringReader("");
      stringReader2.close();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      javaCharStream1.ExpandBuff(false);
      javaCharStream0.readChar();
      javaCharStream0.getColumn();
      javaCharStream0.ExpandBuff(true);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.reset();
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FgRL4!ax5ah:+mHf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      stringReader0.ready();
      javaCharStream0.UpdateLineColumn('F');
      javaCharStream0.UpdateLineColumn('}');
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 0, 1539);
      StringReader stringReader1 = new StringReader("FgRL4!ax5ah:+mHf");
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 73, (-1), 1);
      stringReader0.ready();
      char char0 = '@';
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader("{x-toqFe");
      char[] charArray0 = new char[6];
      charArray0[0] = '<';
      charArray0[1] = '<';
      charArray0[2] = 'h';
      charArray0[4] = '`';
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.readChar();
      javaCharStream1.ReInit((Reader) stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream1.GetSuffix((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("\"PrCRG\"_!");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1), 28, 28);
      javaCharStream0.ReadByte();
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 2048, 368);
      javaCharStream0.inBuf = 2048;
      javaCharStream0.column = 1;
      javaCharStream0.tokenBegin = 2048;
      javaCharStream0.available = 0;
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('&');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1), 28, 28);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FgRL4!ax5ah:+mHf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream.hexval('F');
      JavaCharStream.hexval('a');
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FgRL4!ax5ah:+mHf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      stringReader0.ready();
      javaCharStream0.UpdateLineColumn('F');
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      stringReader0.ready();
      javaCharStream0.UpdateLineColumn('c');
      javaCharStream0.UpdateLineColumn('L');
      javaCharStream0.GetImage();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      javaCharStream0.ExpandBuff(true);
      char[] charArray0 = new char[1];
      charArray0[0] = 'L';
      stringReader0.read(charArray0);
      JavaCharStream.hexval('c');
      javaCharStream0.GetImage();
      try { 
        JavaCharStream.hexval('(');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Q16I~.{");
      int int0 = 4096;
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4096, 4096, 0);
      stringReader0.ready();
      JavaCharStream.hexval('F');
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)31;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)31;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, (byte) (-92), (byte)31);
      javaCharStream0.backup((byte) (-92));
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      char char0 = 'S';
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FgRL4!ax5ah:+mHf");
      StringReader stringReader1 = new StringReader("FgRL4!ax5ah:+mHf");
      StringReader stringReader2 = new StringReader(".");
      stringReader2.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 28, (-1), 1);
      javaCharStream0.GetImage();
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      String string0 = "\"PrCRG\"\\_!";
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetSuffix(0);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("?][<AP S;e");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-241), (-241));
      javaCharStream0.adjustBeginLineColumn((-241), (-241));
      javaCharStream0.line = 636;
      javaCharStream0.maxNextCharInd = 7;
      javaCharStream0.readChar();
      javaCharStream0.getColumn();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 248, 248);
      javaCharStream0.ReInit((Reader) stringReader0, (-946), 7);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)47;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-92);
      byteArray0[4] = (byte) (-30);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.prevCharIsCR = false;
      javaCharStream0.readChar();
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      JavaCharStream.hexval('A');
      JavaCharStream.hexval('A');
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FgRL4!ax5ah:+mHf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      stringReader0.ready();
      javaCharStream0.UpdateLineColumn('F');
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 74, 0, 74);
      javaCharStream0.GetImage();
      JavaCharStream.hexval('F');
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), 28, 28);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[9];
      charArray0[0] = '&';
      charArray0[1] = 'E';
      charArray0[2] = 'c';
      charArray0[3] = '6';
      charArray0[4] = 'd';
      charArray0[5] = 'H';
      charArray0[6] = 'k';
      charArray0[7] = 'm';
      charArray0[8] = '#';
      javaCharStream1.buffer = charArray0;
      StringReader stringReader1 = new StringReader("");
      JavaCharStream.hexval('1');
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X2',y");
      stringReader0.reset();
      char[] charArray0 = new char[1];
      stringReader0.read(charArray0, 0, 0);
      stringReader0.mark(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, (-842), (-842));
      StringReader stringReader1 = new StringReader("X2',y");
      StringReader stringReader2 = new StringReader("X2',y");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      StringReader stringReader3 = new StringReader("c!,{p#w^D4agH");
      stringReader0.mark(2805);
      JavaCharStream.hexval('9');
      javaCharStream0.getBeginLine();
      javaCharStream1.BeginToken();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FgRL4!ax5ah:+mHf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      stringReader0.ready();
      javaCharStream0.UpdateLineColumn('F');
      javaCharStream0.readChar();
      javaCharStream0.getColumn();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("?][<AP S;e");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-241), (-241));
      javaCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 0, 0, 0);
      StringReader stringReader0 = new StringReader("{svUu)!");
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      char char0 = '>';
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("\"PrCRG\"_!");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-94);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.readChar();
      JavaCharStream.hexval('d');
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(4096);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 139);
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader1);
      javaCharStream0.backup((-3295));
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.GetImage();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      JavaCharStream javaCharStream1 = new JavaCharStream(bufferedInputStream0, 89, (-374));
      javaCharStream1.backup((-3295));
      stringReader0.markSupported();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1);
      javaCharStream2.GetSuffix(839);
      try { 
        javaCharStream1.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X2'y");
      stringReader0.reset();
      char[] charArray0 = new char[1];
      stringReader0.read(charArray0, 0, 0);
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FgRL4!ax5ah:+mHf");
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Q16I~.{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-3553), 0);
      javaCharStream0.backup(2048);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2048
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char char0 = 'V';
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      char[] charArray0 = new char[5];
      charArray0[0] = 'q';
      charArray0[1] = '~';
      charArray0[2] = '%';
      charArray0[3] = 'R';
      charArray0[4] = 'k';
      stringReader0.read(charArray0, 0, 0);
      stringReader0.mark(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0);
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("");
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StringReader stringReader0 = new StringReader("};h");
      stringReader0.reset();
      char char0 = 'e';
      char char1 = 'W';
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.backup((-3744));
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream.hexval('A');
      JavaCharStream.hexval('A');
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 10, 10);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X2',y");
      JavaCharStream.hexval('e');
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 81, 2510, 81);
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      JavaCharStream.hexval('8');
      StringReader stringReader0 = new StringReader("JkYB(bLq");
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String string0 = "X2',y";
      StringReader stringReader0 = new StringReader("X2',y");
      stringReader0.reset();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)101;
      byteArray0[1] = (byte)80;
      byte byte0 = (byte)72;
      byteArray0[2] = (byte)72;
      byteArray0[3] = (byte)69;
      byteArray0[4] = (byte)13;
      byteArray0[5] = (byte)80;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.readChar();
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      JavaCharStream.hexval('b');
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-92);
      byteArray0[1] = (byte) (-30);
      byteArray0[2] = (byte) (-30);
      byteArray0[3] = (byte) (-92);
      byteArray0[4] = (byte) (-92);
      byteArray0[6] = (byte) (-92);
      byteArray0[6] = (byte) (-92);
      byteArray0[7] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.readChar();
      JavaCharStream.hexval('d');
      javaCharStream0.Done();
      byteArrayInputStream0.markSupported();
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FgRL4!ax5ah:+mHf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      char char0 = 'U';
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StringReader stringReader0 = new StringReader("J_a`5fKv<V&&");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 28, 28, 1205);
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$RkIU&mQ]G)t/,k0HZ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 238, 31, 93);
      javaCharStream0.prevCharIsLF = true;
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"PrCRG\"_!");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-94);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark(983);
      byteArrayInputStream0.close();
      JavaCharStream.hexval('d');
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FgRL4!ax5ah:+mHf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      stringReader0.ready();
      javaCharStream0.UpdateLineColumn('F');
      stringReader0.ready();
      javaCharStream0.UpdateLineColumn('}');
      JavaCharStream.hexval('F');
      StringReader stringReader1 = new StringReader("FgRL4!ax5ah:+mHf");
      javaCharStream0.getBeginColumn();
      JavaCharStream.hexval('7');
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FgRL4!ax5ah:+mHf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      stringReader0.ready();
      javaCharStream0.bufsize = 86;
      javaCharStream0.UpdateLineColumn('F');
      javaCharStream0.UpdateLineColumn('}');
      javaCharStream0.GetImage();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      javaCharStream0.ExpandBuff(true);
      mockFileInputStream0.close();
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = (-1);
      char[] charArray0 = new char[6];
      charArray0[0] = 'S';
      charArray0[1] = '\\';
      charArray0[2] = '\\';
      charArray0[3] = 'R';
      charArray0[4] = 'y';
      charArray0[5] = '$';
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StringReader stringReader0 = new StringReader("T-C6");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      char[] charArray0 = new char[0];
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char char0 = 'A';
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)47;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-92);
      byteArray0[4] = (byte) (-30);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.ExpandBuff(false);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 63, 1741);
      javaCharStream1.readChar();
      javaCharStream1.readChar();
      javaCharStream1.getEndColumn();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.AdjustBuffSize();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-20);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-14);
      byteArray0[3] = (byte)15;
      byteArray0[4] = (byte)28;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)93;
      byte byte0 = (byte)0;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) null, (-1), (int) (byte)0, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("\"PrCRG\"_!");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1), 28, 28);
      char[] charArray0 = new char[3];
      charArray0[0] = '\"';
      charArray0[1] = 'J';
      charArray0[2] = 'J';
      stringReader1.read(charArray0);
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FgRL4!ax5ah:+mHf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      stringReader0.ready();
      javaCharStream0.UpdateLineColumn('F');
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 'F', 'F', 60);
      javaCharStream1.backup(0);
      javaCharStream0.getBeginLine();
      javaCharStream0.adjustBeginLineColumn(60, 59);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      int int0 = 0;
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1711), (-1711), 0);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.backup(2);
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((-1), 2);
      StringReader stringReader2 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      javaCharStream1.ExpandBuff(false);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1);
      javaCharStream2.nextCharInd = 0;
      javaCharStream0.readChar();
      javaCharStream0.ReInit((Reader) stringReader2);
      try { 
        javaCharStream2.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      try { 
        JavaCharStream.hexval('g');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      int int0 = 0;
      StringReader stringReader0 = new StringReader("[dPHiKe");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.backup((-3744));
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("O)@T![VR`hvY[");
      stringReader0.skip(0L);
      int int0 = 93;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3553), 93, 93);
      javaCharStream0.ReInit((Reader) stringReader0);
      int int1 = 68;
      javaCharStream0.backup((-3553));
      StringReader stringReader1 = new StringReader("O)@T![VR`hvY[");
      stringReader1.markSupported();
      javaCharStream0.BeginToken();
      int int2 = 12;
      javaCharStream0.adjustBeginLineColumn(78, 0);
      StringReader stringReader2 = new StringReader("O)@T![VR`hvY[");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      javaCharStream0.ExpandBuff(true);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      stringReader2.read();
      try { 
        javaCharStream2.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      JavaCharStream.hexval('d');
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      JavaCharStream.hexval('2');
      StringReader stringReader0 = new StringReader("");
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = 139;
      stringReader0.skip(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 139);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.backup(68);
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader1);
      javaCharStream0.GetImage();
      int int1 = (-620);
      javaCharStream0.backup((-620));
      boolean boolean0 = javaCharStream0.prevCharIsLF;
      int int2 = 0;
      javaCharStream0.GetSuffix(139);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.reset();
      char char0 = '}';
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, (-1191), (-1191), (-1191));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1711), (-1711), 0);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.backup(2);
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((-1), 2);
      StringReader stringReader2 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      javaCharStream1.ExpandBuff(false);
      char[] charArray0 = new char[0];
      javaCharStream0.buffer = charArray0;
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4095
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FgRL4!ax5ah:+mHf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      stringReader0.ready();
      stringReader0.mark(0);
      javaCharStream0.UpdateLineColumn('F');
      StringReader stringReader1 = new StringReader("FgRL4!ax5ah:+mHf");
      JavaCharStream.hexval('d');
      StringReader stringReader2 = new StringReader(".");
      javaCharStream0.getBeginColumn();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FgRL4!ax5ah:+mHf");
      StringReader stringReader1 = new StringReader("n=<K[(KFnpC+IF(_XE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 97, (-241));
      javaCharStream0.adjustBeginLineColumn(97, 2308);
      javaCharStream0.readChar();
      javaCharStream0.getColumn();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 27, 86, 81);
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1, (-1240));
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.backup(1);
      javaCharStream0.getLine();
      javaCharStream0.ReInit((InputStream) pipedInputStream0, (-1240), (-4075), (-1085));
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.reset();
      JavaCharStream.hexval('a');
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('w');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X2',y");
      stringReader0.reset();
      JavaCharStream.hexval('B');
      JavaCharStream.hexval('B');
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), 28, 28);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 28, 28, 28);
      StringReader stringReader1 = new StringReader("U");
      JavaCharStream.hexval('9');
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X2',y");
      stringReader0.reset();
      char[] charArray0 = new char[1];
      stringReader0.read(charArray0, 0, 0);
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<");
      stringReader0.reset();
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), 28, 28);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 28, 28, 28);
      JavaCharStream.hexval('C');
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1677), (-1677), 0);
      javaCharStream0.bufsize = 0;
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "?][<AP S;e");
      StringReader stringReader0 = new StringReader("?][<AP S;e");
      stringReader0.skip(3230L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-241), (-241));
      javaCharStream0.adjustBeginLineColumn((-241), (-241));
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      JavaCharStream.hexval('b');
      JavaCharStream.hexval('b');
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("\"PrCRG\"_!");
      int int0 = 7;
      char char0 = '[';
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FgRL4!ax5ah:+mHf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      stringReader0.ready();
      javaCharStream0.UpdateLineColumn('F');
      javaCharStream0.UpdateLineColumn('}');
      javaCharStream0.GetImage();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      javaCharStream0.ExpandBuff(true);
      mockFileInputStream0.close();
      byte[] byteArray0 = null;
      int int0 = (-600);
      int int1 = 0;
      try { 
        pushbackInputStream0.skip(555L);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X2',y");
      stringReader0.reset();
      JavaCharStream.hexval('e');
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('e');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StringReader stringReader0 = new StringReader("X2',y");
      stringReader0.reset();
      char[] charArray0 = new char[1];
      stringReader0.read(charArray0, 0, 0);
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 28, 28, 28);
      JavaCharStream.hexval('C');
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream.hexval('A');
      StringReader stringReader2 = new StringReader("");
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StringReader stringReader0 = new StringReader("q^n");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-2528), (-2528));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.ExpandBuff(false);
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2391, 1161, 1161);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.backup(2);
      StringReader stringReader1 = new StringReader("$+TBN;o");
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((-15), (-15));
      StringReader stringReader2 = new StringReader(" column ");
      stringReader2.reset();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.ExpandBuff(false);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2);
      javaCharStream0.readChar();
      JavaCharStream.hexval('B');
      // Undeclared exception!
      try { 
        javaCharStream2.UpdateLineColumn(' ');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1711), (-1711), 0);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.backup(2);
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 2);
      javaCharStream0.adjustBeginLineColumn(2, 1706);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("C|,dv1k%$f(chuakj_\"");
      stringReader0.read();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)72;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2034, (-1263));
      stringReader0.close();
      int[] intArray0 = new int[1];
      intArray0[0] = (int) (byte)72;
      javaCharStream0.bufcolumn = intArray0;
      stringReader0.markSupported();
      char[] charArray0 = new char[8];
      charArray0[0] = 'p';
      charArray0[1] = 'T';
      charArray0[2] = '[';
      charArray0[3] = 'I';
      charArray0[4] = ']';
      charArray0[5] = 'b';
      charArray0[6] = 'G';
      javaCharStream0.buffer = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(588);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5D>{53jZ9zd&$Y9t)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 933, 933);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte) (-30);
      byteArray0[3] = (byte) (-92);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-5282), 1524, 190);
      char[] charArray0 = new char[4];
      charArray0[0] = '\"';
      charArray0[1] = '<';
      charArray0[2] = 'J';
      javaCharStream0.backup(1524);
      charArray0[3] = '\"';
      stringReader0.read(charArray0);
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("\"PrCRG\"_!");
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StringReader stringReader0 = new StringReader("{x-toqFe");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      char[] charArray0 = new char[6];
      charArray0[0] = '<';
      javaCharStream0.BeginToken();
      charArray0[1] = 'g';
      charArray0[2] = 'h';
      charArray0[3] = 'Z';
      charArray0[4] = '`';
      charArray0[5] = '1';
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, 0, 8);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      StringReader stringReader0 = new StringReader("JkYB(bLq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginLine();
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedOutputStream0.flush();
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "+#^M$G[L=|EW";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+#^M$G[L=|EW");
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.adjustBeginLineColumn((-2746), (-3371));
      pipedOutputStream0.close();
      int int0 = 10;
      javaCharStream0.GetSuffix(10);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.adjustBeginLineColumn((-3371), (-3371));
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-2746));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }
}
