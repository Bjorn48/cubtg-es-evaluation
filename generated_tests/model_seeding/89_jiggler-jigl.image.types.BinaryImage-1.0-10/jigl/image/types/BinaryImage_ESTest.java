/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 26 02:26:55 GMT 2019
 */

package jigl.image.types;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jigl.image.ROI;
import jigl.image.types.BinaryImage;
import jigl.image.types.ImageKernel;
import jigl.image.types.KernelType;
import jigl.image.types.PhaseImage;
import jigl.image.types.RealGrayImage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BinaryImage_ESTest extends BinaryImage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      BinaryImage binaryImage0 = new BinaryImage(16, 0, byteArray0);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      RealGrayImage realGrayImage0 = new RealGrayImage(2692, 2692);
      BinaryImage binaryImage1 = new BinaryImage(2, 2);
      ROI rOI0 = new ROI(0, 4001, 0, 0);
      rOI0.ux();
      rOI0.ly();
      rOI0.ux();
      ROI rOI1 = new ROI();
      rOI1.lx();
      rOI1.ly();
      binaryImage1.copy(rOI1);
      binaryImage1.compliment();
      // Undeclared exception!
      try { 
        binaryImage1.difference(binaryImage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = null;
      try {
        binaryImage1 = new BinaryImage((-10), (-10));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      RealGrayImage realGrayImage0 = new RealGrayImage(2692, 2692);
      BinaryImage binaryImage1 = new BinaryImage(2, 2);
      ROI rOI0 = new ROI(44, 4001, 0, 44);
      rOI0.ux();
      rOI0.ly();
      ROI rOI1 = new ROI();
      rOI1.lx();
      rOI0.ux();
      rOI1.ly();
      binaryImage1.copy(rOI1);
      BinaryImage binaryImage2 = new BinaryImage(4001, 0);
      binaryImage1.difference(binaryImage0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = new BinaryImage(2, 2);
      binaryImage0.shift(7, 7);
      // Undeclared exception!
      try { 
        binaryImage1.intersection(binaryImage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(9, 9);
      BinaryImage binaryImage1 = new BinaryImage(binaryImage0);
      Byte byte0 = new Byte((byte)85);
      byte[][] byteArray0 = new byte[1][0];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-34);
      byteArray1[1] = (byte)85;
      byteArray1[2] = (byte) (-34);
      byteArray1[3] = (byte)90;
      byteArray1[4] = (byte) (-34);
      byteArray1[5] = (byte) (-34);
      byteArray0[0] = byteArray1;
      BinaryImage binaryImage2 = new BinaryImage(byteArray0);
      // Undeclared exception!
      try { 
        binaryImage2.set(9, 5749, (Byte) (byte) (-34));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5749
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.compliment();
      Byte byte0 = Byte.valueOf((byte)45);
      Byte.compare((byte) (-10), (byte)4);
      ROI rOI0 = null;
      // Undeclared exception!
      try { 
        binaryImage0.set(0, 0, byte0, (ROI) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[][] byteArray0 = new byte[4][9];
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte)1;
      byteArray1[4] = (byte) (-49);
      byteArray1[5] = (byte)0;
      byteArray1[6] = (byte)3;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[2];
      byteArray2[0] = (byte)0;
      byteArray2[1] = (byte)0;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[1];
      byteArray3[0] = (byte)0;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[2];
      byteArray4[0] = (byte)3;
      byteArray4[1] = (byte)0;
      byteArray0[3] = byteArray4;
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      RealGrayImage realGrayImage0 = new RealGrayImage(2692, 2692);
      BinaryImage binaryImage1 = new BinaryImage(2, 2);
      ROI rOI0 = new ROI(0, 4001, 0, 0);
      rOI0.ux();
      rOI0.ly();
      rOI0.ux();
      ROI rOI1 = new ROI();
      rOI1.lx();
      rOI0.ux();
      rOI1.ly();
      binaryImage1.copy(rOI1);
      binaryImage1.count();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = new BinaryImage(2692, 8);
      BinaryImage binaryImage2 = binaryImage1.shift((-450), (-450));
      BinaryImage binaryImage3 = new BinaryImage();
      binaryImage2.toString();
      BinaryImage binaryImage4 = binaryImage0.intersection(binaryImage3);
      binaryImage4.count();
      binaryImage4.getJavaImage();
      binaryImage1.union(binaryImage4);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.getData();
      binaryImage0.max();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.shift(255, 2868);
      ROI rOI0 = new ROI(0, 4001, 0, 0);
      rOI0.ux();
      rOI0.ly();
      rOI0.setROI(1932, 4571, 0, 1932);
      rOI0.ux();
      ROI rOI1 = new ROI();
      rOI1.lx();
      rOI0.ux();
      rOI1.ly();
      // Undeclared exception!
      try { 
        binaryImage0.copy(rOI1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      BinaryImage binaryImage1 = new BinaryImage(2, 425);
      binaryImage1.shift(425, 255);
      binaryImage1.count();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.copy();
      Byte.valueOf((byte) (-98));
      Byte byte0 = Byte.valueOf((byte)0);
      // Undeclared exception!
      try { 
        binaryImage0.set((int) (byte)38, (-2681), byte0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(0, 0);
      Byte.valueOf((byte) (-1));
      KernelType kernelType0 = KernelType.D_XY;
      ImageKernel imageKernel0 = new ImageKernel(kernelType0);
      imageKernel0.min();
      BinaryImage binaryImage1 = new BinaryImage(imageKernel0);
      BinaryImage binaryImage2 = new BinaryImage();
      // Undeclared exception!
      try { 
        binaryImage2.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BinaryImage binaryImage0 = null;
      try {
        binaryImage0 = new BinaryImage((BinaryImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      binaryImage0.getJavaImage();
      BinaryImage binaryImage1 = new BinaryImage(1732, 425);
      BinaryImage binaryImage2 = new BinaryImage(771, 2);
      BinaryImage binaryImage3 = binaryImage0.shift(2, (-1024));
      binaryImage3.union(binaryImage0);
      // Undeclared exception!
      binaryImage1.difference(binaryImage0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage(848, 848);
      BinaryImage binaryImage1 = new BinaryImage(3, 255);
      // Undeclared exception!
      try { 
        binaryImage0.intersection(binaryImage1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      Byte byte0 = new Byte((byte)10);
      // Undeclared exception!
      try { 
        binaryImage0.set((int) (byte)10, (int) (byte)10, byte0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PhaseImage phaseImage0 = new PhaseImage(0, 0);
      BinaryImage binaryImage0 = new BinaryImage(0, 2);
      BinaryImage binaryImage1 = binaryImage0.shift(0, 95);
      BinaryImage binaryImage2 = new BinaryImage();
      binaryImage1.toString();
      BinaryImage binaryImage3 = binaryImage1.intersection(binaryImage2);
      binaryImage1.count();
      binaryImage1.getJavaImage();
      binaryImage3.union(binaryImage0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BinaryImage binaryImage0 = new BinaryImage();
      // Undeclared exception!
      try { 
        binaryImage0.clear();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jigl.image.types.BinaryImage", e);
      }
  }
}
