/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 22:50:02 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jahuwaldt.plot.ContourAttrib;
import jahuwaldt.plot.ContourGenerator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ContourGenerator_ESTest extends ContourGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 4.7153455517373126E-8;
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = 2797.8792526694915;
      doubleArray1[1] = 2797.8792526694915;
      doubleArray1[2] = 4.7153455517373126E-8;
      double[][] doubleArray2 = new double[3][2];
      doubleArray2[0] = doubleArray0;
      doubleArray2[1] = doubleArray1;
      ContourAttrib[] contourAttribArray0 = new ContourAttrib[7];
      ContourAttrib contourAttrib0 = new ContourAttrib(8.636770561244316E-22);
      contourAttribArray0[0] = contourAttrib0;
      ContourAttrib contourAttrib1 = new ContourAttrib(2797.8792526694915);
      ContourAttrib contourAttrib2 = new ContourAttrib((-1557.0));
      contourAttribArray0[2] = contourAttrib2;
      ContourAttrib contourAttrib3 = new ContourAttrib(4.7153455517373126E-8);
      contourAttribArray0[3] = contourAttrib3;
      ContourAttrib contourAttrib4 = new ContourAttrib(8.636770561244316E-22);
      contourAttribArray0[6] = contourAttrib4;
      ContourAttrib contourAttrib5 = new ContourAttrib(8.636770561244316E-22);
      contourAttribArray0[5] = contourAttrib5;
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray2, doubleArray2, doubleArray2, 152, false);
      ContourGenerator contourGenerator1 = new ContourGenerator(doubleArray2[2], doubleArray1, doubleArray2, 152, false);
      contourGenerator1.getContours();
      contourGenerator0.getContours();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double[][] doubleArray0 = new double[10][4];
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, 4, false);
      contourGenerator0.getContours();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[][] doubleArray0 = new double[11][8];
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, (-589), false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[][] doubleArray0 = new double[2][2];
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = 1948.57;
      doubleArray1[1] = 1948.57;
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray1, doubleArray1, doubleArray0, (-2350), true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      double[][] doubleArray1 = new double[0][6];
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray1, 1410, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Inconsistant array sizes.
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[][] doubleArray0 = new double[2][2];
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = 1948.57;
      doubleArray1[1] = 1.7976931348623157E308;
      doubleArray0[0] = doubleArray1;
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, (ContourAttrib[]) null);
      ContourGenerator contourGenerator1 = new ContourGenerator(doubleArray1, doubleArray1, doubleArray0, (ContourAttrib[]) null);
      contourGenerator1.done();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = 1060.255396;
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, (double[][]) null, (ContourAttrib[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double[][] doubleArray0 = new double[3][6];
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, (ContourAttrib[]) null);
      contourGenerator0.cancel();
      // Undeclared exception!
      try { 
        contourGenerator0.getContours();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 4.7153455517373126E-8;
      doubleArray0[1] = 2797.8792526694915;
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = 2797.8792526694915;
      doubleArray0[1] = 2797.8792526694915;
      doubleArray1[2] = 4.7153455517373126E-8;
      double[][] doubleArray2 = new double[3][2];
      doubleArray2[1] = doubleArray1;
      ContourAttrib contourAttrib0 = new ContourAttrib(2797.8792526694915);
      ContourAttrib contourAttrib1 = new ContourAttrib(2797.8792526694915);
      ContourAttrib contourAttrib2 = new ContourAttrib(4.7153455517373126E-8);
      ContourAttrib contourAttrib3 = new ContourAttrib(0.0);
      ContourAttrib contourAttrib4 = new ContourAttrib(4.7153455517373126E-8);
      ContourAttrib contourAttrib5 = new ContourAttrib(3714.59130677);
      int int0 = 152;
      double[][] doubleArray3 = new double[3][0];
      doubleArray3[0] = doubleArray1;
      doubleArray3[1] = doubleArray1;
      doubleArray3[2] = doubleArray1;
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray2, doubleArray2, doubleArray3, 152, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Inconsistant array sizes.
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[][] doubleArray0 = new double[3][5];
      double[] doubleArray1 = new double[2];
      doubleArray1[1] = (double) (-2723);
      doubleArray1[1] = (double) (-2723);
      doubleArray0[1] = doubleArray1;
      double[][] doubleArray2 = new double[1][7];
      doubleArray2[0] = doubleArray1;
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray2, doubleArray0, 34, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Inconsistant array sizes.
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double[][] doubleArray0 = new double[2][2];
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = 1948.57;
      doubleArray1[1] = 1.7976931348623157E308;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[8];
      doubleArray2[0] = 1948.57;
      doubleArray2[1] = 1948.57;
      doubleArray2[2] = 1948.57;
      doubleArray2[3] = 1.7976931348623157E308;
      doubleArray2[4] = 1.7976931348623157E308;
      doubleArray2[5] = 1948.57;
      doubleArray2[6] = 1.7976931348623157E308;
      doubleArray2[7] = 1948.57;
      doubleArray0[1] = doubleArray2;
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, 332, true);
      contourGenerator0.getContours();
      contourGenerator0.cancel();
      contourGenerator0.cancel();
      contourGenerator0.cancel();
      contourGenerator0.getContours();
      contourGenerator0.cancel();
      contourGenerator0.cancel();
      contourGenerator0.done();
      contourGenerator0.cancel();
      contourGenerator0.done();
      contourGenerator0.getContours();
      contourGenerator0.done();
      contourGenerator0.cancel();
      contourGenerator0.cancel();
      contourGenerator0.getContours();
      contourGenerator0.getProgress();
      contourGenerator0.cancel();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double[][] doubleArray0 = new double[1][1];
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = 1.0;
      doubleArray0[0] = doubleArray1;
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, 0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Data arrays must have more than one row or column.
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 4.7153455517373126E-8;
      doubleArray0[1] = 2797.8792526694915;
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = 2797.8792526694915;
      doubleArray1[1] = 2797.8792526694915;
      doubleArray1[2] = 4.7153455517373126E-8;
      double[][] doubleArray2 = new double[3][2];
      doubleArray2[0] = doubleArray0;
      doubleArray2[1] = doubleArray1;
      doubleArray2[2] = doubleArray0;
      ContourAttrib[] contourAttribArray0 = new ContourAttrib[7];
      ContourAttrib contourAttrib0 = new ContourAttrib(8.636770561244316E-22);
      contourAttribArray0[0] = contourAttrib0;
      ContourAttrib contourAttrib1 = new ContourAttrib(2797.8792526694915);
      contourAttribArray0[1] = contourAttrib1;
      ContourAttrib contourAttrib2 = new ContourAttrib((-1557.0));
      contourAttribArray0[2] = contourAttrib2;
      ContourAttrib contourAttrib3 = new ContourAttrib(4.7153455517373126E-8);
      contourAttribArray0[3] = contourAttrib3;
      ContourAttrib contourAttrib4 = new ContourAttrib(8.636770561244316E-22);
      contourAttribArray0[4] = contourAttrib4;
      ContourAttrib contourAttrib5 = new ContourAttrib(8.636770561244316E-22);
      contourAttribArray0[5] = contourAttrib5;
      ContourAttrib contourAttrib6 = new ContourAttrib(2.223448367228939E-15);
      contourAttribArray0[6] = contourAttrib6;
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray2, doubleArray2, doubleArray2, contourAttribArray0);
      contourGenerator0.getContours();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-1258.9);
      doubleArray0[1] = 2797.8792526694915;
      double[] doubleArray1 = new double[3];
      double[][] doubleArray2 = new double[5][3];
      doubleArray2[0] = doubleArray0;
      doubleArray2[1] = doubleArray0;
      doubleArray2[2] = doubleArray1;
      doubleArray2[3] = doubleArray0;
      doubleArray2[4] = doubleArray1;
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray2, doubleArray2, doubleArray2, 14, false);
      contourGenerator0.getContours();
      ContourGenerator contourGenerator1 = null;
      try {
        contourGenerator1 = new ContourGenerator(doubleArray0, (double[]) null, doubleArray2, (-2122), true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double[][] doubleArray0 = new double[3][6];
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, 0, false);
      contourGenerator0.getContours();
      contourGenerator0.getContours();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double[][] doubleArray0 = new double[2][2];
      double[] doubleArray1 = new double[1];
      doubleArray1[0] = (-673.6848067);
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[0];
      doubleArray0[1] = doubleArray2;
      double[][] doubleArray3 = new double[8][8];
      double[] doubleArray4 = new double[1];
      doubleArray4[0] = (-673.6848067);
      doubleArray3[0] = doubleArray4;
      doubleArray3[1] = doubleArray1;
      doubleArray3[2] = doubleArray1;
      doubleArray3[3] = doubleArray2;
      doubleArray3[4] = doubleArray2;
      doubleArray3[5] = doubleArray2;
      doubleArray3[6] = doubleArray1;
      doubleArray3[7] = doubleArray1;
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray3, doubleArray3, 0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Inconsistant array sizes.
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 10.362652679095248;
      double[][] doubleArray1 = new double[2][0];
      ContourAttrib[] contourAttribArray0 = new ContourAttrib[1];
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray1, doubleArray1, doubleArray1, contourAttribArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Data arrays must have more than one row or column.
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double[][] doubleArray0 = new double[2][2];
      double[] doubleArray1 = new double[1];
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, (ContourAttrib[]) null);
      ContourGenerator contourGenerator1 = null;
      try {
        contourGenerator1 = new ContourGenerator(doubleArray1, doubleArray1, doubleArray0, (ContourAttrib[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Inconsistant array sizes.
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double[][] doubleArray0 = new double[2][2];
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = 1948.57;
      doubleArray1[1] = 1948.57;
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray1, doubleArray1, doubleArray0, 1000, false);
      contourGenerator0.getContours();
      contourGenerator0.cancel();
      contourGenerator0.getContours();
      contourGenerator0.getProgress();
      contourGenerator0.getProgress();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double[][] doubleArray0 = new double[3][7];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = 325.538123645091;
      doubleArray1[1] = 2604.6951;
      doubleArray1[2] = 7.150068134442752E290;
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray1, doubleArray1, doubleArray0, 2, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Inconsistant array sizes.
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ContourAttrib[] contourAttribArray0 = new ContourAttrib[0];
      double[][] doubleArray0 = new double[0][8];
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, contourAttribArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 4.7153455517373126E-8;
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = 2797.8792526694915;
      doubleArray1[1] = 2797.8792526694915;
      doubleArray1[2] = 4.7153455517373126E-8;
      double[][] doubleArray2 = new double[3][2];
      doubleArray2[0] = doubleArray0;
      doubleArray2[1] = doubleArray1;
      doubleArray2[2] = doubleArray0;
      ContourAttrib[] contourAttribArray0 = new ContourAttrib[7];
      ContourAttrib contourAttrib0 = new ContourAttrib(8.636770561244316E-22);
      contourAttribArray0[0] = contourAttrib0;
      ContourAttrib contourAttrib1 = new ContourAttrib(2797.8792526694915);
      ContourAttrib contourAttrib2 = new ContourAttrib((-1557.0));
      contourAttribArray0[2] = contourAttrib2;
      ContourAttrib contourAttrib3 = new ContourAttrib(4.7153455517373126E-8);
      contourAttribArray0[3] = contourAttrib3;
      ContourAttrib contourAttrib4 = new ContourAttrib(8.636770561244316E-22);
      contourAttribArray0[4] = contourAttrib4;
      ContourAttrib contourAttrib5 = new ContourAttrib(8.636770561244316E-22);
      contourAttribArray0[5] = contourAttrib5;
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray2, doubleArray2, doubleArray2, 152, false);
      ContourGenerator contourGenerator1 = new ContourGenerator(doubleArray0, doubleArray1, doubleArray2, 152, false);
      contourGenerator1.getContours();
      contourGenerator0.getContours();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double[][] doubleArray0 = new double[7][8];
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = 0.0;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[7];
      doubleArray2[0] = 0.0;
      doubleArray2[2] = 0.0;
      doubleArray2[3] = 0.0;
      doubleArray2[4] = 0.0;
      doubleArray2[5] = 0.0;
      doubleArray2[6] = 0.0;
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray1, doubleArray2, doubleArray0, 316, true);
      ContourGenerator contourGenerator1 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, 316, false);
      contourGenerator1.getContours();
      contourGenerator1.cancel();
      contourGenerator1.getContours();
      contourGenerator0.cancel();
      contourGenerator0.cancel();
      contourGenerator0.cancel();
      contourGenerator0.cancel();
      contourGenerator1.cancel();
      contourGenerator1.getContours();
      ContourGenerator contourGenerator2 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, 316, true);
      contourGenerator2.cancel();
      contourGenerator0.cancel();
      contourGenerator0.done();
      contourGenerator0.cancel();
      contourGenerator0.done();
      contourGenerator1.getContours();
      // Undeclared exception!
      contourGenerator2.getContours();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 2797.8792526694915;
      doubleArray0[1] = 2797.8792526694915;
      doubleArray0[2] = (-1258.9);
      double[][] doubleArray1 = new double[3][2];
      ContourAttrib[] contourAttribArray0 = new ContourAttrib[4];
      ContourAttrib contourAttrib0 = new ContourAttrib((-261.25));
      contourAttribArray0[0] = contourAttrib0;
      ContourAttrib contourAttrib1 = new ContourAttrib(3406.523503);
      contourAttribArray0[1] = contourAttrib1;
      ContourAttrib contourAttrib2 = new ContourAttrib(2770.0);
      contourAttribArray0[2] = contourAttrib2;
      contourAttrib0.clone();
      ContourAttrib contourAttrib3 = new ContourAttrib((-2539.228606731449));
      contourAttribArray0[3] = contourAttrib3;
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray1, contourAttribArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Inconsistant array sizes.
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      double[][] doubleArray0 = new double[4][6];
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, 0, false);
      contourGenerator0.getContours();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-1258.9);
      doubleArray0[1] = 2797.8792526694915;
      double[][] doubleArray1 = new double[7][3];
      doubleArray1[0] = doubleArray0;
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray1, doubleArray1, doubleArray1, 14, false);
      contourGenerator0.getContours();
      contourGenerator0.getProgress();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      double[][] doubleArray0 = new double[4][6];
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = 0.0;
      doubleArray1[2] = 0.0;
      doubleArray1[3] = (-558.1);
      doubleArray1[4] = 0.0;
      doubleArray1[5] = 241.954;
      doubleArray0[0] = doubleArray1;
      double[] doubleArray2 = new double[4];
      doubleArray2[0] = 0.0;
      doubleArray2[1] = (-558.1);
      doubleArray2[2] = 0.0;
      doubleArray2[3] = 241.954;
      doubleArray0[1] = doubleArray2;
      double[] doubleArray3 = new double[0];
      doubleArray0[2] = doubleArray3;
      double[] doubleArray4 = new double[6];
      doubleArray4[0] = (-558.1);
      doubleArray4[1] = (-558.1);
      doubleArray4[2] = 0.0;
      doubleArray4[3] = 0.0;
      doubleArray4[4] = 0.0;
      doubleArray4[5] = 0.0;
      doubleArray0[3] = doubleArray4;
      ContourAttrib[] contourAttribArray0 = new ContourAttrib[9];
      ContourAttrib contourAttrib0 = new ContourAttrib(1695.9046621);
      contourAttribArray0[0] = contourAttrib0;
      ContourAttrib contourAttrib1 = new ContourAttrib(0.0);
      contourAttribArray0[1] = contourAttrib1;
      ContourAttrib contourAttrib2 = new ContourAttrib((-2029.47392));
      contourAttribArray0[2] = contourAttrib2;
      ContourAttrib contourAttrib3 = new ContourAttrib((-558.1));
      contourAttribArray0[3] = contourAttrib3;
      ContourAttrib contourAttrib4 = new ContourAttrib(241.954);
      contourAttribArray0[4] = contourAttrib4;
      ContourAttrib contourAttrib5 = new ContourAttrib(2665.365);
      contourAttribArray0[5] = contourAttrib5;
      ContourAttrib contourAttrib6 = new ContourAttrib((-1.0));
      contourAttribArray0[6] = contourAttrib6;
      ContourAttrib contourAttrib7 = new ContourAttrib(0.0);
      contourAttribArray0[7] = contourAttrib7;
      ContourAttrib contourAttrib8 = new ContourAttrib(0.0);
      contourAttribArray0[8] = contourAttrib8;
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, contourAttribArray0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      double[][] doubleArray0 = new double[3][6];
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = (double) 1000;
      doubleArray1[1] = (double) 1000;
      doubleArray1[2] = (double) 1000;
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray1, doubleArray1, doubleArray0, 1000, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Inconsistant array sizes.
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-1258.9);
      doubleArray0[1] = 2797.8792526694915;
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = 2797.8792526694915;
      doubleArray1[1] = 2797.8792526694915;
      doubleArray1[2] = (-1258.9);
      double[][] doubleArray2 = new double[3][2];
      doubleArray2[0] = doubleArray0;
      doubleArray2[1] = doubleArray1;
      doubleArray2[2] = doubleArray0;
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray1, doubleArray2, (-2350), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Function data must be > 0 for logarithmic intervals.
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-1258.9);
      doubleArray0[1] = 2797.8792526694915;
      double[][] doubleArray1 = new double[5][3];
      doubleArray1[1] = doubleArray0;
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray1, doubleArray1, doubleArray1, 32, false);
      // Undeclared exception!
      try { 
        contourGenerator0.getContours();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double[][] doubleArray0 = new double[10][4];
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray0, doubleArray0, doubleArray0, 4, true);
      contourGenerator0.getContours();
      contourGenerator0.getContours();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-1258.8662312150511);
      double[][] doubleArray1 = new double[9][4];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray1, doubleArray1, doubleArray1, 4, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Function data must be > 0 for logarithmic intervals.
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-871.44495679758);
      doubleArray0[1] = 1.0;
      doubleArray0[2] = 357.7;
      doubleArray0[3] = 1037.937911019107;
      doubleArray0[4] = (-649.4761618129091);
      doubleArray0[5] = 0.0;
      doubleArray0[6] = 796.872;
      doubleArray0[7] = (-1.0);
      doubleArray0[8] = (-2290.425582);
      double[] doubleArray1 = new double[3];
      doubleArray1[0] = 357.7;
      doubleArray1[1] = (-2290.425582);
      doubleArray1[2] = (-871.44495679758);
      double[][] doubleArray2 = new double[1][4];
      doubleArray2[0] = doubleArray1;
      ContourAttrib contourAttrib0 = new ContourAttrib((-649.4761618129091));
      ContourGenerator contourGenerator0 = null;
      try {
        contourGenerator0 = new ContourGenerator(doubleArray2, doubleArray2, doubleArray2, (ContourAttrib[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Data arrays must have more than one row or column.
         //
         verifyException("jahuwaldt.plot.ContourGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 4.7153455517373126E-8;
      double[][] doubleArray1 = new double[2][0];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray1, doubleArray1, doubleArray1, 554, false);
      contourGenerator0.getContours();
      contourGenerator0.getContours();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-1258.9);
      double[][] doubleArray1 = new double[9][4];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray1, doubleArray1, doubleArray1, 4, false);
      contourGenerator0.cancel();
      contourGenerator0.getContours();
      contourGenerator0.getProgress();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (-1258.9);
      doubleArray0[1] = 2797.8792526694915;
      double[][] doubleArray1 = new double[4][3];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      ContourAttrib contourAttrib0 = new ContourAttrib((-1258.9));
      ContourAttrib contourAttrib1 = new ContourAttrib(0.7100104124365719);
      ContourAttrib[] contourAttribArray0 = new ContourAttrib[4];
      contourAttribArray0[0] = contourAttrib0;
      contourAttribArray0[1] = contourAttrib0;
      contourAttribArray0[2] = contourAttrib1;
      contourAttribArray0[3] = contourAttrib0;
      ContourGenerator contourGenerator0 = new ContourGenerator(doubleArray1, doubleArray1, doubleArray1, contourAttribArray0);
      contourGenerator0.getContours();
  }
}
