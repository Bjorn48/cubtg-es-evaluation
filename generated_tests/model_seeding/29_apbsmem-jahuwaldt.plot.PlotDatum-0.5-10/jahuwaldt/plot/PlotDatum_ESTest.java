/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 18:20:53 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import jahuwaldt.plot.BoxLRSymbol;
import jahuwaldt.plot.BoxULSymbol;
import jahuwaldt.plot.PlotDatum;
import jahuwaldt.plot.SquareSymbol;
import jahuwaldt.plot.ThinRect1Symbol;
import jahuwaldt.plot.Triangle3Symbol;
import java.awt.Color;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlotDatum_ESTest extends PlotDatum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BoxULSymbol boxULSymbol0 = new BoxULSymbol();
      PlotDatum plotDatum0 = new PlotDatum(1090.3210621704, 1.0, false, boxULSymbol0);
      plotDatum0.setYError((-1.0));
      boolean boolean0 = plotDatum0.hasErrorBar();
      assertEquals((-1.0), plotDatum0.getYError(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1182.343443940332, 1182.343443940332, false);
      plotDatum0.setYError(783.7808708090117);
      double double0 = plotDatum0.getYError();
      assertEquals(783.7808708090117, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(34.8, 0.0, true);
      double double0 = plotDatum0.getY();
      assertEquals(34.8, plotDatum0.x, 0.01);
      assertTrue(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-1311.95182028), 3367.30955224486, false);
      double double0 = plotDatum0.getY();
      assertFalse(plotDatum0.connected());
      assertEquals(3367.30955224486, double0, 0.01);
      assertEquals((-1311.95182028), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 484.686343, true);
      double double0 = plotDatum0.getX();
      assertEquals(484.686343, plotDatum0.y, 0.01);
      assertEquals(0.0, double0, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertTrue(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1.0, 1.0, false);
      double double0 = plotDatum0.getX();
      assertEquals(1.0, double0, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(1.0, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1182.343443940332, 1182.343443940332, false);
      plotDatum0.getPlotSymbol();
      assertFalse(plotDatum0.connected());
      assertEquals(1182.343443940332, plotDatum0.x, 0.01);
      assertEquals(1182.343443940332, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BoxLRSymbol boxLRSymbol0 = new BoxLRSymbol();
      boxLRSymbol0.setSize(0);
      PlotDatum plotDatum0 = new PlotDatum(163.899960957771, 163.899960957771, false, boxLRSymbol0);
      plotDatum0.getPlotSymbol();
      assertFalse(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(163.899960957771, plotDatum0.x, 0.01);
      assertEquals(163.899960957771, plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Triangle3Symbol triangle3Symbol0 = new Triangle3Symbol();
      PlotDatum plotDatum0 = new PlotDatum(2309L, 2309L, true, triangle3Symbol0);
      triangle3Symbol0.setSize((-1));
      plotDatum0.getPlotSymbol();
      assertEquals(2309.0, plotDatum0.x, 0.01);
      assertEquals(2309.0, plotDatum0.y, 0.01);
      assertTrue(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(3196.0, 0.0, true);
      Color color0 = new Color(17, 17, 17, 17);
      plotDatum0.setLineColor(color0);
      Color color1 = plotDatum0.getLineColor();
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertTrue(plotDatum0.connected());
      assertEquals(17, color1.getGreen());
      assertEquals(3196.0, plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1182.343443940332, 1182.343443940332, false);
      Color color0 = new Color(4764);
      plotDatum0.setLineColor(color0);
      Color color1 = plotDatum0.getLineColor();
      assertEquals(1182.343443940332, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(plotDatum0.connected());
      assertEquals(1182.343443940332, plotDatum0.y, 0.01);
      assertEquals(156, color1.getBlue());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-1080.240196242), 10.0, true);
      boolean boolean0 = plotDatum0.connected();
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-1080.240196242), plotDatum0.x, 0.01);
      assertEquals(10.0, plotDatum0.y, 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Triangle3Symbol triangle3Symbol0 = new Triangle3Symbol();
      PlotDatum plotDatum0 = new PlotDatum(2309L, 2309L, true, triangle3Symbol0);
      PlotDatum plotDatum1 = (PlotDatum)plotDatum0.clone();
      assertEquals(2309.0, plotDatum1.y, 0.01);
      assertNotSame(plotDatum1, plotDatum0);
      assertEquals(2309.0, plotDatum1.x, 0.01);
      assertTrue(plotDatum1.connected());
      assertFalse(plotDatum1.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-20.0), (-20.0), true);
      PlotDatum plotDatum1 = (PlotDatum)plotDatum0.clone();
      assertNotSame(plotDatum1, plotDatum0);
      assertEquals((-20.0), plotDatum1.y, 0.01);
      assertEquals((-20.0), plotDatum1.x, 0.01);
      assertTrue(plotDatum1.connected());
      assertFalse(plotDatum1.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-20.0), (-20.0), true);
      plotDatum0.setLineColor((Color) null);
      assertEquals((-20.0), plotDatum0.y, 0.01);
      assertTrue(plotDatum0.connected());
      assertEquals((-20.0), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, (-1.0), true);
      plotDatum0.setYError(0.0);
      assertTrue(plotDatum0.connected());
      assertEquals((-1.0), plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertEquals(0.0, plotDatum0.getYError(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-20.0), (-20.0), true);
      assertEquals(0.0, plotDatum0.getYError(), 0.01);
      
      plotDatum0.setYError((-20.0));
      double double0 = plotDatum0.getYError();
      assertEquals((-20.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-20.0), (-20.0), true);
      double double0 = plotDatum0.getYError();
      assertEquals(0.0, double0, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertTrue(plotDatum0.connected());
      assertEquals((-20.0), plotDatum0.x, 0.01);
      assertEquals((-20.0), plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-870.6217949863836), (-870.6217949863836), false);
      boolean boolean0 = plotDatum0.connected();
      assertFalse(boolean0);
      assertEquals((-870.6217949863836), plotDatum0.y, 0.01);
      assertEquals((-870.6217949863836), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ThinRect1Symbol thinRect1Symbol0 = new ThinRect1Symbol();
      PlotDatum plotDatum0 = new PlotDatum((-860.8890587932917), (-860.8890587932917), true, thinRect1Symbol0);
      boolean boolean0 = plotDatum0.hasErrorBar();
      assertEquals((-860.8890587932917), plotDatum0.x, 0.01);
      assertEquals((-860.8890587932917), plotDatum0.y, 0.01);
      assertFalse(boolean0);
      assertTrue(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-20.0), (-20.0), true);
      plotDatum0.setX(1.0);
      assertEquals(1.0, plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1182.343443940332, 1182.343443940332, false);
      plotDatum0.setConnected(false);
      assertFalse(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(1182.343443940332, plotDatum0.y, 0.01);
      assertEquals(1182.343443940332, plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Triangle3Symbol triangle3Symbol0 = new Triangle3Symbol();
      PlotDatum plotDatum0 = new PlotDatum(2309L, 2309L, true, triangle3Symbol0);
      plotDatum0.getPlotSymbol();
      assertTrue(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(2309.0, plotDatum0.x, 0.01);
      assertEquals(2309.0, plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-2358.993477168847), (-2358.993477168847), false);
      double double0 = plotDatum0.getY();
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-2358.993477168847), double0, 0.01);
      assertFalse(plotDatum0.connected());
      assertEquals((-2358.993477168847), plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1.0, 1.0, false);
      SquareSymbol squareSymbol0 = new SquareSymbol();
      plotDatum0.setPlotSymbol(squareSymbol0);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(1.0, plotDatum0.y, 0.01);
      assertEquals(1.0, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(3196.0, 0.0, true);
      plotDatum0.getLineColor();
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertEquals(3196.0, plotDatum0.x, 0.01);
      assertTrue(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-20.0), (-20.0), true);
      plotDatum0.setY(10.0);
      assertEquals(10.0, plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-2358.993477168847), (-2358.993477168847), false);
      double double0 = plotDatum0.getX();
      assertEquals((-2358.993477168847), double0, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-2358.993477168847), plotDatum0.y, 0.01);
      assertFalse(plotDatum0.connected());
  }
}
