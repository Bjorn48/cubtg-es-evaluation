<?xml version="1.0"?><ts><start>s0</start><states><state id="s3"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s4"><transition target="s4" action="javax.net.ssl.SSLEngine.unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer)" proba="0.5"></transition><transition target="s5" action="javax.net.ssl.SSLEngine.closeInbound()" proba="0.5"></transition></state><state id="s5"><transition target="s5" action="javax.net.ssl.SSLEngine.closeInbound()" proba="0.5"></transition><transition target="sX" action="epsilon" proba="0.5"></transition></state><state id="s6"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s7"><transition target="s8" action="javax.net.ssl.SSLEngine.beginHandshake()" proba="1.0"></transition></state><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s8"><transition target="s3" action="javax.net.ssl.SSLEngine.getHandshakeStatus()" proba="1.0"></transition></state><state id="s0"><transition target="s4" action="javax.net.ssl.SSLEngine.unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer)" proba="0.14285714285714285"></transition><transition target="s6" action="javax.net.ssl.SSLEngine.wrap(java.nio.ByteBuffer,java.nio.ByteBuffer)" proba="0.2857142857142857"></transition><transition target="s7" action="javax.net.ssl.SSLEngine.setUseClientMode(boolean)" proba="0.14285714285714285"></transition><transition target="s1" action="javax.net.ssl.SSLEngine.isOutboundDone()" proba="0.2857142857142857"></transition><transition target="s2" action="javax.net.ssl.SSLEngine.getDelegatedTask()" proba="0.14285714285714285"></transition></state><state id="s1"><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition><transition target="s1" action="javax.net.ssl.SSLEngine.isOutboundDone()" proba="0.3333333333333333"></transition></state><state id="s2"><transition target="s3" action="javax.net.ssl.SSLEngine.getHandshakeStatus()" proba="1.0"></transition></state></states></ts>