/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 10:39:38 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import jahuwaldt.plot.SquareSymbol;
import java.awt.Color;
import java.awt.Graphics;
import java.util.Vector;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SquareSymbol_ESTest extends SquareSymbol_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SquareSymbol squareSymbol0 = new SquareSymbol();
      Color color0 = Color.PINK;
      squareSymbol0.setFillColor(color0);
      Graphics graphics0 = mock(Graphics.class, new ViolatedAssumptionAnswer());
      doReturn(color0).when(graphics0).getColor();
      squareSymbol0.draw(graphics0, 175, 0);
      assertEquals(8, squareSymbol0.getSize());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SquareSymbol squareSymbol0 = new SquareSymbol();
      // Undeclared exception!
      try { 
        squareSymbol0.draw((Graphics) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("jahuwaldt.plot.SquareSymbol", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SquareSymbol squareSymbol0 = new SquareSymbol();
      squareSymbol0.setBorderColor((Color) null);
      Graphics graphics0 = mock(Graphics.class, new ViolatedAssumptionAnswer());
      doReturn((Color) null).when(graphics0).getColor();
      squareSymbol0.draw(graphics0, 0, 0);
      assertEquals(8, squareSymbol0.getSize());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SquareSymbol squareSymbol0 = new SquareSymbol();
      JList<DefaultListCellRenderer> jList0 = new JList<DefaultListCellRenderer>((Vector<? extends DefaultListCellRenderer>) null);
      Color color0 = jList0.getSelectionBackground();
      squareSymbol0.setFillColor(color0);
      Graphics graphics0 = mock(Graphics.class, new ViolatedAssumptionAnswer());
      doReturn((Color) null).when(graphics0).getColor();
      squareSymbol0.draw(graphics0, 0, 0);
      assertEquals(8, squareSymbol0.getSize());
  }
}
