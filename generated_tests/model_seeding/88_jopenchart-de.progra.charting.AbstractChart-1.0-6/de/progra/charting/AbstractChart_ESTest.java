/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 25 21:39:50 GMT 2019
 */

package de.progra.charting;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.progra.charting.CoordSystem;
import de.progra.charting.DefaultChart;
import de.progra.charting.Legend;
import de.progra.charting.Title;
import de.progra.charting.model.ChartDataModel;
import de.progra.charting.model.DefaultChartDataModel;
import de.progra.charting.model.EditableChartDataModel;
import de.progra.charting.render.AbstractChartRenderer;
import de.progra.charting.render.PieChartRenderer;
import de.progra.charting.render.RowColorModel;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractChart_ESTest extends AbstractChart_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[][] intArray0 = new int[6][7];
      double[] doubleArray0 = new double[3];
      String[] stringArray0 = new String[6];
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(intArray0, doubleArray0, stringArray0);
      DefaultChart defaultChart0 = new DefaultChart(defaultChartDataModel0, "Mu<G)RB", 4331);
      Rectangle rectangle0 = new Rectangle();
      defaultChart0.setBounds(rectangle0);
      assertTrue(rectangle0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart((ChartDataModel) null, "VYHP8,u");
      Title title0 = new Title();
      defaultChart0.setTitle(title0);
      assertEquals(1, DefaultChart.NO_COORDINATE_SYSTEM);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart(defaultChartDataModel0, "de.progra.charting.CoordSystemUtilities");
      Legend legend0 = new Legend();
      defaultChart0.setLegend(legend0);
      assertEquals(1, DefaultChart.NO_COORDINATE_SYSTEM);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart(defaultChartDataModel0, "de.progra.charting.CoordSystemUtilities");
      defaultChart0.setCoordSystem((CoordSystem) null);
      assertEquals(0, DefaultChart.LINEAR_X_LINEAR_Y);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart((ChartDataModel) null, "", (-4664));
      defaultChart0.setChartDataModel((ChartDataModel) null);
      assertEquals(1, DefaultChart.NO_COORDINATE_SYSTEM);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      Title title0 = defaultChart0.getTitle();
      assertNull(title0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      RowColorModel rowColorModel0 = defaultChart0.getRowColorModel();
      assertNull(rowColorModel0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart(defaultChartDataModel0, "de.progra.charting.CoordSystemUtilities");
      RowColorModel rowColorModel0 = defaultChart0.getRowColorModel();
      defaultChart0.setRowColorModel(rowColorModel0);
      assertEquals(1, DefaultChart.NO_COORDINATE_SYSTEM);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[][] intArray0 = new int[6][7];
      double[] doubleArray0 = new double[3];
      String[] stringArray0 = new String[6];
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(intArray0, doubleArray0, stringArray0);
      DefaultChart defaultChart0 = new DefaultChart(defaultChartDataModel0, ".zl_YB2n |o", 46);
      RowColorModel rowColorModel0 = defaultChart0.getRowColorModel();
      assertEquals(6, rowColorModel0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      Legend legend0 = defaultChart0.getLegend();
      assertNull(legend0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart((ChartDataModel) null, "VYHP8,u");
      HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer((ChartDataModel) null);
      hashMap0.put((Integer) defaultChart0.LINEAR_X_LINEAR_Y, pieChartRenderer0);
      defaultChart0.setChartRenderer(hashMap0);
      AbstractChartRenderer abstractChartRenderer0 = defaultChart0.getChartRenderer(0);
      assertSame(abstractChartRenderer0, pieChartRenderer0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      ChartDataModel chartDataModel0 = defaultChart0.getChartDataModel();
      assertNull(chartDataModel0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[][] intArray0 = new int[6][7];
      double[] doubleArray0 = new double[3];
      String[] stringArray0 = new String[6];
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(intArray0, doubleArray0, stringArray0);
      DefaultChart defaultChart0 = new DefaultChart(defaultChartDataModel0, "bHc(9|mIo%");
      ChartDataModel chartDataModel0 = defaultChart0.getChartDataModel();
      assertFalse(chartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      Rectangle rectangle0 = new Rectangle();
      defaultChart0.bounds = rectangle0;
      Rectangle rectangle1 = defaultChart0.getBounds();
      assertTrue(rectangle1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      // Undeclared exception!
      try { 
        defaultChart0.setChartRenderer((Map) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.AbstractChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      // Undeclared exception!
      try { 
        defaultChart0.render((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.DefaultChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      // Undeclared exception!
      try { 
        defaultChart0.addChartRenderer((AbstractChartRenderer) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.AbstractChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
      hashMap0.put((Integer) 1, defaultChart0);
      // Undeclared exception!
      try { 
        defaultChart0.setChartRenderer(hashMap0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // de.progra.charting.DefaultChart cannot be cast to de.progra.charting.render.AbstractChartRenderer
         //
         verifyException("de.progra.charting.AbstractChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      AbstractChartRenderer abstractChartRenderer0 = defaultChart0.getChartRenderer(15);
      assertNull(abstractChartRenderer0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      Rectangle rectangle0 = defaultChart0.getBounds();
      assertNull(rectangle0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart(defaultChartDataModel0, "de.progra.charting.CoordSystemUtilities");
      Legend legend0 = defaultChart0.getLegend();
      assertNotNull(legend0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart((ChartDataModel) null, "", (-4664));
      Map map0 = defaultChart0.getChartRenderer();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart(editableChartDataModel0, "?vXx^!x^n~>|H:-", 0, "?vXx^!x^n~>|H:-", "?vXx^!x^n~>|H:-");
      assertEquals(0, DefaultChart.LINEAR_X_LINEAR_Y);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      defaultChart0.paintDefault((Graphics2D) null);
      assertEquals(0, DefaultChart.LINEAR_X_LINEAR_Y);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart((ChartDataModel) null, "", 1);
      int[][] intArray0 = new int[1][5];
      double[] doubleArray0 = new double[7];
      String[] stringArray0 = new String[1];
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(intArray0, doubleArray0, stringArray0);
      PieChartRenderer pieChartRenderer0 = new PieChartRenderer(defaultChartDataModel0);
      defaultChart0.addChartRenderer(pieChartRenderer0, 8);
      assertEquals(0, DefaultChart.LINEAR_X_LINEAR_Y);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart(defaultChartDataModel0, "de.progra.charting.CoordSystemUtilities");
      Title title0 = defaultChart0.getTitle();
      assertEquals("de.progra.charting.CoordSystemUtilities", title0.getText());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart((ChartDataModel) null, "", (-4664));
      CoordSystem coordSystem0 = defaultChart0.getCoordSystem();
      assertNull(coordSystem0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart(defaultChartDataModel0, "");
      ChartDataModel chartDataModel0 = defaultChart0.getChartDataModel();
      assertSame(defaultChartDataModel0, chartDataModel0);
  }
}
