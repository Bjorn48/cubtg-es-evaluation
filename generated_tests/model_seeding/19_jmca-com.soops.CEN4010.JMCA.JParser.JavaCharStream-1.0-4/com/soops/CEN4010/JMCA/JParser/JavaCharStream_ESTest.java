/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 25 18:38:12 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FilterInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Enumeration;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)92, (byte)92);
      javaCharStream0.BeginToken();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      javaCharStream0.ReadByte();
      javaCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      char char0 = '[';
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)14;
      byteArray0[3] = (byte)20;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)92, (byte)20);
      javaCharStream0.BeginToken();
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-719), (-719), 0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 1, 2368);
      javaCharStream0.adjustBeginLineColumn(0, 0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-38);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)119;
      byteArray0[3] = (byte) (-103);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)1);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(bufferedInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (byte)119, 8);
      javaCharStream0.getBeginLine();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      JavaCharStream.hexval('C');
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(bufferedInputStream0, bufferedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)99;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byte byte0 = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (-203));
      byteArrayInputStream0.mark((-97));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, 2414);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      bufferedInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)84;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1905, 33);
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.adjustBeginLineColumn(1905, (byte)84);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = 2048;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 53, 2048);
      int[] intArray0 = new int[3];
      intArray0[0] = (-2890);
      intArray0[1] = (-2890);
      intArray0[2] = 99;
      javaCharStream0.bufcolumn = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(99, (-2890));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)92, (byte)92);
      javaCharStream0.BeginToken();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.getEndColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)12, (byte)12);
      byteArrayInputStream0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)12, 0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1823), (byte)84);
      javaCharStream0.ReadByte();
      javaCharStream0.GetSuffix(90);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (byte)12, 160, (byte)12);
      javaCharStream0.tokenBegin = 160;
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      stringReader0.read();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      stringReader0.reset();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 46, 65, 65);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      stringReader0.markSupported();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 46, 46, 46);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.readChar();
      javaCharStream0.ExpandBuff(true);
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      char[] charArray0 = new char[8];
      charArray0[0] = 'x';
      charArray0[1] = '&';
      charArray0[2] = 'N';
      charArray0[3] = 'c';
      charArray0[4] = 't';
      charArray0[5] = 'a';
      charArray0[6] = ' ';
      charArray0[7] = 'I';
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 2803, 102);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.getBeginLine();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte)12);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)12, (-3866));
      javaCharStream0.nextCharInd = (int) (byte)12;
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream.hexval('a');
      JavaCharStream.hexval('9');
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-2858), 2048, 9);
      javaCharStream0.GetSuffix(66);
      javaCharStream0.getBeginColumn();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      sequenceInputStream0.available();
      javaCharStream0.prevCharIsCR = false;
      sequenceInputStream0.read();
      javaCharStream0.getBeginColumn();
      javaCharStream0.backup((-69));
      char[] charArray0 = new char[8];
      charArray0[0] = 'x';
      charArray0[1] = '&';
      charArray0[2] = 'N';
      charArray0[3] = 'c';
      charArray0[4] = 't';
      charArray0[5] = 'a';
      charArray0[6] = ' ';
      charArray0[7] = 'I';
      javaCharStream0.buffer = charArray0;
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream.hexval('E');
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((Reader) null, 1095, (-1), (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-1047), 0);
      javaCharStream0.adjustBeginLineColumn(2003, (-5302));
      int int0 = 6;
      javaCharStream0.prevCharIsLF = true;
      javaCharStream0.adjustBeginLineColumn(6, (-877));
      javaCharStream0.ReInit((Reader) null);
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      javaCharStream0.maxNextCharInd = 6;
      javaCharStream0.bufsize = 0;
      char[] charArray0 = new char[3];
      stringReader0.close();
      charArray0[0] = '9';
      stringReader0.close();
      charArray0[1] = '9';
      charArray0[2] = 'Z';
      try { 
        stringReader0.read(charArray0, (-1047), (-1047));
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 0, 0);
      javaCharStream0.adjustBeginLineColumn(5, 0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 46, 46, 46);
      javaCharStream0.ReInit((Reader) stringReader0, 102, 102);
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1905, 33);
      javaCharStream0.BeginToken();
      javaCharStream0.ReadByte();
      javaCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      stringReader0.read();
      stringReader0.close();
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)12, (-3866));
      javaCharStream0.BeginToken();
      javaCharStream0.ReadByte();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 85, 160, (byte)12);
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      JavaCharStream.hexval('d');
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 13, 46, 46);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream.hexval('1');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, (byte)12, 1);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      JavaCharStream.hexval('5');
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, true).when(enumeration0).hasMoreElements();
      doReturn((Object) null).when(enumeration0).nextElement();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)45;
      byteArray0[1] = (byte) (-81);
      byteArray0[2] = (byte)61;
      byteArray0[3] = (byte)75;
      byteArray0[4] = (byte)63;
      byteArray0[5] = (byte) (-104);
      byteArray0[6] = (byte)101;
      byteArray0[7] = (byte) (-115);
      sequenceInputStream0.read(byteArray0, (int) (byte) (-104), (int) (byte) (-115));
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 5, 5, (-893));
      javaCharStream0.Done();
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream1, 117, 117);
      // Undeclared exception!
      try { 
        javaCharStream1.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      JavaCharStream.hexval('4');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 3);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, mockFileInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, (byte)117);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 4, 4);
      javaCharStream0.BeginToken();
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, (byte)0, (byte)0);
      javaCharStream0.readChar();
      javaCharStream0.getBeginLine();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      stringReader0.read();
      stringReader0.close();
      stringReader0.close();
      JavaCharStream.hexval('B');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 1293, 41);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-61);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-67);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)109;
      byteArray0[5] = (byte) (-92);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 97, (-3158), 2243);
      javaCharStream0.readChar();
      javaCharStream0.getColumn();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      int int0 = 0;
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 0, 497, (-4558));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((Reader) null, 1095, (-1), (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 46, 46, 46);
      javaCharStream0.ReInit((Reader) stringReader0, 102, 102);
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)117;
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)84;
      StringReader stringReader0 = new StringReader(".");
      stringReader0.read();
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-719), 0);
      javaCharStream0.GetImage();
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      stringReader0.read();
      stringReader0.close();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)12, 62);
      byteArrayInputStream0.read(byteArray0);
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)42;
      byteArrayInputStream0.read(byteArray1);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 0, (byte)12);
      javaCharStream0.AdjustBuffSize();
      JavaCharStream.hexval('A');
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginLine();
      javaCharStream0.GetSuffix(0);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-3866), (-3866));
      javaCharStream0.BeginToken();
      javaCharStream0.ReadByte();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)84;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1905, 33);
      javaCharStream0.BeginToken();
      javaCharStream0.ReadByte();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)60;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)14;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)67;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)94;
      byteArray0[7] = (byte)4;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 2, 1006);
      javaCharStream0.inBuf = 1006;
      javaCharStream0.BeginToken();
      char[] charArray0 = new char[4];
      charArray0[0] = '\u0000';
      charArray0[1] = '\u0000';
      charArray0[2] = '\u0000';
      charArray0[3] = '\u0000';
      javaCharStream0.nextCharBuf = charArray0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.AdjustBuffSize();
      try { 
        JavaCharStream.hexval('\u0000');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)12, (-3866));
      javaCharStream0.BeginToken();
      javaCharStream0.ReadByte();
      javaCharStream0.GetSuffix((byte)12);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)92;
      byteArray0[3] = (byte)92;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)92;
      byteArray0[5] = (byte)92;
      byteArray0[6] = (byte)92;
      byteArray0[7] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, 1, (byte)92);
      javaCharStream0.readChar();
      javaCharStream0.getColumn();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-1), (byte)92);
      javaCharStream0.BeginToken();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.AdjustBuffSize();
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      stringReader0.read();
      stringReader0.close();
      int int0 = 15;
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 15, 46, 15);
      InputStream inputStream0 = null;
      int int1 = 12;
      int[] intArray0 = new int[0];
      javaCharStream0.bufcolumn = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 160, 2797, 13);
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      stringReader0.read();
      javaCharStream0.ReInit((Reader) null, 23, (-1), 13);
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 46, 46, 46);
      javaCharStream0.ReInit((Reader) stringReader0, 102, 102);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("`3pd[jl53E%]I%V</");
      stringReader0.markSupported();
      stringReader0.read();
      stringReader0.mark((byte)12);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 7, 6, 97);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.readChar();
      boolean boolean0 = true;
      char[] charArray0 = new char[2];
      charArray0[0] = '3';
      charArray0[1] = '3';
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, 97, 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)117;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1470, 0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)12, 0);
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      JavaCharStream.hexval('f');
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 93, 3229, 93);
      javaCharStream0.ReInit((Reader) stringReader0, 46, 3379, 46);
      javaCharStream0.adjustBeginLineColumn(3379, 46);
      javaCharStream0.ExpandBuff(false);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1470, (byte)0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-2059), 0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream1.adjustBeginLineColumn(0, 1470);
      try { 
        javaCharStream1.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)21;
      JavaCharStream.hexval('F');
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      byte byte0 = (byte)117;
      byteArray0[1] = (byte)117;
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.ReInit((Reader) null);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 46, 46, 1421);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-445));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 0, (-1233));
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.getEndColumn();
      javaCharStream0.readChar();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)92, (byte)92);
      javaCharStream0.BeginToken();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      char char0 = '4';
      JavaCharStream.hexval('4');
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)86;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 33, (byte)86);
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.adjustBeginLineColumn(94, 100);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      stringReader0.read();
      stringReader0.close();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFile mockFile0 = new MockFile("HylB=Pw\"$wf@V'P^4f");
      mockFile0.isDirectory();
      File file0 = MockFile.createTempFile("3+'q3WL%wt:q3", "");
      file0.getName();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, (-1930), 1009);
      javaCharStream0.backup((byte)12);
      javaCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (byte)12, (byte)12, (byte)12);
      javaCharStream0.tokenBegin = (int) (byte)12;
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      JavaCharStream.hexval('E');
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 14, 0, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      boolean boolean0 = JavaCharStream.staticFlag;
      JavaCharStream.hexval('e');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 1907, 77);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      JavaCharStream.hexval('9');
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream((InputStream) null, (InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.close();
      sequenceInputStream0.available();
      sequenceInputStream0.read();
      sequenceInputStream0.markSupported();
      int int0 = 2232;
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 334, 334, 2232);
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      sequenceInputStream0.mark(2232);
      javaCharStream0.adjustBeginLineColumn(334, (-2014));
      javaCharStream0.GetImage();
      try { 
        JavaCharStream.hexval('~');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)12, (byte)12, 0);
      javaCharStream0.readChar();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      JavaCharStream.hexval('1');
      JavaCharStream.hexval('1');
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 46, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('U');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      boolean boolean0 = JavaCharStream.staticFlag;
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-3866), (-417));
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 46, 46);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-719), (-761), (-1252));
      javaCharStream0.ReInit((InputStream) pipedInputStream0, (-761), (-1252));
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      byte byte0 = (byte)74;
      byteArray0[1] = (byte)74;
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream.hexval('6');
      try { 
        JavaCharStream.hexval('{');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)88;
      JavaCharStream.hexval('a');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 0, 0);
      InputStream inputStream0 = null;
      JavaCharStream javaCharStream1 = null;
      try {
        javaCharStream1 = new JavaCharStream((InputStream) null, 160, 76);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 2803, 102);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)12, (byte)12, (byte)12);
      javaCharStream0.readChar();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(bufferedInputStream0, bufferedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 1, 62, (-1));
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 94, (-2231));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 3402, 651, 3402);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)92, (-763));
      javaCharStream0.BeginToken();
      javaCharStream0.ReadByte();
      javaCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 46, 46, 46);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)60;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)14;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)67;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)94;
      byteArray0[7] = (byte)4;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 2, 1006);
      javaCharStream0.inBuf = 1006;
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 0, (-3278));
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream.hexval('3');
      javaCharStream0.FillBuff();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-1), 2683);
      javaCharStream0.BeginToken();
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)117;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1470, 0);
      byteArrayInputStream0.read(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)12, 0);
      javaCharStream0.AdjustBuffSize();
      JavaCharStream.hexval('A');
      javaCharStream0.getBeginColumn();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (byte)12, (byte)12, 13);
      javaCharStream0.nextCharInd = (-1525);
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      stringReader0.read();
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)72;
      byteArray0[1] = (byte)72;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)72, (-3866));
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)84;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)84, (byte)84, (byte)84);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)84;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1905, 33);
      javaCharStream0.BeginToken();
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      sequenceInputStream0.available();
      javaCharStream0.prevCharIsCR = false;
      javaCharStream0.getBeginColumn();
      javaCharStream0.backup((-55));
      char[] charArray0 = new char[8];
      charArray0[0] = 'x';
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-77);
      byteArray0[1] = (byte)114;
      byteArray0[2] = (byte) (-9);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)88;
      sequenceInputStream0.skip((-32L));
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((byte)88);
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginLine();
      javaCharStream0.GetSuffix((byte)1);
      javaCharStream0.getColumn();
      javaCharStream0.getEndColumn();
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (byte)12, (byte)12, 13);
      javaCharStream0.nextCharInd = (-1525);
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      stringReader0.read();
      JavaCharStream.hexval('9');
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1524
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (byte)12, (byte)12, 13);
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      stringReader0.read();
      stringReader0.close();
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte)12, 1254, 46);
      JavaCharStream.hexval('8');
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      JavaCharStream.hexval('5');
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream1, 117, 117);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      JavaCharStream.hexval('c');
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-3866), (-3866));
      javaCharStream0.nextCharInd = (-3866);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3865
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      JavaCharStream.hexval('D');
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      JavaCharStream.hexval('e');
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (byte)12, 160, (byte)12);
      javaCharStream0.tokenBegin = 160;
      javaCharStream0.inBuf = (-546);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 13, 731, 731);
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      stringReader0.read();
      JavaCharStream.hexval('B');
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.tokenBegin = 160;
      javaCharStream0.inBuf = 4084;
      javaCharStream0.ExpandBuff(false);
      char char0 = '\\';
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)60;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)14;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)67;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)94;
      byteArray0[7] = (byte)4;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 2, 1006);
      javaCharStream0.inBuf = 1006;
      javaCharStream0.BeginToken();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      sequenceInputStream0.mark((-434));
      javaCharStream0.ReadByte();
      javaCharStream0.getBeginLine();
      javaCharStream0.getLine();
      javaCharStream0.getEndColumn();
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      JavaCharStream.hexval('c');
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((Reader) null, 1095, (-1), (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      JavaCharStream.hexval('d');
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn((-247), 2976);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-3866), (-3866));
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.Done();
      javaCharStream0.inputStream = null;
      int int0 = 1;
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('X');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)20;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)20, (byte)20, 839);
      javaCharStream0.readChar();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)12, (-3866));
      javaCharStream0.inBuf = 65;
      javaCharStream0.BeginToken();
      javaCharStream0.ReadByte();
      javaCharStream0.GetImage();
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 46, 46, 46);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('p');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)92, (byte)92);
      javaCharStream0.BeginToken();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.getEndColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginColumn();
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream.hexval('9');
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)117;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1470, 0);
      byteArrayInputStream0.read(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)12, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      JavaCharStream.hexval('5');
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream1, 5, 5);
      javaCharStream0.GetImage();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 0, (-1233));
      javaCharStream0.BeginToken();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.getEndColumn();
      javaCharStream0.readChar();
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      stringReader0.read();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 5, 1293);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)117;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1470, 0);
      byteArrayInputStream0.read(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)12, 0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.tokenBegin = (int) (byte)12;
      JavaCharStream.hexval('A');
      byteArrayInputStream0.read(byteArray0);
      javaCharStream0.getBeginColumn();
      javaCharStream0.adjustBeginLineColumn(4096, (byte)117);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-2042));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      JavaCharStream.hexval('6');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 13);
      int int0 = 84;
      try { 
        bufferedInputStream0.skip(84);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)117;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1470, 0);
      byteArrayInputStream0.read(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)12, 0);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.tokenBegin = (int) (byte)12;
      JavaCharStream.hexval('A');
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginLine();
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-2042));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)12, 6);
      byteArrayInputStream0.read(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 2596, 1470);
      JavaCharStream.hexval('C');
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)60;
      byteArray0[1] = (byte)21;
      byteArray0[2] = (byte)14;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)67;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)94;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 101, 2206);
      javaCharStream0.BeginToken();
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream.hexval('f');
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 91, 46, 46);
      javaCharStream0.GetSuffix(0);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('p');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-719), (-719), 0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 1, 2368);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      JavaCharStream.hexval('A');
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream1, 10, 10);
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-1047), 0);
      javaCharStream0.adjustBeginLineColumn(2003, (-5302));
      int int0 = 6;
      javaCharStream0.prevCharIsLF = true;
      javaCharStream0.adjustBeginLineColumn(6, (-877));
      javaCharStream0.ReInit((Reader) null);
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      javaCharStream0.maxNextCharInd = 6;
      stringReader0.read();
      javaCharStream0.bufsize = 0;
      char[] charArray0 = new char[3];
      stringReader0.close();
      charArray0[0] = '9';
      stringReader0.close();
      charArray0[1] = 'P';
      charArray0[2] = 'Z';
      try { 
        stringReader0.read(charArray0, (-1047), (-1047));
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.bufpos = 0;
      javaCharStream0.getEndLine();
      javaCharStream0.GetImage();
      javaCharStream0.getColumn();
      javaCharStream0.UpdateLineColumn('j');
      sequenceInputStream0.markSupported();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.nextCharInd = (-147);
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      stringReader0.read();
      stringReader0.close();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -146
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1, 87, (-1), (-2262));
      javaCharStream0.readChar();
      javaCharStream0.getColumn();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream1, 79, 82);
      javaCharStream0.GetImage();
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1470, (byte)12);
      byteArrayInputStream0.read(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-2059), 0);
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      JavaCharStream.hexval('5');
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-87);
      byteArray0[1] = (byte)95;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      int int0 = 83;
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 83, 1905);
      javaCharStream0.BeginToken();
      javaCharStream0.ReadByte();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)92;
      byteArray0[5] = (byte)92;
      byteArray0[6] = (byte)92;
      byteArray0[7] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)92, 1, (byte)92);
      javaCharStream0.readChar();
      javaCharStream0.getColumn();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 3364, (-956), (-3719));
      javaCharStream0.ReInit((InputStream) pipedInputStream0);
      javaCharStream0.adjustBeginLineColumn(117, 117);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      JavaCharStream.hexval('2');
      JavaCharStream.hexval('2');
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      JavaCharStream.hexval('a');
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)108;
      byteArray0[3] = (byte)87;
      byteArray0[4] = (byte)87;
      byteArray0[5] = (byte)92;
      byteArray0[6] = (byte)87;
      byteArray0[7] = (byte) (-1);
      byteArray0[8] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1, 528, (byte)87);
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.adjustBeginLineColumn(1, (byte) (-1));
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      char char0 = '<';
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
          JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 0, 0);
          javaCharStream0.adjustBeginLineColumn(0, 0);
          assertEquals(0, javaCharStream0.getBeginLine());
          assertEquals((-1), javaCharStream0.bufpos);
          assertEquals(0, javaCharStream0.getBeginColumn());
          
          try { 
            javaCharStream0.FillBuff();
            fail("Expecting exception: IOException");
          
          } catch(IOException e) {
             //
             // Stream closed
             //
             verifyException("java.io.PushbackInputStream", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-719), (-719), 0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 147, 0, (-719));
      javaCharStream0.ExpandBuff(false);
      StringReader stringReader0 = new StringReader("s=mY)O9");
      stringReader0.read();
      stringReader0.close();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream1);
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream1, 3364, (-956), (-3719));
      javaCharStream1.ReInit((InputStream) pipedInputStream1);
      javaCharStream1.ReInit((Reader) stringReader0);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)109;
      byteArray0[1] = (byte) (-98);
      byteArray0[2] = (byte) (-106);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)81;
      byteArray0[5] = (byte)67;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)1;
      byteArray0[8] = (byte)4;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)109, (byte)109);
      javaCharStream0.ReadByte();
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream1, (-1285), 79);
      javaCharStream0.GetImage();
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)84;
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)84;
      byte byte0 = (byte)74;
      byteArray0[1] = (byte)84;
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 220, 2048);
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.AdjustBuffSize();
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StringReader stringReader0 = new StringReader("._p[Rtl}.-=s;(x~");
      stringReader0.read();
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2025, (-903), 2025);
      javaCharStream0.prevCharIsLF = false;
      javaCharStream0.ExpandBuff(false);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-100);
      byteArray0[2] = (byte)115;
      byteArray0[3] = (byte)77;
      byteArray0[4] = (byte)42;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-98), (byte)77);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 2, (int) (byte) (-100), (int) (byte)115);
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      JavaCharStream.hexval('7');
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      JavaCharStream.hexval('5');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        JavaCharStream.hexval('');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      JavaCharStream.hexval('a');
      JavaCharStream.hexval('0');
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-719), (-719), 0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 147, 0, (-719));
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.AdjustBuffSize();
      JavaCharStream.hexval('4');
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      JavaCharStream.hexval('7');
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)84;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)84, (byte)84, (byte)84);
      javaCharStream0.readChar();
      javaCharStream0.AdjustBuffSize();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream.hexval('b');
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 160, (-1078));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)84;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)84, (byte)84, (byte)84);
      javaCharStream0.bufpos = 11;
      javaCharStream0.readChar();
      javaCharStream0.AdjustBuffSize();
      JavaCharStream.hexval('8');
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)76;
      byteArray0[2] = (byte)66;
      byteArray0[3] = (byte) (-5);
      byteArray0[4] = (byte)85;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 101, 5, (-719));
      javaCharStream0.readChar();
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)84;
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 0, (-1233));
      javaCharStream0.BeginToken();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.getEndColumn();
      javaCharStream0.BeginToken();
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      try { 
        JavaCharStream.hexval('*');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      char char0 = ']';
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)11, (byte)11);
      byteArrayInputStream0.mark(1545);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      byteArrayInputStream0.close();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }
}
