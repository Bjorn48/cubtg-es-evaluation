/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 26 02:20:10 GMT 2019
 */

package net.virtualinfinity.atrobots.arena;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.virtualinfinity.atrobots.arena.Explosion;
import net.virtualinfinity.atrobots.arena.Heading;
import net.virtualinfinity.atrobots.arena.LinearDamageFunction;
import net.virtualinfinity.atrobots.arena.Position;
import net.virtualinfinity.atrobots.arenaobjects.ArenaObject;
import net.virtualinfinity.atrobots.measures.AbsoluteAngle;
import net.virtualinfinity.atrobots.measures.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LinearDamageFunction_ESTest extends LinearDamageFunction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Position position0 = Position.random(0.0, 0.0, 0.0, 0.0);
      LinearDamageFunction linearDamageFunction0 = new LinearDamageFunction(position0, 0.0, 0.0);
      double double0 = linearDamageFunction0.getRadius();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Position position0 = Position.random((-1295.627), (-1295.627), 1317.5928098693425, 1317.5928098693425);
      LinearDamageFunction linearDamageFunction0 = new LinearDamageFunction(position0, (-316.0), 14.0);
      double double0 = linearDamageFunction0.getRadius();
      assertEquals(14.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Position position0 = Position.random(32.0, 32.0, (-3706.84138), (-3706.84138));
      LinearDamageFunction linearDamageFunction0 = new LinearDamageFunction(position0, 0.0, (-1.0));
      Heading heading0 = new Heading();
      Vector vector0 = heading0.times(2130.4659307594);
      Explosion explosion0 = new Explosion(vector0, 0.0);
      double double0 = linearDamageFunction0.getDamageAmount(explosion0);
      assertEquals((-1.0), linearDamageFunction0.getRadius(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AbsoluteAngle absoluteAngle0 = AbsoluteAngle.fromRadians(2070.9);
      Vector vector0 = absoluteAngle0.toUnitVector();
      Explosion explosion0 = new Explosion(vector0, 4572.474218708206);
      Position position0 = explosion0.getPosition();
      LinearDamageFunction linearDamageFunction0 = new LinearDamageFunction(position0, 2070.9, 1.0);
      double double0 = linearDamageFunction0.getDamageAmount(explosion0);
      assertEquals(2070.9, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Position position0 = new Position();
      LinearDamageFunction linearDamageFunction0 = new LinearDamageFunction(position0, 0.0, 0.0);
      linearDamageFunction0.getCenter();
      assertEquals(0.0, linearDamageFunction0.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Position position0 = Position.random(32.0, 32.0, 32.0, 32.0);
      LinearDamageFunction linearDamageFunction0 = new LinearDamageFunction(position0, 32.0, 32.0);
      linearDamageFunction0.getCenter();
      assertEquals(32.0, linearDamageFunction0.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LinearDamageFunction linearDamageFunction0 = new LinearDamageFunction((Position) null, 0.5, 0.5);
      // Undeclared exception!
      try { 
        linearDamageFunction0.getDamageAmount((ArenaObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.virtualinfinity.atrobots.arena.LinearDamageFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LinearDamageFunction linearDamageFunction0 = new LinearDamageFunction((Position) null, (-3416.5494), (-3416.5494));
      // Undeclared exception!
      try { 
        linearDamageFunction0.getCenter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.virtualinfinity.atrobots.arena.LinearDamageFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Position position0 = Position.random((-1295.627), (-1295.627), (-1295.627), (-1295.627));
      LinearDamageFunction linearDamageFunction0 = new LinearDamageFunction(position0, (-1295.627), (-1295.627));
      double double0 = linearDamageFunction0.getRadius();
      assertEquals((-1295.627), double0, 0.01);
  }
}
