/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 26 02:22:56 GMT 2019
 */

package de.progra.charting;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.progra.charting.CoordSystem;
import de.progra.charting.DefaultChart;
import de.progra.charting.Legend;
import de.progra.charting.Title;
import de.progra.charting.model.ChartDataModel;
import de.progra.charting.model.DataSet;
import de.progra.charting.model.DefaultChartDataModel;
import de.progra.charting.model.EditableChartDataModel;
import de.progra.charting.model.ObjectChartDataModel;
import de.progra.charting.render.AbstractChartRenderer;
import de.progra.charting.render.PlotChartRenderer;
import de.progra.charting.render.RowColorModel;
import de.progra.charting.render.StackedBarChartRenderer;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JTable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractChart_ESTest extends AbstractChart_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart(defaultChartDataModel0, "!!bv)}e");
      Rectangle rectangle0 = new Rectangle();
      defaultChart0.setBounds(rectangle0);
      assertTrue(rectangle0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      HashMap<Object, PlotChartRenderer> hashMap0 = new HashMap<Object, PlotChartRenderer>();
      DataSet[] dataSetArray0 = new DataSet[0];
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel(dataSetArray0, dataSetArray0);
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, "de.progra.charting.AbstractChart", "de.progra.charting.AbstractChart");
      PlotChartRenderer plotChartRenderer0 = new PlotChartRenderer(coordSystem0, objectChartDataModel0);
      hashMap0.put(plotChartRenderer0, plotChartRenderer0);
      defaultChart0.setChartRenderer(hashMap0);
      assertFalse(hashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      defaultChart0.setRowColorModel((RowColorModel) null);
      assertEquals(0, DefaultChart.LINEAR_X_LINEAR_Y);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      Legend legend0 = new Legend();
      defaultChart0.setLegend(legend0);
      assertEquals(0, DefaultChart.LINEAR_X_LINEAR_Y);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart(defaultChartDataModel0, "/ozTl", (-514));
      defaultChart0.setChartDataModel(defaultChartDataModel0);
      assertFalse(defaultChartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      Title title0 = new Title();
      defaultChart0.setTitle(title0);
      Title title1 = defaultChart0.getTitle();
      assertEquals("Chart Title", title1.getText());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      RowColorModel rowColorModel0 = defaultChart0.getRowColorModel();
      assertNull(rowColorModel0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart(objectChartDataModel0, (String) null);
      RowColorModel rowColorModel0 = defaultChart0.getRowColorModel();
      assertEquals(0, rowColorModel0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[][] intArray0 = new int[5][6];
      double[] doubleArray0 = new double[4];
      String[] stringArray0 = new String[6];
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(intArray0, doubleArray0, stringArray0);
      DefaultChart defaultChart0 = new DefaultChart(defaultChartDataModel0, (String) null, 0);
      RowColorModel rowColorModel0 = defaultChart0.getRowColorModel();
      assertEquals(5, rowColorModel0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      Legend legend0 = defaultChart0.getLegend();
      assertNull(legend0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart(editableChartDataModel0, (String) null, 0);
      CoordSystem coordSystem0 = defaultChart0.getCoordSystem();
      assertTrue(coordSystem0.isPaintAltTick());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      ChartDataModel chartDataModel0 = defaultChart0.getChartDataModel();
      assertNull(chartDataModel0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart(objectChartDataModel0, (String) null);
      objectChartDataModel0.setManualScale(true);
      ChartDataModel chartDataModel0 = defaultChart0.getChartDataModel();
      assertEquals(0.0, chartDataModel0.getManualMaximumColumnValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart(objectChartDataModel0, (String) null);
      ChartDataModel chartDataModel0 = defaultChart0.getChartDataModel();
      assertEquals(0.0, chartDataModel0.getManualMinimumColumnValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart(defaultChartDataModel0, "p66*6K@q29eIi`X/");
      defaultChartDataModel0.setAutoScale(true);
      ChartDataModel chartDataModel0 = defaultChart0.getChartDataModel();
      assertEquals(0.0, chartDataModel0.getManualMaximumColumnValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart(defaultChartDataModel0, "p66*6K@q29eIi`X/");
      defaultChartDataModel0.setMinimumColumnValue((-302.8));
      ChartDataModel chartDataModel0 = defaultChart0.getChartDataModel();
      assertFalse(chartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      defaultChartDataModel0.setMaximumColumnValue(1.0);
      DefaultChart defaultChart0 = new DefaultChart(defaultChartDataModel0, "p66*6K@q29eIi`X/");
      ChartDataModel chartDataModel0 = defaultChart0.getChartDataModel();
      assertEquals(0, chartDataModel0.getDataSetNumber());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      defaultChartDataModel0.setMaximumColumnValue((-514));
      DefaultChart defaultChart0 = new DefaultChart(defaultChartDataModel0, "p66*6K@q29eIi`X/");
      ChartDataModel chartDataModel0 = defaultChart0.getChartDataModel();
      assertFalse(chartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int[][] intArray0 = new int[5][6];
      double[] doubleArray0 = new double[4];
      String[] stringArray0 = new String[6];
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(intArray0, doubleArray0, stringArray0);
      DefaultChart defaultChart0 = new DefaultChart(defaultChartDataModel0, "de.progra.charting.AbstractChart", (-2529));
      ChartDataModel chartDataModel0 = defaultChart0.getChartDataModel();
      assertFalse(chartDataModel0.isAutoScale());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      Rectangle rectangle0 = new Rectangle();
      defaultChart0.bounds = rectangle0;
      Rectangle rectangle1 = defaultChart0.getBounds();
      assertEquals(0.0, rectangle1.getCenterX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      Object[][] objectArray0 = new Object[1][5];
      Object[] objectArray1 = new Object[0];
      JTable jTable0 = new JTable(objectArray0, objectArray1);
      Dimension dimension0 = jTable0.getPreferredScrollableViewportSize();
      Rectangle rectangle0 = new Rectangle(dimension0);
      defaultChart0.bounds = rectangle0;
      Rectangle rectangle1 = defaultChart0.getBounds();
      assertEquals(450, rectangle1.width);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      // Undeclared exception!
      try { 
        defaultChart0.setChartRenderer((Map) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.AbstractChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      // Undeclared exception!
      try { 
        defaultChart0.render((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.DefaultChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      // Undeclared exception!
      try { 
        defaultChart0.addChartRenderer((AbstractChartRenderer) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.AbstractChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      HashMap<Integer, String> hashMap0 = new HashMap<Integer, String>();
      hashMap0.put((Integer) defaultChart0.LINEAR_X_LINEAR_Y, "de.progra.charting.render.AbstractRenderer");
      // Undeclared exception!
      try { 
        defaultChart0.setChartRenderer(hashMap0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to de.progra.charting.render.AbstractChartRenderer
         //
         verifyException("de.progra.charting.AbstractChart", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      AbstractChartRenderer abstractChartRenderer0 = defaultChart0.getChartRenderer(316);
      assertNull(abstractChartRenderer0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      Rectangle rectangle0 = defaultChart0.getBounds();
      assertNull(rectangle0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart(defaultChartDataModel0, "/ozTl", (-514));
      Legend legend0 = defaultChart0.getLegend();
      assertNotNull(legend0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      DefaultChart defaultChart0 = new DefaultChart(defaultChartDataModel0, "p66*6K@q29eIi`X/");
      Map map0 = defaultChart0.getChartRenderer();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      defaultChart0.setCoordSystem((CoordSystem) null);
      assertEquals(0, DefaultChart.LINEAR_X_LINEAR_Y);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      defaultChart0.paintDefault((Graphics2D) null);
      assertEquals(1, DefaultChart.NO_COORDINATE_SYSTEM);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      StackedBarChartRenderer stackedBarChartRenderer0 = new StackedBarChartRenderer((CoordSystem) null, defaultChartDataModel0);
      defaultChart0.addChartRenderer(stackedBarChartRenderer0, (-40));
      assertEquals(0, DefaultChart.LINEAR_X_LINEAR_Y);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      Title title0 = defaultChart0.getTitle();
      assertNull(title0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultChart defaultChart0 = new DefaultChart();
      CoordSystem coordSystem0 = defaultChart0.getCoordSystem();
      assertNull(coordSystem0);
  }
}
