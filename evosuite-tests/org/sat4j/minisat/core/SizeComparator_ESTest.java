/*
 * This file was automatically generated by EvoSuite
 * Sun Feb 17 08:03:08 GMT 2019
 */

package org.sat4j.minisat.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.sat4j.core.VecInt;
import org.sat4j.minisat.constraints.CardinalityDataStructure;
import org.sat4j.minisat.constraints.CardinalityDataStructureYanMax;
import org.sat4j.minisat.constraints.cnf.BinaryClauses;
import org.sat4j.minisat.constraints.cnf.UnitClause;
import org.sat4j.minisat.core.ILits;
import org.sat4j.minisat.core.SizeComparator;
import org.sat4j.specs.Constr;
import org.sat4j.specs.IVecInt;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SizeComparator_ESTest extends SizeComparator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SizeComparator sizeComparator0 = new SizeComparator();
      CardinalityDataStructureYanMax cardinalityDataStructureYanMax0 = new CardinalityDataStructureYanMax();
      IVecInt iVecInt0 = VecInt.EMPTY;
      Constr constr0 = cardinalityDataStructureYanMax0.createUnregisteredClause(iVecInt0);
      constr0.setActivity(403.241532972741);
      int int0 = sizeComparator0.compare(constr0, constr0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SizeComparator sizeComparator0 = new SizeComparator();
      UnitClause unitClause0 = new UnitClause(0);
      UnitClause unitClause1 = new UnitClause(0);
      int int0 = sizeComparator0.compare((Constr) unitClause1, (Constr) unitClause0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SizeComparator sizeComparator0 = new SizeComparator();
      UnitClause unitClause0 = new UnitClause(0);
      CardinalityDataStructureYanMax cardinalityDataStructureYanMax0 = new CardinalityDataStructureYanMax();
      IVecInt iVecInt0 = VecInt.EMPTY;
      Constr constr0 = cardinalityDataStructureYanMax0.createUnregisteredClause(iVecInt0);
      int int0 = sizeComparator0.compare((Constr) unitClause0, constr0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SizeComparator sizeComparator0 = new SizeComparator();
      // Undeclared exception!
      try { 
        sizeComparator0.compare((Constr) null, (Constr) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.core.SizeComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SizeComparator sizeComparator0 = new SizeComparator();
      UnitClause unitClause0 = new UnitClause(0);
      CardinalityDataStructure cardinalityDataStructure0 = new CardinalityDataStructure();
      ILits iLits0 = cardinalityDataStructure0.getVocabulary();
      BinaryClauses binaryClauses0 = new BinaryClauses(iLits0, 1284);
      int int0 = sizeComparator0.compare((Constr) binaryClauses0, (Constr) unitClause0);
      assertEquals((-1), int0);
  }
}
