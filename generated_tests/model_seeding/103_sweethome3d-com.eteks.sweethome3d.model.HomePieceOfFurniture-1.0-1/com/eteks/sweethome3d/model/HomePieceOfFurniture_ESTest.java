/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 25 11:47:43 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.BackgroundImage;
import com.eteks.sweethome3d.model.CatalogDoorOrWindow;
import com.eteks.sweethome3d.model.CatalogPieceOfFurniture;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.FurnitureCategory;
import com.eteks.sweethome3d.model.HomeDoorOrWindow;
import com.eteks.sweethome3d.model.HomeFurnitureGroup;
import com.eteks.sweethome3d.model.HomePieceOfFurniture;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.Level;
import com.eteks.sweethome3d.model.PieceOfFurniture;
import com.eteks.sweethome3d.model.Sash;
import com.eteks.sweethome3d.model.TextStyle;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.math.BigDecimal;
import java.net.URL;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomePieceOfFurniture_ESTest extends HomePieceOfFurniture_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 48.651985F, 48.651985F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 48.651985F, 48.651985F, 48.651985F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      Float float0 = new Float(48.651985F);
      catalogPieceOfFurniture0.getDepth();
      Float float1 = new Float(48.651985F);
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      FileSystemHandling.shouldAllThrowIOExceptions();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isTexturable();
      homePieceOfFurniture0.getValueAddedTaxPercentage();
      homePieceOfFurniture0.getCurrency();
      resourceURLContent0.getJAREntryURL();
      HomePieceOfFurniture homePieceOfFurniture1 = new HomePieceOfFurniture(homePieceOfFurniture0);
      homePieceOfFurniture0.isTopLeftPointAt(48.651985F, 48.651985F, 247.31425F);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      resourceURLContent0.getJAREntryURL();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 0.0F, (-10.530371F), 1233.643F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setDepth(0.0F);
      Integer integer0 = new Integer(0);
      Integer integer1 = Integer.valueOf((-1329));
      homePieceOfFurniture0.setColor(integer1);
      homePieceOfFurniture0.isPointAt(0.0F, 0.0F, 0);
      homePieceOfFurniture0.isMovable();
      homePieceOfFurniture0.getDescription();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Sash[] sashArray0 = new Sash[5];
      sashArray0[1] = sashArray0[0];
      sashArray0[3] = sashArray0[2];
      float[][] floatArray0 = new float[21][0];
      float[] floatArray1 = new float[17];
      floatArray1[0] = (-2918.0647F);
      floatArray1[2] = (-2918.0647F);
      floatArray1[3] = (-2918.0647F);
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[4];
      floatArray2[1] = (-1119.9485F);
      floatArray2[2] = (-1119.9485F);
      floatArray2[3] = (-2918.0647F);
      floatArray0[1] = floatArray2;
      floatArray0[2] = floatArray1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("<7c6eky-Dz", "<7c6eky-Dz", "<7c6eky-Dz", (Content) null, (Content) null, (Content) null, (-2918.0647F), (-2918.0647F), (-2918.0647F), (-2918.0647F), false, 0.0F, (-1119.9485F), sashArray0, floatArray0, "<7c6eky-Dz", false, false, false, (BigDecimal) null, (BigDecimal) null);
      catalogDoorOrWindow0.getSashes();
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      Level level0 = new Level("<7c6eky-Dz", 0.3926991F, 0.3926991F, (-2918.0647F));
      Level level1 = level0.clone();
      level0.setHeight((-2918.0647F));
      level1.clone();
      homeDoorOrWindow0.setLevel(level0);
      homeDoorOrWindow0.setY((-2918.0647F));
      homeDoorOrWindow0.getName();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeDoorOrWindow0.setDescription("<7c6eky-Dz");
      homeDoorOrWindow0.getY();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent1, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      catalogPieceOfFurniture0.getWidth();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.getColor();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      resourceURLContent1.getJAREntryName();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      resourceURLContent0.getJAREntryURL();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setModelMirrored(true);
      homePieceOfFurniture0.isModelMirrored();
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.getIcon();
      homePieceOfFurniture0.getPlanIcon();
      homePieceOfFurniture0.getElevation();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Sash[] sashArray0 = new Sash[4];
      sashArray0[3] = sashArray0[2];
      float[][] floatArray0 = new float[21][0];
      float[] floatArray1 = new float[10];
      floatArray1[3] = (-2918.0647F);
      floatArray0[0] = floatArray1;
      floatArray0[1] = floatArray1;
      floatArray0[2] = floatArray1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("<7c6eky-Dz", "<7c6eky-Dz", "<7c6eky-Dz", (Content) null, (Content) null, (Content) null, (-2918.0647F), (-2918.0647F), (-2918.0647F), (-2918.0647F), false, (-2918.0647F), (-2918.0647F), sashArray0, floatArray0, "<7c6eky-Dz", false, false, false, (BigDecimal) null, (BigDecimal) null);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      // Undeclared exception!
      try { 
        homeDoorOrWindow0.setShininess((Float) (-2918.0647F));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't texturable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getDepth();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDepth(1249.0F);
      homePieceOfFurniture0.setX(0.0F);
      homePieceOfFurniture0.isNameCenterPointAt(0.0F, 0.0F, 0.0F);
      homePieceOfFurniture0.isResizable();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setWidth(1.0F);
      homePieceOfFurniture0.isBottomRightPointAt(0.0F, 0.0F, 0.0F);
      homePieceOfFurniture0.getStaircaseCutOutShape();
      // Undeclared exception!
      try { 
        HomePieceOfFurniture.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomePieceOfFurniture.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, (-31.303833F), (-1859.897F), (-31.303833F), false, false);
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.isMovable();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setElevation(1.0F);
      homePieceOfFurniture0.setModelMirrored(false);
      homePieceOfFurniture0.setVisible(false);
      homePieceOfFurniture0.getLevel();
      homePieceOfFurniture0.getCurrency();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, (-31.3F), (-31.3F), (-31.3F), false, false);
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)catalogPieceOfFurniture0.getIcon();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      resourceURLContent1.getJAREntryURL();
      Level level0 = new Level("", (-567.3471F), (-31.3F), (-567.3471F));
      homePieceOfFurniture0.isAtLevel((Level) null);
      homePieceOfFurniture0.clone();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 48.651985F, (-1859.7241F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 48.651985F, 48.651985F, 48.651985F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      Float float1 = new Float(1233.643F);
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      resourceURLContent0.getJAREntryName();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(false);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.isBottomLeftPointAt((float) float1, (float) float1, 1753.1449F);
      homePieceOfFurniture0.getValueAddedTax();
      resourceURLContent0.getJAREntryURL();
      homePieceOfFurniture0.setY(278.10486F);
      homePieceOfFurniture0.setNameYOffset(1233.643F);
      homePieceOfFurniture0.getElevation();
      homePieceOfFurniture0.getModel();
      homePieceOfFurniture0.getNameYOffset();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, (-31.3F), (-31.3F), (-31.3F), false, false);
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getCurrency();
      resourceURLContent1.getJAREntryURL();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.isTopLeftPointAt((-1356.627F), (-1356.627F), (-795.867F));
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Sash[] sashArray0 = new Sash[9];
      Sash sash0 = new Sash((-689.0F), (-2898.0F), (-689.0F), (-689.0F), (-689.0F));
      sashArray0[0] = sash0;
      sashArray0[1] = sash0;
      sashArray0[2] = sash0;
      sashArray0[3] = sash0;
      sashArray0[4] = sash0;
      float[][] floatArray0 = new float[3][0];
      float[] floatArray1 = new float[5];
      floatArray1[0] = 0.0F;
      floatArray1[2] = (-2898.0F);
      floatArray1[3] = (-2898.0F);
      floatArray1[4] = (-2898.0F);
      floatArray0[0] = floatArray1;
      floatArray0[1] = floatArray1;
      float[] floatArray2 = new float[13];
      floatArray2[0] = (-1117.708F);
      floatArray2[1] = 0.0F;
      floatArray2[3] = (-1117.708F);
      floatArray2[4] = (-2898.0F);
      floatArray0[2] = floatArray2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("-&!3GNOk0wVo8dXzrRh", "-&!3GNOk0wVo8dXzrRh", "-&!3GNOk0wVo8dXzrRh", (Content) null, (Content) null, (Content) null, (-2898.0F), (-2898.0F), (-689.0F), 0.0F, false, (-2898.0F), (-1117.708F), sashArray0, floatArray0, "zD", true, true, false, (BigDecimal) null, (BigDecimal) null);
      catalogDoorOrWindow0.getSashes();
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getModel();
      System.setCurrentTimeMillis((-3756L));
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.getPoints();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(0.0F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      Float float1 = new Float(0.0F);
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isResizable();
      FileSystemHandling.shouldAllThrowIOExceptions();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setHeight(0.0F);
      homePieceOfFurniture0.containsPoint((-2125.62F), 0.0F, 34.578F);
      homePieceOfFurniture0.isNameCenterPointAt(0.0F, 34.578F, 0.0F);
      homePieceOfFurniture0.containsPoint(2.0F, 34.578F, 0.0F);
      homePieceOfFurniture0.setHeight(964.0F);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      resourceURLContent0.getJAREntryURL();
      homePieceOfFurniture0.setDepth((-1.0F));
      homePieceOfFurniture0.isPointAt((-1.0F), (-1.0F), (-1.0F));
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      resourceURLContent0.getJAREntryURL();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.getNameStyle();
      homePieceOfFurniture0.setNameVisible(true);
      Integer integer0 = new Integer(0);
      Integer integer1 = Integer.valueOf((-1329));
      homePieceOfFurniture0.setColor(integer1);
      homePieceOfFurniture0.isPointAt(0.0F, 0.0F, 0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, (-31.3F), (-31.3F), (-31.3F), false, false);
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)catalogPieceOfFurniture0.getIcon();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      resourceURLContent1.getJAREntryURL();
      Level level0 = new Level("", (-567.009F), (-31.3F), (-567.009F));
      homePieceOfFurniture0.isAtLevel(level0);
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      homePieceOfFurniture1.getName();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.COLOR;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      LinkedList<HomePieceOfFurniture> linkedList0 = new LinkedList<HomePieceOfFurniture>();
      HomeFurnitureGroup homeFurnitureGroup0 = null;
      try {
        homeFurnitureGroup0 = new HomeFurnitureGroup(linkedList0, "na'x");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getDescription();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setHeight(0.0F);
      homePieceOfFurniture0.containsPoint(0.0F, 0.0F, 0.0F);
      homePieceOfFurniture0.clone();
      homePieceOfFurniture0.setAngle(0.0F);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, (-57.258F), 2125.62F, 2125.62F, false, false);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      Float float0 = new Float(4270.633F);
      Float float1 = new Float(2125.62F);
      FileSystemHandling.shouldAllThrowIOExceptions();
      catalogPieceOfFurniture0.getModelRotation();
      FileSystemHandling.shouldAllThrowIOExceptions();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(true);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.isVisible();
      homePieceOfFurniture0.setY(4270.633F);
      homePieceOfFurniture0.isTopRightPointAt(4270.633F, (-57.258F), 2125.62F);
      homePieceOfFurniture0.getAngle();
      homePieceOfFurniture0.getCatalogId();
      homePieceOfFurniture0.getPrice();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 48.651985F, (-1859.7241F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 48.651985F, 48.651985F, 48.651985F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      Float float0 = new Float(48.651985F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isBackFaceShown();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "oYmrrz");
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.getPrice();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.getDescription();
      homePieceOfFurniture0.intersectsRectangle((-1245.857F), 2437.621F, 48.651985F, 48.651985F);
      homePieceOfFurniture0.setX((-1859.7241F));
      homePieceOfFurniture0.getPoints();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Sash[] sashArray0 = new Sash[9];
      Sash sash0 = new Sash((-689.0F), (-2898.0F), (-689.0F), (-689.0F), (-689.0F));
      sashArray0[0] = sash0;
      sashArray0[1] = sash0;
      sashArray0[2] = sash0;
      sashArray0[3] = sash0;
      sashArray0[4] = sash0;
      float[][] floatArray0 = new float[3][0];
      float[] floatArray1 = new float[5];
      floatArray1[0] = 0.0F;
      floatArray1[2] = (-2898.0F);
      floatArray1[3] = (-2898.0F);
      floatArray1[4] = (-2898.0F);
      floatArray0[0] = floatArray1;
      floatArray0[1] = floatArray1;
      float[] floatArray2 = new float[13];
      floatArray2[0] = (-1117.708F);
      floatArray2[2] = 0.0F;
      floatArray2[3] = (-1117.708F);
      floatArray2[4] = (-2898.0F);
      floatArray0[2] = floatArray2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("-&!3GNOk0wVo8dXzrRh", "-&!3GNOk0wVo8dXzrRh", "-&!3GNOk0wVo8dXzrRh", (Content) null, (Content) null, (Content) null, (-2898.0F), (-2898.0F), (-689.0F), 0.0F, false, (-2898.0F), (-1117.708F), sashArray0, floatArray0, "zD", true, true, false, (BigDecimal) null, (BigDecimal) null);
      catalogDoorOrWindow0.getSashes();
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.isBottomRightPointAt((-1437.081F), 0.0F, 0.0F);
      homeDoorOrWindow0.isVisible();
      homeDoorOrWindow0.move((-1117.708F), 0.0F);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, (-11.051359F), (-1860.0F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      resourceURLContent0.getJAREntryURL();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, (-11.051359F), (-1860.0F), 1233.643F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getIcon();
      homeTexture0.getImage();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDepth(0.0F);
      Integer integer0 = Integer.valueOf(0);
      homePieceOfFurniture0.setColor(integer0);
      homePieceOfFurniture0.isPointAt((-1860.0F), (-11.051359F), 0);
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      homePieceOfFurniture1.getAngle();
      homePieceOfFurniture1.getLevel();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = mock(Sash.class, new ViolatedAssumptionAnswer());
      sashArray0[0] = sash0;
      sashArray0[1] = sash0;
      sashArray0[2] = sash0;
      sashArray0[3] = sash0;
      sashArray0[4] = sash0;
      float[][] floatArray0 = new float[3][0];
      float[] floatArray1 = new float[5];
      floatArray1[0] = 0.0F;
      floatArray1[1] = (-1117.708F);
      floatArray1[2] = (-2898.0F);
      floatArray1[3] = (-2898.0F);
      floatArray1[4] = (-2898.0F);
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[4];
      floatArray2[0] = (-689.0F);
      floatArray2[1] = (-1117.708F);
      floatArray2[2] = (-1117.708F);
      floatArray2[3] = 0.0F;
      floatArray0[1] = floatArray2;
      float[] floatArray3 = new float[5];
      floatArray3[0] = (-1117.708F);
      floatArray3[1] = (-2898.0F);
      floatArray3[2] = 2420.0F;
      floatArray3[3] = (-1117.708F);
      floatArray3[4] = (-2898.0F);
      floatArray0[2] = floatArray3;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("-&!3GNOk0wVo8dXzrRh", "-&!3GNOk0wVo8dXzrRh", "-&!3GNOk0wVo8dXzrRh", (Content) null, (Content) null, (Content) null, (-2898.0F), (-2898.0F), (-689.0F), 0.0F, false, 0.0F, (-1117.708F), sashArray0, floatArray0, "zD", true, true, false, (BigDecimal) null, (BigDecimal) null);
      catalogDoorOrWindow0.getWallThickness();
      catalogDoorOrWindow0.getWallDistance();
      catalogDoorOrWindow0.getSashes();
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getPrice();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 48.651985F, (-1859.7241F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 48.651985F, 48.651985F, 48.651985F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      float float1 = new Float(1233.643F);
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(false);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.isBottomLeftPointAt(1233.643F, 1233.643F, 1753.1449F);
      homePieceOfFurniture0.getValueAddedTax();
      resourceURLContent0.getJAREntryURL();
      homePieceOfFurniture0.setY(278.10486F);
      homePieceOfFurniture0.setNameYOffset(1233.643F);
      homePieceOfFurniture0.getElevation();
      homePieceOfFurniture0.getModel();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 48.651985F, 48.651985F, 48.651985F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getDepth();
      Float float0 = new Float(48.651985F);
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      FileSystemHandling.shouldAllThrowIOExceptions();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(false);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.intersectsRectangle(48.651985F, 48.651985F, 48.651985F, 48.651985F);
      homePieceOfFurniture0.getPoints();
      homePieceOfFurniture0.getValueAddedTax();
      homePieceOfFurniture0.setY(278.10486F);
      homePieceOfFurniture0.getModel();
      resourceURLContent0.getJAREntryURL();
      homePieceOfFurniture0.isTopRightPointAt(278.10486F, 48.651985F, 1673.6726F);
      // Undeclared exception!
      try { 
        HomePieceOfFurniture.SortableProperty.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.setCategory((FurnitureCategory) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      FileSystemHandling.shouldAllThrowIOExceptions();
      resourceURLContent1.getJAREntryURL();
      resourceURLContent0.getJAREntryURL();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setElevation(0.0F);
      homePieceOfFurniture0.setModelMirrored(true);
      homePieceOfFurniture0.isModelMirrored();
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.getIcon();
      homePieceOfFurniture0.getGroundElevation();
      homePieceOfFurniture0.setNameXOffset((-3365.0F));
      homePieceOfFurniture0.setMovable(false);
      homePieceOfFurniture0.setVisible(true);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 47.83689F, 47.83689F, 47.83689F, false, false);
      catalogPieceOfFurniture0.getIcon();
      Float float0 = new Float(47.83689F);
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      Float.isFinite((-0.6959646F));
      FileSystemHandling.shouldAllThrowIOExceptions();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.isBottomLeftPointAt((float) float0, (float) float0, 1753.1449F);
      homePieceOfFurniture0.isBottomRightPointAt((-0.6959646F), 1392.78F, 1753.1449F);
      homePieceOfFurniture0.getTexture();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      resourceURLContent0.getJAREntryURL();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homePieceOfFurniture0.setDepth((-1.0F));
      homePieceOfFurniture0.isPointAt((-1.0F), (-1.0F), (-1.0F));
      homePieceOfFurniture0.getModelRotation();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      resourceURLContent0.getJAREntryURL();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(true);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.isBottomLeftPointAt(3.4028235E38F, 1233.643F, 1233.643F);
      homePieceOfFurniture0.getValueAddedTax();
      resourceURLContent0.getJAREntryURL();
      homePieceOfFurniture0.setY(0.0F);
      homePieceOfFurniture0.setNameYOffset(1233.643F);
      homePieceOfFurniture0.getElevation();
      homePieceOfFurniture0.getModel();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, (-1.0F), (-1.0F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, (-1.0F), 0.0F, (-1.0F), true, true);
      TexturesCategory texturesCategory0 = new TexturesCategory("@ ^YH");
      CatalogTexture catalogTexture1 = mock(CatalogTexture.class, new ViolatedAssumptionAnswer());
      texturesCategory0.add(catalogTexture1);
      CatalogTexture catalogTexture2 = mock(CatalogTexture.class, new ViolatedAssumptionAnswer());
      texturesCategory0.getIndexOfTexture(catalogTexture2);
      catalogTexture0.setCategory(texturesCategory0);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getPrice();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(false);
      homePieceOfFurniture0.setVisible(true);
      homePieceOfFurniture0.getX();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 2.1591969F, 2174.6975F, 2174.6975F, true, true);
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      Float float0 = new Float(2174.6975F);
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getHeight();
      FileSystemHandling.shouldAllThrowIOExceptions();
      resourceURLContent0.getJAREntryURL();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      resourceURLContent1.getJAREntryURL();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.isTopLeftPointAt((-2094.5715F), 6.2090635F, 2174.6975F);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getDepth();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDepth(1249.0F);
      homePieceOfFurniture0.isNameCenterPointAt(0.0F, 0.0F, 0.0F);
      homePieceOfFurniture0.getLevel();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 48.651985F, 48.651985F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 48.651985F, 48.651985F, 48.651985F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      Float float0 = new Float(48.651985F);
      catalogPieceOfFurniture0.getDepth();
      Float float1 = new Float(48.651985F);
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      FileSystemHandling.shouldAllThrowIOExceptions();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(false);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.intersectsRectangle(48.651985F, 48.651985F, 48.651985F, 48.651985F);
      homePieceOfFurniture0.getPoints();
      homePieceOfFurniture0.getValueAddedTax();
      homePieceOfFurniture0.setY(278.10486F);
      homePieceOfFurniture0.getModel();
      homePieceOfFurniture0.setWidth(278.10486F);
      homePieceOfFurniture0.isBottomRightPointAt(1301.007F, 48.651985F, 1249.0F);
      homePieceOfFurniture0.setAngle(188.0F);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      Float float0 = new Float(0.0F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      FileSystemHandling.shouldAllThrowIOExceptions();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setModelMirrored(false);
      homePieceOfFurniture0.isModelMirrored();
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.setVisible(false);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getIcon();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.isDeformable();
      homePieceOfFurniture0.setAngle((-741.4095F));
      homePieceOfFurniture0.setNameAngle(278.10486F);
      homePieceOfFurniture0.getLevel();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, (-4.957164F), 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setWidth((-4.957164F));
      homePieceOfFurniture0.isTopLeftPointAt(0.0F, 0.0F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 48.651985F, 48.651985F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 48.651985F, 48.651985F, 48.651985F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      Float float0 = new Float(48.651985F);
      catalogPieceOfFurniture0.getDepth();
      Float float1 = new Float(48.651985F);
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      Float.isFinite(48.651985F);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(false);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.setElevation(48.651985F);
      homePieceOfFurniture0.isBottomLeftPointAt((float) float1, (float) float1, 1753.1449F);
      homePieceOfFurniture0.getPoints();
      homePieceOfFurniture0.getValueAddedTax();
      resourceURLContent0.getJAREntryURL();
      homePieceOfFurniture0.setY(278.10486F);
      homePieceOfFurniture0.getElevation();
      homePieceOfFurniture0.getModel();
      homePieceOfFurniture0.setElevation(1753.1449F);
      homePieceOfFurniture0.isTopRightPointAt(48.651985F, 164.0F, 394.113F);
      Integer integer0 = new Integer(0);
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      float[][] floatArray0 = new float[5][2];
      float[] floatArray1 = new float[7];
      floatArray1[0] = (-2222.113F);
      floatArray1[1] = (-2222.113F);
      floatArray1[2] = 0.0F;
      floatArray1[3] = 0.0F;
      floatArray1[4] = 0.0F;
      floatArray1[5] = (-2222.113F);
      floatArray1[6] = 951.9F;
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[1];
      floatArray2[0] = 951.9F;
      floatArray0[1] = floatArray2;
      float[] floatArray3 = new float[9];
      floatArray3[0] = 0.0F;
      floatArray3[1] = 0.0F;
      floatArray3[2] = (float) 0;
      floatArray3[3] = (float) 0;
      floatArray3[4] = 951.9F;
      floatArray3[5] = 3060.5994F;
      floatArray3[6] = (-2222.113F);
      floatArray3[7] = 951.9F;
      floatArray3[8] = 0.0F;
      floatArray0[2] = floatArray3;
      float[] floatArray4 = new float[4];
      floatArray4[0] = 0.0F;
      floatArray4[1] = (float) 0;
      floatArray4[2] = (-2222.113F);
      floatArray4[3] = (-2222.113F);
      floatArray0[3] = floatArray4;
      float[] floatArray5 = new float[1];
      floatArray5[0] = 2168.499F;
      floatArray0[4] = floatArray5;
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      CatalogPieceOfFurniture catalogPieceOfFurniture1 = null;
      try {
        catalogPieceOfFurniture1 = new CatalogPieceOfFurniture("g`pz4z%TV*[", "z<e]l*_*PiK'Vk", "z<e]l*_*PiK'Vk", temporaryURLContent0, temporaryURLContent0, 951.9F, 0.0F, (-2222.113F), 0, true, false, floatArray0, "EA@J?IU``m", true, bigDecimal0, bigDecimal0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.eteks.sweethome3d.model.CatalogPieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, 0.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getPrice();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(false);
      homePieceOfFurniture0.setVisible(true);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("0", resourceURLContent0, 0.0F, 0.0F);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("0", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      Float float1 = new Float(0.0F);
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setVisible(false);
      homePieceOfFurniture0.isTopLeftPointAt((-1214.1647F), (-1214.1647F), 0.0F);
      homePieceOfFurniture0.getHeight();
      homePieceOfFurniture0.isTexturable();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, 0.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      FileSystemHandling.shouldAllThrowIOExceptions();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.getPrice();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setX(3133.0F);
      homePieceOfFurniture0.setNameAngle(0.0F);
      homePieceOfFurniture0.setTexture(homeTexture0);
      homePieceOfFurniture0.setAngle(3133.0F);
      homePieceOfFurniture0.clone();
      homePieceOfFurniture0.isPointAt(1227.273F, 0.3926991F, 1233.643F);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent1, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      catalogPieceOfFurniture0.getWidth();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.getColor();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      resourceURLContent1.getJAREntryName();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      resourceURLContent0.getJAREntryURL();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setModelMirrored(true);
      homePieceOfFurniture0.containsPoint(2.0F, 1233.643F, 1233.643F);
      homePieceOfFurniture0.isModelMirrored();
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.getIcon();
      homePieceOfFurniture0.getPlanIcon();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 48.651985F, 48.651985F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 48.651985F, 48.651985F, 48.651985F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      Float float0 = new Float(48.651985F);
      catalogPieceOfFurniture0.getDepth();
      Float float1 = new Float(48.651985F);
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      Float.isFinite(48.651985F);
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(false);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.isBottomLeftPointAt((float) float1, (float) float1, 1753.1449F);
      homePieceOfFurniture0.getPoints();
      homePieceOfFurniture0.getValueAddedTax();
      resourceURLContent0.getJAREntryURL();
      homePieceOfFurniture0.setY(278.10486F);
      homePieceOfFurniture0.getElevation();
      homePieceOfFurniture0.getModel();
      homePieceOfFurniture0.setElevation(1753.1449F);
      homePieceOfFurniture0.getGroundElevation();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 48.651985F, 48.651985F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 48.651985F, 48.651985F, 48.651985F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getDepth();
      Float float0 = new Float(48.651985F);
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.isBottomLeftPointAt((float) float0, (float) float0, 1753.1449F);
      homePieceOfFurniture0.getPoints();
      homePieceOfFurniture0.getValueAddedTax();
      resourceURLContent0.getJAREntryURL();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      homePieceOfFurniture0.addPropertyChangeListener(propertyChangeListenerProxy0);
      homePieceOfFurniture0.setY(278.10486F);
      homePieceOfFurniture0.setNameYOffset(48.651985F);
      homePieceOfFurniture0.getElevation();
      homePieceOfFurniture0.getModel();
      homePieceOfFurniture0.setElevation(1753.1449F);
      homePieceOfFurniture0.isTopRightPointAt(48.651985F, 164.0F, 394.113F);
      homePieceOfFurniture0.getY();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      resourceURLContent0.getJAREntryURL();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 1233.5145F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      TextStyle textStyle0 = new TextStyle((-1859.897F), true, true);
      textStyle0.deriveBoldStyle(true);
      homePieceOfFurniture0.setNameStyle(textStyle0);
      homePieceOfFurniture0.setVisible(true);
      TextStyle textStyle1 = homePieceOfFurniture0.getNameStyle();
      homePieceOfFurniture0.setNameStyle(textStyle1);
      homePieceOfFurniture0.getCatalogId();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 48.651985F, (-1859.7241F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 48.651985F, 48.651985F, 48.651985F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(false);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.isBottomLeftPointAt(0.0F, 0.0F, 1753.1449F);
      resourceURLContent0.getJAREntryURL();
      homePieceOfFurniture0.setY((-1859.7241F));
      homePieceOfFurniture0.setNameYOffset(48.651985F);
      homePieceOfFurniture0.getElevation();
      homePieceOfFurniture0.getModel();
      homePieceOfFurniture0.getPoints();
      homePieceOfFurniture0.isNameVisible();
      homePieceOfFurniture0.getNameYOffset();
      homePieceOfFurniture0.setName("Y|KSQpe");
      homePieceOfFurniture0.getDepth();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Float float0 = new Float(47.83689F);
      Float float1 = new Float(47.83689F);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Sash[] sashArray0 = new Sash[5];
      Sash sash0 = mock(Sash.class, new ViolatedAssumptionAnswer());
      sashArray0[0] = sash0;
      sashArray0[1] = sash0;
      sashArray0[2] = sash0;
      sashArray0[3] = sash0;
      sashArray0[4] = sash0;
      float[][] floatArray0 = new float[3][0];
      float[] floatArray1 = new float[5];
      floatArray1[0] = 0.0F;
      floatArray1[1] = (-1117.708F);
      floatArray1[2] = (-2898.0F);
      floatArray1[3] = (-2898.0F);
      floatArray1[4] = (-2898.0F);
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[4];
      floatArray2[0] = (-689.0F);
      floatArray2[1] = (-1117.708F);
      floatArray2[2] = (-1117.708F);
      floatArray2[3] = 0.0F;
      floatArray0[1] = floatArray2;
      float[] floatArray3 = new float[5];
      floatArray3[0] = (-1117.708F);
      floatArray3[1] = (-2898.0F);
      floatArray3[2] = 2420.0F;
      floatArray3[3] = (-1117.708F);
      floatArray3[4] = (-2898.0F);
      floatArray0[2] = floatArray3;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("-&!3GNOk0wVo8dXzrRh", "-&!3GNOk0wVo8dXzrRh", "-&!3GNOk0wVo8dXzrRh", (Content) null, (Content) null, (Content) null, (-2898.0F), (-2898.0F), (-689.0F), 0.0F, false, 0.0F, (-1117.708F), sashArray0, floatArray0, "zD", true, true, false, (BigDecimal) null, (BigDecimal) null);
      catalogDoorOrWindow0.getWallThickness();
      catalogDoorOrWindow0.getWallDistance();
      catalogDoorOrWindow0.getSashes();
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      // Undeclared exception!
      try { 
        homeDoorOrWindow0.setTexture((HomeTexture) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't texturable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.setCategory((FurnitureCategory) null);
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      resourceURLContent0.getJAREntryURL();
      resourceURLContent1.getJAREntryURL();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setModelMirrored(true);
      homePieceOfFurniture0.isModelMirrored();
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.getIcon();
      homePieceOfFurniture0.getPlanIcon();
      homePieceOfFurniture0.setAngle((-2075.5F));
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 47.83689F, 47.83689F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 47.83689F, 47.83689F, 47.83689F, false, false);
      catalogPieceOfFurniture0.getIcon();
      Float float0 = new Float(47.83689F);
      catalogPieceOfFurniture0.getDepth();
      Float float1 = new Float(47.83689F);
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      Float.isFinite((-0.6959646F));
      FileSystemHandling.shouldAllThrowIOExceptions();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.setShininess(float0);
      homePieceOfFurniture0.isBottomLeftPointAt((float) float1, (float) float1, 1753.1449F);
      homePieceOfFurniture0.isModelMirrored();
      homePieceOfFurniture0.isBottomRightPointAt(1753.1449F, 47.83689F, 2774.44F);
      homePieceOfFurniture0.getCurrency();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 2174.6975F, 2174.6975F, true, true);
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      Float float0 = new Float(2174.6975F);
      catalogPieceOfFurniture0.getDescription();
      FileSystemHandling.shouldAllThrowIOExceptions();
      resourceURLContent0.getJAREntryURL();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDescription((String) null);
      homePieceOfFurniture0.setHeight(2174.6975F);
      homePieceOfFurniture0.containsPoint(0.0F, 11.778924F, 0.0F);
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      homePieceOfFurniture1.isBottomRightPointAt(0.0F, 2174.6975F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Sash[] sashArray0 = new Sash[5];
      sashArray0[3] = sashArray0[2];
      float[][] floatArray0 = new float[21][0];
      float[] floatArray1 = new float[10];
      floatArray1[0] = (-2918.0647F);
      floatArray1[3] = (-2918.0647F);
      floatArray0[0] = floatArray1;
      floatArray0[1] = floatArray1;
      floatArray0[2] = floatArray1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("<7c6eky-Dz", "<7c6eky-Dz", "<7c6eky-Dz", (Content) null, (Content) null, (Content) null, (-2918.0647F), (-2918.0647F), (-2918.0647F), (-2918.0647F), false, (-2918.0647F), (-1119.9485F), sashArray0, floatArray0, "<7c6eky-Dz", false, false, false, (BigDecimal) null, (BigDecimal) null);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setY((-2918.0647F));
      HomePieceOfFurniture homePieceOfFurniture0 = homeDoorOrWindow0.clone();
      // Undeclared exception!
      try { 
        homePieceOfFurniture0.setHeight((-2918.0647F));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getModel();
      Float float1 = new Float(0.0F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.containsPoint((-2125.62F), 1233.643F, 34.578F);
      homePieceOfFurniture0.setVisible(true);
      homePieceOfFurniture0.isNameCenterPointAt(0.0F, 34.578F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Sash[] sashArray0 = new Sash[5];
      sashArray0[1] = sashArray0[0];
      sashArray0[3] = sashArray0[2];
      float[][] floatArray0 = new float[21][0];
      float[] floatArray1 = new float[10];
      floatArray1[0] = (-2918.0647F);
      floatArray1[3] = (-2918.0647F);
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[4];
      floatArray2[1] = (-1119.9485F);
      floatArray2[2] = 0.0F;
      floatArray2[3] = (-2918.0647F);
      floatArray0[1] = floatArray2;
      floatArray0[2] = floatArray2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("<7c6eky-Dz", "<7c6eky-Dz", "<7c6eky-Dz", (Content) null, (Content) null, (Content) null, (-2918.0647F), (-2918.0647F), (-2918.0647F), (-2918.0647F), false, 0.0F, (-1119.9485F), sashArray0, floatArray0, "<7c6eky-Dz", false, false, false, (BigDecimal) null, (BigDecimal) null);
      catalogDoorOrWindow0.getSashes();
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      Level level0 = new Level("<7c6eky-Dz", 0.3926991F, 0.3926991F, (-2918.0647F));
      Level level1 = level0.clone();
      level1.clone();
      homeDoorOrWindow0.setLevel(level0);
      homeDoorOrWindow0.setY((-2918.0647F));
      homeDoorOrWindow0.getName();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeDoorOrWindow0.setDescription("<7c6eky-Dz");
      homeDoorOrWindow0.getNameAngle();
      homeDoorOrWindow0.getIcon();
      // Undeclared exception!
      try { 
        HomePieceOfFurniture.Property.valueOf(":");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomePieceOfFurniture.Property.:
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, (-10.71006F), (-1860.0F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      resourceURLContent0.getJAREntryURL();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, (-10.71006F), (-1860.0F), 1233.643F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getIcon();
      homeTexture0.getImage();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      Integer integer0 = Integer.valueOf(0);
      resourceURLContent0.getJAREntryName();
      homePieceOfFurniture0.setColor(integer0);
      homePieceOfFurniture0.isPointAt((-1860.0F), (-10.71006F), 0);
      homePieceOfFurniture0.isAtLevel((Level) null);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 2174.6975F, 2174.6975F, false, false);
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      Float float0 = new Float(2174.6975F);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setShininess(float0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent1, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      catalogPieceOfFurniture0.getWidth();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.getColor();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getPrice();
      resourceURLContent1.getJAREntryName();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.getDescription();
      homePieceOfFurniture0.setModelMirrored(true);
      homePieceOfFurniture0.isDeformable();
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.getIcon();
      homePieceOfFurniture0.getPlanIcon();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Sash[] sashArray0 = new Sash[5];
      sashArray0[1] = sashArray0[0];
      sashArray0[2] = sashArray0[1];
      sashArray0[3] = sashArray0[2];
      float[][] floatArray0 = new float[3][0];
      float[] floatArray1 = new float[22];
      floatArray1[0] = (-2898.0F);
      floatArray1[2] = (-2898.0F);
      floatArray1[3] = (-2898.0F);
      floatArray1[4] = (-2898.0F);
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[4];
      floatArray2[0] = (-689.0F);
      floatArray2[1] = (-1117.708F);
      floatArray2[2] = (-689.0F);
      floatArray2[3] = (-689.0F);
      floatArray0[1] = floatArray2;
      floatArray0[2] = floatArray1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("-&!3GNOk0wVo8dXzrRh", "-&!3GNOk0wVo8dXzrRh", "-&!3GNOk0wVo8dXzrRh", (Content) null, (Content) null, (Content) null, (-2898.0F), (-2898.0F), (-689.0F), (-689.0F), false, 0.0F, (-1117.708F), sashArray0, floatArray0, "-&!3GNOk0wVo8dXzrRh", true, true, false, (BigDecimal) null, (BigDecimal) null);
      catalogDoorOrWindow0.getWallThickness();
      Float float0 = new Float((-2898.0F));
      catalogDoorOrWindow0.getSashes();
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      catalogDoorOrWindow0.getPrice();
      homeDoorOrWindow0.getValueAddedTaxPercentage();
      homeDoorOrWindow0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(homeDoorOrWindow0);
      homeDoorOrWindow0.setMovable(true);
      homeDoorOrWindow0.setVisible(false);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.getNameStyle();
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setX((-1859.897F));
      homePieceOfFurniture0.setNameAngle(0.0F);
      homePieceOfFurniture0.setTexture(homeTexture0);
      homePieceOfFurniture0.setAngle(0.0F);
      homePieceOfFurniture0.getCatalogId();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 47.83689F, 47.83689F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 47.83689F, 47.83689F, 47.83689F, true, true);
      Float float0 = new Float(47.83689F);
      Float float1 = new Float(47.83689F);
      Float float2 = new Float(47.83689F);
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getCurrency();
      resourceURLContent0.getJAREntryURL();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setNameXOffset(47.83689F);
      homePieceOfFurniture0.isTopLeftPointAt((-0.6959646F), 47.83689F, (-1356.627F));
      homePieceOfFurniture0.getLevel();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Sash[] sashArray0 = new Sash[5];
      sashArray0[3] = sashArray0[2];
      float[][] floatArray0 = new float[21][0];
      float[] floatArray1 = new float[10];
      floatArray1[0] = (-2918.0647F);
      floatArray1[3] = (-2918.0647F);
      floatArray0[0] = floatArray1;
      floatArray0[1] = floatArray1;
      floatArray0[2] = floatArray1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("<7c6eky-Dz", "<7c6eky-Dz", "<7c6eky-Dz", (Content) null, (Content) null, (Content) null, (-2918.0647F), (-2918.0647F), (-2918.0647F), (-2918.0647F), false, (-2918.0647F), (-1119.9485F), sashArray0, floatArray0, "<7c6eky-Dz", false, false, false, (BigDecimal) null, (BigDecimal) null);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setY((-2918.0647F));
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeDoorOrWindow0.setDescription("<7c6eky-Dz");
      homeDoorOrWindow0.setNameAngle((-1119.9485F));
      Integer.valueOf((-6541));
      Integer integer0 = Integer.valueOf(1);
      // Undeclared exception!
      try { 
        homeDoorOrWindow0.setColor(integer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't texturable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getPrice();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(false);
      homePieceOfFurniture0.setVisible(false);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 48.651985F, (-1859.7241F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 48.651985F, 48.651985F, 48.651985F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isTexturable();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setHeight((-1.0F));
      homePieceOfFurniture0.containsPoint(477.0F, (-2764.0F), 24.325993F);
      homePieceOfFurniture0.isNameCenterPointAt((-1477.3168F), 1018.0F, (-1477.3168F));
      homePieceOfFurniture0.containsPoint((-212.18F), 34.578F, (-1.0F));
      homePieceOfFurniture0.clone();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      resourceURLContent0.getJAREntryURL();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, (-1859.897F), 1233.643F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getIcon();
      homeTexture0.getImage();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setDepth(0.0F);
      homePieceOfFurniture0.setTexture((HomeTexture) null);
      homePieceOfFurniture0.setAngle(0.0F);
      homePieceOfFurniture0.setShininess((Float) null);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 2174.6975F, 2174.6975F, true, true);
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDepth(2174.6975F);
      homePieceOfFurniture0.setDescription((String) null);
      homePieceOfFurniture0.setName("");
      homePieceOfFurniture0.getNameStyle();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, (-31.303833F), (-1859.897F), (-31.303833F), true, true);
      catalogPieceOfFurniture0.getIcon();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDepth((-1859.897F));
      homePieceOfFurniture0.setTexture((HomeTexture) null);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 47.83689F, 47.83689F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 47.83689F, 47.83689F, 47.83689F, true, true);
      Float float0 = new Float(47.83689F);
      Float float1 = new Float(47.83689F);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      catalogPieceOfFurniture0.isTexturable();
      resourceURLContent0.getJAREntryURL();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.isTopLeftPointAt((-0.6959646F), 47.83689F, (-1356.627F));
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent1, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      resourceURLContent1.getJAREntryURL();
      catalogPieceOfFurniture0.getPrice();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.getDescription();
      homePieceOfFurniture0.setX(3133.0F);
      homePieceOfFurniture0.getPoints();
      homePieceOfFurniture0.setX((-1.0F));
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 48.651985F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 48.651985F, 48.651985F, 48.651985F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(false);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.getValueAddedTax();
      resourceURLContent0.getJAREntryURL();
      homePieceOfFurniture0.setY(278.10486F);
      homePieceOfFurniture0.isPointAt(1233.643F, (-771.0F), (-2075.5F));
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, (-3585.1F), (-3585.1F), (-3585.1F), true, true);
      catalogPieceOfFurniture0.getDepth();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDepth((-3585.1F));
      homePieceOfFurniture0.isNameCenterPointAt((-3585.1F), (-3585.1F), (-1459.0323F));
      homePieceOfFurniture0.getLevel();
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent1, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      catalogPieceOfFurniture0.getWidth();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.getColor();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getPrice();
      resourceURLContent1.getJAREntryName();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.getDescription();
      homePieceOfFurniture0.setModelMirrored(true);
      homePieceOfFurniture0.isModelMirrored();
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.getIcon();
      homePieceOfFurniture0.getPlanIcon();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 47.83689F, 47.83689F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 47.83689F, 47.83689F, 47.83689F, true, true);
      catalogPieceOfFurniture0.getIcon();
      Float float0 = new Float(47.83689F);
      Float float1 = new Float(47.83689F);
      Float float2 = new Float(47.83689F);
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      Float.isFinite((-0.6959646F));
      FileSystemHandling.shouldAllThrowIOExceptions();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      resourceURLContent0.getJAREntryURL();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.isTopRightPointAt(48.7F, 1673.6726F, 3129.3044F);
      homePieceOfFurniture0.getAngle();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 48.651985F, 48.651985F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 48.651985F, 48.651985F, 48.651985F, true, true);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      resourceURLContent0.getJAREntryURL();
      CatalogPieceOfFurniture catalogPieceOfFurniture1 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 1233.643F, (-1541.049F), 48.651985F, true, true);
      catalogPieceOfFurniture1.getName();
      catalogPieceOfFurniture1.getIcon();
      homeTexture1.getImage();
      catalogPieceOfFurniture1.getDepth();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture1.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture1.isDeformable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      Integer.valueOf(0);
      resourceURLContent0.getJAREntryName();
      Integer integer0 = Integer.valueOf((-248));
      homePieceOfFurniture0.setColor(integer0);
      homePieceOfFurniture0.isPointAt(2165.2935F, 1.0F, (-1.0F));
      homePieceOfFurniture0.getStaircaseCutOutShape();
      homePieceOfFurniture0.getWidth();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 48.651985F, (-1859.7241F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 48.651985F, 48.651985F, 48.651985F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(false);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.isBottomLeftPointAt(0.0F, 0.0F, 1753.1449F);
      resourceURLContent0.getJAREntryURL();
      homePieceOfFurniture0.setY((-1859.7241F));
      homePieceOfFurniture0.setNameYOffset(48.651985F);
      homePieceOfFurniture0.getElevation();
      homePieceOfFurniture0.getModel();
      homePieceOfFurniture0.getPoints();
      homePieceOfFurniture0.isNameVisible();
      homePieceOfFurniture0.getNameYOffset();
      homePieceOfFurniture0.setName("Y|KSQpe");
      homePieceOfFurniture0.move(0.0F, 971.7F);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 2174.6975F, 2174.6975F, true, true);
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      Float float0 = new Float(2174.6975F);
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getHeight();
      FileSystemHandling.shouldAllThrowIOExceptions();
      resourceURLContent0.getJAREntryURL();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDepth(2174.6975F);
      homePieceOfFurniture0.setTexture((HomeTexture) null);
      homePieceOfFurniture0.setShininess(float0);
      homePieceOfFurniture0.getShininess();
      homePieceOfFurniture0.isNameCenterPointAt(2174.6975F, 0.0F, (-1854.0F));
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      catalogPieceOfFurniture0.getWidth();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getPrice();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.getY();
      homePieceOfFurniture0.getModel();
      homePieceOfFurniture0.setMovable(true);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent1, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      resourceURLContent1.getJAREntryName();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      float float0 = new Float(0.0F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getColor();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      FileSystemHandling.shouldAllThrowIOExceptions();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getPrice();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setNameStyle((TextStyle) null);
      homePieceOfFurniture0.setDepth(1233.643F);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getPrice();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(false);
      homePieceOfFurniture0.getNameStyle();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getDescription();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.intersectsRectangle(0.0F, 0.0F, 0.0F, 0.0F);
      homePieceOfFurniture0.getCurrency();
      resourceURLContent0.getJAREntryURL();
      HomePieceOfFurniture homePieceOfFurniture1 = new HomePieceOfFurniture(homePieceOfFurniture0);
      homePieceOfFurniture0.isTopLeftPointAt(0.0F, 3.4028235E38F, (-5701.0293F));
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent1, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      resourceURLContent1.getJAREntryName();
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      catalogPieceOfFurniture0.getWidth();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getColor();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDepth(1233.643F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homePieceOfFurniture0.removePropertyChangeListener(propertyChangeListenerProxy0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 0.0F, (-1859.897F), 1269.4059F, true, true);
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getModel();
      catalogPieceOfFurniture0.getDepth();
      Float float0 = new Float((-1859.897F));
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isResizable();
      FileSystemHandling.shouldAllThrowIOExceptions();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.getNameStyle();
      homePieceOfFurniture0.setX((-1859.897F));
      homePieceOfFurniture0.setNameAngle(0.0F);
      homePieceOfFurniture0.setTexture(homeTexture0);
      homePieceOfFurniture0.setAngle(0.0F);
      homePieceOfFurniture0.getTexture();
      HomePieceOfFurniture.Property.values();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      resourceURLContent0.getJAREntryURL();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setHeight(0.0F);
      homePieceOfFurniture0.intersectsRectangle(2457.659F, 2457.659F, 2457.659F, 2.0F);
      homePieceOfFurniture0.isTopLeftPointAt(0.0F, 2.0F, (-1718.048F));
      homePieceOfFurniture0.setAngle(277.88F);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.090887584F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.090887584F, (-1859.897F), 0.090887584F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      homeTexture0.getImage();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      TextStyle textStyle0 = new TextStyle((-3211.9382F), false, false);
      TextStyle textStyle1 = textStyle0.deriveBoldStyle(true);
      homePieceOfFurniture0.setNameStyle(textStyle1);
      homePieceOfFurniture0.isBottomRightPointAt(1609.0F, 0.090887584F, (-3211.9382F));
      homePieceOfFurniture0.setVisible(true);
      homePieceOfFurniture0.setNameStyle(textStyle0);
      Level level0 = new Level(" ", 0.3926991F, 0.3926991F, 4943.5F);
      Level level1 = level0.clone();
      Level level2 = level1.clone();
      homePieceOfFurniture0.isAtLevel(level2);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      resourceURLContent0.getJAREntryURL();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 0.0F, (-10.530371F), 1233.643F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setNameVisible(true);
      Integer integer0 = new Integer(0);
      Integer integer1 = Integer.valueOf((-1329));
      homePieceOfFurniture0.setColor(integer1);
      homePieceOfFurniture0.isPointAt(0.0F, 0.0F, 0);
      homePieceOfFurniture0.setDescription((String) null);
      homePieceOfFurniture0.getWidth();
      homePieceOfFurniture0.getValueAddedTaxPercentage();
      // Undeclared exception!
      try { 
        HomePieceOfFurniture.SortableProperty.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("0", resourceURLContent0, 0.0F, 0.0F);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("0", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      float float1 = new Float(0.0F);
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setVisible(false);
      homePieceOfFurniture0.isTopLeftPointAt((-1214.1647F), (-1214.1647F), 0.0F);
      homePieceOfFurniture0.getHeight();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Sash[] sashArray0 = new Sash[5];
      sashArray0[1] = sashArray0[0];
      sashArray0[2] = sashArray0[1];
      sashArray0[3] = sashArray0[2];
      float[][] floatArray0 = new float[3][0];
      float[] floatArray1 = new float[22];
      floatArray1[0] = (-2918.0647F);
      floatArray1[2] = (-2918.0647F);
      floatArray1[3] = (-2918.0647F);
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[4];
      floatArray2[1] = (-1119.9485F);
      floatArray2[2] = (-1119.9485F);
      floatArray2[3] = (-2918.0647F);
      floatArray0[1] = floatArray2;
      floatArray0[2] = floatArray1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("-&!3GNOk0wVo8dXzrRh", "-&!3GNOk0wVo8dXzrRh", "-&!3GNOk0wVo8dXzrRh", (Content) null, (Content) null, (Content) null, (-2918.0647F), (-2918.0647F), (-2918.0647F), (-2918.0647F), false, 0.0F, (-1119.9485F), sashArray0, floatArray0, "-&!3GNOk0wVo8dXzrRh", false, false, false, (BigDecimal) null, (BigDecimal) null);
      catalogDoorOrWindow0.getSashes();
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      HomeDoorOrWindow homeDoorOrWindow1 = homeDoorOrWindow0.clone();
      Level level0 = new Level(" ", 0.3926991F, 0.3926991F, 4943.5F);
      Level level1 = level0.clone();
      level1.setFloorThickness((-2918.0647F));
      Level level2 = level1.clone();
      homeDoorOrWindow0.setLevel(level2);
      homeDoorOrWindow0.setY((-2918.0647F));
      homeDoorOrWindow0.getName();
      homeDoorOrWindow1.isNameCenterPointAt(0.0F, 3219.54F, 1451.918F);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 47.83689F, 47.83689F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 47.83689F, 47.83689F, 47.83689F, true, true);
      catalogPieceOfFurniture0.getIcon();
      Float float0 = new Float(47.83689F);
      catalogPieceOfFurniture0.getDepth();
      Float float1 = new Float(47.83689F);
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      Float.isFinite((-0.6959646F));
      catalogPieceOfFurniture0.isDeformable();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.setShininess(float0);
      homePieceOfFurniture0.isBottomLeftPointAt((float) float1, (float) float1, 1753.1449F);
      homePieceOfFurniture0.setWidth(1753.1449F);
      homePieceOfFurniture0.isBottomRightPointAt((-0.6959646F), 1392.78F, 1753.1449F);
      homePieceOfFurniture0.setAngle(47.83689F);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.setCategory((FurnitureCategory) null);
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      resourceURLContent0.getJAREntryURL();
      resourceURLContent1.getJAREntryURL();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setElevation(0.0F);
      homePieceOfFurniture0.setModelMirrored(true);
      homePieceOfFurniture0.isModelMirrored();
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.getIcon();
      homePieceOfFurniture0.getGroundElevation();
      homePieceOfFurniture0.setNameXOffset(0.0F);
      homePieceOfFurniture0.setVisible(false);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent1, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      resourceURLContent1.getJAREntryURL();
      catalogPieceOfFurniture0.getPrice();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.getDescription();
      homePieceOfFurniture0.intersectsRectangle((-1.0F), 0.0F, (-4511.3926F), 0.0F);
      homePieceOfFurniture0.setX(3133.0F);
      homePieceOfFurniture0.getPoints();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Sash[] sashArray0 = new Sash[5];
      sashArray0[1] = sashArray0[0];
      sashArray0[3] = sashArray0[2];
      float[][] floatArray0 = new float[3][0];
      float[] floatArray1 = new float[22];
      floatArray1[0] = (-2918.0647F);
      floatArray1[2] = (-2918.0647F);
      floatArray1[3] = (-2918.0647F);
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[4];
      floatArray2[0] = (-2918.0647F);
      floatArray2[1] = (-1117.708F);
      floatArray2[2] = (-1117.708F);
      floatArray2[3] = (-2918.0647F);
      floatArray0[1] = floatArray2;
      floatArray0[2] = floatArray1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("-&!3GNOk0wVo8dXzrRh", "-&!3GNOk0wVo8dXzrRh", "-&!3GNOk0wVo8dXzrRh", (Content) null, (Content) null, (Content) null, (-2918.0647F), (-2918.0647F), (-2918.0647F), (-2918.0647F), false, 0.0F, (-1117.708F), sashArray0, floatArray0, "-&!3GNOk0wVo8dXzrRh", false, false, false, (BigDecimal) null, (BigDecimal) null);
      catalogDoorOrWindow0.getWallThickness();
      catalogDoorOrWindow0.getSashes();
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      Level level0 = new Level("editorSubFolder.Mac OS X", (-823.79F), (-2918.0647F), (-2918.0647F));
      Level level1 = level0.clone();
      BackgroundImage backgroundImage0 = new BackgroundImage((Content) null, (-1117.708F), (-3088.8623F), 1905.8667F, 0.3926991F, (-2279.71F), 0.0F, 97.3847F, false);
      level1.setBackgroundImage(backgroundImage0);
      level0.setVisible(false);
      level1.clone();
      homeDoorOrWindow0.setLevel(level1);
      homeDoorOrWindow0.isNameCenterPointAt((-1459.0323F), (-1117.708F), 856.14F);
      homeDoorOrWindow0.getNameYOffset();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 3.4028235E38F, 3.4028235E38F, true, true);
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      Float float0 = new Float(3.4028235E38F);
      catalogPieceOfFurniture0.getDescription();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setHeight(3.4028235E38F);
      homePieceOfFurniture0.isTopRightPointAt(0.0F, 3.4028235E38F, 3.4028235E38F);
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      homePieceOfFurniture1.setAngle(0.0F);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      String string0 = "-&!3GNO0wVoJXzrRh";
      Sash[] sashArray0 = new Sash[5];
      sashArray0[1] = sashArray0[0];
      sashArray0[3] = sashArray0[2];
      float[][] floatArray0 = new float[21][0];
      float[] floatArray1 = new float[22];
      floatArray1[0] = (-2918.0647F);
      floatArray1[3] = (-2918.0647F);
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[4];
      floatArray2[2] = (-1119.9485F);
      floatArray2[3] = (-2918.0647F);
      floatArray0[1] = floatArray2;
      floatArray0[2] = floatArray1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("-&!3GNO0wVoJXzrRh", "-&!3GNO0wVoJXzrRh", "-&!3GNO0wVoJXzrRh", (Content) null, (Content) null, (Content) null, (-2918.0647F), (-2918.0647F), (-2918.0647F), (-2918.0647F), false, 0.0F, (-1119.9485F), sashArray0, floatArray0, "-&!3GNO0wVoJXzrRh", false, false, false, (BigDecimal) null, (BigDecimal) null);
      catalogDoorOrWindow0.getSashes();
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      Level level0 = new Level("-&!3GNO0wVoJXzrRh", 0.3926991F, 0.3926991F, (-2918.0647F));
      Level level1 = level0.clone();
      Level level2 = level1.clone();
      homeDoorOrWindow0.setLevel(level2);
      // Undeclared exception!
      try { 
        homeDoorOrWindow0.setModelMirrored(false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 48.651985F, (-1859.7241F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 48.651985F, 48.651985F, 48.651985F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      Float float0 = new Float(48.651985F);
      catalogPieceOfFurniture0.getDepth();
      Float float1 = new Float(48.651985F);
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(false);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.isBottomLeftPointAt((float) float1, (float) float1, 1753.1449F);
      homePieceOfFurniture0.getPoints();
      homePieceOfFurniture0.getValueAddedTax();
      resourceURLContent0.getJAREntryURL();
      homePieceOfFurniture0.setY(278.10486F);
      homePieceOfFurniture0.setNameYOffset(48.651985F);
      homePieceOfFurniture0.getElevation();
      homePieceOfFurniture0.getModel();
      homePieceOfFurniture0.setElevation((-2843.711F));
      homePieceOfFurniture0.isTopRightPointAt(48.651985F, 164.0F, 394.113F);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Sash[] sashArray0 = new Sash[5];
      sashArray0[1] = sashArray0[0];
      sashArray0[3] = sashArray0[2];
      float[][] floatArray0 = new float[21][0];
      float[] floatArray1 = new float[10];
      floatArray1[0] = (-2918.0647F);
      floatArray1[3] = (-2918.0647F);
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[4];
      floatArray2[1] = (-1119.9485F);
      floatArray2[3] = (-2918.0647F);
      floatArray0[1] = floatArray2;
      floatArray0[2] = floatArray2;
      boolean boolean0 = false;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("<7c6eky-Dz", "<7c6eky-Dz", "<7c6eky-Dz", (Content) null, (Content) null, (Content) null, (-2918.0647F), (-2918.0647F), (-2918.0647F), (-2918.0647F), false, (-2918.0647F), (-1119.9485F), sashArray0, floatArray0, "<7c6eky-Dz", false, false, false, (BigDecimal) null, (BigDecimal) null);
      catalogDoorOrWindow0.getSashes();
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      // Undeclared exception!
      try { 
        homeDoorOrWindow0.setModelMirrored(false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't resizable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Sash[] sashArray0 = new Sash[5];
      sashArray0[1] = sashArray0[0];
      sashArray0[3] = sashArray0[2];
      float[][] floatArray0 = new float[21][0];
      float[] floatArray1 = new float[22];
      floatArray1[0] = (-2918.0647F);
      floatArray1[2] = (-2918.0647F);
      floatArray1[3] = (-2918.0647F);
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[4];
      floatArray2[1] = (-1119.9485F);
      floatArray2[2] = (-1119.9485F);
      floatArray2[3] = (-2918.0647F);
      floatArray0[1] = floatArray2;
      floatArray0[2] = floatArray1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("-&!3GNOk0wVo8dXzrRh", "-&!3GNOk0wVo8dXzrRh", "-&!3GNOk0wVo8dXzrRh", (Content) null, (Content) null, (Content) null, (-2918.0647F), (-2918.0647F), (-2918.0647F), (-2918.0647F), false, 0.0F, (-1119.9485F), sashArray0, floatArray0, "-&!3GNOk0wVo8dXzrRh", false, false, false, (BigDecimal) null, (BigDecimal) null);
      catalogDoorOrWindow0.getSashes();
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      HomeDoorOrWindow homeDoorOrWindow1 = homeDoorOrWindow0.clone();
      Level level0 = new Level("-&!3GNOk0wVo8dXzrRh", 0.3926991F, 0.3926991F, 4943.5F);
      Level level1 = level0.clone();
      Level level2 = level1.clone();
      level2.setFloorThickness(4943.5F);
      homeDoorOrWindow0.setLevel(level2);
      homeDoorOrWindow0.setY((-2918.0647F));
      homeDoorOrWindow0.getName();
      homeDoorOrWindow1.isDoorOrWindow();
      homeDoorOrWindow1.setDescription("-&!3GNOk0wVo8dXzrRh");
      homeDoorOrWindow1.getCatalogId();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, (-31.3F), (-31.3F), (-31.3F), false, false);
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.isMovable();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setVisible(false);
      homePieceOfFurniture0.getLevel();
      homePieceOfFurniture0.getTexture();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      HomePieceOfFurniture homePieceOfFurniture1 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture1.setShininess((Float) null);
      homePieceOfFurniture0.setModelMirrored(false);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      catalogPieceOfFurniture0.getModelRotation();
      FileSystemHandling.shouldAllThrowIOExceptions();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(true);
      homePieceOfFurniture0.setY(291.9354F);
      homePieceOfFurniture0.isTopRightPointAt(1673.67F, 0.0F, 291.9354F);
      homePieceOfFurniture0.getAngle();
      homePieceOfFurniture0.getCatalogId();
      homePieceOfFurniture0.isTopRightPointAt(0.0F, 1673.67F, 23.918446F);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      homeTexture0.getImage();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getPrice();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(false);
      homePieceOfFurniture0.setVisible(false);
      homePieceOfFurniture0.isTopLeftPointAt((-1214.1647F), (-1214.1647F), 0.0F);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, (-31.3F), (-31.3F), (-31.3F), false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      resourceURLContent0.getJAREntryName();
      homePieceOfFurniture0.setVisible(true);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getDepth();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDepth(1249.0F);
      homePieceOfFurniture0.isNameCenterPointAt(0.0F, 0.0F, 0.0F);
      homePieceOfFurniture0.isPointAt((-160.31F), 0.0F, 0.0F);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getPrice();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(true);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getPrice();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(false);
      homePieceOfFurniture0.getX();
      homePieceOfFurniture0.setY(278.10486F);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getColor();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getPrice();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.getDescription();
      homePieceOfFurniture0.getStaircaseCutOutShape();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      homeTexture0.getImage();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getPrice();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      TextStyle textStyle0 = new TextStyle((-3211.9382F), false, false);
      TextStyle textStyle1 = textStyle0.deriveBoldStyle(false);
      homePieceOfFurniture0.setNameStyle(textStyle1);
      homePieceOfFurniture0.setMovable(false);
      homePieceOfFurniture0.setVisible(false);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, (-31.3F), (-31.3F), (-31.3F), false, false);
      catalogPieceOfFurniture0.isMovable();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setVisible(false);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.getShininess();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      resourceURLContent0.getJAREntryName();
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      catalogPieceOfFurniture0.getWidth();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getColor();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getPrice();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDepth((-1711.6315F));
      homePieceOfFurniture0.isResizable();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      resourceURLContent0.getJAREntryURL();
      catalogPieceOfFurniture0.getDepth();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDepth((-1.0F));
      homePieceOfFurniture0.isNameCenterPointAt(0.0F, 0.0F, 0.0F);
      homePieceOfFurniture0.setName("");
      homePieceOfFurniture0.isPointAt((-1.0F), 0.0F, (-1.0F));
      homePieceOfFurniture0.getNameAngle();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 1233.643F, false, false);
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.setCategory((FurnitureCategory) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      FileSystemHandling.shouldAllThrowIOExceptions();
      resourceURLContent0.getJAREntryURL();
      resourceURLContent0.getJAREntryURL();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setElevation(0.0F);
      homePieceOfFurniture0.setModelMirrored(true);
      homePieceOfFurniture0.isModelMirrored();
      homePieceOfFurniture0.setNameXOffset(14.972006F);
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.getIcon();
      homePieceOfFurniture0.getGroundElevation();
      homePieceOfFurniture0.setNameXOffset(0.0F);
      homePieceOfFurniture0.setMovable(true);
      homePieceOfFurniture0.setVisible(false);
      homePieceOfFurniture0.getNameStyle();
      homePieceOfFurniture0.setWidth((-1734.4031F));
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Sash[] sashArray0 = new Sash[5];
      sashArray0[1] = sashArray0[0];
      sashArray0[3] = sashArray0[2];
      float[][] floatArray0 = new float[21][0];
      float[] floatArray1 = new float[22];
      floatArray1[0] = (-2918.0647F);
      floatArray1[2] = (-2918.0647F);
      floatArray1[3] = (-2918.0647F);
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[4];
      floatArray2[1] = (-1119.9485F);
      floatArray2[2] = (-1119.9485F);
      floatArray2[3] = (-2918.0647F);
      floatArray0[1] = floatArray2;
      floatArray0[2] = floatArray1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("-&!3GNO0wVoJXzrRh", "-&!3GNO0wVoJXzrRh", "-&!3GNO0wVoJXzrRh", (Content) null, (Content) null, (Content) null, (-2918.0647F), (-2918.0647F), (-2918.0647F), (-2918.0647F), false, 0.0F, (-1119.9485F), sashArray0, floatArray0, "-&!3GNO0wVoJXzrRh", false, false, false, (BigDecimal) null, (BigDecimal) null);
      catalogDoorOrWindow0.getSashes();
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      Level level0 = new Level("-&!3GNO0wVoJXzrRh", 0.3926991F, 0.3926991F, (-2918.0647F));
      Level level1 = level0.clone();
      Level level2 = level1.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("-&!3GNO0wVoJXzrRh", propertyChangeListener0);
      level2.removePropertyChangeListener(propertyChangeListenerProxy0);
      homeDoorOrWindow0.setLevel(level2);
      homeDoorOrWindow0.setY((-2918.0647F));
      homeDoorOrWindow0.getName();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeDoorOrWindow0.setDescription("-&!3GNO0wVoJXzrRh");
      homeDoorOrWindow0.isTexturable();
      homeDoorOrWindow0.isBottomLeftPointAt((-1119.9485F), (-2918.0647F), (-43.0F));
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      resourceURLContent0.getJAREntryURL();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 0.0F, (-10.530371F), 1233.643F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      FileSystemHandling.shouldAllThrowIOExceptions();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setNameVisible(true);
      Integer integer0 = new Integer(0);
      Integer integer1 = Integer.valueOf((-1329));
      homePieceOfFurniture0.setColor(integer1);
      homePieceOfFurniture0.isPointAt(0.0F, 0.0F, 0);
      homePieceOfFurniture0.getDepth();
      homePieceOfFurniture0.setWidth(2415.064F);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      Content content1 = mock(Content.class, new ViolatedAssumptionAnswer());
      CatalogPieceOfFurniture catalogPieceOfFurniture1 = new CatalogPieceOfFurniture("$TUe2x.Lm2Sx", content1, content1, (-1.0F), 0.0F, (-37.85104F), false, false);
      catalogPieceOfFurniture1.getName();
      catalogPieceOfFurniture0.compareTo(catalogPieceOfFurniture1);
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getPrice();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(false);
      homePieceOfFurniture0.setTexture(homeTexture0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      resourceURLContent0.getJAREntryName();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      catalogPieceOfFurniture0.getWidth();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getColor();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getPrice();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.getDescription();
      homePieceOfFurniture0.setX(0.0F);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      HomePieceOfFurniture homePieceOfFurniture0 = null;
      try {
        homePieceOfFurniture0 = new HomePieceOfFurniture((PieceOfFurniture) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Sash[] sashArray0 = new Sash[5];
      sashArray0[3] = sashArray0[2];
      float[][] floatArray0 = new float[21][0];
      float[] floatArray1 = new float[10];
      floatArray1[3] = (-1119.9485F);
      floatArray0[0] = floatArray1;
      floatArray0[1] = floatArray1;
      floatArray0[2] = floatArray1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("<7c6eky-Dz", "<7c6eky-Dz", "<7c6eky-Dz", (Content) null, (Content) null, (Content) null, (-2918.0647F), (-2918.0647F), (-2918.0647F), (-2918.0647F), false, (-2918.0647F), (-1119.9485F), sashArray0, floatArray0, "<7c6eky-Dz", false, false, false, (BigDecimal) null, (BigDecimal) null);
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.setY(0.0F);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeDoorOrWindow0.setDescription("<7c6eky-Dz");
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      catalogPieceOfFurniture0.getWidth();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getColor();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getPrice();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.getDescription();
      homePieceOfFurniture0.getNameYOffset();
      homePieceOfFurniture0.getNameStyle();
      homePieceOfFurniture0.getNameStyle();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 1233.643F, false, false);
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.setCategory((FurnitureCategory) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      FileSystemHandling.shouldAllThrowIOExceptions();
      resourceURLContent0.getJAREntryURL();
      resourceURLContent1.getJAREntryURL();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setElevation(0.0F);
      homePieceOfFurniture0.setModelMirrored(true);
      homePieceOfFurniture0.isModelMirrored();
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.getIcon();
      float float1 = new Float(0.0F);
      homePieceOfFurniture0.setNameXOffset(0.0F);
      homePieceOfFurniture0.setVisible(false);
      homePieceOfFurniture0.isBottomLeftPointAt(0.0F, 0.0F, 2.7260606F);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      homeTexture0.getImage();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setAngle(0.0F);
      homePieceOfFurniture0.setVisible(false);
      homePieceOfFurniture0.isTopLeftPointAt((-1214.1647F), (-1214.1647F), 0.0F);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getIcon();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setY(0.0F);
      homePieceOfFurniture0.getModel();
      homePieceOfFurniture0.isTopRightPointAt(5.2831855F, (-3649.0F), 0.7153935F);
      homePieceOfFurniture0.getAngle();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 47.83689F, 47.83689F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 47.83689F, 47.83689F, 47.83689F, true, true);
      Float float0 = new Float(47.83689F);
      Float float1 = new Float(47.83689F);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      catalogPieceOfFurniture0.isTexturable();
      resourceURLContent0.getJAREntryURL();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setY(47.83689F);
      homePieceOfFurniture0.isTopLeftPointAt((-0.6959646F), 47.83689F, (-1356.627F));
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Sash[] sashArray0 = new Sash[5];
      sashArray0[1] = sashArray0[0];
      sashArray0[2] = sashArray0[1];
      sashArray0[3] = sashArray0[2];
      float[][] floatArray0 = new float[3][0];
      float[] floatArray1 = new float[22];
      floatArray1[0] = (-2898.0F);
      floatArray1[2] = (-2898.0F);
      floatArray1[3] = (-2898.0F);
      floatArray1[4] = (-2898.0F);
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[4];
      floatArray2[0] = (-2898.0F);
      floatArray2[1] = (-1117.708F);
      floatArray2[2] = (-1117.708F);
      floatArray2[3] = (-2898.0F);
      floatArray0[1] = floatArray2;
      floatArray0[2] = floatArray1;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("-&!3GNOk0wVo8dXzrRh", "-&!3GNOk0wVo8dXzrRh", "-&!3GNOk0wVo8dXzrRh", (Content) null, (Content) null, (Content) null, (-2898.0F), (-2898.0F), (-2898.0F), (-2898.0F), false, 0.0F, (-1117.708F), sashArray0, floatArray0, "-&!3GNOk0wVo8dXzrRh", true, true, false, (BigDecimal) null, (BigDecimal) null);
      catalogDoorOrWindow0.getWallThickness();
      Float float0 = new Float((-2898.0F));
      catalogDoorOrWindow0.getSashes();
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      Level level0 = new Level(" ", 0.3926991F, 0.3926991F, 4943.5F);
      Level level1 = level0.clone();
      Level level2 = level1.clone();
      homeDoorOrWindow0.setLevel(level2);
      homeDoorOrWindow0.setY((-2898.0F));
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 48.651985F, (-1859.7241F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 48.651985F, 48.651985F, 48.651985F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(false);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.getValueAddedTax();
      resourceURLContent0.getJAREntryURL();
      homePieceOfFurniture0.setY(278.10486F);
      homePieceOfFurniture0.setNameYOffset(1233.643F);
      homePieceOfFurniture0.getElevation();
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Sash[] sashArray0 = new Sash[5];
      sashArray0[1] = sashArray0[0];
      sashArray0[3] = sashArray0[2];
      float[][] floatArray0 = new float[21][0];
      float[] floatArray1 = new float[10];
      floatArray1[0] = (-2918.0647F);
      floatArray1[3] = (-2918.0647F);
      floatArray0[0] = floatArray1;
      float[] floatArray2 = new float[4];
      floatArray2[1] = (-1119.9485F);
      floatArray2[2] = 25.79342F;
      floatArray2[3] = (-2918.0647F);
      floatArray0[1] = floatArray2;
      floatArray0[2] = floatArray2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("<7c6eky-Dz", "<7c6eky-Dz", "<7c6eky-Dz", (Content) null, (Content) null, (Content) null, (-2918.0647F), (-2918.0647F), (-2918.0647F), (-2918.0647F), false, 25.79342F, (-1119.9485F), sashArray0, floatArray0, "<7c6eky-Dz", false, false, false, (BigDecimal) null, (BigDecimal) null);
      catalogDoorOrWindow0.getSashes();
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.getPoints();
      homeDoorOrWindow0.getValueAddedTax();
      homeDoorOrWindow0.setY(25.79342F);
      homeDoorOrWindow0.getElevation();
      homeDoorOrWindow0.getModel();
      homeDoorOrWindow0.isTopRightPointAt(1.0F, 1.0F, 1937.552F);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, (-31.303833F), (-1859.897F), (-31.303833F), false, false);
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      FileSystemHandling.shouldAllThrowIOExceptions();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      TextStyle textStyle0 = new TextStyle((-3211.9382F), false, false);
      TextStyle textStyle1 = textStyle0.deriveBoldStyle(false);
      homePieceOfFurniture0.setNameStyle(textStyle1);
      homePieceOfFurniture0.setVisible(false);
      homePieceOfFurniture0.clone();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getDescription();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setHeight(0.0F);
      homePieceOfFurniture0.containsPoint((-18.961147F), (-18.961147F), (-18.961147F));
      homePieceOfFurniture0.clone();
      homePieceOfFurniture0.setAngle((-18.961147F));
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getDepth();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDepth(1249.0F);
      homePieceOfFurniture0.isModelMirrored();
      homePieceOfFurniture0.getLevel();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.3926991F, true, true);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getIcon();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.isDeformable();
      homePieceOfFurniture0.setElevation(0.0F);
      homePieceOfFurniture0.setDescription((String) null);
      homePieceOfFurniture0.setColor((Integer) null);
      homePieceOfFurniture0.getTexture();
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 48.651985F, (-1859.7241F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 48.651985F, 48.651985F, 48.651985F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      Float float0 = new Float(48.651985F);
      float float1 = new Float((-1859.7241F));
      Float float2 = new Float(48.651985F);
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.intersectsRectangle(1753.1449F, (-1859.7241F), (-1859.7241F), 1753.1449F);
      homePieceOfFurniture0.getPoints();
      homePieceOfFurniture0.getValueAddedTax();
      resourceURLContent0.getJAREntryURL();
      homePieceOfFurniture0.setY(278.10486F);
      homePieceOfFurniture0.setNameYOffset(48.651985F);
      homePieceOfFurniture0.getElevation();
      homePieceOfFurniture0.getModel();
      homePieceOfFurniture0.setElevation((-2843.711F));
      homePieceOfFurniture0.isTopRightPointAt((-1859.7241F), 164.0F, 394.113F);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getDescription();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setNameXOffset(0.0F);
      homePieceOfFurniture0.setShininess((Float) null);
      homePieceOfFurniture0.setModelMirrored(true);
      homePieceOfFurniture0.getModelRotation();
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 1.1136464F, 1.1136464F, 1.1136464F, true, true);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getIcon();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.isDeformable();
      homePieceOfFurniture0.getAngle();
      homePieceOfFurniture0.getCatalogId();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent1, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      Float float0 = new Float(0.0F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      resourceURLContent1.getJAREntryURL();
      catalogPieceOfFurniture0.getPrice();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.getDescription();
      homePieceOfFurniture0.intersectsRectangle((-1.0F), 0.0F, 0.0F, 0.0F);
      homePieceOfFurniture0.setX(3133.0F);
      homePieceOfFurniture0.getPoints();
      homePieceOfFurniture0.isBottomRightPointAt((-1117.708F), (-4521.677F), 0.0F);
      homePieceOfFurniture0.setY((-37.369385F));
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 1368.3342F, 0.0F, true, false);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getIcon();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setNameYOffset(0.0F);
      homePieceOfFurniture0.isDeformable();
      homePieceOfFurniture0.setColor((Integer) null);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getIcon();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.isDeformable();
      TextStyle textStyle0 = new TextStyle((-2187.5261F));
      homePieceOfFurniture0.setNameStyle(textStyle0);
      homePieceOfFurniture0.setColor((Integer) null);
      homePieceOfFurniture0.getTexture();
      System.setCurrentTimeMillis(1479L);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Sash[] sashArray0 = new Sash[9];
      Sash sash0 = new Sash((-689.0F), (-2898.0F), (-689.0F), (-689.0F), (-689.0F));
      sashArray0[0] = sash0;
      sashArray0[1] = sash0;
      sashArray0[2] = sash0;
      sashArray0[3] = sash0;
      sashArray0[4] = sash0;
      float[][] floatArray0 = new float[3][0];
      float[] floatArray1 = new float[5];
      floatArray1[0] = 0.0F;
      floatArray1[2] = (-2898.0F);
      floatArray1[3] = (-2898.0F);
      floatArray1[4] = (-2898.0F);
      floatArray0[0] = floatArray1;
      floatArray0[1] = floatArray1;
      float[] floatArray2 = new float[13];
      floatArray2[0] = (-1117.708F);
      floatArray2[2] = 0.0F;
      floatArray2[3] = (-1117.708F);
      floatArray2[4] = (-2898.0F);
      floatArray0[2] = floatArray2;
      CatalogDoorOrWindow catalogDoorOrWindow0 = new CatalogDoorOrWindow("-&!3GNOk0wVo8dXzrRh", "-&!3GNOk0wVo8dXzrRh", "-&!3GNOk0wVo8dXzrRh", (Content) null, (Content) null, (Content) null, (-2898.0F), (-2898.0F), (-689.0F), 0.0F, false, (-2898.0F), (-1117.708F), sashArray0, floatArray0, "zD", true, true, false, (BigDecimal) null, (BigDecimal) null);
      catalogDoorOrWindow0.getSashes();
      HomeDoorOrWindow homeDoorOrWindow0 = new HomeDoorOrWindow(catalogDoorOrWindow0);
      homeDoorOrWindow0.isBottomRightPointAt((-1437.081F), 0.0F, 0.0F);
      Float.compare(3.4028235E38F, 795.95F);
      // Undeclared exception!
      try { 
        homeDoorOrWindow0.setShininess((Float) 795.95F);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Piece isn't texturable
         //
         verifyException("com.eteks.sweethome3d.model.HomePieceOfFurniture", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      resourceURLContent0.getJAREntryURL();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 0.0F, (-10.530371F), 1233.643F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setDepth(0.0F);
      Integer integer0 = Integer.valueOf((-1329));
      homePieceOfFurniture0.setColor(integer0);
      homePieceOfFurniture0.isPointAt((-10.530371F), 0.0F, 0);
      homePieceOfFurniture0.getColor();
      homePieceOfFurniture0.getCatalogId();
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(0.0F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getModel();
      Float float1 = new Float(0.0F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      FileSystemHandling.shouldAllThrowIOExceptions();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.containsPoint((-2125.62F), 0.0F, 34.578F);
      homePieceOfFurniture0.setVisible(true);
      homePieceOfFurniture0.isNameCenterPointAt(0.0F, 34.578F, 0.0F);
      homePieceOfFurniture0.getCurrency();
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 48.651985F, (-1859.7241F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 48.651985F, 48.651985F, 48.651985F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      Float float0 = new Float(48.651985F);
      catalogPieceOfFurniture0.getDepth();
      Float float1 = new Float(48.651985F);
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      FileSystemHandling.shouldAllThrowIOExceptions();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(false);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.isBottomLeftPointAt((float) float1, (float) float1, 1753.1449F);
      homePieceOfFurniture0.getPoints();
      homePieceOfFurniture0.getValueAddedTax();
      resourceURLContent0.getJAREntryURL();
      homePieceOfFurniture0.setY(2.0F);
      homePieceOfFurniture0.setNameYOffset(48.651985F);
      homePieceOfFurniture0.getElevation();
      homePieceOfFurniture0.getModel();
      homePieceOfFurniture0.setElevation((-2843.711F));
      homePieceOfFurniture0.isTopRightPointAt(48.651985F, 164.0F, 394.113F);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, (-31.3F), (-31.3F), (-31.3F), false, false);
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)catalogPieceOfFurniture0.getIcon();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      resourceURLContent1.getJAREntryURL();
      Level level0 = new Level("", (-567.009F), (-31.3F), (-567.009F));
      homePieceOfFurniture0.setNameYOffset((-31.3F));
      Level level1 = level0.clone();
      homePieceOfFurniture0.isAtLevel(level1);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, (-31.3F), (-31.3F), (-31.3F), false, false);
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.isMovable();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDescription("");
      homePieceOfFurniture0.setVisible(false);
      homePieceOfFurniture0.getLevel();
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("0", resourceURLContent0, 0.0F, 0.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("0", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      homeTexture0.getImage();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setVisible(false);
      homePieceOfFurniture0.isTopLeftPointAt((-1214.1647F), (-1214.1647F), 0.0F);
      homePieceOfFurniture0.isVisible();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 48.651985F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 48.651985F, 48.651985F, 48.651985F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(false);
      homePieceOfFurniture0.getX();
      resourceURLContent0.getJAREntryURL();
      homePieceOfFurniture0.setY(278.10486F);
      homePieceOfFurniture0.getNameXOffset();
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.setCategory((FurnitureCategory) null);
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      resourceURLContent0.getJAREntryURL();
      resourceURLContent1.getJAREntryURL();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setModelMirrored(true);
      homePieceOfFurniture0.containsPoint((-3345.294F), 34.578F, 34.578F);
      homePieceOfFurniture0.clone();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 0.0F, (-1859.897F), (-1859.897F), true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      catalogPieceOfFurniture0.getWidth();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getColor();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      resourceURLContent0.getJAREntryURL();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.isTopLeftPointAt(0.0F, (-1329), 3.4028235E38F);
      homePieceOfFurniture0.getHeight();
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getModel();
      Float float1 = new Float(0.0F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.containsPoint((-2125.62F), 1233.643F, 34.578F);
      homePieceOfFurniture0.setVisible(true);
      homePieceOfFurniture0.isTopLeftPointAt(1233.643F, 1.0F, 1233.643F);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 48.651985F, (-1859.7241F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 48.651985F, 48.651985F, 48.651985F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      Float float1 = new Float(1233.643F);
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(false);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.isBottomLeftPointAt((float) float1, (float) float1, 1753.1449F);
      homePieceOfFurniture0.getValueAddedTax();
      resourceURLContent0.getJAREntryURL();
      homePieceOfFurniture0.setY(278.10486F);
      homePieceOfFurniture0.setNameYOffset(1233.643F);
      homePieceOfFurniture0.getElevation();
      homePieceOfFurniture0.getModel();
      homePieceOfFurniture0.setDescription("");
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getIcon();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte) (-118);
      byteArray0[2] = (byte)16;
      byteArray0[3] = (byte)107;
      byteArray0[4] = (byte) (-80);
      byteArray0[5] = (byte)9;
      byteArray0[6] = (byte)29;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setLevel((Level) null);
      homePieceOfFurniture0.isDeformable();
      homePieceOfFurniture0.setColor((Integer) null);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 48.651985F, 48.651985F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 48.651985F, 48.651985F, 48.651985F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      Float float0 = new Float(48.651985F);
      catalogPieceOfFurniture0.getDepth();
      Float float1 = new Float(48.651985F);
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isDeformable();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setElevation(1501.6428F);
      homePieceOfFurniture0.isTopRightPointAt(0.0F, 2.0102062F, 349.6F);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 48.651985F, 48.651985F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 48.651985F, 48.651985F, 48.651985F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      Float float0 = new Float(48.651985F);
      catalogPieceOfFurniture0.getDepth();
      Float float1 = new Float(48.651985F);
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(false);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.isBottomLeftPointAt((float) float1, (float) float1, 1753.1449F);
      homePieceOfFurniture0.getPoints();
      homePieceOfFurniture0.getValueAddedTax();
      resourceURLContent0.getJAREntryURL();
      homePieceOfFurniture0.setY(278.10486F);
      homePieceOfFurniture0.setNameYOffset(48.651985F);
      homePieceOfFurniture0.getElevation();
      homePieceOfFurniture0.getModel();
      homePieceOfFurniture0.setElevation(1753.1449F);
      homePieceOfFurniture0.containsPoint(1.0F, 164.0F, 1753.1449F);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent1, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      resourceURLContent1.getJAREntryURL();
      catalogPieceOfFurniture0.getPrice();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.getDescription();
      homePieceOfFurniture0.setX(3133.0F);
      homePieceOfFurniture0.getPoints();
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 2836.7F, 2836.7F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("com.eteks.sweethome3d.model.HomePieceOfFurniture$18", resourceURLContent0, resourceURLContent0, 6071.4854F, 2070.0F, 48.651985F, true, false);
      catalogPieceOfFurniture0.getIcon();
      Float float0 = new Float(6071.4854F);
      catalogPieceOfFurniture0.getDepth();
      Float float1 = new Float((-305.36F));
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      resourceURLContent0.getJAREntryURL();
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.isBottomLeftPointAt(48.651985F, 2836.7F, 1249.0F);
      homePieceOfFurniture0.getPoints();
      homePieceOfFurniture0.setTexture((HomeTexture) null);
      homePieceOfFurniture0.setShininess(float0);
      HomePieceOfFurniture.SortableProperty.values();
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getPrice();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(false);
      homePieceOfFurniture0.getNameStyle();
      homePieceOfFurniture0.setNameVisible(true);
      Integer.valueOf(0);
      Integer.valueOf((-1329));
      Integer integer0 = Integer.valueOf((-1329));
      homePieceOfFurniture0.setColor(integer0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getIcon();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.isDeformable();
      homePieceOfFurniture0.setColor((Integer) null);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 2174.6975F, 2174.6975F, false, false);
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      Float float0 = new Float(2174.6975F);
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getHeight();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.isResizable();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomePieceOfFurniture homePieceOfFurniture1 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.getNameStyle();
      homePieceOfFurniture0.setX((-1.0F));
      homePieceOfFurniture1.setNameAngle(2.0F);
      homePieceOfFurniture1.setTexture((HomeTexture) null);
      homePieceOfFurniture1.clone();
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getModel();
      Float float1 = new Float(0.0F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      FileSystemHandling.shouldAllThrowIOExceptions();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.containsPoint((-2125.62F), 1233.643F, 34.578F);
      homePieceOfFurniture0.setVisible(true);
      homePieceOfFurniture0.isBottomLeftPointAt(0.0F, 0.0F, 0.0F);
      HomePieceOfFurniture.SortableProperty.values();
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.VALUE_ADDED_TAX_PERCENTAGE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 48.651985F, (-1859.7241F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 48.651985F, 48.651985F, 48.651985F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(false);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.isBottomLeftPointAt(0.0F, 0.0F, 1753.1449F);
      homePieceOfFurniture0.getValueAddedTax();
      resourceURLContent0.getJAREntryURL();
      homePieceOfFurniture0.setY(278.10486F);
      homePieceOfFurniture0.setNameYOffset(1233.643F);
      homePieceOfFurniture0.getElevation();
      homePieceOfFurniture0.getModel();
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 48.651985F, (-1859.7241F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 48.651985F, 48.651985F, 48.651985F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(false);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.isBottomLeftPointAt(3.4028235E38F, 0.0F, 1753.1449F);
      homePieceOfFurniture0.getValueAddedTax();
      resourceURLContent0.getJAREntryURL();
      homePieceOfFurniture0.setY(278.10486F);
      homePieceOfFurniture0.setNameYOffset(1233.643F);
      homePieceOfFurniture0.getElevation();
      homePieceOfFurniture0.getModel();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)catalogPieceOfFurniture0.getIcon();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      catalogPieceOfFurniture0.isTexturable();
      resourceURLContent1.getJAREntryURL();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setY((-781.8F));
      homePieceOfFurniture0.isTopLeftPointAt(217.76F, 278.0F, 0.5F);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getDepth();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setDepth((-1.0F));
      homePieceOfFurniture0.isNameCenterPointAt(0.0F, 0.0F, 0.0F);
      homePieceOfFurniture0.setName("");
      homePieceOfFurniture0.isPointAt((-1.0F), 0.0F, (-1.0F));
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      HomePieceOfFurniture.SortableProperty homePieceOfFurniture_SortableProperty0 = HomePieceOfFurniture.SortableProperty.TEXTURE;
      HomePieceOfFurniture.getFurnitureComparator(homePieceOfFurniture_SortableProperty0);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      catalogPieceOfFurniture0.getWidth();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getColor();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.isTexturable();
      catalogPieceOfFurniture0.getPrice();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.getDescription();
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.isBottomLeftPointAt(1859.897F, 27.556135F, (-2114.6F));
      homePieceOfFurniture0.isBottomRightPointAt(3.4028235E38F, (-2906.7F), (-2996.191F));
      homePieceOfFurniture0.getTexture();
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.setCategory((FurnitureCategory) null);
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setWidth(0.0F);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setDepth(0.0F);
      Integer integer0 = Integer.valueOf(0);
      homePieceOfFurniture0.setColor(integer0);
      homePieceOfFurniture0.isPointAt(0.0F, 3.4028235E38F, (-2202.3F));
      homePieceOfFurniture0.isNameVisible();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 2174.6975F, 2174.6975F, true, true);
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      Float float0 = new Float(2174.6975F);
      catalogPieceOfFurniture0.getDescription();
      FileSystemHandling.shouldAllThrowIOExceptions();
      resourceURLContent0.getJAREntryURL();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      HomePieceOfFurniture homePieceOfFurniture1 = homePieceOfFurniture0.clone();
      Level level0 = new Level(" ", 0.3926991F, 0.3926991F, 4943.5F);
      Level level1 = level0.clone();
      Level level2 = level1.clone();
      homePieceOfFurniture0.setLevel(level2);
      homePieceOfFurniture0.setModelMirrored(true);
      homePieceOfFurniture1.isPointAt(0.0F, 2031.32F, 2031.32F);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)catalogPieceOfFurniture0.getModel();
      catalogPieceOfFurniture0.getWidth();
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.getColor();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setMovable(true);
      homePieceOfFurniture0.getPriceValueAddedTaxIncluded();
      homePieceOfFurniture0.isBottomLeftPointAt(0.0F, 1.0F, 0.0F);
      homePieceOfFurniture0.getValueAddedTax();
      resourceURLContent1.getJAREntryURL();
      homePieceOfFurniture0.setY(1233.643F);
      homePieceOfFurniture0.setNameYOffset(0.0F);
      homePieceOfFurniture0.getElevation();
      homePieceOfFurniture0.getModel();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", content0, resourceURLContent0, 0.0F, (-1859.897F), 1233.643F, true, true);
      catalogPieceOfFurniture0.getName();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      Float float1 = new Float(0.0F);
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      TextStyle textStyle0 = new TextStyle(1233.643F, true, true);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setX((-1859.897F));
      homePieceOfFurniture0.setNameYOffset(1.0F);
      homePieceOfFurniture0.getElevation();
      homePieceOfFurniture0.getModel();
      homePieceOfFurniture0.intersectsRectangle(152.795F, (-2915.5F), 1233.643F, (-1859.897F));
      homePieceOfFurniture0.setElevation(3.4028235E38F);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 0.0F, (-1859.897F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 1233.643F, true, true);
      catalogPieceOfFurniture0.getName();
      ResourceURLContent resourceURLContent1 = (ResourceURLContent)catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      catalogPieceOfFurniture0.getModel();
      Float float0 = new Float(1233.643F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.getElevation();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.setCategory((FurnitureCategory) null);
      catalogPieceOfFurniture0.isDoorOrWindow();
      catalogPieceOfFurniture0.getModelRotation();
      catalogPieceOfFurniture0.getStaircaseCutOutShape();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      resourceURLContent0.getJAREntryURL();
      resourceURLContent1.getJAREntryURL();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setModelMirrored(true);
      homePieceOfFurniture0.isModelMirrored();
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.getIcon();
      homePieceOfFurniture0.getPlanIcon();
      homePieceOfFurniture0.getGroundElevation();
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      HomePieceOfFurniture.getFurnitureComparator((HomePieceOfFurniture.SortableProperty) null);
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, (-31.303833F), (-1859.897F), (-31.303833F), false, false);
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getHeight();
      catalogPieceOfFurniture0.isMovable();
      catalogPieceOfFurniture0.isBackFaceShown();
      catalogPieceOfFurniture0.isResizable();
      catalogPieceOfFurniture0.isDeformable();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      TextStyle textStyle0 = new TextStyle((-3211.9382F), false, false);
      TextStyle textStyle1 = textStyle0.deriveBoldStyle(false);
      homePieceOfFurniture0.setNameStyle(textStyle1);
      homePieceOfFurniture0.setVisible(false);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, (-0.5466677F), 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getDescription();
      FileSystemHandling.shouldAllThrowIOExceptions();
      resourceURLContent0.getJAREntryURL();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      catalogPieceOfFurniture0.isResizable();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homePieceOfFurniture0.getNameStyle();
      homePieceOfFurniture0.setX(0.0F);
      homePieceOfFurniture0.setNameAngle(0.0F);
      homePieceOfFurniture0.setTexture((HomeTexture) null);
      homePieceOfFurniture0.clone();
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Class<HomePieceOfFurniture> class0 = HomePieceOfFurniture.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogPieceOfFurniture catalogPieceOfFurniture0 = new CatalogPieceOfFurniture("", resourceURLContent0, resourceURLContent0, 0.0F, 0.0F, 0.0F, true, true);
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getPlanIcon();
      Float float0 = new Float(0.0F);
      catalogPieceOfFurniture0.getDepth();
      catalogPieceOfFurniture0.getDescription();
      catalogPieceOfFurniture0.getIcon();
      catalogPieceOfFurniture0.getHeight();
      FileSystemHandling.shouldAllThrowIOExceptions();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      catalogPieceOfFurniture0.getCurrency();
      catalogPieceOfFurniture0.getValueAddedTaxPercentage();
      catalogPieceOfFurniture0.getCurrency();
      HomePieceOfFurniture homePieceOfFurniture0 = new HomePieceOfFurniture(catalogPieceOfFurniture0);
      homePieceOfFurniture0.setNameVisible(true);
      homePieceOfFurniture0.setVisible(true);
      homePieceOfFurniture0.getNameStyle();
      TextStyle textStyle0 = new TextStyle(0.0F);
      homePieceOfFurniture0.setNameStyle(textStyle0);
      Level level0 = new Level("$!R", (-1.0F), 0.0F, 0.0F);
      level0.setFloorThickness(0.0F);
      level0.clone();
      homePieceOfFurniture0.setNameVisible(false);
      homePieceOfFurniture0.getGroundElevation();
  }
}
