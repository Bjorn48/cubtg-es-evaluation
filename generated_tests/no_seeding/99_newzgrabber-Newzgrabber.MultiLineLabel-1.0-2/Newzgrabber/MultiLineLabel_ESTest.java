/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 15:13:08 GMT 2019
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.MultiLineLabel;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.text.AttributedCharacterIterator;
import java.util.Hashtable;
import java.util.Map;
import javax.swing.DebugGraphics;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.Style;
import javax.swing.text.StyleContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MultiLineLabel_ESTest extends MultiLineLabel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("(", 2);
      // Undeclared exception!
      try { 
        multiLineLabel0.paint((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.MultiLineLabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("Un", 2, 0, 2);
      // Undeclared exception!
      try { 
        multiLineLabel0.paint((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.MultiLineLabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Hashtable<AttributedCharacterIterator.Attribute, Integer> hashtable0 = new Hashtable<AttributedCharacterIterator.Attribute, Integer>();
      Font font0 = Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashtable0);
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("IfJ4#0>`u6", 300);
      multiLineLabel0.setFont(font0);
      // Undeclared exception!
      try { 
        multiLineLabel0.paint((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.MultiLineLabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("{QAa7~", 202, 202);
      multiLineLabel0.setMarginHeight((-1));
      DebugGraphics debugGraphics0 = new DebugGraphics((Graphics) null);
      // Undeclared exception!
      try { 
        multiLineLabel0.paint(debugGraphics0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("");
      multiLineLabel0.num_lines = (-185);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      multiLineLabel0.paint(debugGraphics0);
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("H>1EL:*K5U2V");
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      Font font0 = styleContext0.getFont("/|/5!9,3a72", 1, (-1));
      multiLineLabel0.setFont(font0);
      Dimension dimension0 = multiLineLabel0.getPreferredSize();
      assertEquals(20, dimension0.width);
      assertEquals(22, dimension0.height);
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 2573, 2573, 10);
      multiLineLabel0.max_width = 10;
      Dimension dimension0 = multiLineLabel0.getPreferredSize();
      assertEquals(10, multiLineLabel0.getAlignment());
      assertEquals(5156, dimension0.width);
      assertEquals(5146, dimension0.height);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("cV~V01~");
      multiLineLabel0.setMarginWidth(1013);
      int int0 = multiLineLabel0.getMarginHeight();
      assertEquals(1013, multiLineLabel0.getMarginWidth());
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("file.separator", 146, (-320));
      int int0 = multiLineLabel0.getMarginWidth();
      assertEquals(146, int0);
      assertEquals((-320), multiLineLabel0.getMarginHeight());
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", (-1));
      multiLineLabel0.newLabel("North");
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals((-1), multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("=0]H]B~");
      Hashtable<AttributedCharacterIterator.Attribute, Integer> hashtable0 = new Hashtable<AttributedCharacterIterator.Attribute, Integer>();
      Font font0 = Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashtable0);
      multiLineLabel0.setFont(font0);
      multiLineLabel0.newLabel("=0]H]B~");
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("");
      Font font0 = new Font("QEgo! q_^dk?Bqq/-", (-2255), 0);
      multiLineLabel0.setFont(font0);
      multiLineLabel0.measure();
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("");
      Font font0 = new Font("QEgo! q_^dk?Bqq/-", (-2255), 0);
      multiLineLabel0.setFont(font0);
      multiLineLabel0.addNotify();
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(10, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      Font font0 = styleContext0.getFont(".fx=ezz[;Sg3%R6", 10, (-1));
      MultiLineLabel multiLineLabel0 = new MultiLineLabel(".fx=ezz[;Sg3%R6", (-1), (-1));
      multiLineLabel0.setFont(font0);
      multiLineLabel0.setLabel(".fx=ezz[;Sg3%R6");
      assertEquals((-1), multiLineLabel0.getMarginWidth());
      assertEquals((-1), multiLineLabel0.getMarginHeight());
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("$fekx", 0, 0, 1);
      Dimension dimension0 = multiLineLabel0.getPreferredSize();
      assertEquals(0, dimension0.width);
      assertEquals(0, dimension0.height);
      assertEquals(1, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", (-1));
      multiLineLabel0.max_width = (-1);
      Dimension dimension0 = multiLineLabel0.getMinimumSize();
      assertEquals((-1), dimension0.width);
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals((-1), multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("wr>YXlAP1N(:a|A-Y~");
      Hashtable<AttributedCharacterIterator.Attribute, AttributedCharacterIterator.Attribute> hashtable0 = new Hashtable<AttributedCharacterIterator.Attribute, AttributedCharacterIterator.Attribute>();
      Font font0 = Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashtable0);
      multiLineLabel0.setFont(font0);
      Dimension dimension0 = multiLineLabel0.getMinimumSize();
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(124, dimension0.width);
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(15, dimension0.height);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("66 H", (-29495), (-3174));
      multiLineLabel0.line_height = (-1);
      Dimension dimension0 = multiLineLabel0.getMinimumSize();
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals((-1), dimension0.height);
      assertEquals((-3174), multiLineLabel0.getMarginHeight());
      assertEquals(0, dimension0.width);
      assertEquals((-29495), multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", 0, 0, 370);
      int int0 = multiLineLabel0.getMarginWidth();
      assertEquals(0, int0);
      assertEquals(370, multiLineLabel0.getAlignment());
      assertEquals(0, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", (-1), (-1), (-13));
      int int0 = multiLineLabel0.getMarginWidth();
      assertEquals((-1), int0);
      assertEquals((-1), multiLineLabel0.getMarginHeight());
      assertEquals((-13), multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("r!CF\":8", 0, 0, 0);
      int int0 = multiLineLabel0.getMarginHeight();
      assertEquals(0, multiLineLabel0.getMarginWidth());
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", (-619), (-619));
      int int0 = multiLineLabel0.getAlignment();
      assertEquals(0, int0);
      assertEquals((-619), multiLineLabel0.getMarginWidth());
      assertEquals((-619), multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("Cancel", 1816, 501, 3453);
      int int0 = multiLineLabel0.getAlignment();
      assertEquals(501, multiLineLabel0.getMarginHeight());
      assertEquals(3453, int0);
      assertEquals(1816, multiLineLabel0.getMarginWidth());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("");
      // Undeclared exception!
      try { 
        multiLineLabel0.setFont((Font) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Hashtable<AttributedCharacterIterator.Attribute, DefaultTableModel> hashtable0 = new Hashtable<AttributedCharacterIterator.Attribute, DefaultTableModel>();
      Font font0 = Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashtable0);
      MultiLineLabel multiLineLabel0 = new MultiLineLabel(",8*9rx");
      multiLineLabel0.num_lines = 871;
      // Undeclared exception!
      try { 
        multiLineLabel0.setFont(font0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("Newzgrabber.MultiLineLabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("");
      multiLineLabel0.num_lines = 1390;
      // Undeclared exception!
      try { 
        multiLineLabel0.paint((Graphics) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("Newzgrabber.MultiLineLabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("aI4pN!srl-tK&#,`");
      // Undeclared exception!
      try { 
        multiLineLabel0.newLabel((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("=0]H]B~", (-1333), 489);
      // Undeclared exception!
      try { 
        multiLineLabel0.measure();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = null;
      try {
        multiLineLabel0 = new MultiLineLabel((String) null, 2, 2, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = null;
      try {
        multiLineLabel0 = new MultiLineLabel((String) null, 1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = null;
      try {
        multiLineLabel0 = new MultiLineLabel((String) null, 1891);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = null;
      try {
        multiLineLabel0 = new MultiLineLabel((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("Un", 1);
      // Undeclared exception!
      try { 
        multiLineLabel0.paint((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.MultiLineLabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("");
      multiLineLabel0.paint((Graphics) null);
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("(");
      Font font0 = new Font("(", 1, (-620));
      multiLineLabel0.setFont(font0);
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(10, multiLineLabel0.getMarginHeight());
      assertEquals(0, multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("66 H", (-29495), (-3174));
      multiLineLabel0.setAlignment((-2760));
      assertEquals((-2760), multiLineLabel0.getAlignment());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("66 H", (-29495), (-3174));
      Dimension dimension0 = multiLineLabel0.getPreferredSize();
      assertEquals(0, multiLineLabel0.getAlignment());
      assertEquals((-58990), dimension0.width);
      assertEquals((-6348), dimension0.height);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("", (-196));
      int int0 = multiLineLabel0.getAlignment();
      assertEquals((-196), int0);
      assertEquals(10, multiLineLabel0.getMarginWidth());
      assertEquals(10, multiLineLabel0.getMarginHeight());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("Newzgrabber.DirectoryDialog", (-1797), (-1797), (-1797));
      int int0 = multiLineLabel0.getMarginHeight();
      assertEquals((-1797), multiLineLabel0.getAlignment());
      assertEquals((-1797), multiLineLabel0.getMarginWidth());
      assertEquals((-1797), int0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel(".fx=ezz[;Sg3%R6", (-1), (-1));
      // Undeclared exception!
      try { 
        multiLineLabel0.setLabel(".fx=ezz[;Sg3%R6");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("");
      // Undeclared exception!
      try { 
        multiLineLabel0.addNotify();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("IfJ4#0>`u6", 2, 2, 2);
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      Style style0 = defaultStyledDocument0.getLogicalStyle(2);
      Font font0 = defaultStyledDocument0.getFont(style0);
      multiLineLabel0.setFont(font0);
      // Undeclared exception!
      try { 
        multiLineLabel0.paint((Graphics) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.MultiLineLabel", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      MultiLineLabel multiLineLabel0 = new MultiLineLabel("2cJ] kX&,hU", 363, 363, 363);
      multiLineLabel0.setForeground((Color) null);
      assertEquals(363, multiLineLabel0.getAlignment());
      assertEquals(363, multiLineLabel0.getMarginWidth());
      assertEquals(363, multiLineLabel0.getMarginHeight());
  }
}
