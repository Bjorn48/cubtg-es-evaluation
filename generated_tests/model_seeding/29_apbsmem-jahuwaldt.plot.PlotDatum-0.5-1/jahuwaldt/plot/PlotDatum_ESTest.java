/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 08:25:07 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import jahuwaldt.plot.BoxULSymbol;
import jahuwaldt.plot.DiamondSymbol;
import jahuwaldt.plot.PlotDatum;
import jahuwaldt.plot.PlotSymbol;
import jahuwaldt.plot.TabRSymbol;
import jahuwaldt.plot.TabUpSymbol;
import jahuwaldt.plot.Triangle3Symbol;
import java.awt.Color;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlotDatum_ESTest extends PlotDatum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TabRSymbol tabRSymbol0 = new TabRSymbol();
      PlotDatum plotDatum0 = new PlotDatum((-2127.2230944), (-2127.2230944), false, tabRSymbol0);
      plotDatum0.setX(1160.158098060143);
      assertEquals(1160.158098060143, plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(997.81613480222, 1974.070027417794, false);
      plotDatum0.setYError(599.672691325);
      boolean boolean0 = plotDatum0.hasErrorBar();
      assertEquals(599.672691325, plotDatum0.getYError(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-768.7498616213), (-768.7498616213), false);
      plotDatum0.setYError(1542.544373601944);
      double double0 = plotDatum0.getYError();
      assertEquals(1542.544373601944, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, true);
      plotDatum0.setYError((-235.278399));
      double double0 = plotDatum0.getYError();
      assertEquals((-235.278399), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-768.7498616213), (-768.7498616213), false);
      assertEquals((-768.7498616213), plotDatum0.y, 0.01);
      
      plotDatum0.setY(0.0);
      double double0 = plotDatum0.getY();
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DiamondSymbol diamondSymbol0 = new DiamondSymbol();
      PlotDatum plotDatum0 = new PlotDatum(0.0, (-305.0573342380114), false, diamondSymbol0);
      double double0 = plotDatum0.getX();
      assertEquals((-305.0573342380114), plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(0.0, double0, 0.01);
      assertFalse(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Triangle3Symbol triangle3Symbol0 = new Triangle3Symbol();
      PlotDatum plotDatum0 = new PlotDatum(644.72, 644.72, true, triangle3Symbol0);
      double double0 = plotDatum0.getX();
      assertFalse(plotDatum0.hasErrorBar());
      assertTrue(plotDatum0.connected());
      assertEquals(644.72, plotDatum0.y, 0.01);
      assertEquals(644.72, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BoxULSymbol boxULSymbol0 = new BoxULSymbol();
      boxULSymbol0.setSize(0);
      PlotDatum plotDatum0 = new PlotDatum(0.0, 556.3, true, boxULSymbol0);
      plotDatum0.getPlotSymbol();
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertEquals(556.3, plotDatum0.y, 0.01);
      assertTrue(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-20.0), (-20.0), false);
      BoxULSymbol boxULSymbol0 = new BoxULSymbol();
      plotDatum0.setPlotSymbol(boxULSymbol0);
      plotDatum0.getPlotSymbol();
      assertEquals((-20.0), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-20.0), plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TabUpSymbol tabUpSymbol0 = new TabUpSymbol();
      PlotDatum plotDatum0 = new PlotDatum((-4822.74382), (-4822.74382), false, tabUpSymbol0);
      tabUpSymbol0.setSize((-891));
      plotDatum0.getPlotSymbol();
      assertFalse(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-4822.74382), plotDatum0.x, 0.01);
      assertEquals((-4822.74382), plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-768.7498616213), (-768.7498616213), false);
      Color color0 = Color.red;
      plotDatum0.setLineColor(color0);
      Color color1 = plotDatum0.getLineColor();
      assertEquals((-768.7498616213), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(plotDatum0.connected());
      assertEquals((-768.7498616213), plotDatum0.y, 0.01);
      assertEquals(255, color1.getRed());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(298.15, 1711.8769, true);
      Color color0 = new Color(830);
      plotDatum0.setLineColor(color0);
      Color color1 = plotDatum0.getLineColor();
      assertEquals(1711.8769, plotDatum0.y, 0.01);
      assertTrue(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(298.15, plotDatum0.x, 0.01);
      assertEquals(62, color1.getBlue());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-768.7498616213), (-768.7498616213), false);
      Color color0 = new Color(0, 0, 0, 0);
      plotDatum0.setLineColor(color0);
      Color color1 = plotDatum0.getLineColor();
      assertEquals((-768.7498616213), plotDatum0.y, 0.01);
      assertEquals((-768.7498616213), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(plotDatum0.connected());
      assertEquals(0, color1.getAlpha());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BoxULSymbol boxULSymbol0 = new BoxULSymbol();
      PlotDatum plotDatum0 = new PlotDatum(0.0, 556.3, true, boxULSymbol0);
      boolean boolean0 = plotDatum0.connected();
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertEquals(556.3, plotDatum0.y, 0.01);
      assertTrue(boolean0);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-768.7498616213), (-768.7498616213), false);
      PlotDatum plotDatum1 = (PlotDatum)plotDatum0.clone();
      assertEquals((-768.7498616213), plotDatum1.y, 0.01);
      assertEquals((-768.7498616213), plotDatum1.x, 0.01);
      assertFalse(plotDatum1.hasErrorBar());
      assertFalse(plotDatum1.connected());
      assertNotSame(plotDatum1, plotDatum0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-20.0), (-20.0), false);
      Color color0 = new Color(0, 0, 0, 43);
      plotDatum0.setLineColor(color0);
      Color color1 = plotDatum0.getLineColor();
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-20.0), plotDatum0.x, 0.01);
      assertEquals((-20.0), plotDatum0.y, 0.01);
      assertEquals(43, color1.getAlpha());
      assertFalse(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-20.0), (-20.0), false);
      plotDatum0.setLineColor((Color) null);
      assertEquals((-20.0), plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-20.0), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(1033.14438113, 1033.14438113, true);
      plotDatum0.setYError(0.0);
      assertEquals(0.0, plotDatum0.getYError(), 0.01);
      assertEquals(1033.14438113, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(1033.14438113, plotDatum0.x, 0.01);
      assertTrue(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-20.0), (-20.0), false);
      double double0 = plotDatum0.getYError();
      assertFalse(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(0.0, double0, 0.01);
      assertEquals((-20.0), plotDatum0.x, 0.01);
      assertEquals((-20.0), plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-20.0), (-20.0), false);
      boolean boolean0 = plotDatum0.connected();
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-20.0), plotDatum0.x, 0.01);
      assertEquals((-20.0), plotDatum0.y, 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-20.0), (-20.0), false);
      boolean boolean0 = plotDatum0.hasErrorBar();
      assertEquals((-20.0), plotDatum0.x, 0.01);
      assertEquals((-20.0), plotDatum0.y, 0.01);
      assertFalse(boolean0);
      assertFalse(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-20.0), (-20.0), false);
      plotDatum0.setConnected(false);
      assertFalse(plotDatum0.connected());
      assertEquals((-20.0), plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-20.0), plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-20.0), (-20.0), false);
      plotDatum0.getPlotSymbol();
      assertEquals((-20.0), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-20.0), plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-2913.6403), 1735.14, false, (PlotSymbol) null);
      double double0 = plotDatum0.getY();
      assertFalse(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(1735.14, double0, 0.01);
      assertEquals((-2913.6403), plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-20.0), (-20.0), false);
      double double0 = plotDatum0.getY();
      assertFalse(plotDatum0.connected());
      assertEquals((-20.0), double0, 0.01);
      assertEquals((-20.0), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-20.0), (-20.0), false);
      BoxULSymbol boxULSymbol0 = new BoxULSymbol();
      plotDatum0.setPlotSymbol(boxULSymbol0);
      PlotDatum plotDatum1 = (PlotDatum)plotDatum0.clone();
      assertNotSame(plotDatum1, plotDatum0);
      assertFalse(plotDatum1.hasErrorBar());
      assertEquals((-20.0), plotDatum1.y, 0.01);
      assertEquals((-20.0), plotDatum1.x, 0.01);
      assertFalse(plotDatum1.connected());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-20.0), (-20.0), false);
      double double0 = plotDatum0.getX();
      assertEquals((-20.0), plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(plotDatum0.connected());
      assertEquals((-20.0), double0, 0.01);
  }
}
