/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 29 12:52:24 GMT 2019
 */

package fr.unice.gfarce.interGraph;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import fr.unice.gfarce.interGraph.Zmodel;
import javax.swing.JLayeredPane;
import javax.swing.event.TableModelEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Zmodel_ESTest extends Zmodel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object[][] objectArray0 = new Object[5][4];
      String[] stringArray0 = new String[3];
      Zmodel zmodel0 = new Zmodel(objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        zmodel0.removeRow(2373);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("fr.unice.gfarce.interGraph.Zmodel", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object[][] objectArray0 = new Object[0][8];
      String[] stringArray0 = new String[1];
      Zmodel zmodel0 = new Zmodel(objectArray0, stringArray0);
      zmodel0.addRow(stringArray0);
      // Undeclared exception!
      try { 
        zmodel0.removeRow((-212));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("fr.unice.gfarce.interGraph.Zmodel", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object[][] objectArray0 = new Object[0][7];
      String[] stringArray0 = new String[5];
      Zmodel zmodel0 = new Zmodel(objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        zmodel0.removeRow(0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("fr.unice.gfarce.interGraph.Zmodel", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Object[][] objectArray0 = new Object[0][0];
      String[] stringArray0 = new String[6];
      Zmodel zmodel0 = new Zmodel(objectArray0, stringArray0);
      zmodel0.addRow(stringArray0);
      TableModelEvent tableModelEvent0 = new TableModelEvent(zmodel0, 1318, 0, 1318, 1277);
      // Undeclared exception!
      try { 
        zmodel0.setValueAt(tableModelEvent0, 0, 6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("fr.unice.gfarce.interGraph.Zmodel", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object[][] objectArray0 = new Object[5][8];
      String[] stringArray0 = new String[9];
      Zmodel zmodel0 = new Zmodel(objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        zmodel0.getValueAt(0, (-2924));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2924
         //
         verifyException("fr.unice.gfarce.interGraph.Zmodel", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object[][] objectArray0 = new Object[1][3];
      String[] stringArray0 = new String[0];
      Zmodel zmodel0 = new Zmodel(objectArray0, stringArray0);
      Object[] objectArray1 = new Object[5];
      objectArray1[0] = (Object) zmodel0;
      Object[][] objectArray2 = new Object[1][9];
      objectArray2[0] = objectArray1;
      String[] stringArray1 = new String[0];
      Zmodel zmodel1 = new Zmodel(objectArray2, stringArray1);
      Object object0 = zmodel1.getValueAt(0, 0);
      assertSame(object0, zmodel0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object[][] objectArray0 = new Object[0][0];
      String[] stringArray0 = new String[6];
      Zmodel zmodel0 = new Zmodel(objectArray0, stringArray0);
      int int0 = zmodel0.getRowCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object[][] objectArray0 = new Object[1][3];
      String[] stringArray0 = new String[0];
      Zmodel zmodel0 = new Zmodel(objectArray0, stringArray0);
      int int0 = zmodel0.getRowCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object[][] objectArray0 = new Object[2][3];
      String[] stringArray0 = new String[7];
      stringArray0[0] = "iSA^Z=1Ms{v";
      Zmodel zmodel0 = new Zmodel(objectArray0, stringArray0);
      String string0 = zmodel0.getColumnName(0);
      assertEquals("iSA^Z=1Ms{v", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object[][] objectArray0 = new Object[1][3];
      String[] stringArray0 = new String[2];
      stringArray0[1] = "";
      Zmodel zmodel0 = new Zmodel(objectArray0, stringArray0);
      String string0 = zmodel0.getColumnName(1);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object[][] objectArray0 = new Object[0][8];
      String[] stringArray0 = new String[1];
      Zmodel zmodel0 = new Zmodel(objectArray0, stringArray0);
      int int0 = zmodel0.getColumnCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[2];
      Zmodel zmodel0 = new Zmodel((Object[][]) null, stringArray0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        zmodel0.setValueAt(object0, (-1), (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("fr.unice.gfarce.interGraph.Zmodel", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object[][] objectArray0 = new Object[10][3];
      Zmodel zmodel0 = new Zmodel(objectArray0, (String[]) null);
      // Undeclared exception!
      try { 
        zmodel0.removeRow(19);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("fr.unice.gfarce.interGraph.Zmodel", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[1];
      Zmodel zmodel0 = new Zmodel((Object[][]) null, stringArray0);
      // Undeclared exception!
      try { 
        zmodel0.getValueAt(245, 245);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("fr.unice.gfarce.interGraph.Zmodel", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Object[][] objectArray0 = new Object[2][3];
      Zmodel zmodel0 = new Zmodel(objectArray0, (String[]) null);
      // Undeclared exception!
      try { 
        zmodel0.getColumnName(5792);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("fr.unice.gfarce.interGraph.Zmodel", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object[][] objectArray0 = new Object[1][3];
      String[] stringArray0 = new String[0];
      Zmodel zmodel0 = new Zmodel(objectArray0, stringArray0);
      // Undeclared exception!
      try { 
        zmodel0.getColumnName(717);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 717
         //
         verifyException("fr.unice.gfarce.interGraph.Zmodel", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object[][] objectArray0 = new Object[1][3];
      Zmodel zmodel0 = new Zmodel(objectArray0, (String[]) null);
      // Undeclared exception!
      try { 
        zmodel0.getColumnCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("fr.unice.gfarce.interGraph.Zmodel", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Zmodel zmodel0 = new Zmodel((Object[][]) null, stringArray0);
      // Undeclared exception!
      try { 
        zmodel0.afficheData((Object[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("fr.unice.gfarce.interGraph.Zmodel", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Object[][] objectArray0 = new Object[16][3];
      String[] stringArray0 = new String[0];
      Zmodel zmodel0 = new Zmodel(objectArray0, stringArray0);
      Object[][] objectArray1 = new Object[4][3];
      objectArray1[1] = (Object[]) stringArray0;
      // Undeclared exception!
      try { 
        zmodel0.afficheData(objectArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("fr.unice.gfarce.interGraph.Zmodel", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Object[][] objectArray0 = new Object[14][3];
      Zmodel zmodel0 = new Zmodel(objectArray0, (String[]) null);
      // Undeclared exception!
      try { 
        zmodel0.addRow((Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("fr.unice.gfarce.interGraph.Zmodel", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String[] stringArray0 = new String[13];
      Zmodel zmodel0 = new Zmodel((Object[][]) null, stringArray0);
      // Undeclared exception!
      try { 
        zmodel0.getRowCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("fr.unice.gfarce.interGraph.Zmodel", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Object[][] objectArray0 = new Object[16][3];
      String[] stringArray0 = new String[0];
      Zmodel zmodel0 = new Zmodel(objectArray0, stringArray0);
      int int0 = zmodel0.getColumnCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Object[][] objectArray0 = new Object[16][3];
      String[] stringArray0 = new String[0];
      Zmodel zmodel0 = new Zmodel(objectArray0, stringArray0);
      zmodel0.afficheData(objectArray0);
      assertEquals(16, zmodel0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Object[][] objectArray0 = new Object[16][3];
      String[] stringArray0 = new String[0];
      Zmodel zmodel0 = new Zmodel(objectArray0, stringArray0);
      zmodel0.removeRow(0);
      assertEquals(15, zmodel0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Zmodel zmodel0 = new Zmodel((Object[][]) null, stringArray0);
      boolean boolean0 = zmodel0.isCellEditable(2705, 2705);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Object[][] objectArray0 = new Object[14][3];
      String[] stringArray0 = new String[2];
      Zmodel zmodel0 = new Zmodel(objectArray0, stringArray0);
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      zmodel0.setValueAt(integer0, 1, 1);
      assertEquals(2, zmodel0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Object[][] objectArray0 = new Object[14][3];
      String[] stringArray0 = new String[2];
      Zmodel zmodel0 = new Zmodel(objectArray0, stringArray0);
      String string0 = zmodel0.getColumnName(1);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Object[][] objectArray0 = new Object[16][3];
      String[] stringArray0 = new String[0];
      Zmodel zmodel0 = new Zmodel(objectArray0, stringArray0);
      Object object0 = zmodel0.getValueAt(0, 0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Object[][] objectArray0 = new Object[16][3];
      String[] stringArray0 = new String[0];
      Zmodel zmodel0 = new Zmodel(objectArray0, stringArray0);
      zmodel0.addRow(stringArray0);
      assertEquals(17, zmodel0.getRowCount());
  }
}
