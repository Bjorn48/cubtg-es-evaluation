/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 19 07:29:32 GMT 2019
 */

package org.sat4j.minisat.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.sat4j.minisat.core.Heap;
import org.sat4j.minisat.orders.ActivityBasedVariableComparator;
import org.sat4j.minisat.orders.VariableComparator;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Heap_ESTest extends Heap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      boolean boolean0 = heap0.heapProperty(412);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      heap0.setBounds(0);
      assertEquals(0, heap0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      heap0.setBounds(1427);
      heap0.insert(412);
      assertEquals(412, heap0.getmin());
      
      int int0 = heap0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      heap0.setBounds(1447);
      boolean boolean0 = heap0.ok(0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      boolean boolean0 = heap0.ok((-53));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      heap0.setBounds(26);
      // Undeclared exception!
      try { 
        heap0.setBounds(638);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      // Undeclared exception!
      try { 
        heap0.percolateUp(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.core.Heap", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      // Undeclared exception!
      try { 
        heap0.percolateUp((-3497));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      // Undeclared exception!
      try { 
        heap0.percolateDown(976);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      ActivityBasedVariableComparator activityBasedVariableComparator0 = new ActivityBasedVariableComparator(doubleArray0);
      Heap heap0 = new Heap(activityBasedVariableComparator0);
      heap0.setBounds(2373);
      heap0.setBounds(2373);
      heap0.insert(2373);
      // Undeclared exception!
      try { 
        heap0.insert(2356);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2356
         //
         verifyException("org.sat4j.minisat.orders.ActivityBasedVariableComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      // Undeclared exception!
      try { 
        heap0.get(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      boolean boolean0 = heap0.heapProperty(1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      heap0.setBounds(1427);
      heap0.insert(412);
      heap0.getmin();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VariableComparator variableComparator0 = mock(VariableComparator.class, new ViolatedAssumptionAnswer());
      Heap heap0 = new Heap(variableComparator0);
      boolean boolean0 = heap0.empty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      heap0.setBounds(1427);
      heap0.insert(412);
      assertEquals(412, heap0.getmin());
      
      boolean boolean0 = heap0.empty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      heap0.setBounds(2373);
      heap0.setBounds(2373);
      heap0.insert(2373);
      heap0.increase(2373);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      heap0.setBounds(2840);
      // Undeclared exception!
      try { 
        heap0.increase(0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      heap0.setBounds(1427);
      heap0.insert(412);
      assertEquals(412, heap0.getmin());
      
      boolean boolean0 = heap0.inHeap(412);
      assertFalse(boolean0);
      assertEquals(0, heap0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      heap0.setBounds(1427);
      boolean boolean0 = heap0.inHeap(0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      // Undeclared exception!
      try { 
        heap0.inHeap(0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      // Undeclared exception!
      try { 
        heap0.setBounds((-2109));
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      // Undeclared exception!
      try { 
        heap0.increase(1330);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      // Undeclared exception!
      try { 
        heap0.insert((-2579));
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      heap0.percolateDown(1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      heap0.setBounds(1427);
      heap0.insert(412);
      //  // Unstable assertion: assertTrue(heap0.empty());
      
      // Undeclared exception!
      try { 
        heap0.insert(1419);
       //  fail("Expecting exception: NullPointerException");
       // Unstable assertion
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.core.Heap", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      heap0.percolateUp(1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      boolean boolean0 = heap0.heapProperty();
      assertEquals(0, heap0.size());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      // Undeclared exception!
      try { 
        heap0.heapProperty((-3485));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      int int0 = heap0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VariableComparator variableComparator0 = mock(VariableComparator.class, new ViolatedAssumptionAnswer());
      Heap heap0 = new Heap(variableComparator0);
      // Undeclared exception!
      try { 
        heap0.getmin();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Heap heap0 = new Heap((VariableComparator) null);
      // Undeclared exception!
      try { 
        heap0.percolateDown(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.core.Heap", e);
      }
  }
}
