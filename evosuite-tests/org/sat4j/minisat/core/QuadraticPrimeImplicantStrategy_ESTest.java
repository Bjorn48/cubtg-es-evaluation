/*
 * This file was automatically generated by EvoSuite
 * Tue Feb 19 07:28:27 GMT 2019
 */

package org.sat4j.minisat.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.sat4j.minisat.constraints.CardinalityDataStructureYanMax;
import org.sat4j.minisat.constraints.ClausalDataStructureWL;
import org.sat4j.minisat.core.DataStructureFactory;
import org.sat4j.minisat.core.QuadraticPrimeImplicantStrategy;
import org.sat4j.minisat.core.RestartStrategy;
import org.sat4j.minisat.core.Solver;
import org.sat4j.minisat.learning.ActiveLearning;
import org.sat4j.minisat.learning.FixedLengthLearning;
import org.sat4j.minisat.orders.LevelBasedVarOrderHeap;
import org.sat4j.minisat.orders.TabuListDecorator;
import org.sat4j.minisat.restarts.FixedPeriodRestarts;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class QuadraticPrimeImplicantStrategy_ESTest extends QuadraticPrimeImplicantStrategy_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      QuadraticPrimeImplicantStrategy quadraticPrimeImplicantStrategy0 = new QuadraticPrimeImplicantStrategy();
      ActiveLearning<ClausalDataStructureWL> activeLearning0 = new ActiveLearning<ClausalDataStructureWL>((-1858.07806515));
      ClausalDataStructureWL clausalDataStructureWL0 = new ClausalDataStructureWL();
      LevelBasedVarOrderHeap levelBasedVarOrderHeap0 = new LevelBasedVarOrderHeap();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(levelBasedVarOrderHeap0);
      Solver<ClausalDataStructureWL> solver0 = new Solver<ClausalDataStructureWL>(activeLearning0, clausalDataStructureWL0, tabuListDecorator0, (RestartStrategy) null);
      solver0.newVar(6);
      int[] intArray0 = quadraticPrimeImplicantStrategy0.compute(solver0);
      assertEquals(6, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      QuadraticPrimeImplicantStrategy quadraticPrimeImplicantStrategy0 = new QuadraticPrimeImplicantStrategy();
      FixedLengthLearning<CardinalityDataStructureYanMax> fixedLengthLearning0 = new FixedLengthLearning<CardinalityDataStructureYanMax>();
      CardinalityDataStructureYanMax cardinalityDataStructureYanMax0 = new CardinalityDataStructureYanMax();
      LevelBasedVarOrderHeap levelBasedVarOrderHeap0 = new LevelBasedVarOrderHeap();
      FixedPeriodRestarts fixedPeriodRestarts0 = new FixedPeriodRestarts();
      Solver<CardinalityDataStructureYanMax> solver0 = new Solver<CardinalityDataStructureYanMax>(fixedLengthLearning0, cardinalityDataStructureYanMax0, levelBasedVarOrderHeap0, fixedPeriodRestarts0);
      // Undeclared exception!
      try { 
        quadraticPrimeImplicantStrategy0.setAndPropagate(solver0, (-641));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -641
         //
         verifyException("org.sat4j.minisat.constraints.cnf.Lits", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      QuadraticPrimeImplicantStrategy quadraticPrimeImplicantStrategy0 = new QuadraticPrimeImplicantStrategy();
      // Undeclared exception!
      try { 
        quadraticPrimeImplicantStrategy0.compute((Solver<? extends DataStructureFactory>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.core.QuadraticPrimeImplicantStrategy", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      QuadraticPrimeImplicantStrategy quadraticPrimeImplicantStrategy0 = new QuadraticPrimeImplicantStrategy();
      // Undeclared exception!
      try { 
        quadraticPrimeImplicantStrategy0.getPrimeImplicantAsArrayWithHoles();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Call the compute method first!
         //
         verifyException("org.sat4j.minisat.core.QuadraticPrimeImplicantStrategy", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      QuadraticPrimeImplicantStrategy quadraticPrimeImplicantStrategy0 = new QuadraticPrimeImplicantStrategy();
      FixedLengthLearning<CardinalityDataStructureYanMax> fixedLengthLearning0 = new FixedLengthLearning<CardinalityDataStructureYanMax>();
      CardinalityDataStructureYanMax cardinalityDataStructureYanMax0 = new CardinalityDataStructureYanMax();
      LevelBasedVarOrderHeap levelBasedVarOrderHeap0 = new LevelBasedVarOrderHeap();
      FixedPeriodRestarts fixedPeriodRestarts0 = new FixedPeriodRestarts();
      Solver<CardinalityDataStructureYanMax> solver0 = new Solver<CardinalityDataStructureYanMax>(fixedLengthLearning0, cardinalityDataStructureYanMax0, levelBasedVarOrderHeap0, fixedPeriodRestarts0);
      quadraticPrimeImplicantStrategy0.compute(solver0);
      int[] intArray0 = quadraticPrimeImplicantStrategy0.getPrimeImplicantAsArrayWithHoles();
      assertEquals(1, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      QuadraticPrimeImplicantStrategy quadraticPrimeImplicantStrategy0 = new QuadraticPrimeImplicantStrategy();
      ActiveLearning<ClausalDataStructureWL> activeLearning0 = new ActiveLearning<ClausalDataStructureWL>((-1858.07806515));
      ClausalDataStructureWL clausalDataStructureWL0 = new ClausalDataStructureWL();
      LevelBasedVarOrderHeap levelBasedVarOrderHeap0 = new LevelBasedVarOrderHeap();
      TabuListDecorator tabuListDecorator0 = new TabuListDecorator(levelBasedVarOrderHeap0);
      Solver<ClausalDataStructureWL> solver0 = new Solver<ClausalDataStructureWL>(activeLearning0, clausalDataStructureWL0, tabuListDecorator0, (RestartStrategy) null);
      // Undeclared exception!
      try { 
        quadraticPrimeImplicantStrategy0.setAndPropagate(solver0, 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.sat4j.minisat.core.Solver", e);
      }
  }
}
