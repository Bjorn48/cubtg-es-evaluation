/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 13:16:57 GMT 2019
 */

package module;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Dialog;
import java.util.NoSuchElementException;
import module.Message;
import module.MessageFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MessageFactory_ESTest extends MessageFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      System.setCurrentTimeMillis(0L);
      Message message0 = MessageFactory.createWarningMessage("!4qWbcL}-\"]C<E3f", objectArray0);
      assertEquals("*", message0.getRecipient());
      assertEquals("WARNING", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      System.setCurrentTimeMillis((-3363L));
      Object[] objectArray0 = new Object[5];
      Message message0 = MessageFactory.createWarningMessage("_8J1S.mu#_", objectArray0);
      assertEquals("*", message0.getRecipient());
      assertEquals("WARNING", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = new Message("i,<Q(p", "i,<Q(p", "i,<Q(p");
      messageFactory0.unrefObject(message0);
      Object[] objectArray0 = new Object[6];
      Message message1 = MessageFactory.createWarningMessage("KERNEL", objectArray0);
      assertEquals("*", message1.getRecipient());
      assertEquals("WARNING", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = messageFactory0.createMessage();
      assertEquals("", message0.getHeader());
      assertEquals("*", message0.getRecipient());
      
      Object[] objectArray0 = new Object[3];
      Message message1 = MessageFactory.createWarningMessage(".N(", objectArray0);
      assertEquals("WARNING", message1.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      MessageFactory.getInstance();
      Message message0 = MessageFactory.createUnloadMessage("4H ;\"y%0J8M,G(?fC]");
      assertEquals("*", message0.getRecipient());
      assertEquals("KERNEL", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MessageFactory.getInstance();
      System.setCurrentTimeMillis((-3363L));
      Message message0 = MessageFactory.createUnloadMessage("_8J1S.mu#_");
      assertEquals("*", message0.getRecipient());
      assertEquals("KERNEL", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = new Message();
      messageFactory0.unrefObject(message0);
      Message message1 = MessageFactory.createUnloadMessage((String) null);
      assertEquals("*", message1.getRecipient());
      assertEquals("KERNEL", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MessageFactory.getInstance();
      MessageFactory.createUnloadMessage("Player picture");
      Message message0 = MessageFactory.createUnloadMessage((String) null);
      assertEquals("KERNEL", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Message message0 = MessageFactory.createMessage("", "", (Object) "");
      assertEquals(4, Message.DELIVERED);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      System.setCurrentTimeMillis((-3363L));
      Message message0 = MessageFactory.createMessage("", "", (Object) messageFactory0);
      assertEquals(2, Message.RECEIVED);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = new Message();
      messageFactory0.unrefObject(message0);
      Dialog.ModalExclusionType dialog_ModalExclusionType0 = Dialog.ModalExclusionType.NO_EXCLUDE;
      Message message1 = MessageFactory.createMessage("!tP)6/L", (String) null, (Object) dialog_ModalExclusionType0);
      assertEquals("!tP)6/L", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = messageFactory0.createMessage();
      assertEquals("*", message0.getRecipient());
      
      Message message1 = MessageFactory.createMessage("Player.unpack(): *** WARNING *** data is not of proper type!", "71I{K", (Object) "Player.unpack(): *** WARNING *** data is not of proper type!");
      assertEquals("71I{K", message1.getRecipient());
      assertEquals("Player.unpack(): *** WARNING *** data is not of proper type!", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      Message message0 = MessageFactory.createWarningMessage("", objectArray0);
      assertEquals("WARNING", message0.getHeader());
      assertEquals("*", message0.getRecipient());
      
      System.setCurrentTimeMillis(0L);
      Message message1 = MessageFactory.createMessage("rx", objectArray0[4]);
      assertEquals("*", message1.getRecipient());
      assertEquals("rx", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      System.setCurrentTimeMillis((-1L));
      Message message0 = MessageFactory.createMessage("'~B4c*0GdM", (Object) messageFactory0);
      assertEquals("*", message0.getRecipient());
      assertEquals("'~B4c*0GdM", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = new Message("rx", messageFactory0);
      messageFactory0.unrefObject(message0);
      Message message1 = MessageFactory.createMessage("h~r!EU%_nz[^8@", (Object) null);
      assertEquals("h~r!EU%_nz[^8@", message1.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = messageFactory0.createMessage();
      assertEquals("", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      System.setCurrentTimeMillis((-3363L));
      Message message0 = messageFactory0.createMessage();
      assertEquals("*", message0.getRecipient());
      assertEquals("", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = new Message((String) null, "Q", (Object) null);
      messageFactory0.unrefObject(message0);
      Message message1 = messageFactory0.createMessage();
      assertEquals("*", message1.getRecipient());
      assertEquals("", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      Message message0 = MessageFactory.createWarningMessage("J[jzHHL-2L:nAU6P", objectArray0);
      assertEquals("WARNING", message0.getHeader());
      
      System.setCurrentTimeMillis(0L);
      Message message1 = MessageFactory.createErrorMessage("J[jzHHL-2L:nAU6P", objectArray0);
      assertEquals("ERROR", message1.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MessageFactory.getInstance();
      System.setCurrentTimeMillis((-3363L));
      Object[] objectArray0 = new Object[5];
      Message message0 = MessageFactory.createErrorMessage("_8J1S.mu#_", objectArray0);
      assertEquals("ERROR", message0.getHeader());
      assertEquals("*", message0.getRecipient());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = new Message();
      messageFactory0.unrefObject(message0);
      Object[] objectArray0 = new Object[6];
      Message message1 = MessageFactory.createErrorMessage("*", objectArray0);
      assertEquals("*", message1.getRecipient());
      assertEquals("ERROR", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Message message0 = MessageFactory.createConnectionDroppedMessage(0, "ERROR");
      assertEquals("*", message0.getRecipient());
      assertEquals("DROPPED", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      System.setCurrentTimeMillis((-3363L));
      Message message0 = MessageFactory.createConnectionDroppedMessage(2, "$a^sAvB\"@,y-");
      assertEquals("*", message0.getRecipient());
      assertEquals("DROPPED", message0.getHeader());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      Message message0 = new Message();
      messageFactory0.unrefObject(message0);
      Message message1 = MessageFactory.createConnectionDroppedMessage((-3853), "");
      assertEquals("DROPPED", message1.getHeader());
      assertEquals("*", message1.getRecipient());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject((Message) null);
      // Undeclared exception!
      try { 
        MessageFactory.createWarningMessage("!d;`\"\"bqL69G3tJZ~o", (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("util.AbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject((Message) null);
      // Undeclared exception!
      try { 
        MessageFactory.createUnloadMessage("DROPPED");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("util.AbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject((Message) null);
      // Undeclared exception!
      try { 
        MessageFactory.createMessage("!d;`\"\"bqL69G3tJZ~o", "", (Object) messageFactory0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("util.AbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject((Message) null);
      // Undeclared exception!
      try { 
        messageFactory0.createMessage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("util.AbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      messageFactory0.unrefObject((Message) null);
      // Undeclared exception!
      try { 
        MessageFactory.createConnectionDroppedMessage(884, "DROPPED");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("util.AbstractFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      MessageFactory.createWarningMessage("", objectArray0);
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      assertEquals(1, messageFactory0.getTotalProduced());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        MessageFactory.createMessage("FT#/T}%CBc4O:+obc1", object0);
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
      try { 
        MessageFactory.createUnloadMessage("Player picture");
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MessageFactory messageFactory0 = MessageFactory.getInstance();
      assertNotNull(messageFactory0);
      
      Message message0 = messageFactory0.createMessage();
      assertEquals("", message0.getHeader());
      assertEquals("*", message0.getRecipient());
      
      Message message1 = MessageFactory.createConnectionDroppedMessage(0, "ERROR");
      assertEquals("*", message1.getRecipient());
      assertEquals("DROPPED", message1.getHeader());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      // Undeclared exception!
      try { 
        MessageFactory.createErrorMessage("", objectArray0);
       //  fail("Expecting exception: NoSuchElementException");
       // Unstable assertion
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }
}
