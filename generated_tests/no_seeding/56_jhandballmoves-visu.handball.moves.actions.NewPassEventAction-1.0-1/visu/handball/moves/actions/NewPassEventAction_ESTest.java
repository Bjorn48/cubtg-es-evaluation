/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 13:29:22 GMT 2019
 */

package visu.handball.moves.actions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.event.ActionEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.MoveEvent;
import visu.handball.moves.model.player.Offender;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NewPassEventAction_ESTest extends NewPassEventAction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      NewPassEventAction newPassEventAction0 = new NewPassEventAction(handballModel0);
      newPassEventAction0.modelChanged();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NewPassEventAction newPassEventAction0 = null;
      try {
        newPassEventAction0 = new NewPassEventAction((HandballModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("visu.handball.moves.actions.NewPassEventAction", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      NewPassEventAction newPassEventAction0 = new NewPassEventAction(handballModel0);
      Offender offender0 = new Offender(210, 210);
      MoveEvent moveEvent0 = new MoveEvent(offender0, 210);
      moveEvent0.setDestinationPoint(210, 1, false);
      handballModel0.setActualMoveEvent(moveEvent0);
      handballModel0.setBallOwnerSilent(offender0);
      ActionEvent actionEvent0 = new ActionEvent(newPassEventAction0, 210, "W:9!Kf95kh'ULtbQ", 210, 12);
      newPassEventAction0.actionPerformed(actionEvent0);
      handballModel0.setActualMoveEvent(moveEvent0);
      assertTrue(offender0.hasBall());
      assertTrue(handballModel0.isBallSet());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      NewPassEventAction newPassEventAction0 = new NewPassEventAction(handballModel0);
      Offender offender0 = new Offender(200, 200);
      MoveEvent moveEvent0 = new MoveEvent(offender0, (-1));
      HandballModel.State handballModel_State0 = HandballModel.State.EDIT;
      handballModel0.setState(handballModel_State0);
      handballModel0.setBallOwnerSilent(offender0);
      handballModel0.setActualMoveEvent(moveEvent0);
      assertTrue(handballModel0.isBallSet());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      Offender offender0 = new Offender(1420, 0);
      handballModel0.setMarkedPlayer(offender0);
      NewPassEventAction newPassEventAction0 = new NewPassEventAction(handballModel0);
      ActionEvent actionEvent0 = new ActionEvent(newPassEventAction0, 1420, "eventDrawer.move", 0);
      newPassEventAction0.actionPerformed(actionEvent0);
      assertEquals(0, actionEvent0.getModifiers());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HandballModel handballModel0 = new HandballModel();
      NewPassEventAction newPassEventAction0 = new NewPassEventAction(handballModel0);
      ActionEvent actionEvent0 = new ActionEvent(handballModel0, 1, "W:9!Kf95kh'ULtbQ");
      newPassEventAction0.actionPerformed(actionEvent0);
      assertEquals(0, actionEvent0.getModifiers());
  }
}
