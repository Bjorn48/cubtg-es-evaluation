/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 25 19:43:48 GMT 2019
 */

package fr.unice.gfarce.interGraph;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import fr.unice.gfarce.interGraph.ModifTableStockage;
import fr.unice.gfarce.interGraph.TableStockage;
import java.awt.HeadlessException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ModifTableStockage_ESTest extends ModifTableStockage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertNotNull(tableStockage0);
      
      ModifTableStockage modifTableStockage0 = new ModifTableStockage(tableStockage0);
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertNotNull(modifTableStockage0);
      
      TableStockage tableStockage1 = modifTableStockage0.colonneMail();
      assertFalse(tableStockage1.equals((Object)tableStockage0));
      assertNotSame(tableStockage0, tableStockage1);
      assertNotSame(tableStockage1, tableStockage0);
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage1.getRowCount());
      assertEquals(1, tableStockage1.getColumnCount());
      assertNotNull(tableStockage1);
      
      ModifTableStockage modifTableStockage1 = new ModifTableStockage(tableStockage1);
      assertFalse(tableStockage0.equals((Object)tableStockage1));
      assertFalse(tableStockage1.equals((Object)tableStockage0));
      assertFalse(modifTableStockage1.equals((Object)modifTableStockage0));
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage1.getRowCount());
      assertEquals(1, tableStockage1.getColumnCount());
      assertNotNull(modifTableStockage1);
      
      TableStockage tableStockage2 = modifTableStockage1.colonneMail();
      assertFalse(tableStockage0.equals((Object)tableStockage1));
      assertFalse(modifTableStockage0.equals((Object)modifTableStockage1));
      assertFalse(tableStockage1.equals((Object)tableStockage0));
      assertFalse(modifTableStockage1.equals((Object)modifTableStockage0));
      assertFalse(tableStockage2.equals((Object)tableStockage0));
      assertFalse(tableStockage2.equals((Object)tableStockage1));
      assertNotSame(tableStockage0, tableStockage1);
      assertNotSame(tableStockage0, tableStockage2);
      assertNotSame(modifTableStockage0, modifTableStockage1);
      assertNotSame(tableStockage1, tableStockage2);
      assertNotSame(tableStockage1, tableStockage0);
      assertNotSame(modifTableStockage1, modifTableStockage0);
      assertNotSame(tableStockage2, tableStockage0);
      assertNotSame(tableStockage2, tableStockage1);
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage1.getRowCount());
      assertEquals(1, tableStockage1.getColumnCount());
      assertEquals(2, tableStockage2.getColumnCount());
      assertEquals(0, tableStockage2.getRowCount());
      assertNotNull(tableStockage2);
      
      // Undeclared exception!
      try { 
        modifTableStockage1.selectMail();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(677, 677);
      assertEquals(677, tableStockage0.getColumnCount());
      assertEquals(676, tableStockage0.getRowCount());
      assertNotNull(tableStockage0);
      
      ModifTableStockage modifTableStockage0 = new ModifTableStockage(tableStockage0);
      assertEquals(677, tableStockage0.getColumnCount());
      assertEquals(676, tableStockage0.getRowCount());
      assertNotNull(modifTableStockage0);
      
      // Undeclared exception!
      try { 
        modifTableStockage0.supprimerColonne((-1999));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertNotNull(tableStockage0);
      
      ModifTableStockage modifTableStockage0 = new ModifTableStockage(tableStockage0);
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertNotNull(modifTableStockage0);
      
      Class<Object> class0 = Object.class;
      TableStockage tableStockage1 = modifTableStockage0.ajouterColonne((String) null, class0);
      assertFalse(tableStockage1.equals((Object)tableStockage0));
      assertNotSame(tableStockage0, tableStockage1);
      assertNotSame(tableStockage1, tableStockage0);
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(1, tableStockage1.getColumnCount());
      assertEquals(0, tableStockage1.getRowCount());
      assertNotNull(tableStockage1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(677, 677);
      assertEquals(677, tableStockage0.getColumnCount());
      assertEquals(676, tableStockage0.getRowCount());
      assertNotNull(tableStockage0);
      
      ModifTableStockage modifTableStockage0 = new ModifTableStockage(tableStockage0);
      assertEquals(677, tableStockage0.getColumnCount());
      assertEquals(676, tableStockage0.getRowCount());
      assertNotNull(modifTableStockage0);
      
      // Undeclared exception!
      modifTableStockage0.supprimerLigne(0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage0.getColumnCount());
      assertNotNull(tableStockage0);
      
      ModifTableStockage modifTableStockage0 = new ModifTableStockage(tableStockage0);
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage0.getColumnCount());
      assertNotNull(modifTableStockage0);
      
      // Undeclared exception!
      try { 
        modifTableStockage0.supprimerLigne(677);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(677, 677);
      assertEquals(677, tableStockage0.getColumnCount());
      assertEquals(676, tableStockage0.getRowCount());
      assertNotNull(tableStockage0);
      
      ModifTableStockage modifTableStockage0 = new ModifTableStockage(tableStockage0);
      assertEquals(677, tableStockage0.getColumnCount());
      assertEquals(676, tableStockage0.getRowCount());
      assertNotNull(modifTableStockage0);
      
      // Undeclared exception!
      try { 
        modifTableStockage0.supprimerLigne((-26));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(677, 677);
      assertEquals(677, tableStockage0.getColumnCount());
      assertEquals(676, tableStockage0.getRowCount());
      assertNotNull(tableStockage0);
      
      ModifTableStockage modifTableStockage0 = new ModifTableStockage(tableStockage0);
      assertEquals(677, tableStockage0.getColumnCount());
      assertEquals(676, tableStockage0.getRowCount());
      assertNotNull(modifTableStockage0);
      
      // Undeclared exception!
      modifTableStockage0.supprimerColonne(0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage0.getColumnCount());
      assertNotNull(tableStockage0);
      
      ModifTableStockage modifTableStockage0 = new ModifTableStockage(tableStockage0);
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage0.getColumnCount());
      assertNotNull(modifTableStockage0);
      
      // Undeclared exception!
      try { 
        modifTableStockage0.supprimerColonne(1);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertNotNull(tableStockage0);
      
      ModifTableStockage modifTableStockage0 = new ModifTableStockage(tableStockage0);
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertNotNull(modifTableStockage0);
      
      // Undeclared exception!
      try { 
        modifTableStockage0.separerColonne(2453);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(677, 677);
      assertEquals(676, tableStockage0.getRowCount());
      assertEquals(677, tableStockage0.getColumnCount());
      assertNotNull(tableStockage0);
      
      ModifTableStockage modifTableStockage0 = new ModifTableStockage(tableStockage0);
      assertEquals(676, tableStockage0.getRowCount());
      assertEquals(677, tableStockage0.getColumnCount());
      assertNotNull(modifTableStockage0);
      
      // Undeclared exception!
      try { 
        modifTableStockage0.selectMail();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(677, 677);
      assertEquals(677, tableStockage0.getColumnCount());
      assertEquals(676, tableStockage0.getRowCount());
      assertNotNull(tableStockage0);
      
      ModifTableStockage modifTableStockage0 = new ModifTableStockage(tableStockage0);
      assertEquals(677, tableStockage0.getColumnCount());
      assertEquals(676, tableStockage0.getRowCount());
      assertNotNull(modifTableStockage0);
      
      // Undeclared exception!
      try { 
        modifTableStockage0.fusionnerColonnes(677);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 677
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(677, 677);
      assertEquals(676, tableStockage0.getRowCount());
      assertEquals(677, tableStockage0.getColumnCount());
      assertNotNull(tableStockage0);
      
      ModifTableStockage modifTableStockage0 = new ModifTableStockage(tableStockage0);
      assertEquals(676, tableStockage0.getRowCount());
      assertEquals(677, tableStockage0.getColumnCount());
      assertNotNull(modifTableStockage0);
      
      // Undeclared exception!
      modifTableStockage0.colonneMail();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(677, 677);
      assertEquals(677, tableStockage0.getColumnCount());
      assertEquals(676, tableStockage0.getRowCount());
      assertNotNull(tableStockage0);
      
      ModifTableStockage modifTableStockage0 = new ModifTableStockage(tableStockage0);
      assertEquals(677, tableStockage0.getColumnCount());
      assertEquals(676, tableStockage0.getRowCount());
      assertNotNull(modifTableStockage0);
      
      // Undeclared exception!
      modifTableStockage0.ajouterLigne();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage0.getColumnCount());
      assertNotNull(tableStockage0);
      
      ModifTableStockage modifTableStockage0 = new ModifTableStockage(tableStockage0);
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage0.getColumnCount());
      assertNotNull(modifTableStockage0);
      
      TableStockage tableStockage1 = modifTableStockage0.colonneMail();
      assertFalse(tableStockage1.equals((Object)tableStockage0));
      assertNotSame(tableStockage0, tableStockage1);
      assertNotSame(tableStockage1, tableStockage0);
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage1.getRowCount());
      assertEquals(1, tableStockage1.getColumnCount());
      assertNotNull(tableStockage1);
      
      // Undeclared exception!
      try { 
        modifTableStockage0.ajouterLigne();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(677, 677);
      assertEquals(676, tableStockage0.getRowCount());
      assertEquals(677, tableStockage0.getColumnCount());
      assertNotNull(tableStockage0);
      
      ModifTableStockage modifTableStockage0 = new ModifTableStockage(tableStockage0);
      assertEquals(676, tableStockage0.getRowCount());
      assertEquals(677, tableStockage0.getColumnCount());
      assertNotNull(modifTableStockage0);
      
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      modifTableStockage0.ajouterColonne((String) null, class0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ModifTableStockage modifTableStockage0 = null;
      try {
        modifTableStockage0 = new ModifTableStockage((TableStockage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("fr.unice.gfarce.interGraph.ModifTableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertNotNull(tableStockage0);
      
      ModifTableStockage modifTableStockage0 = new ModifTableStockage(tableStockage0);
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertNotNull(modifTableStockage0);
      
      TableStockage tableStockage1 = modifTableStockage0.colonneMail();
      assertFalse(tableStockage1.equals((Object)tableStockage0));
      assertNotSame(tableStockage0, tableStockage1);
      assertNotSame(tableStockage1, tableStockage0);
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(1, tableStockage1.getColumnCount());
      assertEquals(0, tableStockage1.getRowCount());
      assertNotNull(tableStockage1);
      
      ModifTableStockage modifTableStockage1 = new ModifTableStockage(tableStockage1);
      assertFalse(tableStockage0.equals((Object)tableStockage1));
      assertFalse(tableStockage1.equals((Object)tableStockage0));
      assertFalse(modifTableStockage1.equals((Object)modifTableStockage0));
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(1, tableStockage1.getColumnCount());
      assertEquals(0, tableStockage1.getRowCount());
      assertNotNull(modifTableStockage1);
      
      TableStockage tableStockage2 = modifTableStockage1.selectMail();
      assertFalse(tableStockage0.equals((Object)tableStockage1));
      assertFalse(modifTableStockage0.equals((Object)modifTableStockage1));
      assertFalse(tableStockage1.equals((Object)tableStockage0));
      assertFalse(modifTableStockage1.equals((Object)modifTableStockage0));
      assertFalse(tableStockage2.equals((Object)tableStockage1));
      assertFalse(tableStockage2.equals((Object)tableStockage0));
      assertNotSame(tableStockage0, tableStockage2);
      assertNotSame(tableStockage0, tableStockage1);
      assertNotSame(modifTableStockage0, modifTableStockage1);
      assertNotSame(tableStockage1, tableStockage2);
      assertNotSame(tableStockage1, tableStockage0);
      assertNotSame(modifTableStockage1, modifTableStockage0);
      assertNotSame(tableStockage2, tableStockage1);
      assertNotSame(tableStockage2, tableStockage0);
      assertEquals(0, tableStockage0.getColumnCount());
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(1, tableStockage1.getColumnCount());
      assertEquals(0, tableStockage1.getRowCount());
      assertEquals(0, tableStockage2.getRowCount());
      assertEquals(1, tableStockage2.getColumnCount());
      assertNotNull(tableStockage2);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage0.getColumnCount());
      assertNotNull(tableStockage0);
      
      ModifTableStockage modifTableStockage0 = new ModifTableStockage(tableStockage0);
      assertEquals(0, tableStockage0.getRowCount());
      assertEquals(0, tableStockage0.getColumnCount());
      assertNotNull(modifTableStockage0);
      
      // Undeclared exception!
      try { 
        modifTableStockage0.selectMail();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(32, 32);
      ModifTableStockage modifTableStockage0 = new ModifTableStockage(tableStockage0);
      TableStockage tableStockage1 = modifTableStockage0.colonneMail();
      assertEquals(33, tableStockage1.getColumnCount());
      assertEquals(31, tableStockage1.getRowCount());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(677, 677);
      ModifTableStockage modifTableStockage0 = new ModifTableStockage(tableStockage0);
      // Undeclared exception!
      try { 
        modifTableStockage0.fusionnerColonnes(495);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("fr.unice.gfarce.interGraph.ModifTableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      ModifTableStockage modifTableStockage0 = new ModifTableStockage(tableStockage0);
      // Undeclared exception!
      try { 
        modifTableStockage0.fusionnerColonnes(1);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(677, 677);
      ModifTableStockage modifTableStockage0 = new ModifTableStockage(tableStockage0);
      // Undeclared exception!
      try { 
        modifTableStockage0.separerColonne(0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(32, 32);
      ModifTableStockage modifTableStockage0 = new ModifTableStockage(tableStockage0);
      TableStockage tableStockage1 = modifTableStockage0.supprimerLigne(1);
      assertEquals(32, tableStockage1.getColumnCount());
      assertEquals(30, tableStockage1.getRowCount());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      ModifTableStockage modifTableStockage0 = new ModifTableStockage(tableStockage0);
      TableStockage tableStockage1 = modifTableStockage0.colonneMail();
      assertEquals(1, tableStockage1.getColumnCount());
      
      TableStockage tableStockage2 = modifTableStockage0.supprimerColonne(0);
      assertEquals(0, tableStockage2.getColumnCount());
      assertEquals(0, tableStockage2.getRowCount());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(32, 32);
      ModifTableStockage modifTableStockage0 = new ModifTableStockage(tableStockage0);
      TableStockage tableStockage1 = modifTableStockage0.supprimerColonne(1);
      assertEquals(31, tableStockage1.getRowCount());
      assertEquals(31, tableStockage1.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(32, 32);
      Class<Object> class0 = Object.class;
      tableStockage0.setColumnClass(2, class0);
      ModifTableStockage modifTableStockage0 = new ModifTableStockage(tableStockage0);
      TableStockage tableStockage1 = modifTableStockage0.ajouterLigne();
      assertEquals(32, tableStockage1.getColumnCount());
      assertEquals(32, tableStockage1.getRowCount());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(32, 32);
      ModifTableStockage modifTableStockage0 = new ModifTableStockage(tableStockage0);
      modifTableStockage0.ajouterLigne();
      // Undeclared exception!
      try { 
        modifTableStockage0.colonneMail();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 31
         //
         verifyException("fr.unice.gfarce.interGraph.TableStockage", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      ModifTableStockage modifTableStockage0 = new ModifTableStockage(tableStockage0);
      // Undeclared exception!
      try { 
        modifTableStockage0.ajouterLigne();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage(32, 32);
      ModifTableStockage modifTableStockage0 = new ModifTableStockage(tableStockage0);
      Class<Integer> class0 = Integer.class;
      TableStockage tableStockage1 = modifTableStockage0.ajouterColonne("", class0);
      assertEquals(31, tableStockage1.getRowCount());
      assertEquals(33, tableStockage1.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TableStockage tableStockage0 = new TableStockage();
      ModifTableStockage modifTableStockage0 = new ModifTableStockage(tableStockage0);
      modifTableStockage0.colonneMail();
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        modifTableStockage0.ajouterColonne("", class0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
