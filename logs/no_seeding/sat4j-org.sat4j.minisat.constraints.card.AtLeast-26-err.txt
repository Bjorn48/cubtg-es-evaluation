[MASTER] 01:20:47.346 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_16_1550449247041/org/sat4j/minisat/constraints/card/AtLeast_16_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_16_1550449247041/org/sat4j/minisat/constraints/card/AtLeast_16_tmp__ESTest_scaffolding.java]]
[MASTER] 01:20:47.346 [logback-2] ERROR JUnitAnalyzer - Classpath: bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 01:20:47.346 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/evosuite-master-1.0.7-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT.jar:/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment/bins/sat4j/org.ow2.sat4j.core-2.3.6-SNAPSHOT-tests.jar
[MASTER] 01:20:47.468 [logback-2] ERROR JUnitAnalyzer - Diagnostic: incompatible types: org.sat4j.minisat.constraints.cnf.UnitClauses cannot be converted to org.sat4j.minisat.constraints.card.AtLeast: 35
[MASTER] 01:20:47.470 [logback-2] ERROR JUnitAnalyzer - Diagnostic: /tmp/EvoSuite_16_1550449247041/org/sat4j/minisat/constraints/card/AtLeast_16_tmp__ESTest.java uses unchecked or unsafe operations.: -1
[MASTER] 01:20:47.470 [logback-2] ERROR JUnitAnalyzer - Diagnostic: Recompile with -Xlint:unchecked for details.: -1
[MASTER] 01:20:47.472 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_16_1550449247041/org/sat4j/minisat/constraints/card/AtLeast_16_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Mon Feb 18 00:20:47 GMT 2019
4:  */
5: 
6: package org.sat4j.minisat.constraints.card;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.shaded.org.mockito.Mockito.*;
11: import static org.evosuite.runtime.EvoAssertions.*;
12: import java.util.Comparator;
13: import org.evosuite.runtime.EvoRunner;
14: import org.evosuite.runtime.EvoRunnerParameters;
15: import org.evosuite.runtime.ViolatedAssumptionAnswer;
16: import org.junit.runner.RunWith;
17: import org.sat4j.core.VecInt;
18: import org.sat4j.minisat.constraints.CardinalityDataStructure;
19: import org.sat4j.minisat.constraints.card.AtLeast;
20: import org.sat4j.minisat.constraints.cnf.UnitClauses;
21: import org.sat4j.minisat.core.WatcherBasedPrimeImplicantStrategy;
22: 
23: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
24: public class AtLeast_16_tmp__ESTest extends AtLeast_16_tmp__ESTest_scaffolding {
25: 
26:   @Test(timeout = 4000)
27:   public void test0()  throws Throwable  {
28:       VecInt vecInt0 = new VecInt();
29:       CardinalityDataStructure cardinalityDataStructure0 = new CardinalityDataStructure();
30:       UnitClauses unitClauses0 = (UnitClauses)cardinalityDataStructure0.createCardinalityConstraint(vecInt0, 0);
31:       Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
32:       WatcherBasedPrimeImplicantStrategy watcherBasedPrimeImplicantStrategy0 = new WatcherBasedPrimeImplicantStrategy(comparator0);
33:       // Undeclared exception!
34:       try { 
35:         ((AtLeast) unitClauses0).propagatePI(watcherBasedPrimeImplicantStrategy0, 0);
36:         fail("Expecting exception: IllegalArgumentException");
37:       
38:       } catch(IllegalArgumentException e) {
39:       }
40:   }
41: }
RegularFileObject[/tmp/EvoSuite_16_1550449247041/org/sat4j/minisat/constraints/card/AtLeast_16_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Mon Feb 18 00:20:47 GMT 2019
5:  */
6: 
7: package org.sat4j.minisat.constraints.card;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.junit.AfterClass;
14: import org.evosuite.runtime.sandbox.Sandbox;
15: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
16: 
17: import static org.evosuite.shaded.org.mockito.Mockito.*;
18: @EvoSuiteClassExclude
19: public class AtLeast_16_tmp__ESTest_scaffolding {
20: 
21:   @org.junit.Rule 
22:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
23: 
24:   private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 
25: 
26:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
27: 
28: 
29:   @BeforeClass 
30:   public static void initEvoSuiteFramework() { 
31:     org.evosuite.runtime.RuntimeSettings.className = "org.sat4j.minisat.constraints.card.AtLeast"; 
32:     org.evosuite.runtime.GuiSupport.initialize(); 
33:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
34:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
35:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
36:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
37:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
38:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
39:     setSystemProperties();
40:     initializeClasses();
41:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
42:     try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
43:   } 
44: 
45:   @AfterClass 
46:   public static void clearEvoSuiteFramework(){ 
47:     Sandbox.resetDefaultSecurityManager(); 
48:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
49:   } 
50: 
51:   @Before 
52:   public void initTestCase(){ 
53:     threadStopper.storeCurrentThreads();
54:     threadStopper.startRecordingTime();
55:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
56:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
57:     setSystemProperties(); 
58:     org.evosuite.runtime.GuiSupport.setHeadless(); 
59:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
60:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
61:   } 
62: 
63:   @After 
64:   public void doneWithTestCase(){ 
65:     threadStopper.killAndJoinClientThreads();
66:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
67:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
68:     resetClasses(); 
69:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
70:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
71:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
72:   } 
73: 
74:   public static void setSystemProperties() {
75:  
76:     java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
77:     java.lang.System.setProperty("user.dir", "/home/pderakhshanfar/common-uncommon-behaviour-testing-experiment"); 
78:     java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
79:   }
80: 
81:   private static void initializeClasses() {
82:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AtLeast_16_tmp__ESTest_scaffolding.class.getClassLoader() ,
83:       "org.sat4j.minisat.core.ConflictTimerAdapter",
84:       "org.sat4j.specs.UnitPropagationListener",
85:       "org.sat4j.minisat.core.SizeComparator",
86:       "org.sat4j.tools.FullClauseSelectorSolver",
87:       "org.sat4j.reader.LecteurDimacs",
88:       "org.sat4j.tools.AbstractClauseSelectorSolver$1",
89:       "org.sat4j.tools.SolverDecorator",
90:       "org.sat4j.specs.Propagatable",
91:       "org.sat4j.minisat.core.Undoable",
92:       "org.sat4j.minisat.learning.FixedLengthLearning",
93:       "org.sat4j.ILauncherMode",
94:       "org.sat4j.minisat.core.Pair",
95:       "org.sat4j.core.EmptyVecInt",
96:       "org.sat4j.ExitCode",
97:       "org.sat4j.minisat.constraints.AbstractCardinalityDataStructure",
98:       "org.sat4j.specs.IVec",
99:       "org.sat4j.minisat.orders.AbstractPhaserecordingSelectionStrategy",
100:       "org.sat4j.minisat.restarts.FixedPeriodRestarts",
101:       "org.sat4j.specs.Lbool",
102:       "org.sat4j.minisat.constraints.AbstractDataStructureFactory",
103:       "org.sat4j.AbstractLauncher$2",
104:       "org.sat4j.AbstractLauncher$1",
105:       "org.sat4j.minisat.orders.NegativeLiteralSelectionStrategy",
106:       "org.sat4j.specs.SearchListener",
107:       "org.sat4j.minisat.core.SimplificationType",
108:       "org.sat4j.minisat.learning.MiniSATLearning",
109:       "org.sat4j.tools.AbstractClauseSelectorSolver$2",
110:       "org.sat4j.minisat.core.SearchParams",
111:       "org.sat4j.specs.ILogAble$1",
112:       "org.sat4j.specs.Constr",
113:       "org.sat4j.specs.TimeoutException",
114:       "org.sat4j.minisat.learning.NoLearningButHeuristics",
115:       "org.sat4j.specs.ISolverService",
116:       "org.sat4j.minisat.core.LearningStrategy",
117:       "org.sat4j.minisat.constraints.cnf.WLClause",
118:       "org.sat4j.specs.IGroupSolver",
119:       "org.sat4j.DecisionMode",
120:       "org.sat4j.minisat.orders.PhaseInLastLearnedClauseSelectionStrategy",
121:       "org.sat4j.specs.IteratorInt",
122:       "org.sat4j.specs.ISolver",
123:       "org.sat4j.specs.UnitClauseProvider$1",
124:       "org.sat4j.minisat.learning.LimitedLearning",
125:       "org.sat4j.minisat.restarts.LubyRestarts",
126:       "org.sat4j.minisat.core.VoidTracing",
127:       "org.sat4j.minisat.core.ActivityListener",
128:       "org.sat4j.minisat.core.GlucoseLCDS",
129:       "org.sat4j.tools.AbstractClauseSelectorSolver$SelectorState",
130:       "org.sat4j.minisat.core.ILits",
131:       "org.sat4j.BasicLauncher",
132:       "org.sat4j.minisat.constraints.card.AtLeast",
133:       "org.sat4j.tools.DotSearchTracing",
134:       "org.sat4j.specs.ILogAble",
135:       "org.sat4j.specs.ContradictionException",
136:       "org.sat4j.reader.GroupedCNFReader",
137:       "org.sat4j.core.LiteralsUtils",
138:       "org.sat4j.minisat.learning.PercentLengthLearning",
139:       "org.sat4j.specs.IConstr",
140:       "org.sat4j.specs.IVecInt",
141:       "org.sat4j.tools.SolutionFoundListener",
142:       "org.sat4j.minisat.constraints.ClausalDataStructureWL",
143:       "org.sat4j.minisat.core.PrimeImplicantStrategy",
144:       "org.sat4j.OptimizationMode",
145:       "org.sat4j.minisat.core.Learner",
146:       "org.sat4j.specs.MandatoryLiteralListener",
147:       "org.sat4j.minisat.core.ActivityComparator",
148:       "org.sat4j.specs.IProblem",
149:       "org.sat4j.minisat.restarts.MiniSATRestarts",
150:       "org.sat4j.core.VecInt",
151:       "org.sat4j.minisat.core.Solver",
152:       "org.sat4j.tools.xplain.HighLevelXplain",
153:       "org.sat4j.minisat.constraints.cnf.Lits",
154:       "org.sat4j.minisat.core.Solver$2",
155:       "org.sat4j.specs.UnitClauseProvider",
156:       "org.sat4j.minisat.core.Solver$1",
157:       "org.sat4j.minisat.learning.AbstractLearning",
158:       "org.sat4j.AbstractLauncher",
159:       "org.sat4j.minisat.core.Solver$4",
160:       "org.sat4j.minisat.core.Solver$3",
161:       "org.sat4j.minisat.core.LearnedConstraintsEvaluationType",
162:       "org.sat4j.minisat.learning.ClauseOnlyLearning",
163:       "org.sat4j.core.VecInt$1",
164:       "org.sat4j.core.ASolverFactory",
165:       "org.sat4j.reader.DimacsReader",
166:       "org.sat4j.minisat.core.DataStructureFactory",
167:       "org.sat4j.core.Vec",
168:       "org.sat4j.minisat.core.Glucose2LCDS",
169:       "org.sat4j.minisat.core.Solver$6",
170:       "org.sat4j.minisat.core.SolverStats",
171:       "org.sat4j.minisat.core.Solver$8",
172:       "org.sat4j.minisat.core.IPhaseSelectionStrategy",
173:       "org.sat4j.minisat.core.ConstrActivityListener",
174:       "org.sat4j.minisat.orders.SubsetVarOrder",
175:       "org.sat4j.minisat.orders.RandomLiteralSelectionStrategy",
176:       "org.sat4j.minisat.restarts.ArminRestarts",
177:       "org.sat4j.tools.GroupClauseSelectorSolver",
178:       "org.sat4j.minisat.constraints.cnf.UnitClauses",
179:       "org.sat4j.specs.SearchListenerAdapter",
180:       "org.sat4j.tools.xplain.Xplain",
181:       "org.sat4j.reader.ParseFormatException",
182:       "org.sat4j.tools.AbstractClauseSelectorSolver",
183:       "org.sat4j.minisat.core.ActivityLCDS",
184:       "org.sat4j.tools.AbstractOutputSolver",
185:       "org.sat4j.minisat.constraints.cnf.OriginalWLClause",
186:       "org.sat4j.MUSLauncher",
187:       "org.sat4j.minisat.learning.ActiveLearning",
188:       "org.sat4j.minisat.orders.VarOrderHeap",
189:       "org.sat4j.minisat.orders.NaturalStaticOrder",
190:       "org.sat4j.minisat.core.ISimplifier",
191:       "org.sat4j.reader.InstanceReader",
192:       "org.sat4j.minisat.core.ConflictTimer",
193:       "org.sat4j.minisat.core.VarActivityListener",
194:       "org.sat4j.specs.VarMapper",
195:       "org.sat4j.minisat.orders.LevelBasedVarOrderHeap",
196:       "org.sat4j.specs.RandomAccessModel",
197:       "org.sat4j.minisat.SolverFactory",
198:       "org.sat4j.minisat.core.LBDConflictTimer",
199:       "org.sat4j.tools.DimacsOutputSolver",
200:       "org.sat4j.minisat.learning.NoLearningNoHeuristics",
201:       "org.sat4j.minisat.orders.PureOrder",
202:       "org.sat4j.minisat.core.SizeLCDS",
203:       "org.sat4j.minisat.core.RestartStrategy",
204:       "org.sat4j.minisat.core.AgeLCDS",
205:       "org.sat4j.tools.xplain.Explainer",
206:       "org.sat4j.reader.Reader",
207:       "org.sat4j.core.ReadOnlyVecInt",
208:       "org.sat4j.minisat.core.IOrder",
209:       "org.sat4j.minisat.orders.VariableComparator",
210:       "org.sat4j.minisat.core.WatcherBasedPrimeImplicantStrategy",
211:       "org.sat4j.minisat.core.ICDCL",
212:       "org.sat4j.minisat.core.LearnedConstraintsDeletionStrategy",
213:       "org.sat4j.minisat.constraints.CardinalityDataStructure",
214:       "org.sat4j.minisat.core.MemoryBasedConflictTimer"
215:     );
216:   } 
217:   private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
218:     mock(Class.forName("java.util.Comparator", false, AtLeast_16_tmp__ESTest_scaffolding.class.getClassLoader()));
219:   }
220: 
221:   private static void resetClasses() {
222:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AtLeast_16_tmp__ESTest_scaffolding.class.getClassLoader()); 
223: 
224:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
225:       "org.sat4j.minisat.constraints.card.AtLeast",
226:       "org.sat4j.specs.Constr$1",
227:       "org.sat4j.specs.Constr",
228:       "org.sat4j.minisat.learning.LimitedLearning",
229:       "org.sat4j.minisat.learning.ClauseOnlyLearning",
230:       "org.sat4j.minisat.learning.AbstractLearning",
231:       "org.sat4j.minisat.learning.NoLearningButHeuristics",
232:       "org.sat4j.minisat.learning.MiniSATLearning",
233:       "org.sat4j.minisat.core.SearchParams",
234:       "org.sat4j.minisat.orders.VarOrderHeap",
235:       "org.sat4j.minisat.orders.AbstractPhaserecordingSelectionStrategy",
236:       "org.sat4j.minisat.orders.PhaseInLastLearnedClauseSelectionStrategy",
237:       "org.sat4j.minisat.core.Solver$1",
238:       "org.sat4j.minisat.core.Solver",
239:       "org.sat4j.specs.ILogAble$1",
240:       "org.sat4j.specs.ILogAble",
241:       "org.sat4j.core.Vec",
242:       "org.sat4j.core.EmptyVecInt",
243:       "org.sat4j.core.VecInt",
244:       "org.sat4j.minisat.core.ActivityComparator",
245:       "org.sat4j.minisat.core.SolverStats",
246:       "org.sat4j.specs.SearchListenerAdapter",
247:       "org.sat4j.minisat.core.VoidTracing",
248:       "org.sat4j.specs.UnitClauseProvider$1",
249:       "org.sat4j.specs.UnitClauseProvider",
250:       "org.sat4j.minisat.core.Solver$2",
251:       "org.sat4j.minisat.core.Solver$3",
252:       "org.sat4j.minisat.core.Solver$4",
253:       "org.sat4j.minisat.core.Pair",
254:       "org.sat4j.minisat.core.ConflictTimerAdapter",
255:       "org.sat4j.minisat.core.MemoryBasedConflictTimer",
256:       "org.sat4j.minisat.core.ActivityLCDS",
257:       "org.sat4j.minisat.core.LBDConflictTimer",
258:       "org.sat4j.minisat.core.GlucoseLCDS",
259:       "org.sat4j.minisat.core.Glucose2LCDS",
260:       "org.sat4j.minisat.core.AgeLCDS",
261:       "org.sat4j.minisat.core.SizeComparator",
262:       "org.sat4j.minisat.core.SizeLCDS",
263:       "org.sat4j.minisat.core.Solver$8",
264:       "org.sat4j.minisat.orders.RSATPhaseSelectionStrategy",
265:       "org.sat4j.minisat.orders.LevelBasedVarOrderHeap",
266:       "org.sat4j.tools.StatisticsSolver",
267:       "org.sat4j.minisat.orders.UserFixedPhaseSelectionStrategy",
268:       "org.sat4j.minisat.constraints.cnf.Lits",
269:       "org.sat4j.minisat.constraints.AbstractDataStructureFactory",
270:       "org.sat4j.minisat.constraints.ClausalDataStructureWL",
271:       "org.sat4j.minisat.orders.PureOrder",
272:       "org.sat4j.minisat.restarts.MiniSATRestarts",
273:       "org.sat4j.minisat.learning.ActiveLearning",
274:       "org.sat4j.minisat.orders.RandomWalkDecorator",
275:       "org.sat4j.minisat.restarts.NoRestarts",
276:       "org.sat4j.tools.SolverDecorator",
277:       "org.sat4j.tools.AbstractMinimalModel",
278:       "org.sat4j.specs.Lbool",
279:       "org.sat4j.minisat.constraints.AbstractCardinalityDataStructure",
280:       "org.sat4j.minisat.constraints.CardinalityDataStructure",
281:       "org.sat4j.minisat.restarts.FixedPeriodRestarts",
282:       "org.sat4j.minisat.orders.TabuListDecorator",
283:       "org.sat4j.AbstractLauncher",
284:       "org.sat4j.MUSLauncher",
285:       "org.sat4j.AbstractLauncher$1",
286:       "org.sat4j.DecisionMode",
287:       "org.sat4j.ExitCode",
288:       "org.sat4j.OptimizationMode",
289:       "org.sat4j.ILauncherMode",
290:       "org.sat4j.minisat.orders.RandomLiteralSelectionStrategy",
291:       "org.sat4j.tools.AbstractOutputSolver",
292:       "org.sat4j.tools.DimacsOutputSolver",
293:       "org.sat4j.tools.AbstractClauseSelectorSolver",
294:       "org.sat4j.tools.GroupClauseSelectorSolver",
295:       "org.sat4j.tools.AbstractClauseSelectorSolver$1",
296:       "org.sat4j.tools.AbstractClauseSelectorSolver$2",
297:       "org.sat4j.minisat.restarts.LubyRestarts",
298:       "org.sat4j.minisat.restarts.Glucose21Restarts",
299:       "org.sat4j.minisat.core.CircularBuffer",
300:       "org.sat4j.minisat.learning.FixedLengthLearning",
301:       "org.sat4j.minisat.constraints.cnf.UnitClauses",
302:       "org.sat4j.minisat.orders.SubsetVarOrder",
303:       "org.sat4j.minisat.learning.PercentLengthLearning",
304:       "org.sat4j.minisat.orders.RSATLastLearnedClausesPhaseSelectionStrategy",
305:       "org.sat4j.core.VecInt$1",
306:       "org.sat4j.minisat.constraints.cnf.WLClause",
307:       "org.sat4j.minisat.constraints.cnf.LearntWLClause",
308:       "org.sat4j.minisat.orders.NaturalStaticOrder",
309:       "org.sat4j.minisat.orders.NegativeLiteralSelectionStrategy",
310:       "org.sat4j.tools.FullClauseSelectorSolver",
311:       "org.sat4j.minisat.core.WatcherBasedPrimeImplicantStrategy",
312:       "org.sat4j.minisat.restarts.ArminRestarts",
313:       "org.sat4j.core.LiteralsUtils",
314:       "org.sat4j.minisat.restarts.EMARestarts",
315:       "org.sat4j.core.ReadOnlyVecInt",
316:       "org.sat4j.opt.MinOneDecorator",
317:       "org.sat4j.minisat.orders.PhaseCachingAutoEraseStrategy",
318:       "org.sat4j.minisat.learning.NoLearningNoHeuristics",
319:       "org.sat4j.minisat.orders.PositiveLiteralSelectionStrategy",
320:       "org.sat4j.specs.ContradictionException",
321:       "org.sat4j.core.ASolverFactory",
322:       "org.sat4j.BasicLauncher",
323:       "org.sat4j.tools.DotSearchTracing",
324:       "org.sat4j.tools.ManyCore",
325:       "org.sat4j.minisat.core.Counter",
326:       "org.sat4j.minisat.constraints.CardinalityDataStructureYanMax",
327:       "org.sat4j.minisat.constraints.card.MaxWatchCard",
328:       "org.sat4j.tools.LexicoDecorator",
329:       "org.sat4j.opt.AbstractSelectorVariablesDecorator",
330:       "org.sat4j.opt.MaxSatDecorator",
331:       "org.sat4j.tools.SolutionFoundListener$1",
332:       "org.sat4j.tools.SolutionFoundListener",
333:       "org.sat4j.tools.ModelIterator",
334:       "org.sat4j.tools.ModelIteratorToSATAdapter",
335:       "org.sat4j.minisat.constraints.card.MinWatchCard",
336:       "org.sat4j.tools.CheckMUSSolutionListener",
337:       "org.sat4j.tools.Minimal4CardinalityModel",
338:       "org.sat4j.minisat.constraints.cnf.BinaryClause",
339:       "org.sat4j.minisat.constraints.cnf.OriginalBinaryClause",
340:       "org.sat4j.minisat.core.Solver$9",
341:       "org.sat4j.tools.SolutionCounter",
342:       "org.sat4j.minisat.SolverFactory",
343:       "org.sat4j.core.EmptyVecInt$1",
344:       "org.sat4j.minisat.constraints.CardinalityDataStructureYanMin",
345:       "org.sat4j.minisat.constraints.cnf.BinaryClauses",
346:       "org.sat4j.minisat.core.Heap",
347:       "org.sat4j.minisat.orders.LevelAndActivityVariableComparator",
348:       "org.sat4j.minisat.core.ConflictTimerContainer",
349:       "org.sat4j.minisat.core.Solver$6",
350:       "org.sat4j.minisat.constraints.MixedDataStructureDanielHT",
351:       "org.sat4j.minisat.constraints.cnf.HTClause",
352:       "org.sat4j.minisat.constraints.cnf.LearntHTClause",
353:       "org.sat4j.tools.DimacsStringSolver",
354:       "org.sat4j.tools.GateTranslator",
355:       "org.sat4j.minisat.constraints.cnf.Clauses",
356:       "org.sat4j.tools.SubModelIterator",
357:       "org.sat4j.minisat.constraints.cnf.UnitClause",
358:       "org.sat4j.tools.NegationDecorator",
359:       "org.sat4j.tools.Minimal4InclusionModel",
360:       "org.sat4j.core.Vec$1",
361:       "org.sat4j.minisat.core.Solver$10",
362:       "org.sat4j.minisat.constraints.cnf.OriginalHTClause",
363:       "org.sat4j.minisat.constraints.xor.Xor",
364:       "org.sat4j.minisat.constraints.MixedDataStructureDanielWL",
365:       "org.sat4j.tools.OptToSatAdapter",
366:       "org.sat4j.tools.encoding.EncodingStrategyAdapter",
367:       "org.sat4j.tools.encoding.Product",
368:       "org.sat4j.tools.ClausalCardinalitiesDecorator",
369:       "org.sat4j.tools.encoding.Sequential",
370:       "org.sat4j.tools.encoding.Binary",
371:       "org.sat4j.tools.encoding.Commander",
372:       "org.sat4j.tools.encoding.Binomial",
373:       "org.sat4j.tools.encoding.Ladder",
374:       "org.sat4j.tools.encoding.Policy",
375:       "org.sat4j.LightFactory",
376:       "org.sat4j.minisat.constraints.cnf.OriginalWLClause",
377:       "org.sat4j.minisat.constraints.MixedDataStructureSingleWL",
378:       "org.sat4j.core.ConstrGroup",
379:       "org.sat4j.tools.SingleSolutionDetector",
380:       "org.sat4j.minisat.constraints.cnf.LearntBinaryClause",
381:       "org.sat4j.tools.xplain.Xplain",
382:       "org.sat4j.tools.xplain.DeletionStrategy",
383:       "org.sat4j.reader.Reader",
384:       "org.sat4j.reader.LecteurDimacs",
385:       "org.sat4j.minisat.orders.ActivityBasedVariableComparator",
386:       "org.sat4j.minisat.core.Solver$5",
387:       "org.sat4j.minisat.core.Solver$5$1",
388:       "org.sat4j.tools.IVisualizationTool",
389:       "org.sat4j.minisat.constraints.MixedDataStructureDanielWLConciseBinary",
390:       "org.sat4j.minisat.constraints.cnf.CBClause",
391:       "org.sat4j.specs.TimeoutException"
392:     );
393:   }
394: }

[MASTER] 01:20:47.472 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
VecInt vecInt0 = new VecInt();
CardinalityDataStructure cardinalityDataStructure0 = new CardinalityDataStructure();
UnitClauses unitClauses0 = (UnitClauses)cardinalityDataStructure0.createCardinalityConstraint(vecInt0, 0);
Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
WatcherBasedPrimeImplicantStrategy watcherBasedPrimeImplicantStrategy0 = new WatcherBasedPrimeImplicantStrategy(comparator0);
((AtLeast) unitClauses0).propagatePI(watcherBasedPrimeImplicantStrategy0, 0);

[MASTER] 01:21:39.693 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
