/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 18:17:45 GMT 2019
 */

package jahuwaldt.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import jahuwaldt.plot.DiamondSymbol;
import jahuwaldt.plot.PlotDatum;
import jahuwaldt.plot.RTriangle1Symbol;
import jahuwaldt.plot.ThinRect1Symbol;
import java.awt.Color;
import java.awt.SystemColor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlotDatum_ESTest extends PlotDatum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-1.0), 0.0, false);
      plotDatum0.setY(465.814184);
      plotDatum0.setX(0.0);
      assertEquals(465.814184, plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(334.9981838157, (-3565.85679), false);
      plotDatum0.setYError((-1030.849));
      boolean boolean0 = plotDatum0.hasErrorBar();
      assertEquals((-1030.849), plotDatum0.getYError(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(4432.5911127296, 1293.8, true);
      assertEquals(0.0, plotDatum0.getYError(), 0.01);
      
      plotDatum0.setYError(1293.8);
      double double0 = plotDatum0.getYError();
      assertEquals(1293.8, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(334.9981838157, (-3565.85679), false);
      plotDatum0.setYError((-1030.849));
      double double0 = plotDatum0.getYError();
      assertEquals((-1030.849), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, true);
      double double0 = plotDatum0.getY();
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertEquals(0.0, double0, 0.01);
      assertTrue(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum((-1.0), (-1.0), false);
      double double0 = plotDatum0.getY();
      assertEquals((-1.0), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.connected());
      assertEquals((-1.0), double0, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, true);
      double double0 = plotDatum0.getX();
      assertEquals(0.0, double0, 0.01);
      assertTrue(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(0.0, plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(2305.084575651733, 0.0, true);
      double double0 = plotDatum0.getX();
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(2305.084575651733, double0, 0.01);
      assertTrue(plotDatum0.connected());
      assertEquals(0.0, plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.239, 0.239, false);
      plotDatum0.getPlotSymbol();
      assertEquals(0.239, plotDatum0.y, 0.01);
      assertEquals(0.239, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RTriangle1Symbol rTriangle1Symbol0 = new RTriangle1Symbol();
      PlotDatum plotDatum0 = new PlotDatum((-1.0), 107.361590454381, false, rTriangle1Symbol0);
      rTriangle1Symbol0.setSize(0);
      plotDatum0.getPlotSymbol();
      assertEquals((-1.0), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(107.361590454381, plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ThinRect1Symbol thinRect1Symbol0 = new ThinRect1Symbol();
      PlotDatum plotDatum0 = new PlotDatum(40.0, 40.0, false, thinRect1Symbol0);
      thinRect1Symbol0.setSize((-1));
      plotDatum0.getPlotSymbol();
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(plotDatum0.connected());
      assertEquals(40.0, plotDatum0.y, 0.01);
      assertEquals(40.0, plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RTriangle1Symbol rTriangle1Symbol0 = new RTriangle1Symbol();
      PlotDatum plotDatum0 = new PlotDatum((-1.0), 107.361590454381, false, rTriangle1Symbol0);
      SystemColor systemColor0 = SystemColor.scrollbar;
      plotDatum0.setLineColor(systemColor0);
      plotDatum0.getLineColor();
      assertFalse(plotDatum0.connected());
      assertEquals((-1.0), plotDatum0.x, 0.01);
      assertEquals(107.361590454381, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, true);
      boolean boolean0 = plotDatum0.connected();
      assertTrue(boolean0);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertEquals(0.0, plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RTriangle1Symbol rTriangle1Symbol0 = new RTriangle1Symbol();
      PlotDatum plotDatum0 = new PlotDatum((-1.0), 107.361590454381, false, rTriangle1Symbol0);
      PlotDatum plotDatum1 = (PlotDatum)plotDatum0.clone();
      assertFalse(plotDatum1.hasErrorBar());
      assertNotSame(plotDatum1, plotDatum0);
      assertFalse(plotDatum1.connected());
      assertEquals((-1.0), plotDatum1.x, 0.01);
      assertEquals(107.361590454381, plotDatum1.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, true);
      PlotDatum plotDatum1 = (PlotDatum)plotDatum0.clone();
      assertFalse(plotDatum1.hasErrorBar());
      assertNotSame(plotDatum1, plotDatum0);
      assertTrue(plotDatum1.connected());
      assertEquals(0.0, plotDatum1.y, 0.01);
      assertEquals(0.0, plotDatum1.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(503.275, 503.275, true);
      plotDatum0.setLineColor((Color) null);
      assertEquals(503.275, plotDatum0.x, 0.01);
      assertEquals(503.275, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertTrue(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ThinRect1Symbol thinRect1Symbol0 = new ThinRect1Symbol();
      PlotDatum plotDatum0 = new PlotDatum(40.0, 40.0, false, thinRect1Symbol0);
      plotDatum0.setYError(0.0);
      assertFalse(plotDatum0.connected());
      assertEquals(0.0, plotDatum0.getYError(), 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(40.0, plotDatum0.y, 0.01);
      assertEquals(40.0, plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ThinRect1Symbol thinRect1Symbol0 = new ThinRect1Symbol();
      PlotDatum plotDatum0 = new PlotDatum(40.0, 40.0, false, thinRect1Symbol0);
      double double0 = plotDatum0.getYError();
      assertEquals(0.0, double0, 0.01);
      assertFalse(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(40.0, plotDatum0.x, 0.01);
      assertEquals(40.0, plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DiamondSymbol diamondSymbol0 = new DiamondSymbol();
      PlotDatum plotDatum0 = new PlotDatum(0.0, 0.0, false, diamondSymbol0);
      boolean boolean0 = plotDatum0.connected();
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(0.0, plotDatum0.x, 0.01);
      assertEquals(0.0, plotDatum0.y, 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PlotDatum plotDatum0 = new PlotDatum(200.0, 200.0, false);
      boolean boolean0 = plotDatum0.hasErrorBar();
      assertEquals(200.0, plotDatum0.x, 0.01);
      assertEquals(200.0, plotDatum0.y, 0.01);
      assertFalse(boolean0);
      assertFalse(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ThinRect1Symbol thinRect1Symbol0 = new ThinRect1Symbol();
      PlotDatum plotDatum0 = new PlotDatum(40.0, 40.0, false, thinRect1Symbol0);
      plotDatum0.setConnected(false);
      assertEquals(40.0, plotDatum0.x, 0.01);
      assertEquals(40.0, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RTriangle1Symbol rTriangle1Symbol0 = new RTriangle1Symbol();
      PlotDatum plotDatum0 = new PlotDatum((-1.0), 107.361590454381, false, rTriangle1Symbol0);
      plotDatum0.getPlotSymbol();
      assertEquals((-1.0), plotDatum0.x, 0.01);
      assertFalse(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals(107.361590454381, plotDatum0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RTriangle1Symbol rTriangle1Symbol0 = new RTriangle1Symbol();
      PlotDatum plotDatum0 = new PlotDatum((-1.0), 107.361590454381, false, rTriangle1Symbol0);
      double double0 = plotDatum0.getY();
      assertEquals(107.361590454381, double0, 0.01);
      assertFalse(plotDatum0.connected());
      assertFalse(plotDatum0.hasErrorBar());
      assertEquals((-1.0), plotDatum0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ThinRect1Symbol thinRect1Symbol0 = new ThinRect1Symbol();
      PlotDatum plotDatum0 = new PlotDatum(40.0, 40.0, false, thinRect1Symbol0);
      plotDatum0.setPlotSymbol(thinRect1Symbol0);
      assertEquals(40.0, plotDatum0.y, 0.01);
      assertEquals(40.0, plotDatum0.x, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RTriangle1Symbol rTriangle1Symbol0 = new RTriangle1Symbol();
      PlotDatum plotDatum0 = new PlotDatum((-1.0), 107.361590454381, false, rTriangle1Symbol0);
      plotDatum0.getLineColor();
      assertEquals((-1.0), plotDatum0.x, 0.01);
      assertEquals(107.361590454381, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(plotDatum0.connected());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RTriangle1Symbol rTriangle1Symbol0 = new RTriangle1Symbol();
      PlotDatum plotDatum0 = new PlotDatum((-1.0), 107.361590454381, false, rTriangle1Symbol0);
      double double0 = plotDatum0.getX();
      assertEquals(107.361590454381, plotDatum0.y, 0.01);
      assertFalse(plotDatum0.hasErrorBar());
      assertFalse(plotDatum0.connected());
      assertEquals((-1.0), double0, 0.01);
  }
}
