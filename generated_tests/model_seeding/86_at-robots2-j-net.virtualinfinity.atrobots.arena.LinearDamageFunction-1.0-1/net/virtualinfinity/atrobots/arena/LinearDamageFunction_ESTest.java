/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 23 13:27:54 GMT 2019
 */

package net.virtualinfinity.atrobots.arena;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.virtualinfinity.atrobots.arena.LinearDamageFunction;
import net.virtualinfinity.atrobots.arena.Position;
import net.virtualinfinity.atrobots.arenaobjects.ArenaObject;
import net.virtualinfinity.atrobots.arenaobjects.DamageInflicter;
import net.virtualinfinity.atrobots.hardware.mines.Mine;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LinearDamageFunction_ESTest extends LinearDamageFunction_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Position position0 = Position.random(0.0, 0.0, (-212.34877), (-212.34877));
      LinearDamageFunction linearDamageFunction0 = new LinearDamageFunction(position0, 0.0, 0.0);
      double double0 = linearDamageFunction0.getRadius();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Position position0 = Position.random(441.0, 441.0, 441.0, 441.0);
      LinearDamageFunction linearDamageFunction0 = new LinearDamageFunction(position0, 441.0, 441.0);
      double double0 = linearDamageFunction0.getRadius();
      assertEquals(441.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Position position0 = Position.random(441.0, 441.0, 441.0, 441.0);
      LinearDamageFunction linearDamageFunction0 = new LinearDamageFunction(position0, 441.0, 441.0);
      Position position1 = Position.random((-32768), 0.0, (-3000.036703), 0.0);
      Mine mine0 = new Mine((DamageInflicter) null);
      mine0.setPosition(position1);
      double double0 = linearDamageFunction0.getDamageAmount(mine0);
      assertEquals(441.0, linearDamageFunction0.getRadius(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Position position0 = Position.random((-1154.23724), 0.0, (-2312.863766763799), 789.790287235);
      LinearDamageFunction linearDamageFunction0 = new LinearDamageFunction(position0, (-765.53137), (-2312.863766763799));
      Mine mine0 = new Mine((DamageInflicter) null);
      mine0.setPosition(position0);
      double double0 = linearDamageFunction0.getDamageAmount(mine0);
      assertEquals(1770569.7679940516, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Position position0 = new Position();
      LinearDamageFunction linearDamageFunction0 = new LinearDamageFunction(position0, 450.0, 483.460740678);
      linearDamageFunction0.getCenter();
      assertEquals(483.460740678, linearDamageFunction0.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Position position0 = Position.random(441.0, 441.0, 441.0, 441.0);
      LinearDamageFunction linearDamageFunction0 = new LinearDamageFunction(position0, 441.0, 441.0);
      linearDamageFunction0.getCenter();
      assertEquals(441.0, linearDamageFunction0.getRadius(), 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LinearDamageFunction linearDamageFunction0 = new LinearDamageFunction((Position) null, (-1.0), (-1.0));
      // Undeclared exception!
      try { 
        linearDamageFunction0.getDamageAmount((ArenaObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.virtualinfinity.atrobots.arena.LinearDamageFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LinearDamageFunction linearDamageFunction0 = new LinearDamageFunction((Position) null, (-781.284459), (-781.284459));
      // Undeclared exception!
      try { 
        linearDamageFunction0.getCenter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.virtualinfinity.atrobots.arena.LinearDamageFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Position position0 = new Position();
      LinearDamageFunction linearDamageFunction0 = new LinearDamageFunction(position0, (-1192.949), (-1192.949));
      double double0 = linearDamageFunction0.getRadius();
      assertEquals((-1192.949), double0, 0.01);
  }
}
