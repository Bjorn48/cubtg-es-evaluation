/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 28 17:35:40 GMT 2019
 */

package de.progra.charting;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import de.progra.charting.Axis;
import de.progra.charting.CoordSystem;
import de.progra.charting.CoordSystemUtilities;
import de.progra.charting.model.ChartDataModelConstraints;
import de.progra.charting.model.DataSet;
import de.progra.charting.model.DefaultChartDataModel;
import de.progra.charting.model.DefaultChartDataModelConstraints;
import de.progra.charting.model.EditableChartDataModel;
import de.progra.charting.model.ObjectChartDataModel;
import de.progra.charting.model.StackedChartDataModelConstraints;
import java.awt.Graphics2D;
import java.awt.geom.AffineTransform;
import java.awt.geom.Line2D;
import java.text.DecimalFormat;
import java.util.NoSuchElementException;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CoordSystemUtilities_ESTest extends CoordSystemUtilities_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[8];
      int[][] intArray0 = new int[3][8];
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) (-1046210022);
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(intArray0, doubleArray0, stringArray0);
      assertNotNull(defaultChartDataModel0);
      assertArrayEquals(new double[] {(-1.046210022E9)}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(3, intArray0.length);
      assertEquals(1, doubleArray0.length);
      assertEquals(3, defaultChartDataModel0.getDataSetNumber());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertFalse(defaultChartDataModel0.isAutoScale());
      
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertArrayEquals(new double[] {(-1.046210022E9)}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(3, intArray0.length);
      assertEquals(1, doubleArray0.length);
      assertEquals(3, defaultChartDataModel0.getDataSetNumber());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      
      Axis axis0 = coordSystem0.yaxis;
      assertNotNull(axis0);
      assertEquals(4, Axis.LINEAR);
      assertEquals(3, Axis.LOGARITHMIC);
      assertEquals(1, Axis.HORIZONTAL);
      assertEquals(2, Axis.VERTICAL);
      assertArrayEquals(new double[] {(-1.046210022E9)}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(3, intArray0.length);
      assertEquals(1, doubleArray0.length);
      assertEquals(2, axis0.getAlignment());
      assertEquals(Integer.MAX_VALUE, axis0.getLength());
      
      coordSystem0.setSecondYAxis(axis0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(4, Axis.LINEAR);
      assertEquals(3, Axis.LOGARITHMIC);
      assertEquals(1, Axis.HORIZONTAL);
      assertEquals(2, Axis.VERTICAL);
      assertArrayEquals(new double[] {(-1.046210022E9)}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(3, intArray0.length);
      assertEquals(1, doubleArray0.length);
      assertEquals(3, defaultChartDataModel0.getDataSetNumber());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals(2, axis0.getAlignment());
      assertEquals(Integer.MAX_VALUE, axis0.getLength());
      
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      assertNotNull(coordSystemUtilities0);
      assertArrayEquals(new double[] {(-1.046210022E9)}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(3, intArray0.length);
      assertEquals(1, doubleArray0.length);
      
      // Undeclared exception!
      try { 
        coordSystemUtilities0.getYAxisLine2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystemUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[8];
      int[][] intArray0 = new int[3][8];
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 2140349129;
      doubleArray0[1] = (double) 2140349129;
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(intArray0, doubleArray0, stringArray0);
      assertNotNull(defaultChartDataModel0);
      assertArrayEquals(new double[] {2.140349129E9, 2.140349129E9}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(3, intArray0.length);
      assertEquals(2, doubleArray0.length);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(3, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(defaultChartDataModel0.isManualScale());
      
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0, "", "I:7HNWKf<O/");
      assertNotNull(coordSystem0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertArrayEquals(new double[] {2.140349129E9, 2.140349129E9}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(3, intArray0.length);
      assertEquals(2, doubleArray0.length);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(3, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(defaultChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("I:7HNWKf<O/", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(defaultChartDataModel0, 1096, true);
      assertNotNull(stackedChartDataModelConstraints0);
      assertArrayEquals(new double[] {2.140349129E9, 2.140349129E9}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(3, intArray0.length);
      assertEquals(2, doubleArray0.length);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(3, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(defaultChartDataModel0.isManualScale());
      
      StackedChartDataModelConstraints stackedChartDataModelConstraints1 = new StackedChartDataModelConstraints(defaultChartDataModel0, 2140349129, false);
      assertFalse(stackedChartDataModelConstraints1.equals((Object)stackedChartDataModelConstraints0));
      assertNotNull(stackedChartDataModelConstraints1);
      assertArrayEquals(new double[] {2.140349129E9, 2.140349129E9}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(3, intArray0.length);
      assertEquals(2, doubleArray0.length);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(3, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(defaultChartDataModel0.isManualScale());
      
      CoordSystemUtilities coordSystemUtilities0 = new CoordSystemUtilities(coordSystem0, stackedChartDataModelConstraints1, stackedChartDataModelConstraints0, defaultChartDataModel0);
      assertFalse(stackedChartDataModelConstraints0.equals((Object)stackedChartDataModelConstraints1));
      assertFalse(stackedChartDataModelConstraints1.equals((Object)stackedChartDataModelConstraints0));
      assertNotNull(coordSystemUtilities0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertArrayEquals(new double[] {2.140349129E9, 2.140349129E9}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(3, intArray0.length);
      assertEquals(2, doubleArray0.length);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(3, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(defaultChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("I:7HNWKf<O/", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      
      // Undeclared exception!
      try { 
        coordSystemUtilities0.getYAxisLine2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystemUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertNotNull(objectChartDataModel0);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      
      double[][] doubleArray0 = new double[1][1];
      double[] doubleArray1 = new double[3];
      String[] stringArray0 = new String[8];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(doubleArray0, doubleArray1, stringArray0);
      assertNotNull(editableChartDataModel0);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0}, doubleArray1, 0.01);
      assertEquals(1, doubleArray0.length);
      assertEquals(3, doubleArray1.length);
      assertEquals(8, stringArray0.length);
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertFalse(editableChartDataModel0.isManualScale());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(1, editableChartDataModel0.getDataSetNumber());
      
      ChartDataModelConstraints chartDataModelConstraints0 = editableChartDataModel0.getChartDataModelConstraints(15);
      assertNotNull(chartDataModelConstraints0);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0}, doubleArray1, 0.01);
      assertEquals(1, doubleArray0.length);
      assertEquals(3, doubleArray1.length);
      assertEquals(8, stringArray0.length);
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertFalse(editableChartDataModel0.isManualScale());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(1, editableChartDataModel0.getDataSetNumber());
      
      CoordSystemUtilities coordSystemUtilities0 = new CoordSystemUtilities(coordSystem0, chartDataModelConstraints0, chartDataModelConstraints0, objectChartDataModel0);
      assertNotNull(coordSystemUtilities0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0}, doubleArray1, 0.01);
      assertEquals(1, doubleArray0.length);
      assertEquals(3, doubleArray1.length);
      assertEquals(8, stringArray0.length);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertFalse(editableChartDataModel0.isManualScale());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(1, editableChartDataModel0.getDataSetNumber());
      
      // Undeclared exception!
      try { 
        coordSystemUtilities0.drawYAxisTicks((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystemUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertNotNull(objectChartDataModel0);
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      
      double[][] doubleArray0 = new double[1][4];
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (double) 20;
      doubleArray1[1] = (double) 1;
      String[] stringArray0 = new String[6];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(doubleArray0, doubleArray1, stringArray0);
      assertNotNull(editableChartDataModel0);
      assertArrayEquals(new double[] {20.0, 1.0}, doubleArray1, 0.01);
      assertEquals(1, doubleArray0.length);
      assertEquals(2, doubleArray1.length);
      assertEquals(6, stringArray0.length);
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertFalse(editableChartDataModel0.isManualScale());
      assertEquals(1, editableChartDataModel0.getDataSetNumber());
      
      ChartDataModelConstraints chartDataModelConstraints0 = editableChartDataModel0.getChartDataModelConstraints(46);
      assertNotNull(chartDataModelConstraints0);
      assertArrayEquals(new double[] {20.0, 1.0}, doubleArray1, 0.01);
      assertEquals(1, doubleArray0.length);
      assertEquals(2, doubleArray1.length);
      assertEquals(6, stringArray0.length);
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertFalse(editableChartDataModel0.isManualScale());
      assertEquals(1, editableChartDataModel0.getDataSetNumber());
      
      DefaultChartDataModelConstraints defaultChartDataModelConstraints0 = new DefaultChartDataModelConstraints(objectChartDataModel0, 1);
      assertFalse(defaultChartDataModelConstraints0.equals((Object)chartDataModelConstraints0));
      assertNotNull(defaultChartDataModelConstraints0);
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      
      CoordSystemUtilities coordSystemUtilities0 = new CoordSystemUtilities(coordSystem0, chartDataModelConstraints0, defaultChartDataModelConstraints0, editableChartDataModel0);
      assertFalse(chartDataModelConstraints0.equals((Object)defaultChartDataModelConstraints0));
      assertFalse(defaultChartDataModelConstraints0.equals((Object)chartDataModelConstraints0));
      assertNotNull(coordSystemUtilities0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertArrayEquals(new double[] {20.0, 1.0}, doubleArray1, 0.01);
      assertEquals(1, doubleArray0.length);
      assertEquals(2, doubleArray1.length);
      assertEquals(6, stringArray0.length);
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertFalse(editableChartDataModel0.isManualScale());
      assertEquals(1, editableChartDataModel0.getDataSetNumber());
      
      // Undeclared exception!
      try { 
        coordSystemUtilities0.drawYAxisTicks((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystemUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertNotNull(objectChartDataModel0);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      assertNotNull(coordSystemUtilities0);
      
      // Undeclared exception!
      try { 
        coordSystemUtilities0.drawXAxisTicks((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystemUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertNotNull(objectChartDataModel0);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isAutoScale());
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      assertNotNull(coordSystemUtilities0);
      
      // Undeclared exception!
      try { 
        coordSystemUtilities0.drawNumericalXAxisTicks((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystemUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[8];
      int[][] intArray0 = new int[3][9];
      int[] intArray1 = new int[5];
      intArray1[0] = (-1997);
      intArray0[0] = intArray1;
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel(intArray0, stringArray0, stringArray0);
      assertNotNull(objectChartDataModel0);
      assertEquals(8, stringArray0.length);
      assertEquals(3, intArray0.length);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(3, objectChartDataModel0.getDataSetNumber());
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(8, stringArray0.length);
      assertEquals(3, intArray0.length);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(3, objectChartDataModel0.getDataSetNumber());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      assertNotNull(coordSystemUtilities0);
      assertEquals(8, stringArray0.length);
      assertEquals(3, intArray0.length);
      
      // Undeclared exception!
      try { 
        coordSystemUtilities0.drawNumericalXAxisTicks((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystemUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertNotNull(objectChartDataModel0);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, " y7^Q", " y7^Q");
      assertNotNull(coordSystem0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(" y7^Q", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(" y7^Q", coordSystem0.getXAxisUnit());
      
      Number[][] numberArray0 = new Number[1][6];
      Number[] numberArray1 = new Number[7];
      numberArray1[0] = (Number) 1;
      numberArray1[1] = (Number) 1;
      numberArray1[2] = (Number) 0;
      numberArray1[3] = (Number) 15;
      numberArray1[4] = (Number) 15;
      numberArray1[5] = (Number) 0;
      numberArray1[6] = (Number) 15;
      numberArray0[0] = numberArray1;
      double[] doubleArray0 = new double[7];
      doubleArray0[0] = (double) 15;
      String[] stringArray0 = new String[9];
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(numberArray0, doubleArray0, stringArray0);
      assertNotNull(defaultChartDataModel0);
      assertArrayEquals(new double[] {15.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(1, numberArray0.length);
      assertEquals(7, doubleArray0.length);
      assertEquals(9, stringArray0.length);
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(1, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isManualScale());
      
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(defaultChartDataModel0, 20);
      assertNotNull(stackedChartDataModelConstraints0);
      assertArrayEquals(new double[] {15.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(1, numberArray0.length);
      assertEquals(7, doubleArray0.length);
      assertEquals(9, stringArray0.length);
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(1, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isManualScale());
      
      ChartDataModelConstraints chartDataModelConstraints0 = defaultChartDataModel0.getChartDataModelConstraints(20);
      assertNotNull(chartDataModelConstraints0);
      assertArrayEquals(new double[] {15.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(1, numberArray0.length);
      assertEquals(7, doubleArray0.length);
      assertEquals(9, stringArray0.length);
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(1, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isManualScale());
      
      CoordSystemUtilities coordSystemUtilities0 = new CoordSystemUtilities(coordSystem0, stackedChartDataModelConstraints0, chartDataModelConstraints0, defaultChartDataModel0);
      assertNotNull(coordSystemUtilities0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertArrayEquals(new double[] {15.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(1, numberArray0.length);
      assertEquals(7, doubleArray0.length);
      assertEquals(9, stringArray0.length);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(" y7^Q", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(" y7^Q", coordSystem0.getXAxisUnit());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(1, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isManualScale());
      
      int int0 = coordSystemUtilities0.computeLeftMargin();
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(36, int0);
      assertArrayEquals(new double[] {15.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(1, numberArray0.length);
      assertEquals(7, doubleArray0.length);
      assertEquals(9, stringArray0.length);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(" y7^Q", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals(" y7^Q", coordSystem0.getXAxisUnit());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(1, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isManualScale());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[8];
      int[][] intArray0 = new int[1][8];
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) (-1046210062);
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(intArray0, doubleArray0, stringArray0);
      assertNotNull(defaultChartDataModel0);
      assertArrayEquals(new double[] {(-1.046210062E9)}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(1, intArray0.length);
      assertEquals(1, doubleArray0.length);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(1, defaultChartDataModel0.getDataSetNumber());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(defaultChartDataModel0.isManualScale());
      
      ChartDataModelConstraints chartDataModelConstraints0 = defaultChartDataModel0.getChartDataModelConstraints((-356));
      assertNotNull(chartDataModelConstraints0);
      assertArrayEquals(new double[] {(-1.046210062E9)}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(1, intArray0.length);
      assertEquals(1, doubleArray0.length);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(1, defaultChartDataModel0.getDataSetNumber());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(defaultChartDataModel0.isManualScale());
      
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertArrayEquals(new double[] {(-1.046210062E9)}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(1, intArray0.length);
      assertEquals(1, doubleArray0.length);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(1, defaultChartDataModel0.getDataSetNumber());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(defaultChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      
      Axis axis0 = coordSystem0.yaxis;
      assertNotNull(axis0);
      assertEquals(3, Axis.LOGARITHMIC);
      assertEquals(1, Axis.HORIZONTAL);
      assertEquals(2, Axis.VERTICAL);
      assertEquals(4, Axis.LINEAR);
      assertArrayEquals(new double[] {(-1.046210062E9)}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(1, intArray0.length);
      assertEquals(1, doubleArray0.length);
      assertEquals(Integer.MAX_VALUE, axis0.getLength());
      assertEquals(2, axis0.getAlignment());
      
      coordSystem0.setSecondYAxis(axis0);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(3, Axis.LOGARITHMIC);
      assertEquals(1, Axis.HORIZONTAL);
      assertEquals(2, Axis.VERTICAL);
      assertEquals(4, Axis.LINEAR);
      assertArrayEquals(new double[] {(-1.046210062E9)}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(1, intArray0.length);
      assertEquals(1, doubleArray0.length);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(1, defaultChartDataModel0.getDataSetNumber());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(defaultChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals(Integer.MAX_VALUE, axis0.getLength());
      assertEquals(2, axis0.getAlignment());
      
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(defaultChartDataModel0, 1367, false);
      assertNotNull(stackedChartDataModelConstraints0);
      assertArrayEquals(new double[] {(-1.046210062E9)}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(1, intArray0.length);
      assertEquals(1, doubleArray0.length);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(1, defaultChartDataModel0.getDataSetNumber());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(defaultChartDataModel0.isManualScale());
      
      CoordSystemUtilities coordSystemUtilities0 = new CoordSystemUtilities(coordSystem0, stackedChartDataModelConstraints0, chartDataModelConstraints0, defaultChartDataModel0);
      assertNotNull(coordSystemUtilities0);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertArrayEquals(new double[] {(-1.046210062E9)}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(1, intArray0.length);
      assertEquals(1, doubleArray0.length);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(1, defaultChartDataModel0.getDataSetNumber());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(defaultChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      
      // Undeclared exception!
      coordSystemUtilities0.computeYAxisLabelWidth();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      String[] stringArray0 = new String[8];
      int[][] intArray0 = new int[3][8];
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(intArray0, doubleArray0, stringArray0);
      assertNotNull(defaultChartDataModel0);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(3, doubleArray0.length);
      assertEquals(8, stringArray0.length);
      assertEquals(3, intArray0.length);
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(3, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isAutoScale());
      
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0, "", "");
      assertNotNull(coordSystem0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(3, doubleArray0.length);
      assertEquals(8, stringArray0.length);
      assertEquals(3, intArray0.length);
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(3, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals("", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(defaultChartDataModel0, (-1468), false);
      assertNotNull(stackedChartDataModelConstraints0);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(3, doubleArray0.length);
      assertEquals(8, stringArray0.length);
      assertEquals(3, intArray0.length);
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(3, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isAutoScale());
      
      CoordSystemUtilities coordSystemUtilities0 = new CoordSystemUtilities(coordSystem0, stackedChartDataModelConstraints0, stackedChartDataModelConstraints0, defaultChartDataModel0);
      assertNotNull(coordSystemUtilities0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(3, doubleArray0.length);
      assertEquals(8, stringArray0.length);
      assertEquals(3, intArray0.length);
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(3, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals("", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      
      // Undeclared exception!
      coordSystemUtilities0.computeYAxisLabelWidth();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[][] intArray0 = new int[1][2];
      int[] intArray1 = new int[8];
      intArray1[0] = 1;
      intArray0[0] = intArray1;
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 3330;
      String[] stringArray0 = new String[7];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(intArray0, doubleArray0, stringArray0);
      assertNotNull(editableChartDataModel0);
      assertArrayEquals(new double[] {3330.0}, doubleArray0, 0.01);
      assertEquals(1, intArray0.length);
      assertEquals(1, doubleArray0.length);
      assertEquals(7, stringArray0.length);
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertFalse(editableChartDataModel0.isManualScale());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(1, editableChartDataModel0.getDataSetNumber());
      assertFalse(editableChartDataModel0.isAutoScale());
      
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, "de.progra.charting.CoordSystemUtilities", "de.progra.charting.CoordSystemUtilities");
      assertNotNull(coordSystem0);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertArrayEquals(new double[] {3330.0}, doubleArray0, 0.01);
      assertEquals(1, intArray0.length);
      assertEquals(1, doubleArray0.length);
      assertEquals(7, stringArray0.length);
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertFalse(editableChartDataModel0.isManualScale());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(1, editableChartDataModel0.getDataSetNumber());
      assertFalse(editableChartDataModel0.isAutoScale());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("de.progra.charting.CoordSystemUtilities", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("de.progra.charting.CoordSystemUtilities", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      assertNotNull(coordSystemUtilities0);
      assertArrayEquals(new double[] {3330.0}, doubleArray0, 0.01);
      assertEquals(1, intArray0.length);
      assertEquals(1, doubleArray0.length);
      assertEquals(7, stringArray0.length);
      
      int int0 = coordSystemUtilities0.computeYAxisLabelWidth();
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(21, int0);
      assertArrayEquals(new double[] {3330.0}, doubleArray0, 0.01);
      assertEquals(1, intArray0.length);
      assertEquals(1, doubleArray0.length);
      assertEquals(7, stringArray0.length);
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertFalse(editableChartDataModel0.isManualScale());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(1, editableChartDataModel0.getDataSetNumber());
      assertFalse(editableChartDataModel0.isAutoScale());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("de.progra.charting.CoordSystemUtilities", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("de.progra.charting.CoordSystemUtilities", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertNotNull(objectChartDataModel0);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isAutoScale());
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      
      double[][] doubleArray0 = new double[1][4];
      double[] doubleArray1 = new double[9];
      doubleArray1[4] = (double) 20;
      String[] stringArray0 = new String[6];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(doubleArray0, doubleArray1, stringArray0);
      assertNotNull(editableChartDataModel0);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 0.0}, doubleArray1, 0.01);
      assertEquals(1, doubleArray0.length);
      assertEquals(9, doubleArray1.length);
      assertEquals(6, stringArray0.length);
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(1, editableChartDataModel0.getDataSetNumber());
      assertFalse(editableChartDataModel0.isManualScale());
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(editableChartDataModel0.isColumnNumeric());
      
      ChartDataModelConstraints chartDataModelConstraints0 = editableChartDataModel0.getChartDataModelConstraints((-3694));
      assertNotNull(chartDataModelConstraints0);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 0.0}, doubleArray1, 0.01);
      assertEquals(1, doubleArray0.length);
      assertEquals(9, doubleArray1.length);
      assertEquals(6, stringArray0.length);
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(1, editableChartDataModel0.getDataSetNumber());
      assertFalse(editableChartDataModel0.isManualScale());
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(editableChartDataModel0.isColumnNumeric());
      
      CoordSystemUtilities coordSystemUtilities0 = new CoordSystemUtilities(coordSystem0, chartDataModelConstraints0, chartDataModelConstraints0, editableChartDataModel0);
      assertNotNull(coordSystemUtilities0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 0.0}, doubleArray1, 0.01);
      assertEquals(1, doubleArray0.length);
      assertEquals(9, doubleArray1.length);
      assertEquals(6, stringArray0.length);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(1, editableChartDataModel0.getDataSetNumber());
      assertFalse(editableChartDataModel0.isManualScale());
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(editableChartDataModel0.isColumnNumeric());
      
      int int0 = coordSystemUtilities0.computeBottomMargin();
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(26, int0);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 0.0}, doubleArray1, 0.01);
      assertEquals(1, doubleArray0.length);
      assertEquals(9, doubleArray1.length);
      assertEquals(6, stringArray0.length);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(1, editableChartDataModel0.getDataSetNumber());
      assertFalse(editableChartDataModel0.isManualScale());
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(editableChartDataModel0.isColumnNumeric());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[8];
      int[][] intArray0 = new int[3][8];
      int[] intArray1 = new int[9];
      intArray1[0] = 47;
      intArray0[2] = intArray1;
      double[] doubleArray0 = new double[3];
      doubleArray0[1] = (double) (-1046209982);
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(intArray0, doubleArray0, stringArray0);
      assertNotNull(defaultChartDataModel0);
      assertArrayEquals(new double[] {0.0, (-1.046209982E9), 0.0}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(3, intArray0.length);
      assertEquals(3, doubleArray0.length);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertEquals(3, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertArrayEquals(new double[] {0.0, (-1.046209982E9), 0.0}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(3, intArray0.length);
      assertEquals(3, doubleArray0.length);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertEquals(3, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("x", coordSystem0.getXAxisUnit());
      
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      assertNotNull(coordSystemUtilities0);
      assertArrayEquals(new double[] {0.0, (-1.046209982E9), 0.0}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(3, intArray0.length);
      assertEquals(3, doubleArray0.length);
      
      int int0 = coordSystemUtilities0.computeBottomMargin();
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(26, int0);
      assertArrayEquals(new double[] {0.0, (-1.046209982E9), 0.0}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(3, intArray0.length);
      assertEquals(3, doubleArray0.length);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertEquals(3, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("x", coordSystem0.getXAxisUnit());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[8];
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) (-1046210022);
      double[][] doubleArray1 = new double[1][6];
      doubleArray1[0] = doubleArray0;
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(doubleArray1, doubleArray0, stringArray0);
      assertNotNull(defaultChartDataModel0);
      assertArrayEquals(new double[] {(-1.046210022E9)}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(1, doubleArray0.length);
      assertEquals(1, doubleArray1.length);
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(1, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertArrayEquals(new double[] {(-1.046210022E9)}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(1, doubleArray0.length);
      assertEquals(1, doubleArray1.length);
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(1, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("x", coordSystem0.getXAxisUnit());
      
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      assertNotNull(coordSystemUtilities0);
      assertArrayEquals(new double[] {(-1.046210022E9)}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(1, doubleArray0.length);
      assertEquals(1, doubleArray1.length);
      
      int int0 = coordSystemUtilities0.computeBottomMargin();
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, int0);
      assertArrayEquals(new double[] {(-1.046210022E9)}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(1, doubleArray0.length);
      assertEquals(1, doubleArray1.length);
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(1, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("x", coordSystem0.getXAxisUnit());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[8];
      int[][] intArray0 = new int[3][8];
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) (-1046210022);
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(intArray0, doubleArray0, stringArray0);
      assertNotNull(defaultChartDataModel0);
      assertArrayEquals(new double[] {(-1.046210022E9)}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(3, intArray0.length);
      assertEquals(1, doubleArray0.length);
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(3, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertFalse(defaultChartDataModel0.isManualScale());
      
      ChartDataModelConstraints chartDataModelConstraints0 = defaultChartDataModel0.getChartDataModelConstraints((-1046210022));
      assertNotNull(chartDataModelConstraints0);
      assertArrayEquals(new double[] {(-1.046210022E9)}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(3, intArray0.length);
      assertEquals(1, doubleArray0.length);
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(3, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertFalse(defaultChartDataModel0.isManualScale());
      
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertArrayEquals(new double[] {(-1.046210022E9)}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(3, intArray0.length);
      assertEquals(1, doubleArray0.length);
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(3, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      
      CoordSystemUtilities coordSystemUtilities0 = new CoordSystemUtilities(coordSystem0, chartDataModelConstraints0, chartDataModelConstraints0, defaultChartDataModel0);
      assertNotNull(coordSystemUtilities0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertArrayEquals(new double[] {(-1.046210022E9)}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(3, intArray0.length);
      assertEquals(1, doubleArray0.length);
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(3, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      
      int int0 = coordSystemUtilities0.computeLeftMargin();
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, int0);
      assertArrayEquals(new double[] {(-1.046210022E9)}, doubleArray0, 0.01);
      assertEquals(8, stringArray0.length);
      assertEquals(3, intArray0.length);
      assertEquals(1, doubleArray0.length);
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(3, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertNotNull(objectChartDataModel0);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintAltTick());
      
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      assertNotNull(coordSystemUtilities0);
      
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((-1702.837505));
      assertNotNull(affineTransform0);
      assertEquals(0.09414711500015727, affineTransform0.getShearX(), 0.01);
      assertEquals((-0.09414711500015727), affineTransform0.getShearY(), 0.01);
      assertEquals(0.9999999999999999, affineTransform0.getDeterminant(), 0.01);
      assertEquals(0.0, affineTransform0.getTranslateX(), 0.01);
      assertEquals(0.0, affineTransform0.getTranslateY(), 0.01);
      assertEquals(0.9955582960013678, affineTransform0.getScaleY(), 0.01);
      assertEquals(0.9955582960013678, affineTransform0.getScaleX(), 0.01);
      
      coordSystem0.y1transform = affineTransform0;
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals(0.09414711500015727, affineTransform0.getShearX(), 0.01);
      assertEquals((-0.09414711500015727), affineTransform0.getShearY(), 0.01);
      assertEquals(0.9999999999999999, affineTransform0.getDeterminant(), 0.01);
      assertEquals(0.0, affineTransform0.getTranslateX(), 0.01);
      assertEquals(0.0, affineTransform0.getTranslateY(), 0.01);
      assertEquals(0.9955582960013678, affineTransform0.getScaleY(), 0.01);
      assertEquals(0.9955582960013678, affineTransform0.getScaleX(), 0.01);
      assertEquals(0.9955582960013678, coordSystem0.y1transform.getScaleX(), 0.01);
      assertEquals(0.9955582960013678, coordSystem0.y1transform.getScaleY(), 0.01);
      assertEquals(0.9999999999999999, coordSystem0.y1transform.getDeterminant(), 0.01);
      assertEquals(0.09414711500015727, coordSystem0.y1transform.getShearX(), 0.01);
      assertEquals(0.0, coordSystem0.y1transform.getTranslateY(), 0.01);
      assertEquals((-0.09414711500015727), coordSystem0.y1transform.getShearY(), 0.01);
      assertEquals(0.0, coordSystem0.y1transform.getTranslateX(), 0.01);
      
      Line2D.Double line2D_Double0 = (Line2D.Double)coordSystemUtilities0.getYAxisLine2D();
      assertNotNull(line2D_Double0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0.9955582960013678, line2D_Double0.y1, 0.01);
      assertEquals(0.0, line2D_Double0.y2, 0.01);
      assertEquals(0.09414711500015727, line2D_Double0.x1, 0.01);
      assertEquals(0.0, line2D_Double0.x2, 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintAltTick());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertNotNull(objectChartDataModel0);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("x", coordSystem0.getXAxisUnit());
      
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      assertNotNull(coordSystemUtilities0);
      
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((-1702.837505));
      assertNotNull(affineTransform0);
      assertEquals(0.9999999999999999, affineTransform0.getDeterminant(), 0.01);
      assertEquals(0.0, affineTransform0.getTranslateY(), 0.01);
      assertEquals(0.09414711500015727, affineTransform0.getShearX(), 0.01);
      assertEquals((-0.09414711500015727), affineTransform0.getShearY(), 0.01);
      assertEquals(0.0, affineTransform0.getTranslateX(), 0.01);
      assertEquals(0.9955582960013678, affineTransform0.getScaleY(), 0.01);
      assertEquals(0.9955582960013678, affineTransform0.getScaleX(), 0.01);
      
      coordSystem0.y1transform = affineTransform0;
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals(0.9999999999999999, affineTransform0.getDeterminant(), 0.01);
      assertEquals(0.0, affineTransform0.getTranslateY(), 0.01);
      assertEquals(0.09414711500015727, affineTransform0.getShearX(), 0.01);
      assertEquals((-0.09414711500015727), affineTransform0.getShearY(), 0.01);
      assertEquals(0.0, affineTransform0.getTranslateX(), 0.01);
      assertEquals(0.9955582960013678, affineTransform0.getScaleY(), 0.01);
      assertEquals(0.9955582960013678, affineTransform0.getScaleX(), 0.01);
      assertEquals(0.9999999999999999, coordSystem0.y1transform.getDeterminant(), 0.01);
      assertEquals(0.9955582960013678, coordSystem0.y1transform.getScaleY(), 0.01);
      assertEquals(0.9955582960013678, coordSystem0.y1transform.getScaleX(), 0.01);
      assertEquals(0.09414711500015727, coordSystem0.y1transform.getShearX(), 0.01);
      assertEquals((-0.09414711500015727), coordSystem0.y1transform.getShearY(), 0.01);
      assertEquals(0.0, coordSystem0.y1transform.getTranslateX(), 0.01);
      assertEquals(0.0, coordSystem0.y1transform.getTranslateY(), 0.01);
      
      Line2D.Double line2D_Double0 = (Line2D.Double)coordSystemUtilities0.getXAxisLine2D();
      assertNotNull(line2D_Double0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals((-0.09414711500015727), line2D_Double0.y2, 0.01);
      assertEquals(0.9955582960013678, line2D_Double0.x2, 0.01);
      assertEquals(0.0, line2D_Double0.x1, 0.01);
      assertEquals(0.0, line2D_Double0.y1, 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("x", coordSystem0.getXAxisUnit());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertNotNull(objectChartDataModel0);
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("x", coordSystem0.getXAxisUnit());
      
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(objectChartDataModel0, 1);
      assertNotNull(stackedChartDataModelConstraints0);
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      
      CoordSystemUtilities coordSystemUtilities0 = new CoordSystemUtilities(coordSystem0, stackedChartDataModelConstraints0, stackedChartDataModelConstraints0, objectChartDataModel0);
      assertNotNull(coordSystemUtilities0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("x", coordSystem0.getXAxisUnit());
      
      // Undeclared exception!
      coordSystemUtilities0.getYAxisLine2D();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      assertNotNull(defaultChartDataModel0);
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(0, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(0, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintOnlyTick());
      
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      assertNotNull(coordSystemUtilities0);
      
      // Undeclared exception!
      try { 
        coordSystemUtilities0.getYAxisLine2D();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertNotNull(objectChartDataModel0);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintAltTick());
      
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(objectChartDataModel0, 20);
      assertNotNull(stackedChartDataModelConstraints0);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      
      CoordSystemUtilities coordSystemUtilities0 = new CoordSystemUtilities(coordSystem0, stackedChartDataModelConstraints0, stackedChartDataModelConstraints0, objectChartDataModel0);
      assertNotNull(coordSystemUtilities0);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintAltTick());
      
      // Undeclared exception!
      coordSystemUtilities0.getXAxisLine2D();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      assertNotNull(defaultChartDataModel0);
      assertFalse(defaultChartDataModel0.isManualScale());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(0, defaultChartDataModel0.getDataSetNumber());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertFalse(defaultChartDataModel0.isManualScale());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(0, defaultChartDataModel0.getDataSetNumber());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      assertNotNull(coordSystemUtilities0);
      
      // Undeclared exception!
      try { 
        coordSystemUtilities0.getXAxisLine2D();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertNotNull(objectChartDataModel0);
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      assertNotNull(coordSystemUtilities0);
      
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(objectChartDataModel0, 2);
      assertNotNull(stackedChartDataModelConstraints0);
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      
      coordSystemUtilities0.constraints2 = (ChartDataModelConstraints) stackedChartDataModelConstraints0;
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      
      // Undeclared exception!
      coordSystemUtilities0.getSecondYAxisLine2D();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertNotNull(objectChartDataModel0);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("x", coordSystem0.getXAxisUnit());
      
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      assertNotNull(coordSystemUtilities0);
      
      // Undeclared exception!
      try { 
        coordSystemUtilities0.getSecondYAxisLine2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystemUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertNotNull(objectChartDataModel0);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(objectChartDataModel0, 15, false);
      assertNotNull(stackedChartDataModelConstraints0);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      
      CoordSystemUtilities coordSystemUtilities0 = new CoordSystemUtilities(coordSystem0, stackedChartDataModelConstraints0, stackedChartDataModelConstraints0, objectChartDataModel0);
      assertNotNull(coordSystemUtilities0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      
      // Undeclared exception!
      coordSystemUtilities0.drawYAxisTicks((Graphics2D) null);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      assertNotNull(defaultChartDataModel0);
      assertEquals(0, defaultChartDataModel0.getDataSetNumber());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(defaultChartDataModel0.isManualScale());
      
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, defaultChartDataModel0.getDataSetNumber());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(defaultChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("x", coordSystem0.getXAxisUnit());
      
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      assertNotNull(coordSystemUtilities0);
      
      // Undeclared exception!
      try { 
        coordSystemUtilities0.drawYAxisTicks((Graphics2D) null);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertNotNull(objectChartDataModel0);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isAutoScale());
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(objectChartDataModel0, 0);
      assertNotNull(stackedChartDataModelConstraints0);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isAutoScale());
      
      CoordSystemUtilities coordSystemUtilities0 = new CoordSystemUtilities(coordSystem0, stackedChartDataModelConstraints0, stackedChartDataModelConstraints0, objectChartDataModel0);
      assertNotNull(coordSystemUtilities0);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      
      // Undeclared exception!
      coordSystemUtilities0.drawXAxisTicks((Graphics2D) null);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      assertNotNull(defaultChartDataModel0);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, defaultChartDataModel0.getDataSetNumber());
      
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, defaultChartDataModel0.getDataSetNumber());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      assertNotNull(coordSystemUtilities0);
      
      // Undeclared exception!
      try { 
        coordSystemUtilities0.drawXAxisTicks((Graphics2D) null);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertNotNull(objectChartDataModel0);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(objectChartDataModel0, 1);
      assertNotNull(stackedChartDataModelConstraints0);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      
      DefaultChartDataModelConstraints defaultChartDataModelConstraints0 = new DefaultChartDataModelConstraints(objectChartDataModel0, 1081);
      assertNotNull(defaultChartDataModelConstraints0);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      
      CoordSystemUtilities coordSystemUtilities0 = new CoordSystemUtilities(coordSystem0, stackedChartDataModelConstraints0, defaultChartDataModelConstraints0, objectChartDataModel0);
      assertNotNull(coordSystemUtilities0);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      
      // Undeclared exception!
      coordSystemUtilities0.drawNumericalXAxisTicks((Graphics2D) null);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      assertNotNull(defaultChartDataModel0);
      assertEquals(0, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0, "y7^Q", "y7^Q");
      assertNotNull(coordSystem0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals("y7^Q", coordSystem0.getXAxisUnit());
      assertEquals("y7^Q", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      assertNotNull(coordSystemUtilities0);
      
      // Undeclared exception!
      try { 
        coordSystemUtilities0.drawNumericalXAxisTicks((Graphics2D) null);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DataSet[] dataSetArray0 = new DataSet[0];
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(dataSetArray0);
      assertNotNull(defaultChartDataModel0);
      assertEquals(0, dataSetArray0.length);
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, dataSetArray0.length);
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintOnlyTick());
      
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      assertNotNull(coordSystemUtilities0);
      assertEquals(0, dataSetArray0.length);
      
      // Undeclared exception!
      try { 
        coordSystemUtilities0.computeYAxisLabelWidth();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      assertNotNull(editableChartDataModel0);
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertEquals(0, editableChartDataModel0.getDataSetNumber());
      assertFalse(editableChartDataModel0.isAutoScale());
      assertFalse(editableChartDataModel0.isManualScale());
      
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertEquals(0, editableChartDataModel0.getDataSetNumber());
      assertFalse(editableChartDataModel0.isAutoScale());
      assertFalse(editableChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintAltTick());
      
      DefaultChartDataModelConstraints defaultChartDataModelConstraints0 = new DefaultChartDataModelConstraints(editableChartDataModel0, 20, true);
      assertNotNull(defaultChartDataModelConstraints0);
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertEquals(0, editableChartDataModel0.getDataSetNumber());
      assertFalse(editableChartDataModel0.isAutoScale());
      assertFalse(editableChartDataModel0.isManualScale());
      
      CoordSystemUtilities coordSystemUtilities0 = new CoordSystemUtilities(coordSystem0, defaultChartDataModelConstraints0, defaultChartDataModelConstraints0, editableChartDataModel0);
      assertNotNull(coordSystemUtilities0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertEquals(0, editableChartDataModel0.getDataSetNumber());
      assertFalse(editableChartDataModel0.isAutoScale());
      assertFalse(editableChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintAltTick());
      
      // Undeclared exception!
      try { 
        coordSystemUtilities0.computeYAxisLabelWidth();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.model.DefaultChartDataModelConstraints", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      String[] stringArray0 = new String[8];
      double[][] doubleArray1 = new double[7][3];
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(doubleArray1, doubleArray0, stringArray0);
      assertNotNull(defaultChartDataModel0);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(3, doubleArray0.length);
      assertEquals(8, stringArray0.length);
      assertEquals(7, doubleArray1.length);
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(7, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isManualScale());
      
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(3, doubleArray0.length);
      assertEquals(8, stringArray0.length);
      assertEquals(7, doubleArray1.length);
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(7, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      assertNotNull(coordSystemUtilities0);
      assertArrayEquals(new double[] {0.0, 0.0, 0.0}, doubleArray0, 0.01);
      assertEquals(3, doubleArray0.length);
      assertEquals(8, stringArray0.length);
      assertEquals(7, doubleArray1.length);
      
      // Undeclared exception!
      coordSystemUtilities0.computeXAxisLabelHeight();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DataSet[] dataSetArray0 = new DataSet[0];
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(dataSetArray0);
      assertNotNull(defaultChartDataModel0);
      assertEquals(0, dataSetArray0.length);
      assertFalse(defaultChartDataModel0.isManualScale());
      assertEquals(0, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0, dataSetArray0.length);
      assertFalse(defaultChartDataModel0.isManualScale());
      assertEquals(0, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      assertNotNull(coordSystemUtilities0);
      assertEquals(0, dataSetArray0.length);
      
      // Undeclared exception!
      try { 
        coordSystemUtilities0.computeXAxisLabelHeight();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertNotNull(objectChartDataModel0);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, "5XhX,Y_?!o,&j", "vPDL&%gt8E7zx3L$");
      assertNotNull(coordSystem0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("5XhX,Y_?!o,&j", coordSystem0.getXAxisUnit());
      assertEquals("vPDL&%gt8E7zx3L$", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      
      DefaultChartDataModelConstraints defaultChartDataModelConstraints0 = new DefaultChartDataModelConstraints(objectChartDataModel0, 15);
      assertNotNull(defaultChartDataModelConstraints0);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      
      CoordSystemUtilities coordSystemUtilities0 = new CoordSystemUtilities(coordSystem0, defaultChartDataModelConstraints0, defaultChartDataModelConstraints0, objectChartDataModel0);
      assertNotNull(coordSystemUtilities0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("5XhX,Y_?!o,&j", coordSystem0.getXAxisUnit());
      assertEquals("vPDL&%gt8E7zx3L$", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      
      // Undeclared exception!
      try { 
        coordSystemUtilities0.computeXAxisLabelHeight();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.model.DefaultChartDataModelConstraints", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      assertNotNull(defaultChartDataModel0);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertEquals(0, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0, "", "");
      assertNotNull(coordSystem0);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertEquals(0, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("", coordSystem0.getYAxisUnit());
      
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      assertNotNull(coordSystemUtilities0);
      
      // Undeclared exception!
      try { 
        coordSystemUtilities0.computeTopMargin();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Zero length string passed to TextLayout constructor.
         //
         verifyException("java.awt.font.TextLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      assertNotNull(editableChartDataModel0);
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, editableChartDataModel0.getDataSetNumber());
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertFalse(editableChartDataModel0.isManualScale());
      assertFalse(editableChartDataModel0.isAutoScale());
      
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, "", "");
      assertNotNull(coordSystem0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, editableChartDataModel0.getDataSetNumber());
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertFalse(editableChartDataModel0.isManualScale());
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals("", coordSystem0.getXAxisUnit());
      assertEquals("", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isDrawArrows());
      
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      assertNotNull(coordSystemUtilities0);
      
      // Undeclared exception!
      try { 
        coordSystemUtilities0.computeRightMargin();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Zero length string passed to TextLayout constructor.
         //
         verifyException("java.awt.font.TextLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertNotNull(objectChartDataModel0);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintOnlyTick());
      
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(objectChartDataModel0, 15);
      assertNotNull(stackedChartDataModelConstraints0);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      
      CoordSystemUtilities coordSystemUtilities0 = new CoordSystemUtilities(coordSystem0, stackedChartDataModelConstraints0, stackedChartDataModelConstraints0, objectChartDataModel0);
      assertNotNull(coordSystemUtilities0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isPaintOnlyTick());
      
      // Undeclared exception!
      coordSystemUtilities0.computeLeftMargin();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      assertNotNull(defaultChartDataModel0);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertFalse(defaultChartDataModel0.isAutoScale());
      
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      assertNotNull(coordSystemUtilities0);
      
      // Undeclared exception!
      try { 
        coordSystemUtilities0.computeLeftMargin();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      assertNotNull(defaultChartDataModel0);
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isManualScale());
      
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      
      CoordSystemUtilities coordSystemUtilities0 = new CoordSystemUtilities(coordSystem0, (ChartDataModelConstraints) null, (ChartDataModelConstraints) null, defaultChartDataModel0);
      assertNotNull(coordSystemUtilities0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertFalse(defaultChartDataModel0.isAutoScale());
      assertEquals(0.0, defaultChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(defaultChartDataModel0.isColumnNumeric());
      assertEquals(0.0, defaultChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, defaultChartDataModel0.getDataSetNumber());
      assertFalse(defaultChartDataModel0.isManualScale());
      assertTrue(coordSystem0.isPaintAltTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      
      // Undeclared exception!
      try { 
        coordSystemUtilities0.computeLeftMargin();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystemUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertNotNull(objectChartDataModel0);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      assertNotNull(coordSystemUtilities0);
      
      CoordSystem coordSystem1 = new CoordSystem(objectChartDataModel0, "", "");
      assertFalse(coordSystem1.equals((Object)coordSystem0));
      assertNotNull(coordSystem1);
      assertEquals(20, coordSystem1.MINIMALMARGIN);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(15, coordSystem1.ARROWLENGTH);
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(coordSystem1.isDrawArrows());
      assertTrue(coordSystem1.isPaintOnlyTick());
      assertTrue(coordSystem1.isPaintLabels());
      assertEquals("", coordSystem1.getXAxisUnit());
      assertEquals("", coordSystem1.getYAxisUnit());
      assertTrue(coordSystem1.isPaintAltTick());
      
      coordSystemUtilities0.c = coordSystem1;
      assertFalse(objectChartDataModel0.isAutoScale());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem1.isDrawArrows());
      assertTrue(coordSystem1.isPaintOnlyTick());
      assertTrue(coordSystem1.isPaintLabels());
      assertEquals("", coordSystem1.getXAxisUnit());
      assertEquals("", coordSystem1.getYAxisUnit());
      assertTrue(coordSystem1.isPaintAltTick());
      assertTrue(coordSystemUtilities0.c.isPaintOnlyTick());
      assertTrue(coordSystemUtilities0.c.isDrawArrows());
      assertEquals("", coordSystemUtilities0.c.getYAxisUnit());
      assertEquals("", coordSystemUtilities0.c.getXAxisUnit());
      assertTrue(coordSystemUtilities0.c.isPaintLabels());
      assertTrue(coordSystemUtilities0.c.isPaintAltTick());
      
      // Undeclared exception!
      try { 
        coordSystemUtilities0.computeLeftMargin();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Zero length string passed to TextLayout constructor.
         //
         verifyException("java.awt.font.TextLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel();
      assertNotNull(editableChartDataModel0);
      assertFalse(editableChartDataModel0.isManualScale());
      assertEquals(0, editableChartDataModel0.getDataSetNumber());
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertFalse(editableChartDataModel0.isManualScale());
      assertEquals(0, editableChartDataModel0.getDataSetNumber());
      assertFalse(editableChartDataModel0.isAutoScale());
      assertEquals(0.0, editableChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertTrue(editableChartDataModel0.isColumnNumeric());
      assertEquals(0.0, editableChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertEquals("x", coordSystem0.getXAxisUnit());
      
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      assertNotNull(coordSystemUtilities0);
      
      // Undeclared exception!
      try { 
        coordSystemUtilities0.computeBottomMargin();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertNotNull(objectChartDataModel0);
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintAltTick());
      
      CoordSystemUtilities coordSystemUtilities0 = new CoordSystemUtilities(coordSystem0, (ChartDataModelConstraints) null, (ChartDataModelConstraints) null, objectChartDataModel0);
      assertNotNull(coordSystemUtilities0);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertEquals("x", coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintAltTick());
      
      // Undeclared exception!
      try { 
        coordSystemUtilities0.computeBottomMargin();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystemUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      assertNotNull(objectChartDataModel0);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, (String) null, (String) null);
      assertNotNull(coordSystem0);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertFalse(objectChartDataModel0.isManualScale());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertEquals(0, objectChartDataModel0.getDataSetNumber());
      assertTrue(coordSystem0.isPaintAltTick());
      assertNull(coordSystem0.getYAxisUnit());
      assertNull(coordSystem0.getXAxisUnit());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintLabels());
      
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      assertNotNull(coordSystemUtilities0);
      
      // Undeclared exception!
      try { 
        coordSystemUtilities0.computeBottomMargin();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null string passed to TextLayout constructor.
         //
         verifyException("java.awt.font.TextLayout", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Number[][] numberArray0 = new Number[1][5];
      Number[] numberArray1 = new Number[0];
      numberArray0[0] = numberArray1;
      String[] stringArray0 = new String[8];
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel(numberArray0, numberArray1, stringArray0);
      assertNotNull(objectChartDataModel0);
      assertEquals(1, numberArray0.length);
      assertEquals(0, numberArray1.length);
      assertEquals(8, stringArray0.length);
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(1, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      assertNotNull(coordSystem0);
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(1, numberArray0.length);
      assertEquals(0, numberArray1.length);
      assertEquals(8, stringArray0.length);
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(1, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
      
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      assertNotNull(coordSystemUtilities0);
      assertEquals(1, numberArray0.length);
      assertEquals(0, numberArray1.length);
      assertEquals(8, stringArray0.length);
      
      int int0 = coordSystemUtilities0.computeXAxisLabelHeight();
      assertEquals(1, CoordSystem.SECOND_YAXIS);
      assertEquals(0, CoordSystem.FIRST_YAXIS);
      assertEquals(15, coordSystem0.ARROWLENGTH);
      assertEquals(20, coordSystem0.MINIMALMARGIN);
      assertEquals(10, int0);
      assertEquals(1, numberArray0.length);
      assertEquals(0, numberArray1.length);
      assertEquals(8, stringArray0.length);
      assertFalse(objectChartDataModel0.isManualScale());
      assertEquals(1, objectChartDataModel0.getDataSetNumber());
      assertFalse(objectChartDataModel0.isColumnNumeric());
      assertFalse(objectChartDataModel0.isAutoScale());
      assertEquals(0.0, objectChartDataModel0.getManualMinimumColumnValue(), 0.01);
      assertEquals(0.0, objectChartDataModel0.getManualMaximumColumnValue(), 0.01);
      assertTrue(coordSystem0.isDrawArrows());
      assertTrue(coordSystem0.isPaintOnlyTick());
      assertEquals("y", coordSystem0.getYAxisUnit());
      assertTrue(coordSystem0.isPaintLabels());
      assertTrue(coordSystem0.isPaintAltTick());
      assertEquals("x", coordSystem0.getXAxisUnit());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String[] stringArray0 = new String[8];
      int[][] intArray0 = new int[1][8];
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) (-1046210062);
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(intArray0, doubleArray0, stringArray0);
      ChartDataModelConstraints chartDataModelConstraints0 = defaultChartDataModel0.getChartDataModelConstraints((-1046210062));
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      CoordSystemUtilities coordSystemUtilities0 = new CoordSystemUtilities(coordSystem0, chartDataModelConstraints0, chartDataModelConstraints0, defaultChartDataModel0);
      // Undeclared exception!
      try { 
        coordSystemUtilities0.getYAxisLine2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystemUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String[] stringArray0 = new String[8];
      int[][] intArray0 = new int[1][8];
      double[] doubleArray0 = new double[1];
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(intArray0, doubleArray0, stringArray0);
      ChartDataModelConstraints chartDataModelConstraints0 = defaultChartDataModel0.getChartDataModelConstraints((-1046210062));
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      CoordSystemUtilities coordSystemUtilities0 = new CoordSystemUtilities(coordSystem0, chartDataModelConstraints0, chartDataModelConstraints0, defaultChartDataModel0);
      // Undeclared exception!
      try { 
        coordSystemUtilities0.getYAxisLine2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystemUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) (-1046210022);
      double[][] doubleArray1 = new double[9][0];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      doubleArray1[4] = doubleArray0;
      doubleArray1[5] = doubleArray0;
      doubleArray1[6] = doubleArray0;
      doubleArray1[7] = doubleArray0;
      doubleArray1[8] = doubleArray0;
      String[] stringArray0 = new String[9];
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(doubleArray1, doubleArray0, stringArray0);
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      // Undeclared exception!
      try { 
        coordSystemUtilities0.getXAxisLine2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystemUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      double[][] doubleArray0 = new double[1][7];
      double[] doubleArray1 = new double[4];
      doubleArray1[0] = (double) 20;
      doubleArray1[1] = (double) 15;
      doubleArray1[2] = (double) 15;
      doubleArray1[3] = (double) 15;
      doubleArray0[0] = doubleArray1;
      String[] stringArray0 = new String[9];
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(doubleArray0, doubleArray1, stringArray0);
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      // Undeclared exception!
      try { 
        coordSystemUtilities0.getXAxisLine2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystemUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String[] stringArray0 = new String[8];
      int[][] intArray0 = new int[3][8];
      double[] doubleArray0 = new double[1];
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(intArray0, doubleArray0, stringArray0);
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      // Undeclared exception!
      try { 
        coordSystemUtilities0.getXAxisLine2D();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystemUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String[] stringArray0 = new String[8];
      int[][] intArray0 = new int[1][8];
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) (-1046210062);
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(intArray0, doubleArray0, stringArray0);
      ChartDataModelConstraints chartDataModelConstraints0 = defaultChartDataModel0.getChartDataModelConstraints((-1046210062));
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      Axis axis0 = coordSystem0.getFirstYAxis();
      coordSystem0.setSecondYAxis(axis0);
      CoordSystemUtilities coordSystemUtilities0 = new CoordSystemUtilities(coordSystem0, chartDataModelConstraints0, (ChartDataModelConstraints) null, defaultChartDataModel0);
      // Undeclared exception!
      try { 
        coordSystemUtilities0.drawYAxisTicks((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystemUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String[] stringArray0 = new String[8];
      int[][] intArray0 = new int[1][8];
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) (-1046210062);
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(intArray0, doubleArray0, stringArray0);
      ChartDataModelConstraints chartDataModelConstraints0 = defaultChartDataModel0.getChartDataModelConstraints((-1046210062));
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      CoordSystemUtilities coordSystemUtilities0 = new CoordSystemUtilities(coordSystem0, chartDataModelConstraints0, (ChartDataModelConstraints) null, defaultChartDataModel0);
      // Undeclared exception!
      try { 
        coordSystemUtilities0.drawYAxisTicks((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystemUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      DecimalFormat decimalFormat0 = new DecimalFormat("i");
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, decimalFormat0, false, false, false);
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      // Undeclared exception!
      try { 
        coordSystemUtilities0.drawYAxisTicks((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystemUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String[] stringArray0 = new String[8];
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) (-1046210022);
      double[][] doubleArray1 = new double[4][2];
      doubleArray1[0] = doubleArray0;
      doubleArray1[1] = doubleArray0;
      doubleArray1[2] = doubleArray0;
      doubleArray1[3] = doubleArray0;
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(doubleArray1, doubleArray0, stringArray0);
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      // Undeclared exception!
      try { 
        coordSystemUtilities0.drawXAxisTicks((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystemUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String[] stringArray0 = new String[8];
      double[][] doubleArray0 = new double[4][3];
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = 220.88568;
      doubleArray1[1] = 36.0;
      doubleArray0[0] = doubleArray1;
      doubleArray0[1] = doubleArray1;
      doubleArray0[2] = doubleArray0[1];
      doubleArray0[3] = doubleArray0[1];
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(doubleArray0, doubleArray0[0], stringArray0);
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      // Undeclared exception!
      try { 
        coordSystemUtilities0.drawXAxisTicks((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystemUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String[] stringArray0 = new String[8];
      double[] doubleArray0 = new double[1];
      double[][] doubleArray1 = new double[4][2];
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(doubleArray1, doubleArray0, stringArray0);
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      // Undeclared exception!
      try { 
        coordSystemUtilities0.drawXAxisTicks((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("de.progra.charting.CoordSystemUtilities", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      String[] stringArray0 = new String[8];
      int[][] intArray0 = new int[1][8];
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) (-1046210062);
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(intArray0, doubleArray0, stringArray0);
      ChartDataModelConstraints chartDataModelConstraints0 = defaultChartDataModel0.getChartDataModelConstraints((-1046210062));
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      CoordSystemUtilities coordSystemUtilities0 = new CoordSystemUtilities(coordSystem0, chartDataModelConstraints0, chartDataModelConstraints0, defaultChartDataModel0);
      int int0 = coordSystemUtilities0.computeYAxisLabelWidth();
      assertEquals(21, int0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      String[] stringArray0 = new String[8];
      int[][] intArray0 = new int[3][8];
      int[] intArray1 = new int[9];
      intArray1[0] = 47;
      intArray1[2] = (-1046209982);
      intArray0[2] = intArray1;
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) 2140349129;
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(intArray0, doubleArray0, stringArray0);
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      int int0 = coordSystemUtilities0.computeBottomMargin();
      assertEquals(20, int0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      String[] stringArray0 = new String[8];
      double[] doubleArray0 = new double[1];
      double[][] doubleArray1 = new double[1][6];
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(doubleArray1, doubleArray0, stringArray0);
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      int int0 = coordSystemUtilities0.computeBottomMargin();
      assertEquals(20, int0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      String[] stringArray0 = new String[8];
      int[][] intArray0 = new int[1][8];
      double[] doubleArray0 = new double[1];
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(intArray0, doubleArray0, stringArray0);
      ChartDataModelConstraints chartDataModelConstraints0 = defaultChartDataModel0.getChartDataModelConstraints((-1046210062));
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      CoordSystemUtilities coordSystemUtilities0 = new CoordSystemUtilities(coordSystem0, chartDataModelConstraints0, chartDataModelConstraints0, defaultChartDataModel0);
      // Undeclared exception!
      coordSystemUtilities0.computeBottomMargin();
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Number[][] numberArray0 = new Number[1][9];
      Number[] numberArray1 = new Number[1];
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      numberArray1[0] = (Number) integer0;
      numberArray0[0] = numberArray1;
      double[] doubleArray0 = new double[19];
      String[] stringArray0 = new String[19];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(numberArray0, doubleArray0, stringArray0);
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, "", "");
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      int int0 = coordSystemUtilities0.computeBottomMargin();
      assertEquals(20, int0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      int[][] intArray0 = new int[1][6];
      int[] intArray1 = new int[5];
      intArray1[0] = (-583);
      intArray0[0] = intArray1;
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) (-832);
      doubleArray0[5] = 1204.482994023;
      String[] stringArray0 = new String[4];
      EditableChartDataModel editableChartDataModel0 = new EditableChartDataModel(intArray0, doubleArray0, stringArray0);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      CoordSystem coordSystem0 = new CoordSystem(editableChartDataModel0, decimalFormat0, true, true, false);
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      int int0 = coordSystemUtilities0.computeLeftMargin();
      assertEquals(20, int0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      String[] stringArray0 = new String[8];
      int[][] intArray0 = new int[1][8];
      double[] doubleArray0 = new double[1];
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(intArray0, doubleArray0, stringArray0);
      ChartDataModelConstraints chartDataModelConstraints0 = defaultChartDataModel0.getChartDataModelConstraints((-1046210062));
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      CoordSystemUtilities coordSystemUtilities0 = new CoordSystemUtilities(coordSystem0, chartDataModelConstraints0, (ChartDataModelConstraints) null, defaultChartDataModel0);
      int int0 = coordSystemUtilities0.computeLeftMargin();
      assertEquals(20, int0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      DecimalFormat decimalFormat0 = new DecimalFormat("i");
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0, decimalFormat0, false, false, false);
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      int int0 = coordSystemUtilities0.computeLeftMargin();
      assertEquals(20, int0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      String[] stringArray0 = new String[8];
      int[][] intArray0 = new int[3][8];
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 2140349129;
      doubleArray0[1] = (double) 2140349129;
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel(intArray0, doubleArray0, stringArray0);
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0, "", "I:7HNWKf<O/");
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(defaultChartDataModel0, 1096, true);
      CoordSystemUtilities coordSystemUtilities0 = new CoordSystemUtilities(coordSystem0, stackedChartDataModelConstraints0, stackedChartDataModelConstraints0, defaultChartDataModel0);
      int int0 = coordSystemUtilities0.computeLeftMargin();
      assertEquals(20, int0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      StackedChartDataModelConstraints stackedChartDataModelConstraints0 = new StackedChartDataModelConstraints(objectChartDataModel0, 20);
      CoordSystemUtilities coordSystemUtilities0 = new CoordSystemUtilities(coordSystem0, stackedChartDataModelConstraints0, stackedChartDataModelConstraints0, objectChartDataModel0);
      int int0 = coordSystemUtilities0.computeTopMargin();
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ObjectChartDataModel objectChartDataModel0 = new ObjectChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(objectChartDataModel0);
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      int int0 = coordSystemUtilities0.computeRightMargin();
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DefaultChartDataModel defaultChartDataModel0 = new DefaultChartDataModel();
      CoordSystem coordSystem0 = new CoordSystem(defaultChartDataModel0);
      CoordSystemUtilities coordSystemUtilities0 = coordSystem0.c;
      // Undeclared exception!
      try { 
        coordSystemUtilities0.getSecondYAxisLine2D();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }
}
